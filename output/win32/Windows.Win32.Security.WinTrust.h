// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Security_WinTrust_H
#define WIN32_Windows_Win32_Security_WinTrust_H
#include "win32/base.h"
#include "win32/impl/complex_structs.h"
#include "win32/impl/complex_interfaces.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.Security.WinTrust.0.h"
WIN32_EXPORT namespace win32::Windows::Win32::Security::WinTrust
{
#pragma region methods
extern "C"
{
    int32_t __stdcall ORBIT_IMPL_WinVerifyTrust(win32::Windows::Win32::Foundation::HWND hwnd, ::win32::guid* pgActionID, void* pWVTData) noexcept;
    int32_t __stdcall ORBIT_IMPL_WinVerifyTrustEx(win32::Windows::Win32::Foundation::HWND hwnd, ::win32::guid* pgActionID, win32::Windows::Win32::Security::WinTrust::WINTRUST_DATA* pWinTrustData) noexcept;
    void __stdcall ORBIT_IMPL_WintrustGetRegPolicyFlags(win32::Windows::Win32::Security::WinTrust::WINTRUST_POLICY_FLAGS* pdwPolicyFlags) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WintrustSetRegPolicyFlags(win32::Windows::Win32::Security::WinTrust::WINTRUST_POLICY_FLAGS dwPolicyFlags) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WintrustAddActionID(::win32::guid* pgActionID, uint32_t fdwFlags, win32::Windows::Win32::Security::WinTrust::CRYPT_REGISTER_ACTIONID* psProvInfo) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WintrustRemoveActionID(::win32::guid* pgActionID) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WintrustLoadFunctionPointers(::win32::guid* pgActionID, win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_FUNCTIONS* pPfns) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WintrustAddDefaultForUsage(win32::Windows::Win32::Foundation::PSTR pszUsageOID, win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_REGDEFUSAGE* psDefUsage) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WintrustGetDefaultForUsage(win32::Windows::Win32::Security::WinTrust::WINTRUST_GET_DEFAULT_FOR_USAGE_ACTION dwAction, win32::Windows::Win32::Foundation::PSTR pszUsageOID, win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_DEFUSAGE* psUsage) noexcept;
    win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_SGNR* __stdcall ORBIT_IMPL_WTHelperGetProvSignerFromChain(win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_DATA* pProvData, uint32_t idxSigner, win32::Windows::Win32::Foundation::BOOL fCounterSigner, uint32_t idxCounterSigner) noexcept;
    win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_CERT* __stdcall ORBIT_IMPL_WTHelperGetProvCertFromChain(win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_SGNR* pSgnr, uint32_t idxCert) noexcept;
    win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_DATA* __stdcall ORBIT_IMPL_WTHelperProvDataFromStateData(win32::Windows::Win32::Foundation::HANDLE hStateData) noexcept;
    win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_PRIVDATA* __stdcall ORBIT_IMPL_WTHelperGetProvPrivateDataFromChain(win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_DATA* pProvData, ::win32::guid* pgProviderID) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WTHelperCertIsSelfSigned(uint32_t dwEncoding, win32::Windows::Win32::Security::Cryptography::CERT_INFO* pCert) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WTHelperCertCheckValidSignature(win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_DATA* pProvData) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_OpenPersonalTrustDBDialogEx(win32::Windows::Win32::Foundation::HWND hwndParent, uint32_t dwFlags, void** pvReserved) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_OpenPersonalTrustDBDialog(win32::Windows::Win32::Foundation::HWND hwndParent) noexcept;
    void __stdcall ORBIT_IMPL_WintrustSetDefaultIncludePEPageHashes(win32::Windows::Win32::Foundation::BOOL fIncludePEPageHashes) noexcept;
}

struct ApiTable {
    int32_t (__stdcall *WinVerifyTrust)(win32::Windows::Win32::Foundation::HWND hwnd, ::win32::guid* pgActionID, void* pWVTData) noexcept;
    int32_t (__stdcall *WinVerifyTrustEx)(win32::Windows::Win32::Foundation::HWND hwnd, ::win32::guid* pgActionID, win32::Windows::Win32::Security::WinTrust::WINTRUST_DATA* pWinTrustData) noexcept;
    void (__stdcall *WintrustGetRegPolicyFlags)(win32::Windows::Win32::Security::WinTrust::WINTRUST_POLICY_FLAGS* pdwPolicyFlags) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *WintrustSetRegPolicyFlags)(win32::Windows::Win32::Security::WinTrust::WINTRUST_POLICY_FLAGS dwPolicyFlags) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *WintrustAddActionID)(::win32::guid* pgActionID, uint32_t fdwFlags, win32::Windows::Win32::Security::WinTrust::CRYPT_REGISTER_ACTIONID* psProvInfo) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *WintrustRemoveActionID)(::win32::guid* pgActionID) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *WintrustLoadFunctionPointers)(::win32::guid* pgActionID, win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_FUNCTIONS* pPfns) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *WintrustAddDefaultForUsage)(win32::Windows::Win32::Foundation::PSTR pszUsageOID, win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_REGDEFUSAGE* psDefUsage) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *WintrustGetDefaultForUsage)(win32::Windows::Win32::Security::WinTrust::WINTRUST_GET_DEFAULT_FOR_USAGE_ACTION dwAction, win32::Windows::Win32::Foundation::PSTR pszUsageOID, win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_DEFUSAGE* psUsage) noexcept;
    win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_SGNR* (__stdcall *WTHelperGetProvSignerFromChain)(win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_DATA* pProvData, uint32_t idxSigner, win32::Windows::Win32::Foundation::BOOL fCounterSigner, uint32_t idxCounterSigner) noexcept;
    win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_CERT* (__stdcall *WTHelperGetProvCertFromChain)(win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_SGNR* pSgnr, uint32_t idxCert) noexcept;
    win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_DATA* (__stdcall *WTHelperProvDataFromStateData)(win32::Windows::Win32::Foundation::HANDLE hStateData) noexcept;
    win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_PRIVDATA* (__stdcall *WTHelperGetProvPrivateDataFromChain)(win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_DATA* pProvData, ::win32::guid* pgProviderID) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *WTHelperCertIsSelfSigned)(uint32_t dwEncoding, win32::Windows::Win32::Security::Cryptography::CERT_INFO* pCert) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *WTHelperCertCheckValidSignature)(win32::Windows::Win32::Security::WinTrust::CRYPT_PROVIDER_DATA* pProvData) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *OpenPersonalTrustDBDialogEx)(win32::Windows::Win32::Foundation::HWND hwndParent, uint32_t dwFlags, void** pvReserved) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *OpenPersonalTrustDBDialog)(win32::Windows::Win32::Foundation::HWND hwndParent) noexcept;
    void (__stdcall *WintrustSetDefaultIncludePEPageHashes)(win32::Windows::Win32::Foundation::BOOL fIncludePEPageHashes) noexcept;
};
extern ApiTable g_api_table;

#pragma endregion methods

}
#endif
