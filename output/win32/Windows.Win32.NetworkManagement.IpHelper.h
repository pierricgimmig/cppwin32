// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_NetworkManagement_IpHelper_H
#define WIN32_Windows_Win32_NetworkManagement_IpHelper_H
#include "win32/base.h"
#include "win32/impl/complex_structs.h"
#include "win32/impl/complex_interfaces.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.NetworkManagement.IpHelper.0.h"
WIN32_EXPORT namespace win32::Windows::Win32::NetworkManagement::IpHelper
{
#pragma region methods
extern "C"
{
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetIfEntry2(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IF_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetIfEntry2Ex(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IF_ENTRY_LEVEL Level, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IF_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetIfTable2(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IF_TABLE2** Table) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetIfTable2Ex(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IF_TABLE_LEVEL Level, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IF_TABLE2** Table) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetIfStackTable(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IFSTACK_TABLE** Table) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetInvertedIfStackTable(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_INVERTEDIFSTACK_TABLE** Table) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetIpInterfaceEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPINTERFACE_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetIpInterfaceTable(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPINTERFACE_TABLE** Table) noexcept;
    void __stdcall ORBIT_IMPL_InitializeIpInterfaceEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPINTERFACE_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NotifyIpInterfaceChange(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::PIPINTERFACE_CHANGE_CALLBACK* Callback, void* CallerContext, win32::Windows::Win32::Foundation::BOOLEAN InitialNotification, win32::Windows::Win32::Foundation::HANDLE* NotificationHandle) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_SetIpInterfaceEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPINTERFACE_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetIpNetworkConnectionBandwidthEstimates(uint32_t InterfaceIndex, uint16_t AddressFamily, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IP_NETWORK_CONNECTION_BANDWIDTH_ESTIMATES* BandwidthEstimates) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_CreateUnicastIpAddressEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UNICASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_DeleteUnicastIpAddressEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UNICASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetUnicastIpAddressEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UNICASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetUnicastIpAddressTable(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UNICASTIPADDRESS_TABLE** Table) noexcept;
    void __stdcall ORBIT_IMPL_InitializeUnicastIpAddressEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UNICASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NotifyUnicastIpAddressChange(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::PUNICAST_IPADDRESS_CHANGE_CALLBACK* Callback, void* CallerContext, win32::Windows::Win32::Foundation::BOOLEAN InitialNotification, win32::Windows::Win32::Foundation::HANDLE* NotificationHandle) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NotifyStableUnicastIpAddressTable(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UNICASTIPADDRESS_TABLE** Table, win32::Windows::Win32::NetworkManagement::IpHelper::PSTABLE_UNICAST_IPADDRESS_TABLE_CALLBACK* CallerCallback, void* CallerContext, win32::Windows::Win32::Foundation::HANDLE* NotificationHandle) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_SetUnicastIpAddressEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UNICASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_CreateAnycastIpAddressEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_ANYCASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_DeleteAnycastIpAddressEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_ANYCASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetAnycastIpAddressEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_ANYCASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetAnycastIpAddressTable(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_ANYCASTIPADDRESS_TABLE** Table) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetMulticastIpAddressEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_MULTICASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetMulticastIpAddressTable(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_MULTICASTIPADDRESS_TABLE** Table) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_CreateIpForwardEntry2(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARD_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_DeleteIpForwardEntry2(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARD_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetBestRoute2(win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid, uint32_t InterfaceIndex, win32::Windows::Win32::Networking::WinSock::SOCKADDR_INET* SourceAddress, win32::Windows::Win32::Networking::WinSock::SOCKADDR_INET* DestinationAddress, uint32_t AddressSortOptions, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARD_ROW2* BestRoute, win32::Windows::Win32::Networking::WinSock::SOCKADDR_INET* BestSourceAddress) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetIpForwardEntry2(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARD_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetIpForwardTable2(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARD_TABLE2** Table) noexcept;
    void __stdcall ORBIT_IMPL_InitializeIpForwardEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARD_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NotifyRouteChange2(uint16_t AddressFamily, win32::Windows::Win32::NetworkManagement::IpHelper::PIPFORWARD_CHANGE_CALLBACK* Callback, void* CallerContext, win32::Windows::Win32::Foundation::BOOLEAN InitialNotification, win32::Windows::Win32::Foundation::HANDLE* NotificationHandle) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_SetIpForwardEntry2(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARD_ROW2* Route) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_FlushIpPathTable(uint16_t Family) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetIpPathEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPPATH_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetIpPathTable(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPPATH_TABLE** Table) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_CreateIpNetEntry2(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNET_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_DeleteIpNetEntry2(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNET_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_FlushIpNetTable2(uint16_t Family, uint32_t InterfaceIndex) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetIpNetEntry2(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNET_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetIpNetTable2(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNET_TABLE2** Table) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_ResolveIpNetEntry2(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNET_ROW2* Row, win32::Windows::Win32::Networking::WinSock::SOCKADDR_INET* SourceAddress) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_SetIpNetEntry2(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNET_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NotifyTeredoPortChange(win32::Windows::Win32::NetworkManagement::IpHelper::PTEREDO_PORT_CHANGE_CALLBACK* Callback, void* CallerContext, win32::Windows::Win32::Foundation::BOOLEAN InitialNotification, win32::Windows::Win32::Foundation::HANDLE* NotificationHandle) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetTeredoPort(uint16_t* Port) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_CancelMibChangeNotify2(win32::Windows::Win32::Foundation::HANDLE NotificationHandle) noexcept;
    void __stdcall ORBIT_IMPL_FreeMibTable(void* Memory) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_CreateSortedAddressPairs(win32::Windows::Win32::Networking::WinSock::SOCKADDR_IN6* SourceAddressList, uint32_t SourceAddressCount, win32::Windows::Win32::Networking::WinSock::SOCKADDR_IN6* DestinationAddressList, uint32_t DestinationAddressCount, uint32_t AddressSortOptions, win32::Windows::Win32::Networking::WinSock::SOCKADDR_IN6_PAIR** SortedAddressPairList, uint32_t* SortedAddressPairCount) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_ConvertCompartmentGuidToId(::win32::guid* CompartmentGuid, uint32_t* CompartmentId) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_ConvertCompartmentIdToGuid(uint32_t CompartmentId, ::win32::guid* CompartmentGuid) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_ConvertInterfaceNameToLuidA(win32::Windows::Win32::Foundation::PSTR InterfaceName, win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_ConvertInterfaceNameToLuidW(win32::Windows::Win32::Foundation::PWSTR InterfaceName, win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_ConvertInterfaceLuidToNameA(win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid, win32::Windows::Win32::Foundation::PSTR InterfaceName, size_t Length) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_ConvertInterfaceLuidToNameW(win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid, win32::Windows::Win32::Foundation::PWSTR InterfaceName, size_t Length) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_ConvertInterfaceLuidToIndex(win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid, uint32_t* InterfaceIndex) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_ConvertInterfaceIndexToLuid(uint32_t InterfaceIndex, win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_ConvertInterfaceLuidToAlias(win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid, win32::Windows::Win32::Foundation::PWSTR InterfaceAlias, size_t Length) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_ConvertInterfaceAliasToLuid(win32::Windows::Win32::Foundation::PWSTR InterfaceAlias, win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_ConvertInterfaceLuidToGuid(win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid, ::win32::guid* InterfaceGuid) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_ConvertInterfaceGuidToLuid(::win32::guid* InterfaceGuid, win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid) noexcept;
    uint32_t __stdcall ORBIT_IMPL_if_nametoindex(win32::Windows::Win32::Foundation::PSTR InterfaceName) noexcept;
    win32::Windows::Win32::Foundation::PSTR __stdcall ORBIT_IMPL_if_indextoname(uint32_t InterfaceIndex, win32::Windows::Win32::Foundation::PSTR InterfaceName) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetCurrentThreadCompartmentId() noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_SetCurrentThreadCompartmentId(uint32_t CompartmentId) noexcept;
    void __stdcall ORBIT_IMPL_GetCurrentThreadCompartmentScope(uint32_t* CompartmentScope, uint32_t* CompartmentId) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_SetCurrentThreadCompartmentScope(uint32_t CompartmentScope) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetJobCompartmentId(win32::Windows::Win32::Foundation::HANDLE JobHandle) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_SetJobCompartmentId(win32::Windows::Win32::Foundation::HANDLE JobHandle, uint32_t CompartmentId) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetSessionCompartmentId(uint32_t SessionId) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_SetSessionCompartmentId(uint32_t SessionId, uint32_t CompartmentId) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetDefaultCompartmentId() noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetNetworkInformation(::win32::guid* NetworkGuid, uint32_t* CompartmentId, uint32_t* SiteId, win32::Windows::Win32::Foundation::PWSTR NetworkName, uint32_t Length) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_SetNetworkInformation(::win32::guid* NetworkGuid, uint32_t CompartmentId, win32::Windows::Win32::Foundation::PWSTR NetworkName) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_ConvertLengthToIpv4Mask(uint32_t MaskLength, uint32_t* Mask) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_ConvertIpv4MaskToLength(uint32_t Mask, uint8_t* MaskLength) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetDnsSettings(win32::Windows::Win32::NetworkManagement::IpHelper::DNS_SETTINGS* Settings) noexcept;
    void __stdcall ORBIT_IMPL_FreeDnsSettings(win32::Windows::Win32::NetworkManagement::IpHelper::DNS_SETTINGS* Settings) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_SetDnsSettings(win32::Windows::Win32::NetworkManagement::IpHelper::DNS_SETTINGS* Settings) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetInterfaceDnsSettings(::win32::guid Interface, win32::Windows::Win32::NetworkManagement::IpHelper::DNS_INTERFACE_SETTINGS* Settings) noexcept;
    void __stdcall ORBIT_IMPL_FreeInterfaceDnsSettings(win32::Windows::Win32::NetworkManagement::IpHelper::DNS_INTERFACE_SETTINGS* Settings) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_SetInterfaceDnsSettings(::win32::guid Interface, win32::Windows::Win32::NetworkManagement::IpHelper::DNS_INTERFACE_SETTINGS* Settings) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetNetworkConnectivityHint(win32::Windows::Win32::Networking::WinSock::NL_NETWORK_CONNECTIVITY_HINT* ConnectivityHint) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_GetNetworkConnectivityHintForInterface(uint32_t InterfaceIndex, win32::Windows::Win32::Networking::WinSock::NL_NETWORK_CONNECTIVITY_HINT* ConnectivityHint) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NotifyNetworkConnectivityHintChange(win32::Windows::Win32::NetworkManagement::IpHelper::PNETWORK_CONNECTIVITY_HINT_CHANGE_CALLBACK* Callback, void* CallerContext, win32::Windows::Win32::Foundation::BOOLEAN InitialNotification, win32::Windows::Win32::Foundation::HANDLE* NotificationHandle) noexcept;
    win32::Windows::Win32::NetworkManagement::IpHelper::IcmpHandle __stdcall ORBIT_IMPL_IcmpCreateFile() noexcept;
    win32::Windows::Win32::NetworkManagement::IpHelper::IcmpHandle __stdcall ORBIT_IMPL_Icmp6CreateFile() noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IcmpCloseHandle(win32::Windows::Win32::NetworkManagement::IpHelper::IcmpHandle IcmpHandle) noexcept;
    uint32_t __stdcall ORBIT_IMPL_IcmpSendEcho(win32::Windows::Win32::NetworkManagement::IpHelper::IcmpHandle IcmpHandle, uint32_t DestinationAddress, void* RequestData, uint16_t RequestSize, win32::Windows::Win32::NetworkManagement::IpHelper::ip_option_information* RequestOptions, void* ReplyBuffer, uint32_t ReplySize, uint32_t Timeout) noexcept;
    uint32_t __stdcall ORBIT_IMPL_IcmpSendEcho2(win32::Windows::Win32::NetworkManagement::IpHelper::IcmpHandle IcmpHandle, win32::Windows::Win32::Foundation::HANDLE Event, win32::Windows::Win32::System::WindowsProgramming::PIO_APC_ROUTINE* ApcRoutine, void* ApcContext, uint32_t DestinationAddress, void* RequestData, uint16_t RequestSize, win32::Windows::Win32::NetworkManagement::IpHelper::ip_option_information* RequestOptions, void* ReplyBuffer, uint32_t ReplySize, uint32_t Timeout) noexcept;
    uint32_t __stdcall ORBIT_IMPL_IcmpSendEcho2Ex(win32::Windows::Win32::NetworkManagement::IpHelper::IcmpHandle IcmpHandle, win32::Windows::Win32::Foundation::HANDLE Event, win32::Windows::Win32::System::WindowsProgramming::PIO_APC_ROUTINE* ApcRoutine, void* ApcContext, uint32_t SourceAddress, uint32_t DestinationAddress, void* RequestData, uint16_t RequestSize, win32::Windows::Win32::NetworkManagement::IpHelper::ip_option_information* RequestOptions, void* ReplyBuffer, uint32_t ReplySize, uint32_t Timeout) noexcept;
    uint32_t __stdcall ORBIT_IMPL_Icmp6SendEcho2(win32::Windows::Win32::NetworkManagement::IpHelper::IcmpHandle IcmpHandle, win32::Windows::Win32::Foundation::HANDLE Event, win32::Windows::Win32::System::WindowsProgramming::PIO_APC_ROUTINE* ApcRoutine, void* ApcContext, win32::Windows::Win32::Networking::WinSock::SOCKADDR_IN6* SourceAddress, win32::Windows::Win32::Networking::WinSock::SOCKADDR_IN6* DestinationAddress, void* RequestData, uint16_t RequestSize, win32::Windows::Win32::NetworkManagement::IpHelper::ip_option_information* RequestOptions, void* ReplyBuffer, uint32_t ReplySize, uint32_t Timeout) noexcept;
    uint32_t __stdcall ORBIT_IMPL_IcmpParseReplies(void* ReplyBuffer, uint32_t ReplySize) noexcept;
    uint32_t __stdcall ORBIT_IMPL_Icmp6ParseReplies(void* ReplyBuffer, uint32_t ReplySize) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetNumberOfInterfaces(uint32_t* pdwNumIf) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetIfEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IFROW* pIfRow) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetIfTable(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IFTABLE* pIfTable, uint32_t* pdwSize, win32::Windows::Win32::Foundation::BOOL bOrder) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetIpAddrTable(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPADDRTABLE* pIpAddrTable, uint32_t* pdwSize, win32::Windows::Win32::Foundation::BOOL bOrder) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetIpNetTable(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNETTABLE* IpNetTable, uint32_t* SizePointer, win32::Windows::Win32::Foundation::BOOL Order) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetIpForwardTable(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARDTABLE* pIpForwardTable, uint32_t* pdwSize, win32::Windows::Win32::Foundation::BOOL bOrder) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetTcpTable(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCPTABLE* TcpTable, uint32_t* SizePointer, win32::Windows::Win32::Foundation::BOOL Order) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetExtendedTcpTable(void* pTcpTable, uint32_t* pdwSize, win32::Windows::Win32::Foundation::BOOL bOrder, uint32_t ulAf, win32::Windows::Win32::NetworkManagement::IpHelper::TCP_TABLE_CLASS TableClass, uint32_t Reserved) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetOwnerModuleFromTcpEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCPROW_OWNER_MODULE* pTcpEntry, win32::Windows::Win32::NetworkManagement::IpHelper::TCPIP_OWNER_MODULE_INFO_CLASS Class, void* pBuffer, uint32_t* pdwSize) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetUdpTable(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UDPTABLE* UdpTable, uint32_t* SizePointer, win32::Windows::Win32::Foundation::BOOL Order) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetExtendedUdpTable(void* pUdpTable, uint32_t* pdwSize, win32::Windows::Win32::Foundation::BOOL bOrder, uint32_t ulAf, win32::Windows::Win32::NetworkManagement::IpHelper::UDP_TABLE_CLASS TableClass, uint32_t Reserved) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetOwnerModuleFromUdpEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UDPROW_OWNER_MODULE* pUdpEntry, win32::Windows::Win32::NetworkManagement::IpHelper::TCPIP_OWNER_MODULE_INFO_CLASS Class, void* pBuffer, uint32_t* pdwSize) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetTcpTable2(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCPTABLE2* TcpTable, uint32_t* SizePointer, win32::Windows::Win32::Foundation::BOOL Order) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetTcp6Table(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCP6TABLE* TcpTable, uint32_t* SizePointer, win32::Windows::Win32::Foundation::BOOL Order) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetTcp6Table2(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCP6TABLE2* TcpTable, uint32_t* SizePointer, win32::Windows::Win32::Foundation::BOOL Order) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetPerTcpConnectionEStats(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCPROW_LH* Row, win32::Windows::Win32::NetworkManagement::IpHelper::TCP_ESTATS_TYPE EstatsType, uint8_t* Rw, uint32_t RwVersion, uint32_t RwSize, uint8_t* Ros, uint32_t RosVersion, uint32_t RosSize, uint8_t* Rod, uint32_t RodVersion, uint32_t RodSize) noexcept;
    uint32_t __stdcall ORBIT_IMPL_SetPerTcpConnectionEStats(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCPROW_LH* Row, win32::Windows::Win32::NetworkManagement::IpHelper::TCP_ESTATS_TYPE EstatsType, uint8_t* Rw, uint32_t RwVersion, uint32_t RwSize, uint32_t Offset) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetPerTcp6ConnectionEStats(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCP6ROW* Row, win32::Windows::Win32::NetworkManagement::IpHelper::TCP_ESTATS_TYPE EstatsType, uint8_t* Rw, uint32_t RwVersion, uint32_t RwSize, uint8_t* Ros, uint32_t RosVersion, uint32_t RosSize, uint8_t* Rod, uint32_t RodVersion, uint32_t RodSize) noexcept;
    uint32_t __stdcall ORBIT_IMPL_SetPerTcp6ConnectionEStats(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCP6ROW* Row, win32::Windows::Win32::NetworkManagement::IpHelper::TCP_ESTATS_TYPE EstatsType, uint8_t* Rw, uint32_t RwVersion, uint32_t RwSize, uint32_t Offset) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetOwnerModuleFromTcp6Entry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCP6ROW_OWNER_MODULE* pTcpEntry, win32::Windows::Win32::NetworkManagement::IpHelper::TCPIP_OWNER_MODULE_INFO_CLASS Class, void* pBuffer, uint32_t* pdwSize) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetUdp6Table(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UDP6TABLE* Udp6Table, uint32_t* SizePointer, win32::Windows::Win32::Foundation::BOOL Order) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetOwnerModuleFromUdp6Entry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UDP6ROW_OWNER_MODULE* pUdpEntry, win32::Windows::Win32::NetworkManagement::IpHelper::TCPIP_OWNER_MODULE_INFO_CLASS Class, void* pBuffer, uint32_t* pdwSize) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetOwnerModuleFromPidAndInfo(uint32_t ulPid, uint64_t* pInfo, win32::Windows::Win32::NetworkManagement::IpHelper::TCPIP_OWNER_MODULE_INFO_CLASS Class, void* pBuffer, uint32_t* pdwSize) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetIpStatistics(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPSTATS_LH* Statistics) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetIcmpStatistics(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_ICMP* Statistics) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetTcpStatistics(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCPSTATS_LH* Statistics) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetUdpStatistics(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UDPSTATS* Stats) noexcept;
    uint32_t __stdcall ORBIT_IMPL_SetIpStatisticsEx(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPSTATS_LH* Statistics, uint32_t Family) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetIpStatisticsEx(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPSTATS_LH* Statistics, win32::Windows::Win32::NetworkManagement::IpHelper::ADDRESS_FAMILY Family) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetIcmpStatisticsEx(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_ICMP_EX_XPSP1* Statistics, uint32_t Family) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetTcpStatisticsEx(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCPSTATS_LH* Statistics, win32::Windows::Win32::NetworkManagement::IpHelper::ADDRESS_FAMILY Family) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetUdpStatisticsEx(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UDPSTATS* Statistics, win32::Windows::Win32::NetworkManagement::IpHelper::ADDRESS_FAMILY Family) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetTcpStatisticsEx2(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCPSTATS2* Statistics, win32::Windows::Win32::NetworkManagement::IpHelper::ADDRESS_FAMILY Family) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetUdpStatisticsEx2(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UDPSTATS2* Statistics, win32::Windows::Win32::NetworkManagement::IpHelper::ADDRESS_FAMILY Family) noexcept;
    uint32_t __stdcall ORBIT_IMPL_SetIfEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IFROW* pIfRow) noexcept;
    uint32_t __stdcall ORBIT_IMPL_CreateIpForwardEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARDROW* pRoute) noexcept;
    uint32_t __stdcall ORBIT_IMPL_SetIpForwardEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARDROW* pRoute) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DeleteIpForwardEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARDROW* pRoute) noexcept;
    uint32_t __stdcall ORBIT_IMPL_SetIpStatistics(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPSTATS_LH* pIpStats) noexcept;
    uint32_t __stdcall ORBIT_IMPL_SetIpTTL(uint32_t nTTL) noexcept;
    uint32_t __stdcall ORBIT_IMPL_CreateIpNetEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNETROW_LH* pArpEntry) noexcept;
    uint32_t __stdcall ORBIT_IMPL_SetIpNetEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNETROW_LH* pArpEntry) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DeleteIpNetEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNETROW_LH* pArpEntry) noexcept;
    uint32_t __stdcall ORBIT_IMPL_FlushIpNetTable(uint32_t dwIfIndex) noexcept;
    uint32_t __stdcall ORBIT_IMPL_CreateProxyArpEntry(uint32_t dwAddress, uint32_t dwMask, uint32_t dwIfIndex) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DeleteProxyArpEntry(uint32_t dwAddress, uint32_t dwMask, uint32_t dwIfIndex) noexcept;
    uint32_t __stdcall ORBIT_IMPL_SetTcpEntry(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCPROW_LH* pTcpRow) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetInterfaceInfo(win32::Windows::Win32::NetworkManagement::IpHelper::IP_INTERFACE_INFO* pIfTable, uint32_t* dwOutBufLen) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetUniDirectionalAdapterInfo(win32::Windows::Win32::NetworkManagement::IpHelper::IP_UNIDIRECTIONAL_ADAPTER_ADDRESS* pIPIfInfo, uint32_t* dwOutBufLen) noexcept;
    uint32_t __stdcall ORBIT_IMPL_NhpAllocateAndGetInterfaceInfoFromStack(win32::Windows::Win32::NetworkManagement::IpHelper::ip_interface_name_info_w2ksp1** ppTable, uint32_t* pdwCount, win32::Windows::Win32::Foundation::BOOL bOrder, win32::Windows::Win32::Foundation::HANDLE hHeap, uint32_t dwFlags) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetBestInterface(uint32_t dwDestAddr, uint32_t* pdwBestIfIndex) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetBestInterfaceEx(win32::Windows::Win32::Networking::WinSock::SOCKADDR* pDestAddr, uint32_t* pdwBestIfIndex) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetBestRoute(uint32_t dwDestAddr, uint32_t dwSourceAddr, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARDROW* pBestRoute) noexcept;
    uint32_t __stdcall ORBIT_IMPL_NotifyAddrChange(win32::Windows::Win32::Foundation::HANDLE* Handle, win32::Windows::Win32::System::IO::OVERLAPPED* overlapped) noexcept;
    uint32_t __stdcall ORBIT_IMPL_NotifyRouteChange(win32::Windows::Win32::Foundation::HANDLE* Handle, win32::Windows::Win32::System::IO::OVERLAPPED* overlapped) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CancelIPChangeNotify(win32::Windows::Win32::System::IO::OVERLAPPED* notifyOverlapped) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetAdapterIndex(win32::Windows::Win32::Foundation::PWSTR AdapterName, uint32_t* IfIndex) noexcept;
    uint32_t __stdcall ORBIT_IMPL_AddIPAddress(uint32_t Address, uint32_t IpMask, uint32_t IfIndex, uint32_t* NTEContext, uint32_t* NTEInstance) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DeleteIPAddress(uint32_t NTEContext) noexcept;
    win32::Windows::Win32::Foundation::WIN32_ERROR __stdcall ORBIT_IMPL_GetNetworkParams(win32::Windows::Win32::NetworkManagement::IpHelper::FIXED_INFO_W2KSP1* pFixedInfo, uint32_t* pOutBufLen) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetAdaptersInfo(win32::Windows::Win32::NetworkManagement::IpHelper::IP_ADAPTER_INFO* AdapterInfo, uint32_t* SizePointer) noexcept;
    win32::Windows::Win32::NetworkManagement::IpHelper::IP_ADAPTER_ORDER_MAP* __stdcall ORBIT_IMPL_GetAdapterOrderMap() noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetAdaptersAddresses(win32::Windows::Win32::NetworkManagement::IpHelper::ADDRESS_FAMILY Family, win32::Windows::Win32::NetworkManagement::IpHelper::GET_ADAPTERS_ADDRESSES_FLAGS Flags, void* Reserved, win32::Windows::Win32::NetworkManagement::IpHelper::IP_ADAPTER_ADDRESSES_LH* AdapterAddresses, uint32_t* SizePointer) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetPerAdapterInfo(uint32_t IfIndex, win32::Windows::Win32::NetworkManagement::IpHelper::IP_PER_ADAPTER_INFO_W2KSP1* pPerAdapterInfo, uint32_t* pOutBufLen) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetInterfaceActiveTimestampCapabilities(win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid, win32::Windows::Win32::NetworkManagement::IpHelper::INTERFACE_TIMESTAMP_CAPABILITIES* TimestampCapabilites) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetInterfaceSupportedTimestampCapabilities(win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid, win32::Windows::Win32::NetworkManagement::IpHelper::INTERFACE_TIMESTAMP_CAPABILITIES* TimestampCapabilites) noexcept;
    uint32_t __stdcall ORBIT_IMPL_CaptureInterfaceHardwareCrossTimestamp(win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid, win32::Windows::Win32::NetworkManagement::IpHelper::INTERFACE_HARDWARE_CROSSTIMESTAMP* CrossTimestamp) noexcept;
    uint32_t __stdcall ORBIT_IMPL_RegisterInterfaceTimestampConfigChange(win32::Windows::Win32::NetworkManagement::IpHelper::PINTERFACE_TIMESTAMP_CONFIG_CHANGE_CALLBACK* Callback, void* CallerContext, win32::Windows::Win32::NetworkManagement::IpHelper::HIFTIMESTAMPCHANGE* NotificationHandle) noexcept;
    void __stdcall ORBIT_IMPL_UnregisterInterfaceTimestampConfigChange(win32::Windows::Win32::NetworkManagement::IpHelper::HIFTIMESTAMPCHANGE NotificationHandle) noexcept;
    uint32_t __stdcall ORBIT_IMPL_IpReleaseAddress(win32::Windows::Win32::NetworkManagement::IpHelper::IP_ADAPTER_INDEX_MAP* AdapterInfo) noexcept;
    uint32_t __stdcall ORBIT_IMPL_IpRenewAddress(win32::Windows::Win32::NetworkManagement::IpHelper::IP_ADAPTER_INDEX_MAP* AdapterInfo) noexcept;
    uint32_t __stdcall ORBIT_IMPL_SendARP(uint32_t DestIP, uint32_t SrcIP, void* pMacAddr, uint32_t* PhyAddrLen) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetRTTAndHopCount(uint32_t DestIpAddress, uint32_t* HopCount, uint32_t MaxHops, uint32_t* RTT) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetFriendlyIfIndex(uint32_t IfIndex) noexcept;
    uint32_t __stdcall ORBIT_IMPL_EnableRouter(win32::Windows::Win32::Foundation::HANDLE* pHandle, win32::Windows::Win32::System::IO::OVERLAPPED* pOverlapped) noexcept;
    uint32_t __stdcall ORBIT_IMPL_UnenableRouter(win32::Windows::Win32::System::IO::OVERLAPPED* pOverlapped, uint32_t* lpdwEnableCount) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DisableMediaSense(win32::Windows::Win32::Foundation::HANDLE* pHandle, win32::Windows::Win32::System::IO::OVERLAPPED* pOverLapped) noexcept;
    uint32_t __stdcall ORBIT_IMPL_RestoreMediaSense(win32::Windows::Win32::System::IO::OVERLAPPED* pOverlapped, uint32_t* lpdwEnableCount) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetIpErrorString(uint32_t ErrorCode, win32::Windows::Win32::Foundation::PWSTR Buffer, uint32_t* Size) noexcept;
    uint32_t __stdcall ORBIT_IMPL_ResolveNeighbor(win32::Windows::Win32::Networking::WinSock::SOCKADDR* NetworkAddress, void* PhysicalAddress, uint32_t* PhysicalAddressLength) noexcept;
    uint32_t __stdcall ORBIT_IMPL_CreatePersistentTcpPortReservation(uint16_t StartPort, uint16_t NumberOfPorts, uint64_t* Token) noexcept;
    uint32_t __stdcall ORBIT_IMPL_CreatePersistentUdpPortReservation(uint16_t StartPort, uint16_t NumberOfPorts, uint64_t* Token) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DeletePersistentTcpPortReservation(uint16_t StartPort, uint16_t NumberOfPorts) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DeletePersistentUdpPortReservation(uint16_t StartPort, uint16_t NumberOfPorts) noexcept;
    uint32_t __stdcall ORBIT_IMPL_LookupPersistentTcpPortReservation(uint16_t StartPort, uint16_t NumberOfPorts, uint64_t* Token) noexcept;
    uint32_t __stdcall ORBIT_IMPL_LookupPersistentUdpPortReservation(uint16_t StartPort, uint16_t NumberOfPorts, uint64_t* Token) noexcept;
    uint32_t __stdcall ORBIT_IMPL_PfCreateInterface(uint32_t dwName, win32::Windows::Win32::NetworkManagement::IpHelper::PFFORWARD_ACTION inAction, win32::Windows::Win32::NetworkManagement::IpHelper::PFFORWARD_ACTION outAction, win32::Windows::Win32::Foundation::BOOL bUseLog, win32::Windows::Win32::Foundation::BOOL bMustBeUnique, void** ppInterface) noexcept;
    uint32_t __stdcall ORBIT_IMPL_PfDeleteInterface(void* pInterface) noexcept;
    uint32_t __stdcall ORBIT_IMPL_PfAddFiltersToInterface(void* ih, uint32_t cInFilters, win32::Windows::Win32::NetworkManagement::IpHelper::PF_FILTER_DESCRIPTOR* pfiltIn, uint32_t cOutFilters, win32::Windows::Win32::NetworkManagement::IpHelper::PF_FILTER_DESCRIPTOR* pfiltOut, void** pfHandle) noexcept;
    uint32_t __stdcall ORBIT_IMPL_PfRemoveFiltersFromInterface(void* ih, uint32_t cInFilters, win32::Windows::Win32::NetworkManagement::IpHelper::PF_FILTER_DESCRIPTOR* pfiltIn, uint32_t cOutFilters, win32::Windows::Win32::NetworkManagement::IpHelper::PF_FILTER_DESCRIPTOR* pfiltOut) noexcept;
    uint32_t __stdcall ORBIT_IMPL_PfRemoveFilterHandles(void* pInterface, uint32_t cFilters, void** pvHandles) noexcept;
    uint32_t __stdcall ORBIT_IMPL_PfUnBindInterface(void* pInterface) noexcept;
    uint32_t __stdcall ORBIT_IMPL_PfBindInterfaceToIndex(void* pInterface, uint32_t dwIndex, win32::Windows::Win32::NetworkManagement::IpHelper::PFADDRESSTYPE pfatLinkType, uint8_t* LinkIPAddress) noexcept;
    uint32_t __stdcall ORBIT_IMPL_PfBindInterfaceToIPAddress(void* pInterface, win32::Windows::Win32::NetworkManagement::IpHelper::PFADDRESSTYPE pfatType, uint8_t* IPAddress) noexcept;
    uint32_t __stdcall ORBIT_IMPL_PfRebindFilters(void* pInterface, win32::Windows::Win32::NetworkManagement::IpHelper::PF_LATEBIND_INFO* pLateBindInfo) noexcept;
    uint32_t __stdcall ORBIT_IMPL_PfAddGlobalFilterToInterface(void* pInterface, win32::Windows::Win32::NetworkManagement::IpHelper::GLOBAL_FILTER gfFilter) noexcept;
    uint32_t __stdcall ORBIT_IMPL_PfRemoveGlobalFilterFromInterface(void* pInterface, win32::Windows::Win32::NetworkManagement::IpHelper::GLOBAL_FILTER gfFilter) noexcept;
    uint32_t __stdcall ORBIT_IMPL_PfMakeLog(win32::Windows::Win32::Foundation::HANDLE hEvent) noexcept;
    uint32_t __stdcall ORBIT_IMPL_PfSetLogBuffer(uint8_t* pbBuffer, uint32_t dwSize, uint32_t dwThreshold, uint32_t dwEntries, uint32_t* pdwLoggedEntries, uint32_t* pdwLostEntries, uint32_t* pdwSizeUsed) noexcept;
    uint32_t __stdcall ORBIT_IMPL_PfDeleteLog() noexcept;
    uint32_t __stdcall ORBIT_IMPL_PfGetInterfaceStatistics(void* pInterface, win32::Windows::Win32::NetworkManagement::IpHelper::PF_INTERFACE_STATS* ppfStats, uint32_t* pdwBufferSize, win32::Windows::Win32::Foundation::BOOL fResetCounters) noexcept;
    uint32_t __stdcall ORBIT_IMPL_PfTestPacket(void* pInInterface, void* pOutInterface, uint32_t cBytes, uint8_t* pbPacket, win32::Windows::Win32::NetworkManagement::IpHelper::PFFORWARD_ACTION* ppAction) noexcept;
}

struct ApiTable {
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetIfEntry2)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IF_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetIfEntry2Ex)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IF_ENTRY_LEVEL Level, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IF_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetIfTable2)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IF_TABLE2** Table) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetIfTable2Ex)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IF_TABLE_LEVEL Level, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IF_TABLE2** Table) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetIfStackTable)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IFSTACK_TABLE** Table) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetInvertedIfStackTable)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_INVERTEDIFSTACK_TABLE** Table) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetIpInterfaceEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPINTERFACE_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetIpInterfaceTable)(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPINTERFACE_TABLE** Table) noexcept;
    void (__stdcall *InitializeIpInterfaceEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPINTERFACE_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *NotifyIpInterfaceChange)(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::PIPINTERFACE_CHANGE_CALLBACK* Callback, void* CallerContext, win32::Windows::Win32::Foundation::BOOLEAN InitialNotification, win32::Windows::Win32::Foundation::HANDLE* NotificationHandle) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *SetIpInterfaceEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPINTERFACE_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetIpNetworkConnectionBandwidthEstimates)(uint32_t InterfaceIndex, uint16_t AddressFamily, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IP_NETWORK_CONNECTION_BANDWIDTH_ESTIMATES* BandwidthEstimates) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *CreateUnicastIpAddressEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UNICASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *DeleteUnicastIpAddressEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UNICASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetUnicastIpAddressEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UNICASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetUnicastIpAddressTable)(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UNICASTIPADDRESS_TABLE** Table) noexcept;
    void (__stdcall *InitializeUnicastIpAddressEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UNICASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *NotifyUnicastIpAddressChange)(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::PUNICAST_IPADDRESS_CHANGE_CALLBACK* Callback, void* CallerContext, win32::Windows::Win32::Foundation::BOOLEAN InitialNotification, win32::Windows::Win32::Foundation::HANDLE* NotificationHandle) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *NotifyStableUnicastIpAddressTable)(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UNICASTIPADDRESS_TABLE** Table, win32::Windows::Win32::NetworkManagement::IpHelper::PSTABLE_UNICAST_IPADDRESS_TABLE_CALLBACK* CallerCallback, void* CallerContext, win32::Windows::Win32::Foundation::HANDLE* NotificationHandle) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *SetUnicastIpAddressEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UNICASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *CreateAnycastIpAddressEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_ANYCASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *DeleteAnycastIpAddressEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_ANYCASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetAnycastIpAddressEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_ANYCASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetAnycastIpAddressTable)(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_ANYCASTIPADDRESS_TABLE** Table) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetMulticastIpAddressEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_MULTICASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetMulticastIpAddressTable)(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_MULTICASTIPADDRESS_TABLE** Table) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *CreateIpForwardEntry2)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARD_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *DeleteIpForwardEntry2)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARD_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetBestRoute2)(win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid, uint32_t InterfaceIndex, win32::Windows::Win32::Networking::WinSock::SOCKADDR_INET* SourceAddress, win32::Windows::Win32::Networking::WinSock::SOCKADDR_INET* DestinationAddress, uint32_t AddressSortOptions, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARD_ROW2* BestRoute, win32::Windows::Win32::Networking::WinSock::SOCKADDR_INET* BestSourceAddress) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetIpForwardEntry2)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARD_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetIpForwardTable2)(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARD_TABLE2** Table) noexcept;
    void (__stdcall *InitializeIpForwardEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARD_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *NotifyRouteChange2)(uint16_t AddressFamily, win32::Windows::Win32::NetworkManagement::IpHelper::PIPFORWARD_CHANGE_CALLBACK* Callback, void* CallerContext, win32::Windows::Win32::Foundation::BOOLEAN InitialNotification, win32::Windows::Win32::Foundation::HANDLE* NotificationHandle) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *SetIpForwardEntry2)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARD_ROW2* Route) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *FlushIpPathTable)(uint16_t Family) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetIpPathEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPPATH_ROW* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetIpPathTable)(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPPATH_TABLE** Table) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *CreateIpNetEntry2)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNET_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *DeleteIpNetEntry2)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNET_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *FlushIpNetTable2)(uint16_t Family, uint32_t InterfaceIndex) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetIpNetEntry2)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNET_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetIpNetTable2)(uint16_t Family, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNET_TABLE2** Table) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *ResolveIpNetEntry2)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNET_ROW2* Row, win32::Windows::Win32::Networking::WinSock::SOCKADDR_INET* SourceAddress) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *SetIpNetEntry2)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNET_ROW2* Row) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *NotifyTeredoPortChange)(win32::Windows::Win32::NetworkManagement::IpHelper::PTEREDO_PORT_CHANGE_CALLBACK* Callback, void* CallerContext, win32::Windows::Win32::Foundation::BOOLEAN InitialNotification, win32::Windows::Win32::Foundation::HANDLE* NotificationHandle) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetTeredoPort)(uint16_t* Port) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *CancelMibChangeNotify2)(win32::Windows::Win32::Foundation::HANDLE NotificationHandle) noexcept;
    void (__stdcall *FreeMibTable)(void* Memory) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *CreateSortedAddressPairs)(win32::Windows::Win32::Networking::WinSock::SOCKADDR_IN6* SourceAddressList, uint32_t SourceAddressCount, win32::Windows::Win32::Networking::WinSock::SOCKADDR_IN6* DestinationAddressList, uint32_t DestinationAddressCount, uint32_t AddressSortOptions, win32::Windows::Win32::Networking::WinSock::SOCKADDR_IN6_PAIR** SortedAddressPairList, uint32_t* SortedAddressPairCount) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *ConvertCompartmentGuidToId)(::win32::guid* CompartmentGuid, uint32_t* CompartmentId) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *ConvertCompartmentIdToGuid)(uint32_t CompartmentId, ::win32::guid* CompartmentGuid) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *ConvertInterfaceNameToLuidA)(win32::Windows::Win32::Foundation::PSTR InterfaceName, win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *ConvertInterfaceNameToLuidW)(win32::Windows::Win32::Foundation::PWSTR InterfaceName, win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *ConvertInterfaceLuidToNameA)(win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid, win32::Windows::Win32::Foundation::PSTR InterfaceName, size_t Length) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *ConvertInterfaceLuidToNameW)(win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid, win32::Windows::Win32::Foundation::PWSTR InterfaceName, size_t Length) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *ConvertInterfaceLuidToIndex)(win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid, uint32_t* InterfaceIndex) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *ConvertInterfaceIndexToLuid)(uint32_t InterfaceIndex, win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *ConvertInterfaceLuidToAlias)(win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid, win32::Windows::Win32::Foundation::PWSTR InterfaceAlias, size_t Length) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *ConvertInterfaceAliasToLuid)(win32::Windows::Win32::Foundation::PWSTR InterfaceAlias, win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *ConvertInterfaceLuidToGuid)(win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid, ::win32::guid* InterfaceGuid) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *ConvertInterfaceGuidToLuid)(::win32::guid* InterfaceGuid, win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid) noexcept;
    uint32_t (__stdcall *if_nametoindex)(win32::Windows::Win32::Foundation::PSTR InterfaceName) noexcept;
    win32::Windows::Win32::Foundation::PSTR (__stdcall *if_indextoname)(uint32_t InterfaceIndex, win32::Windows::Win32::Foundation::PSTR InterfaceName) noexcept;
    uint32_t (__stdcall *GetCurrentThreadCompartmentId)() noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *SetCurrentThreadCompartmentId)(uint32_t CompartmentId) noexcept;
    void (__stdcall *GetCurrentThreadCompartmentScope)(uint32_t* CompartmentScope, uint32_t* CompartmentId) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *SetCurrentThreadCompartmentScope)(uint32_t CompartmentScope) noexcept;
    uint32_t (__stdcall *GetJobCompartmentId)(win32::Windows::Win32::Foundation::HANDLE JobHandle) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *SetJobCompartmentId)(win32::Windows::Win32::Foundation::HANDLE JobHandle, uint32_t CompartmentId) noexcept;
    uint32_t (__stdcall *GetSessionCompartmentId)(uint32_t SessionId) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *SetSessionCompartmentId)(uint32_t SessionId, uint32_t CompartmentId) noexcept;
    uint32_t (__stdcall *GetDefaultCompartmentId)() noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetNetworkInformation)(::win32::guid* NetworkGuid, uint32_t* CompartmentId, uint32_t* SiteId, win32::Windows::Win32::Foundation::PWSTR NetworkName, uint32_t Length) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *SetNetworkInformation)(::win32::guid* NetworkGuid, uint32_t CompartmentId, win32::Windows::Win32::Foundation::PWSTR NetworkName) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *ConvertLengthToIpv4Mask)(uint32_t MaskLength, uint32_t* Mask) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *ConvertIpv4MaskToLength)(uint32_t Mask, uint8_t* MaskLength) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetDnsSettings)(win32::Windows::Win32::NetworkManagement::IpHelper::DNS_SETTINGS* Settings) noexcept;
    void (__stdcall *FreeDnsSettings)(win32::Windows::Win32::NetworkManagement::IpHelper::DNS_SETTINGS* Settings) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *SetDnsSettings)(win32::Windows::Win32::NetworkManagement::IpHelper::DNS_SETTINGS* Settings) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetInterfaceDnsSettings)(::win32::guid Interface, win32::Windows::Win32::NetworkManagement::IpHelper::DNS_INTERFACE_SETTINGS* Settings) noexcept;
    void (__stdcall *FreeInterfaceDnsSettings)(win32::Windows::Win32::NetworkManagement::IpHelper::DNS_INTERFACE_SETTINGS* Settings) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *SetInterfaceDnsSettings)(::win32::guid Interface, win32::Windows::Win32::NetworkManagement::IpHelper::DNS_INTERFACE_SETTINGS* Settings) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetNetworkConnectivityHint)(win32::Windows::Win32::Networking::WinSock::NL_NETWORK_CONNECTIVITY_HINT* ConnectivityHint) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *GetNetworkConnectivityHintForInterface)(uint32_t InterfaceIndex, win32::Windows::Win32::Networking::WinSock::NL_NETWORK_CONNECTIVITY_HINT* ConnectivityHint) noexcept;
    win32::Windows::Win32::Foundation::NTSTATUS (__stdcall *NotifyNetworkConnectivityHintChange)(win32::Windows::Win32::NetworkManagement::IpHelper::PNETWORK_CONNECTIVITY_HINT_CHANGE_CALLBACK* Callback, void* CallerContext, win32::Windows::Win32::Foundation::BOOLEAN InitialNotification, win32::Windows::Win32::Foundation::HANDLE* NotificationHandle) noexcept;
    win32::Windows::Win32::NetworkManagement::IpHelper::IcmpHandle (__stdcall *IcmpCreateFile)() noexcept;
    win32::Windows::Win32::NetworkManagement::IpHelper::IcmpHandle (__stdcall *Icmp6CreateFile)() noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *IcmpCloseHandle)(win32::Windows::Win32::NetworkManagement::IpHelper::IcmpHandle IcmpHandle) noexcept;
    uint32_t (__stdcall *IcmpSendEcho)(win32::Windows::Win32::NetworkManagement::IpHelper::IcmpHandle IcmpHandle, uint32_t DestinationAddress, void* RequestData, uint16_t RequestSize, win32::Windows::Win32::NetworkManagement::IpHelper::ip_option_information* RequestOptions, void* ReplyBuffer, uint32_t ReplySize, uint32_t Timeout) noexcept;
    uint32_t (__stdcall *IcmpSendEcho2)(win32::Windows::Win32::NetworkManagement::IpHelper::IcmpHandle IcmpHandle, win32::Windows::Win32::Foundation::HANDLE Event, win32::Windows::Win32::System::WindowsProgramming::PIO_APC_ROUTINE* ApcRoutine, void* ApcContext, uint32_t DestinationAddress, void* RequestData, uint16_t RequestSize, win32::Windows::Win32::NetworkManagement::IpHelper::ip_option_information* RequestOptions, void* ReplyBuffer, uint32_t ReplySize, uint32_t Timeout) noexcept;
    uint32_t (__stdcall *IcmpSendEcho2Ex)(win32::Windows::Win32::NetworkManagement::IpHelper::IcmpHandle IcmpHandle, win32::Windows::Win32::Foundation::HANDLE Event, win32::Windows::Win32::System::WindowsProgramming::PIO_APC_ROUTINE* ApcRoutine, void* ApcContext, uint32_t SourceAddress, uint32_t DestinationAddress, void* RequestData, uint16_t RequestSize, win32::Windows::Win32::NetworkManagement::IpHelper::ip_option_information* RequestOptions, void* ReplyBuffer, uint32_t ReplySize, uint32_t Timeout) noexcept;
    uint32_t (__stdcall *Icmp6SendEcho2)(win32::Windows::Win32::NetworkManagement::IpHelper::IcmpHandle IcmpHandle, win32::Windows::Win32::Foundation::HANDLE Event, win32::Windows::Win32::System::WindowsProgramming::PIO_APC_ROUTINE* ApcRoutine, void* ApcContext, win32::Windows::Win32::Networking::WinSock::SOCKADDR_IN6* SourceAddress, win32::Windows::Win32::Networking::WinSock::SOCKADDR_IN6* DestinationAddress, void* RequestData, uint16_t RequestSize, win32::Windows::Win32::NetworkManagement::IpHelper::ip_option_information* RequestOptions, void* ReplyBuffer, uint32_t ReplySize, uint32_t Timeout) noexcept;
    uint32_t (__stdcall *IcmpParseReplies)(void* ReplyBuffer, uint32_t ReplySize) noexcept;
    uint32_t (__stdcall *Icmp6ParseReplies)(void* ReplyBuffer, uint32_t ReplySize) noexcept;
    uint32_t (__stdcall *GetNumberOfInterfaces)(uint32_t* pdwNumIf) noexcept;
    uint32_t (__stdcall *GetIfEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IFROW* pIfRow) noexcept;
    uint32_t (__stdcall *GetIfTable)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IFTABLE* pIfTable, uint32_t* pdwSize, win32::Windows::Win32::Foundation::BOOL bOrder) noexcept;
    uint32_t (__stdcall *GetIpAddrTable)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPADDRTABLE* pIpAddrTable, uint32_t* pdwSize, win32::Windows::Win32::Foundation::BOOL bOrder) noexcept;
    uint32_t (__stdcall *GetIpNetTable)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNETTABLE* IpNetTable, uint32_t* SizePointer, win32::Windows::Win32::Foundation::BOOL Order) noexcept;
    uint32_t (__stdcall *GetIpForwardTable)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARDTABLE* pIpForwardTable, uint32_t* pdwSize, win32::Windows::Win32::Foundation::BOOL bOrder) noexcept;
    uint32_t (__stdcall *GetTcpTable)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCPTABLE* TcpTable, uint32_t* SizePointer, win32::Windows::Win32::Foundation::BOOL Order) noexcept;
    uint32_t (__stdcall *GetExtendedTcpTable)(void* pTcpTable, uint32_t* pdwSize, win32::Windows::Win32::Foundation::BOOL bOrder, uint32_t ulAf, win32::Windows::Win32::NetworkManagement::IpHelper::TCP_TABLE_CLASS TableClass, uint32_t Reserved) noexcept;
    uint32_t (__stdcall *GetOwnerModuleFromTcpEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCPROW_OWNER_MODULE* pTcpEntry, win32::Windows::Win32::NetworkManagement::IpHelper::TCPIP_OWNER_MODULE_INFO_CLASS Class, void* pBuffer, uint32_t* pdwSize) noexcept;
    uint32_t (__stdcall *GetUdpTable)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UDPTABLE* UdpTable, uint32_t* SizePointer, win32::Windows::Win32::Foundation::BOOL Order) noexcept;
    uint32_t (__stdcall *GetExtendedUdpTable)(void* pUdpTable, uint32_t* pdwSize, win32::Windows::Win32::Foundation::BOOL bOrder, uint32_t ulAf, win32::Windows::Win32::NetworkManagement::IpHelper::UDP_TABLE_CLASS TableClass, uint32_t Reserved) noexcept;
    uint32_t (__stdcall *GetOwnerModuleFromUdpEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UDPROW_OWNER_MODULE* pUdpEntry, win32::Windows::Win32::NetworkManagement::IpHelper::TCPIP_OWNER_MODULE_INFO_CLASS Class, void* pBuffer, uint32_t* pdwSize) noexcept;
    uint32_t (__stdcall *GetTcpTable2)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCPTABLE2* TcpTable, uint32_t* SizePointer, win32::Windows::Win32::Foundation::BOOL Order) noexcept;
    uint32_t (__stdcall *GetTcp6Table)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCP6TABLE* TcpTable, uint32_t* SizePointer, win32::Windows::Win32::Foundation::BOOL Order) noexcept;
    uint32_t (__stdcall *GetTcp6Table2)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCP6TABLE2* TcpTable, uint32_t* SizePointer, win32::Windows::Win32::Foundation::BOOL Order) noexcept;
    uint32_t (__stdcall *GetPerTcpConnectionEStats)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCPROW_LH* Row, win32::Windows::Win32::NetworkManagement::IpHelper::TCP_ESTATS_TYPE EstatsType, uint8_t* Rw, uint32_t RwVersion, uint32_t RwSize, uint8_t* Ros, uint32_t RosVersion, uint32_t RosSize, uint8_t* Rod, uint32_t RodVersion, uint32_t RodSize) noexcept;
    uint32_t (__stdcall *SetPerTcpConnectionEStats)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCPROW_LH* Row, win32::Windows::Win32::NetworkManagement::IpHelper::TCP_ESTATS_TYPE EstatsType, uint8_t* Rw, uint32_t RwVersion, uint32_t RwSize, uint32_t Offset) noexcept;
    uint32_t (__stdcall *GetPerTcp6ConnectionEStats)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCP6ROW* Row, win32::Windows::Win32::NetworkManagement::IpHelper::TCP_ESTATS_TYPE EstatsType, uint8_t* Rw, uint32_t RwVersion, uint32_t RwSize, uint8_t* Ros, uint32_t RosVersion, uint32_t RosSize, uint8_t* Rod, uint32_t RodVersion, uint32_t RodSize) noexcept;
    uint32_t (__stdcall *SetPerTcp6ConnectionEStats)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCP6ROW* Row, win32::Windows::Win32::NetworkManagement::IpHelper::TCP_ESTATS_TYPE EstatsType, uint8_t* Rw, uint32_t RwVersion, uint32_t RwSize, uint32_t Offset) noexcept;
    uint32_t (__stdcall *GetOwnerModuleFromTcp6Entry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCP6ROW_OWNER_MODULE* pTcpEntry, win32::Windows::Win32::NetworkManagement::IpHelper::TCPIP_OWNER_MODULE_INFO_CLASS Class, void* pBuffer, uint32_t* pdwSize) noexcept;
    uint32_t (__stdcall *GetUdp6Table)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UDP6TABLE* Udp6Table, uint32_t* SizePointer, win32::Windows::Win32::Foundation::BOOL Order) noexcept;
    uint32_t (__stdcall *GetOwnerModuleFromUdp6Entry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UDP6ROW_OWNER_MODULE* pUdpEntry, win32::Windows::Win32::NetworkManagement::IpHelper::TCPIP_OWNER_MODULE_INFO_CLASS Class, void* pBuffer, uint32_t* pdwSize) noexcept;
    uint32_t (__stdcall *GetOwnerModuleFromPidAndInfo)(uint32_t ulPid, uint64_t* pInfo, win32::Windows::Win32::NetworkManagement::IpHelper::TCPIP_OWNER_MODULE_INFO_CLASS Class, void* pBuffer, uint32_t* pdwSize) noexcept;
    uint32_t (__stdcall *GetIpStatistics)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPSTATS_LH* Statistics) noexcept;
    uint32_t (__stdcall *GetIcmpStatistics)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_ICMP* Statistics) noexcept;
    uint32_t (__stdcall *GetTcpStatistics)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCPSTATS_LH* Statistics) noexcept;
    uint32_t (__stdcall *GetUdpStatistics)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UDPSTATS* Stats) noexcept;
    uint32_t (__stdcall *SetIpStatisticsEx)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPSTATS_LH* Statistics, uint32_t Family) noexcept;
    uint32_t (__stdcall *GetIpStatisticsEx)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPSTATS_LH* Statistics, win32::Windows::Win32::NetworkManagement::IpHelper::ADDRESS_FAMILY Family) noexcept;
    uint32_t (__stdcall *GetIcmpStatisticsEx)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_ICMP_EX_XPSP1* Statistics, uint32_t Family) noexcept;
    uint32_t (__stdcall *GetTcpStatisticsEx)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCPSTATS_LH* Statistics, win32::Windows::Win32::NetworkManagement::IpHelper::ADDRESS_FAMILY Family) noexcept;
    uint32_t (__stdcall *GetUdpStatisticsEx)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UDPSTATS* Statistics, win32::Windows::Win32::NetworkManagement::IpHelper::ADDRESS_FAMILY Family) noexcept;
    uint32_t (__stdcall *GetTcpStatisticsEx2)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCPSTATS2* Statistics, win32::Windows::Win32::NetworkManagement::IpHelper::ADDRESS_FAMILY Family) noexcept;
    uint32_t (__stdcall *GetUdpStatisticsEx2)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_UDPSTATS2* Statistics, win32::Windows::Win32::NetworkManagement::IpHelper::ADDRESS_FAMILY Family) noexcept;
    uint32_t (__stdcall *SetIfEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IFROW* pIfRow) noexcept;
    uint32_t (__stdcall *CreateIpForwardEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARDROW* pRoute) noexcept;
    uint32_t (__stdcall *SetIpForwardEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARDROW* pRoute) noexcept;
    uint32_t (__stdcall *DeleteIpForwardEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARDROW* pRoute) noexcept;
    uint32_t (__stdcall *SetIpStatistics)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPSTATS_LH* pIpStats) noexcept;
    uint32_t (__stdcall *SetIpTTL)(uint32_t nTTL) noexcept;
    uint32_t (__stdcall *CreateIpNetEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNETROW_LH* pArpEntry) noexcept;
    uint32_t (__stdcall *SetIpNetEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNETROW_LH* pArpEntry) noexcept;
    uint32_t (__stdcall *DeleteIpNetEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPNETROW_LH* pArpEntry) noexcept;
    uint32_t (__stdcall *FlushIpNetTable)(uint32_t dwIfIndex) noexcept;
    uint32_t (__stdcall *CreateProxyArpEntry)(uint32_t dwAddress, uint32_t dwMask, uint32_t dwIfIndex) noexcept;
    uint32_t (__stdcall *DeleteProxyArpEntry)(uint32_t dwAddress, uint32_t dwMask, uint32_t dwIfIndex) noexcept;
    uint32_t (__stdcall *SetTcpEntry)(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_TCPROW_LH* pTcpRow) noexcept;
    uint32_t (__stdcall *GetInterfaceInfo)(win32::Windows::Win32::NetworkManagement::IpHelper::IP_INTERFACE_INFO* pIfTable, uint32_t* dwOutBufLen) noexcept;
    uint32_t (__stdcall *GetUniDirectionalAdapterInfo)(win32::Windows::Win32::NetworkManagement::IpHelper::IP_UNIDIRECTIONAL_ADAPTER_ADDRESS* pIPIfInfo, uint32_t* dwOutBufLen) noexcept;
    uint32_t (__stdcall *NhpAllocateAndGetInterfaceInfoFromStack)(win32::Windows::Win32::NetworkManagement::IpHelper::ip_interface_name_info_w2ksp1** ppTable, uint32_t* pdwCount, win32::Windows::Win32::Foundation::BOOL bOrder, win32::Windows::Win32::Foundation::HANDLE hHeap, uint32_t dwFlags) noexcept;
    uint32_t (__stdcall *GetBestInterface)(uint32_t dwDestAddr, uint32_t* pdwBestIfIndex) noexcept;
    uint32_t (__stdcall *GetBestInterfaceEx)(win32::Windows::Win32::Networking::WinSock::SOCKADDR* pDestAddr, uint32_t* pdwBestIfIndex) noexcept;
    uint32_t (__stdcall *GetBestRoute)(uint32_t dwDestAddr, uint32_t dwSourceAddr, win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPFORWARDROW* pBestRoute) noexcept;
    uint32_t (__stdcall *NotifyAddrChange)(win32::Windows::Win32::Foundation::HANDLE* Handle, win32::Windows::Win32::System::IO::OVERLAPPED* overlapped) noexcept;
    uint32_t (__stdcall *NotifyRouteChange)(win32::Windows::Win32::Foundation::HANDLE* Handle, win32::Windows::Win32::System::IO::OVERLAPPED* overlapped) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *CancelIPChangeNotify)(win32::Windows::Win32::System::IO::OVERLAPPED* notifyOverlapped) noexcept;
    uint32_t (__stdcall *GetAdapterIndex)(win32::Windows::Win32::Foundation::PWSTR AdapterName, uint32_t* IfIndex) noexcept;
    uint32_t (__stdcall *AddIPAddress)(uint32_t Address, uint32_t IpMask, uint32_t IfIndex, uint32_t* NTEContext, uint32_t* NTEInstance) noexcept;
    uint32_t (__stdcall *DeleteIPAddress)(uint32_t NTEContext) noexcept;
    win32::Windows::Win32::Foundation::WIN32_ERROR (__stdcall *GetNetworkParams)(win32::Windows::Win32::NetworkManagement::IpHelper::FIXED_INFO_W2KSP1* pFixedInfo, uint32_t* pOutBufLen) noexcept;
    uint32_t (__stdcall *GetAdaptersInfo)(win32::Windows::Win32::NetworkManagement::IpHelper::IP_ADAPTER_INFO* AdapterInfo, uint32_t* SizePointer) noexcept;
    win32::Windows::Win32::NetworkManagement::IpHelper::IP_ADAPTER_ORDER_MAP* (__stdcall *GetAdapterOrderMap)() noexcept;
    uint32_t (__stdcall *GetAdaptersAddresses)(win32::Windows::Win32::NetworkManagement::IpHelper::ADDRESS_FAMILY Family, win32::Windows::Win32::NetworkManagement::IpHelper::GET_ADAPTERS_ADDRESSES_FLAGS Flags, void* Reserved, win32::Windows::Win32::NetworkManagement::IpHelper::IP_ADAPTER_ADDRESSES_LH* AdapterAddresses, uint32_t* SizePointer) noexcept;
    uint32_t (__stdcall *GetPerAdapterInfo)(uint32_t IfIndex, win32::Windows::Win32::NetworkManagement::IpHelper::IP_PER_ADAPTER_INFO_W2KSP1* pPerAdapterInfo, uint32_t* pOutBufLen) noexcept;
    uint32_t (__stdcall *GetInterfaceActiveTimestampCapabilities)(win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid, win32::Windows::Win32::NetworkManagement::IpHelper::INTERFACE_TIMESTAMP_CAPABILITIES* TimestampCapabilites) noexcept;
    uint32_t (__stdcall *GetInterfaceSupportedTimestampCapabilities)(win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid, win32::Windows::Win32::NetworkManagement::IpHelper::INTERFACE_TIMESTAMP_CAPABILITIES* TimestampCapabilites) noexcept;
    uint32_t (__stdcall *CaptureInterfaceHardwareCrossTimestamp)(win32::Windows::Win32::NetworkManagement::IpHelper::NET_LUID_LH* InterfaceLuid, win32::Windows::Win32::NetworkManagement::IpHelper::INTERFACE_HARDWARE_CROSSTIMESTAMP* CrossTimestamp) noexcept;
    uint32_t (__stdcall *RegisterInterfaceTimestampConfigChange)(win32::Windows::Win32::NetworkManagement::IpHelper::PINTERFACE_TIMESTAMP_CONFIG_CHANGE_CALLBACK* Callback, void* CallerContext, win32::Windows::Win32::NetworkManagement::IpHelper::HIFTIMESTAMPCHANGE* NotificationHandle) noexcept;
    void (__stdcall *UnregisterInterfaceTimestampConfigChange)(win32::Windows::Win32::NetworkManagement::IpHelper::HIFTIMESTAMPCHANGE NotificationHandle) noexcept;
    uint32_t (__stdcall *IpReleaseAddress)(win32::Windows::Win32::NetworkManagement::IpHelper::IP_ADAPTER_INDEX_MAP* AdapterInfo) noexcept;
    uint32_t (__stdcall *IpRenewAddress)(win32::Windows::Win32::NetworkManagement::IpHelper::IP_ADAPTER_INDEX_MAP* AdapterInfo) noexcept;
    uint32_t (__stdcall *SendARP)(uint32_t DestIP, uint32_t SrcIP, void* pMacAddr, uint32_t* PhyAddrLen) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *GetRTTAndHopCount)(uint32_t DestIpAddress, uint32_t* HopCount, uint32_t MaxHops, uint32_t* RTT) noexcept;
    uint32_t (__stdcall *GetFriendlyIfIndex)(uint32_t IfIndex) noexcept;
    uint32_t (__stdcall *EnableRouter)(win32::Windows::Win32::Foundation::HANDLE* pHandle, win32::Windows::Win32::System::IO::OVERLAPPED* pOverlapped) noexcept;
    uint32_t (__stdcall *UnenableRouter)(win32::Windows::Win32::System::IO::OVERLAPPED* pOverlapped, uint32_t* lpdwEnableCount) noexcept;
    uint32_t (__stdcall *DisableMediaSense)(win32::Windows::Win32::Foundation::HANDLE* pHandle, win32::Windows::Win32::System::IO::OVERLAPPED* pOverLapped) noexcept;
    uint32_t (__stdcall *RestoreMediaSense)(win32::Windows::Win32::System::IO::OVERLAPPED* pOverlapped, uint32_t* lpdwEnableCount) noexcept;
    uint32_t (__stdcall *GetIpErrorString)(uint32_t ErrorCode, win32::Windows::Win32::Foundation::PWSTR Buffer, uint32_t* Size) noexcept;
    uint32_t (__stdcall *ResolveNeighbor)(win32::Windows::Win32::Networking::WinSock::SOCKADDR* NetworkAddress, void* PhysicalAddress, uint32_t* PhysicalAddressLength) noexcept;
    uint32_t (__stdcall *CreatePersistentTcpPortReservation)(uint16_t StartPort, uint16_t NumberOfPorts, uint64_t* Token) noexcept;
    uint32_t (__stdcall *CreatePersistentUdpPortReservation)(uint16_t StartPort, uint16_t NumberOfPorts, uint64_t* Token) noexcept;
    uint32_t (__stdcall *DeletePersistentTcpPortReservation)(uint16_t StartPort, uint16_t NumberOfPorts) noexcept;
    uint32_t (__stdcall *DeletePersistentUdpPortReservation)(uint16_t StartPort, uint16_t NumberOfPorts) noexcept;
    uint32_t (__stdcall *LookupPersistentTcpPortReservation)(uint16_t StartPort, uint16_t NumberOfPorts, uint64_t* Token) noexcept;
    uint32_t (__stdcall *LookupPersistentUdpPortReservation)(uint16_t StartPort, uint16_t NumberOfPorts, uint64_t* Token) noexcept;
    uint32_t (__stdcall *PfCreateInterface)(uint32_t dwName, win32::Windows::Win32::NetworkManagement::IpHelper::PFFORWARD_ACTION inAction, win32::Windows::Win32::NetworkManagement::IpHelper::PFFORWARD_ACTION outAction, win32::Windows::Win32::Foundation::BOOL bUseLog, win32::Windows::Win32::Foundation::BOOL bMustBeUnique, void** ppInterface) noexcept;
    uint32_t (__stdcall *PfDeleteInterface)(void* pInterface) noexcept;
    uint32_t (__stdcall *PfAddFiltersToInterface)(void* ih, uint32_t cInFilters, win32::Windows::Win32::NetworkManagement::IpHelper::PF_FILTER_DESCRIPTOR* pfiltIn, uint32_t cOutFilters, win32::Windows::Win32::NetworkManagement::IpHelper::PF_FILTER_DESCRIPTOR* pfiltOut, void** pfHandle) noexcept;
    uint32_t (__stdcall *PfRemoveFiltersFromInterface)(void* ih, uint32_t cInFilters, win32::Windows::Win32::NetworkManagement::IpHelper::PF_FILTER_DESCRIPTOR* pfiltIn, uint32_t cOutFilters, win32::Windows::Win32::NetworkManagement::IpHelper::PF_FILTER_DESCRIPTOR* pfiltOut) noexcept;
    uint32_t (__stdcall *PfRemoveFilterHandles)(void* pInterface, uint32_t cFilters, void** pvHandles) noexcept;
    uint32_t (__stdcall *PfUnBindInterface)(void* pInterface) noexcept;
    uint32_t (__stdcall *PfBindInterfaceToIndex)(void* pInterface, uint32_t dwIndex, win32::Windows::Win32::NetworkManagement::IpHelper::PFADDRESSTYPE pfatLinkType, uint8_t* LinkIPAddress) noexcept;
    uint32_t (__stdcall *PfBindInterfaceToIPAddress)(void* pInterface, win32::Windows::Win32::NetworkManagement::IpHelper::PFADDRESSTYPE pfatType, uint8_t* IPAddress) noexcept;
    uint32_t (__stdcall *PfRebindFilters)(void* pInterface, win32::Windows::Win32::NetworkManagement::IpHelper::PF_LATEBIND_INFO* pLateBindInfo) noexcept;
    uint32_t (__stdcall *PfAddGlobalFilterToInterface)(void* pInterface, win32::Windows::Win32::NetworkManagement::IpHelper::GLOBAL_FILTER gfFilter) noexcept;
    uint32_t (__stdcall *PfRemoveGlobalFilterFromInterface)(void* pInterface, win32::Windows::Win32::NetworkManagement::IpHelper::GLOBAL_FILTER gfFilter) noexcept;
    uint32_t (__stdcall *PfMakeLog)(win32::Windows::Win32::Foundation::HANDLE hEvent) noexcept;
    uint32_t (__stdcall *PfSetLogBuffer)(uint8_t* pbBuffer, uint32_t dwSize, uint32_t dwThreshold, uint32_t dwEntries, uint32_t* pdwLoggedEntries, uint32_t* pdwLostEntries, uint32_t* pdwSizeUsed) noexcept;
    uint32_t (__stdcall *PfDeleteLog)() noexcept;
    uint32_t (__stdcall *PfGetInterfaceStatistics)(void* pInterface, win32::Windows::Win32::NetworkManagement::IpHelper::PF_INTERFACE_STATS* ppfStats, uint32_t* pdwBufferSize, win32::Windows::Win32::Foundation::BOOL fResetCounters) noexcept;
    uint32_t (__stdcall *PfTestPacket)(void* pInInterface, void* pOutInterface, uint32_t cBytes, uint8_t* pbPacket, win32::Windows::Win32::NetworkManagement::IpHelper::PFFORWARD_ACTION* ppAction) noexcept;
};
extern ApiTable g_api_table;

#pragma endregion methods

}
#endif
