// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Storage_Compression_H
#define WIN32_Windows_Win32_Storage_Compression_H
#include "win32/base.h"
#include "win32/impl/complex_structs.h"
#include "win32/impl/complex_interfaces.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.Storage.Compression.0.h"
WIN32_EXPORT namespace win32::Windows::Win32::Storage::Compression
{
#pragma region methods
extern "C"
{
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CreateCompressor(win32::Windows::Win32::Storage::Compression::COMPRESS_ALGORITHM Algorithm, win32::Windows::Win32::Storage::Compression::COMPRESS_ALLOCATION_ROUTINES* AllocationRoutines, intptr_t* CompressorHandle) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetCompressorInformation(win32::Windows::Win32::Storage::Compression::COMPRESSOR_HANDLE CompressorHandle, win32::Windows::Win32::Storage::Compression::COMPRESS_INFORMATION_CLASS CompressInformationClass, void* CompressInformation, size_t CompressInformationSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryCompressorInformation(win32::Windows::Win32::Storage::Compression::COMPRESSOR_HANDLE CompressorHandle, win32::Windows::Win32::Storage::Compression::COMPRESS_INFORMATION_CLASS CompressInformationClass, void* CompressInformation, size_t CompressInformationSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_Compress(win32::Windows::Win32::Storage::Compression::COMPRESSOR_HANDLE CompressorHandle, void* UncompressedData, size_t UncompressedDataSize, void* CompressedBuffer, size_t CompressedBufferSize, size_t* CompressedDataSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ResetCompressor(win32::Windows::Win32::Storage::Compression::COMPRESSOR_HANDLE CompressorHandle) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CloseCompressor(win32::Windows::Win32::Storage::Compression::COMPRESSOR_HANDLE CompressorHandle) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CreateDecompressor(win32::Windows::Win32::Storage::Compression::COMPRESS_ALGORITHM Algorithm, win32::Windows::Win32::Storage::Compression::COMPRESS_ALLOCATION_ROUTINES* AllocationRoutines, intptr_t* DecompressorHandle) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetDecompressorInformation(intptr_t DecompressorHandle, win32::Windows::Win32::Storage::Compression::COMPRESS_INFORMATION_CLASS CompressInformationClass, void* CompressInformation, size_t CompressInformationSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryDecompressorInformation(intptr_t DecompressorHandle, win32::Windows::Win32::Storage::Compression::COMPRESS_INFORMATION_CLASS CompressInformationClass, void* CompressInformation, size_t CompressInformationSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_Decompress(intptr_t DecompressorHandle, void* CompressedData, size_t CompressedDataSize, void* UncompressedBuffer, size_t UncompressedBufferSize, size_t* UncompressedDataSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ResetDecompressor(intptr_t DecompressorHandle) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CloseDecompressor(intptr_t DecompressorHandle) noexcept;
}

struct ApiTable {
    win32::Windows::Win32::Foundation::BOOL (__stdcall *CreateCompressor)(win32::Windows::Win32::Storage::Compression::COMPRESS_ALGORITHM Algorithm, win32::Windows::Win32::Storage::Compression::COMPRESS_ALLOCATION_ROUTINES* AllocationRoutines, intptr_t* CompressorHandle) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *SetCompressorInformation)(win32::Windows::Win32::Storage::Compression::COMPRESSOR_HANDLE CompressorHandle, win32::Windows::Win32::Storage::Compression::COMPRESS_INFORMATION_CLASS CompressInformationClass, void* CompressInformation, size_t CompressInformationSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *QueryCompressorInformation)(win32::Windows::Win32::Storage::Compression::COMPRESSOR_HANDLE CompressorHandle, win32::Windows::Win32::Storage::Compression::COMPRESS_INFORMATION_CLASS CompressInformationClass, void* CompressInformation, size_t CompressInformationSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *Compress)(win32::Windows::Win32::Storage::Compression::COMPRESSOR_HANDLE CompressorHandle, void* UncompressedData, size_t UncompressedDataSize, void* CompressedBuffer, size_t CompressedBufferSize, size_t* CompressedDataSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *ResetCompressor)(win32::Windows::Win32::Storage::Compression::COMPRESSOR_HANDLE CompressorHandle) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *CloseCompressor)(win32::Windows::Win32::Storage::Compression::COMPRESSOR_HANDLE CompressorHandle) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *CreateDecompressor)(win32::Windows::Win32::Storage::Compression::COMPRESS_ALGORITHM Algorithm, win32::Windows::Win32::Storage::Compression::COMPRESS_ALLOCATION_ROUTINES* AllocationRoutines, intptr_t* DecompressorHandle) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *SetDecompressorInformation)(intptr_t DecompressorHandle, win32::Windows::Win32::Storage::Compression::COMPRESS_INFORMATION_CLASS CompressInformationClass, void* CompressInformation, size_t CompressInformationSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *QueryDecompressorInformation)(intptr_t DecompressorHandle, win32::Windows::Win32::Storage::Compression::COMPRESS_INFORMATION_CLASS CompressInformationClass, void* CompressInformation, size_t CompressInformationSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *Decompress)(intptr_t DecompressorHandle, void* CompressedData, size_t CompressedDataSize, void* UncompressedBuffer, size_t UncompressedBufferSize, size_t* UncompressedDataSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *ResetDecompressor)(intptr_t DecompressorHandle) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *CloseDecompressor)(intptr_t DecompressorHandle) noexcept;
};
extern ApiTable g_api_table;

#pragma endregion methods

}
#endif
