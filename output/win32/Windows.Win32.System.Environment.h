// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_Environment_H
#define WIN32_Windows_Win32_System_Environment_H
#include "win32/base.h"
#include "win32/impl/complex_structs.h"
#include "win32/impl/complex_interfaces.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.System.Environment.0.h"
WIN32_EXPORT namespace win32::Windows::Win32::System::Environment
{
#pragma region methods
extern "C"
{
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetEnvironmentStringsW(win32::Windows::Win32::Foundation::PWSTR NewEnvironment) noexcept;
    win32::Windows::Win32::Foundation::PSTR __stdcall ORBIT_IMPL_GetCommandLineA() noexcept;
    win32::Windows::Win32::Foundation::PWSTR __stdcall ORBIT_IMPL_GetCommandLineW() noexcept;
    win32::Windows::Win32::Foundation::PSTR __stdcall ORBIT_IMPL_GetEnvironmentStrings() noexcept;
    win32::Windows::Win32::Foundation::PWSTR __stdcall ORBIT_IMPL_GetEnvironmentStringsW() noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_FreeEnvironmentStringsA(win32::Windows::Win32::Foundation::PSTR penv) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_FreeEnvironmentStringsW(win32::Windows::Win32::Foundation::PWSTR penv) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetEnvironmentVariableA(win32::Windows::Win32::Foundation::PSTR lpName, win32::Windows::Win32::Foundation::PSTR lpBuffer, uint32_t nSize) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetEnvironmentVariableW(win32::Windows::Win32::Foundation::PWSTR lpName, win32::Windows::Win32::Foundation::PWSTR lpBuffer, uint32_t nSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetEnvironmentVariableA(win32::Windows::Win32::Foundation::PSTR lpName, win32::Windows::Win32::Foundation::PSTR lpValue) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetEnvironmentVariableW(win32::Windows::Win32::Foundation::PWSTR lpName, win32::Windows::Win32::Foundation::PWSTR lpValue) noexcept;
    uint32_t __stdcall ORBIT_IMPL_ExpandEnvironmentStringsA(win32::Windows::Win32::Foundation::PSTR lpSrc, win32::Windows::Win32::Foundation::PSTR lpDst, uint32_t nSize) noexcept;
    uint32_t __stdcall ORBIT_IMPL_ExpandEnvironmentStringsW(win32::Windows::Win32::Foundation::PWSTR lpSrc, win32::Windows::Win32::Foundation::PWSTR lpDst, uint32_t nSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetCurrentDirectoryA(win32::Windows::Win32::Foundation::PSTR lpPathName) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetCurrentDirectoryW(win32::Windows::Win32::Foundation::PWSTR lpPathName) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetCurrentDirectoryA(uint32_t nBufferLength, win32::Windows::Win32::Foundation::PSTR lpBuffer) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetCurrentDirectoryW(uint32_t nBufferLength, win32::Windows::Win32::Foundation::PWSTR lpBuffer) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_NeedCurrentDirectoryForExePathA(win32::Windows::Win32::Foundation::PSTR ExeName) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_NeedCurrentDirectoryForExePathW(win32::Windows::Win32::Foundation::PWSTR ExeName) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CreateEnvironmentBlock(void** lpEnvironment, win32::Windows::Win32::Foundation::HANDLE hToken, win32::Windows::Win32::Foundation::BOOL bInherit) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DestroyEnvironmentBlock(void* lpEnvironment) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ExpandEnvironmentStringsForUserA(win32::Windows::Win32::Foundation::HANDLE hToken, win32::Windows::Win32::Foundation::PSTR lpSrc, win32::Windows::Win32::Foundation::PSTR lpDest, uint32_t dwSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ExpandEnvironmentStringsForUserW(win32::Windows::Win32::Foundation::HANDLE hToken, win32::Windows::Win32::Foundation::PWSTR lpSrc, win32::Windows::Win32::Foundation::PWSTR lpDest, uint32_t dwSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsEnclaveTypeSupported(uint32_t flEnclaveType) noexcept;
    void* __stdcall ORBIT_IMPL_CreateEnclave(win32::Windows::Win32::Foundation::HANDLE hProcess, void* lpAddress, size_t dwSize, size_t dwInitialCommitment, uint32_t flEnclaveType, void* lpEnclaveInformation, uint32_t dwInfoLength, uint32_t* lpEnclaveError) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LoadEnclaveData(win32::Windows::Win32::Foundation::HANDLE hProcess, void* lpAddress, void* lpBuffer, size_t nSize, uint32_t flProtect, void* lpPageInformation, uint32_t dwInfoLength, size_t* lpNumberOfBytesWritten, uint32_t* lpEnclaveError) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_InitializeEnclave(win32::Windows::Win32::Foundation::HANDLE hProcess, void* lpAddress, void* lpEnclaveInformation, uint32_t dwInfoLength, uint32_t* lpEnclaveError) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LoadEnclaveImageA(void* lpEnclaveAddress, win32::Windows::Win32::Foundation::PSTR lpImageName) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LoadEnclaveImageW(void* lpEnclaveAddress, win32::Windows::Win32::Foundation::PWSTR lpImageName) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CallEnclave(intptr_t lpRoutine, void* lpParameter, win32::Windows::Win32::Foundation::BOOL fWaitForThread, void** lpReturnValue) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_TerminateEnclave(void* lpAddress, win32::Windows::Win32::Foundation::BOOL fWait) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DeleteEnclave(void* lpAddress) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_EnclaveGetAttestationReport(uint8_t* EnclaveData, void* Report, uint32_t BufferSize, uint32_t* OutputSize) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_EnclaveVerifyAttestationReport(uint32_t EnclaveType, void* Report, uint32_t ReportSize) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_EnclaveSealData(void* DataToEncrypt, uint32_t DataToEncryptSize, win32::Windows::Win32::System::Environment::ENCLAVE_SEALING_IDENTITY_POLICY IdentityPolicy, uint32_t RuntimePolicy, void* ProtectedBlob, uint32_t BufferSize, uint32_t* ProtectedBlobSize) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_EnclaveUnsealData(void* ProtectedBlob, uint32_t ProtectedBlobSize, void* DecryptedData, uint32_t BufferSize, uint32_t* DecryptedDataSize, win32::Windows::Win32::System::Environment::ENCLAVE_IDENTITY* SealingIdentity, uint32_t* UnsealingFlags) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_EnclaveGetEnclaveInformation(uint32_t InformationSize, win32::Windows::Win32::System::Environment::ENCLAVE_INFORMATION* EnclaveInformation) noexcept;
}

struct ApiTable {
    win32::Windows::Win32::Foundation::BOOL (__stdcall *SetEnvironmentStringsW)(win32::Windows::Win32::Foundation::PWSTR NewEnvironment) noexcept;
    win32::Windows::Win32::Foundation::PSTR (__stdcall *GetCommandLineA)() noexcept;
    win32::Windows::Win32::Foundation::PWSTR (__stdcall *GetCommandLineW)() noexcept;
    win32::Windows::Win32::Foundation::PSTR (__stdcall *GetEnvironmentStrings)() noexcept;
    win32::Windows::Win32::Foundation::PWSTR (__stdcall *GetEnvironmentStringsW)() noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *FreeEnvironmentStringsA)(win32::Windows::Win32::Foundation::PSTR penv) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *FreeEnvironmentStringsW)(win32::Windows::Win32::Foundation::PWSTR penv) noexcept;
    uint32_t (__stdcall *GetEnvironmentVariableA)(win32::Windows::Win32::Foundation::PSTR lpName, win32::Windows::Win32::Foundation::PSTR lpBuffer, uint32_t nSize) noexcept;
    uint32_t (__stdcall *GetEnvironmentVariableW)(win32::Windows::Win32::Foundation::PWSTR lpName, win32::Windows::Win32::Foundation::PWSTR lpBuffer, uint32_t nSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *SetEnvironmentVariableA)(win32::Windows::Win32::Foundation::PSTR lpName, win32::Windows::Win32::Foundation::PSTR lpValue) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *SetEnvironmentVariableW)(win32::Windows::Win32::Foundation::PWSTR lpName, win32::Windows::Win32::Foundation::PWSTR lpValue) noexcept;
    uint32_t (__stdcall *ExpandEnvironmentStringsA)(win32::Windows::Win32::Foundation::PSTR lpSrc, win32::Windows::Win32::Foundation::PSTR lpDst, uint32_t nSize) noexcept;
    uint32_t (__stdcall *ExpandEnvironmentStringsW)(win32::Windows::Win32::Foundation::PWSTR lpSrc, win32::Windows::Win32::Foundation::PWSTR lpDst, uint32_t nSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *SetCurrentDirectoryA)(win32::Windows::Win32::Foundation::PSTR lpPathName) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *SetCurrentDirectoryW)(win32::Windows::Win32::Foundation::PWSTR lpPathName) noexcept;
    uint32_t (__stdcall *GetCurrentDirectoryA)(uint32_t nBufferLength, win32::Windows::Win32::Foundation::PSTR lpBuffer) noexcept;
    uint32_t (__stdcall *GetCurrentDirectoryW)(uint32_t nBufferLength, win32::Windows::Win32::Foundation::PWSTR lpBuffer) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *NeedCurrentDirectoryForExePathA)(win32::Windows::Win32::Foundation::PSTR ExeName) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *NeedCurrentDirectoryForExePathW)(win32::Windows::Win32::Foundation::PWSTR ExeName) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *CreateEnvironmentBlock)(void** lpEnvironment, win32::Windows::Win32::Foundation::HANDLE hToken, win32::Windows::Win32::Foundation::BOOL bInherit) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *DestroyEnvironmentBlock)(void* lpEnvironment) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *ExpandEnvironmentStringsForUserA)(win32::Windows::Win32::Foundation::HANDLE hToken, win32::Windows::Win32::Foundation::PSTR lpSrc, win32::Windows::Win32::Foundation::PSTR lpDest, uint32_t dwSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *ExpandEnvironmentStringsForUserW)(win32::Windows::Win32::Foundation::HANDLE hToken, win32::Windows::Win32::Foundation::PWSTR lpSrc, win32::Windows::Win32::Foundation::PWSTR lpDest, uint32_t dwSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *IsEnclaveTypeSupported)(uint32_t flEnclaveType) noexcept;
    void* (__stdcall *CreateEnclave)(win32::Windows::Win32::Foundation::HANDLE hProcess, void* lpAddress, size_t dwSize, size_t dwInitialCommitment, uint32_t flEnclaveType, void* lpEnclaveInformation, uint32_t dwInfoLength, uint32_t* lpEnclaveError) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *LoadEnclaveData)(win32::Windows::Win32::Foundation::HANDLE hProcess, void* lpAddress, void* lpBuffer, size_t nSize, uint32_t flProtect, void* lpPageInformation, uint32_t dwInfoLength, size_t* lpNumberOfBytesWritten, uint32_t* lpEnclaveError) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *InitializeEnclave)(win32::Windows::Win32::Foundation::HANDLE hProcess, void* lpAddress, void* lpEnclaveInformation, uint32_t dwInfoLength, uint32_t* lpEnclaveError) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *LoadEnclaveImageA)(void* lpEnclaveAddress, win32::Windows::Win32::Foundation::PSTR lpImageName) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *LoadEnclaveImageW)(void* lpEnclaveAddress, win32::Windows::Win32::Foundation::PWSTR lpImageName) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *CallEnclave)(intptr_t lpRoutine, void* lpParameter, win32::Windows::Win32::Foundation::BOOL fWaitForThread, void** lpReturnValue) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *TerminateEnclave)(void* lpAddress, win32::Windows::Win32::Foundation::BOOL fWait) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *DeleteEnclave)(void* lpAddress) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *EnclaveGetAttestationReport)(uint8_t* EnclaveData, void* Report, uint32_t BufferSize, uint32_t* OutputSize) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *EnclaveVerifyAttestationReport)(uint32_t EnclaveType, void* Report, uint32_t ReportSize) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *EnclaveSealData)(void* DataToEncrypt, uint32_t DataToEncryptSize, win32::Windows::Win32::System::Environment::ENCLAVE_SEALING_IDENTITY_POLICY IdentityPolicy, uint32_t RuntimePolicy, void* ProtectedBlob, uint32_t BufferSize, uint32_t* ProtectedBlobSize) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *EnclaveUnsealData)(void* ProtectedBlob, uint32_t ProtectedBlobSize, void* DecryptedData, uint32_t BufferSize, uint32_t* DecryptedDataSize, win32::Windows::Win32::System::Environment::ENCLAVE_IDENTITY* SealingIdentity, uint32_t* UnsealingFlags) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *EnclaveGetEnclaveInformation)(uint32_t InformationSize, win32::Windows::Win32::System::Environment::ENCLAVE_INFORMATION* EnclaveInformation) noexcept;
};
extern ApiTable g_api_table;

#pragma endregion methods

}
#endif
