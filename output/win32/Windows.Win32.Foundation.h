// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Foundation_H
#define WIN32_Windows_Win32_Foundation_H
#include "win32/base.h"
#include "win32/impl/complex_structs.h"
#include "win32/impl/complex_interfaces.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.Foundation.0.h"
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
#pragma region methods
extern "C"
{
    win32::Windows::Win32::Foundation::BSTR __stdcall ORBIT_IMPL_SysAllocString(win32::Windows::Win32::Foundation::PWSTR psz) noexcept;
    int32_t __stdcall ORBIT_IMPL_SysReAllocString(win32::Windows::Win32::Foundation::BSTR* pbstr, win32::Windows::Win32::Foundation::PWSTR psz) noexcept;
    win32::Windows::Win32::Foundation::BSTR __stdcall ORBIT_IMPL_SysAllocStringLen(win32::Windows::Win32::Foundation::PWSTR strIn, uint32_t ui) noexcept;
    int32_t __stdcall ORBIT_IMPL_SysReAllocStringLen(win32::Windows::Win32::Foundation::BSTR* pbstr, win32::Windows::Win32::Foundation::PWSTR psz, uint32_t len) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SysAddRefString(win32::Windows::Win32::Foundation::BSTR bstrString) noexcept;
    void __stdcall ORBIT_IMPL_SysReleaseString(win32::Windows::Win32::Foundation::BSTR bstrString) noexcept;
    void __stdcall ORBIT_IMPL_SysFreeString(win32::Windows::Win32::Foundation::BSTR bstrString) noexcept;
    uint32_t __stdcall ORBIT_IMPL_SysStringLen(win32::Windows::Win32::Foundation::BSTR pbstr) noexcept;
    uint32_t __stdcall ORBIT_IMPL_SysStringByteLen(win32::Windows::Win32::Foundation::BSTR bstr) noexcept;
    win32::Windows::Win32::Foundation::BSTR __stdcall ORBIT_IMPL_SysAllocStringByteLen(win32::Windows::Win32::Foundation::PSTR psz, uint32_t len) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CloseHandle(win32::Windows::Win32::Foundation::HANDLE hObject) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DuplicateHandle(win32::Windows::Win32::Foundation::HANDLE hSourceProcessHandle, win32::Windows::Win32::Foundation::HANDLE hSourceHandle, win32::Windows::Win32::Foundation::HANDLE hTargetProcessHandle, win32::Windows::Win32::Foundation::HANDLE* lpTargetHandle, uint32_t dwDesiredAccess, win32::Windows::Win32::Foundation::BOOL bInheritHandle, win32::Windows::Win32::Foundation::DUPLICATE_HANDLE_OPTIONS dwOptions) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CompareObjectHandles(win32::Windows::Win32::Foundation::HANDLE hFirstObjectHandle, win32::Windows::Win32::Foundation::HANDLE hSecondObjectHandle) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetHandleInformation(win32::Windows::Win32::Foundation::HANDLE hObject, uint32_t* lpdwFlags) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetHandleInformation(win32::Windows::Win32::Foundation::HANDLE hObject, uint32_t dwMask, win32::Windows::Win32::Foundation::HANDLE_FLAGS dwFlags) noexcept;
    win32::Windows::Win32::Foundation::WIN32_ERROR __stdcall ORBIT_IMPL_GetLastError() noexcept;
    void __stdcall ORBIT_IMPL_SetLastError(win32::Windows::Win32::Foundation::WIN32_ERROR dwErrCode) noexcept;
    void __stdcall ORBIT_IMPL_SetLastErrorEx(win32::Windows::Win32::Foundation::WIN32_ERROR dwErrCode, uint32_t dwType) noexcept;
    uint32_t __stdcall ORBIT_IMPL_RtlNtStatusToDosError(win32::Windows::Win32::Foundation::NTSTATUS Status) noexcept;
}

struct ApiTable {
    win32::Windows::Win32::Foundation::BSTR (__stdcall *SysAllocString)(win32::Windows::Win32::Foundation::PWSTR psz) noexcept;
    int32_t (__stdcall *SysReAllocString)(win32::Windows::Win32::Foundation::BSTR* pbstr, win32::Windows::Win32::Foundation::PWSTR psz) noexcept;
    win32::Windows::Win32::Foundation::BSTR (__stdcall *SysAllocStringLen)(win32::Windows::Win32::Foundation::PWSTR strIn, uint32_t ui) noexcept;
    int32_t (__stdcall *SysReAllocStringLen)(win32::Windows::Win32::Foundation::BSTR* pbstr, win32::Windows::Win32::Foundation::PWSTR psz, uint32_t len) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *SysAddRefString)(win32::Windows::Win32::Foundation::BSTR bstrString) noexcept;
    void (__stdcall *SysReleaseString)(win32::Windows::Win32::Foundation::BSTR bstrString) noexcept;
    void (__stdcall *SysFreeString)(win32::Windows::Win32::Foundation::BSTR bstrString) noexcept;
    uint32_t (__stdcall *SysStringLen)(win32::Windows::Win32::Foundation::BSTR pbstr) noexcept;
    uint32_t (__stdcall *SysStringByteLen)(win32::Windows::Win32::Foundation::BSTR bstr) noexcept;
    win32::Windows::Win32::Foundation::BSTR (__stdcall *SysAllocStringByteLen)(win32::Windows::Win32::Foundation::PSTR psz, uint32_t len) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *CloseHandle)(win32::Windows::Win32::Foundation::HANDLE hObject) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *DuplicateHandle)(win32::Windows::Win32::Foundation::HANDLE hSourceProcessHandle, win32::Windows::Win32::Foundation::HANDLE hSourceHandle, win32::Windows::Win32::Foundation::HANDLE hTargetProcessHandle, win32::Windows::Win32::Foundation::HANDLE* lpTargetHandle, uint32_t dwDesiredAccess, win32::Windows::Win32::Foundation::BOOL bInheritHandle, win32::Windows::Win32::Foundation::DUPLICATE_HANDLE_OPTIONS dwOptions) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *CompareObjectHandles)(win32::Windows::Win32::Foundation::HANDLE hFirstObjectHandle, win32::Windows::Win32::Foundation::HANDLE hSecondObjectHandle) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *GetHandleInformation)(win32::Windows::Win32::Foundation::HANDLE hObject, uint32_t* lpdwFlags) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *SetHandleInformation)(win32::Windows::Win32::Foundation::HANDLE hObject, uint32_t dwMask, win32::Windows::Win32::Foundation::HANDLE_FLAGS dwFlags) noexcept;
    win32::Windows::Win32::Foundation::WIN32_ERROR (__stdcall *GetLastError)() noexcept;
    void (__stdcall *SetLastError)(win32::Windows::Win32::Foundation::WIN32_ERROR dwErrCode) noexcept;
    void (__stdcall *SetLastErrorEx)(win32::Windows::Win32::Foundation::WIN32_ERROR dwErrCode, uint32_t dwType) noexcept;
    uint32_t (__stdcall *RtlNtStatusToDosError)(win32::Windows::Win32::Foundation::NTSTATUS Status) noexcept;
};
extern ApiTable g_api_table;

#pragma endregion methods

}
#endif
