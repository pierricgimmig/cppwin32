// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_TaskScheduler_0_H
#define WIN32_Windows_Win32_System_TaskScheduler_0_H
WIN32_EXPORT namespace win32::Windows::Win32::System::TaskScheduler
{
#pragma region enums
    enum class TASKPAGE : int32_t
    {
        TASKPAGE_TASK = 0,
        TASKPAGE_SCHEDULE = 1,
        TASKPAGE_SETTINGS = 2,
    };
    enum class TASK_ACTION_TYPE : int32_t
    {
        TASK_ACTION_EXEC = 0,
        TASK_ACTION_COM_HANDLER = 5,
        TASK_ACTION_SEND_EMAIL = 6,
        TASK_ACTION_SHOW_MESSAGE = 7,
    };
    enum class TASK_COMPATIBILITY : int32_t
    {
        TASK_COMPATIBILITY_AT = 0,
        TASK_COMPATIBILITY_V1 = 1,
        TASK_COMPATIBILITY_V2 = 2,
        TASK_COMPATIBILITY_V2_1 = 3,
        TASK_COMPATIBILITY_V2_2 = 4,
        TASK_COMPATIBILITY_V2_3 = 5,
        TASK_COMPATIBILITY_V2_4 = 6,
    };
    enum class TASK_CREATION : int32_t
    {
        TASK_VALIDATE_ONLY = 1,
        TASK_CREATE = 2,
        TASK_UPDATE = 4,
        TASK_CREATE_OR_UPDATE = 6,
        TASK_DISABLE = 8,
        TASK_DONT_ADD_PRINCIPAL_ACE = 16,
        TASK_IGNORE_REGISTRATION_TRIGGERS = 32,
    };
    enum class TASK_ENUM_FLAGS : int32_t
    {
        TASK_ENUM_HIDDEN = 1,
    };
    enum class TASK_INSTANCES_POLICY : int32_t
    {
        TASK_INSTANCES_PARALLEL = 0,
        TASK_INSTANCES_QUEUE = 1,
        TASK_INSTANCES_IGNORE_NEW = 2,
        TASK_INSTANCES_STOP_EXISTING = 3,
    };
    enum class TASK_LOGON_TYPE : int32_t
    {
        TASK_LOGON_NONE = 0,
        TASK_LOGON_PASSWORD = 1,
        TASK_LOGON_S4U = 2,
        TASK_LOGON_INTERACTIVE_TOKEN = 3,
        TASK_LOGON_GROUP = 4,
        TASK_LOGON_SERVICE_ACCOUNT = 5,
        TASK_LOGON_INTERACTIVE_TOKEN_OR_PASSWORD = 6,
    };
    enum class TASK_PROCESSTOKENSID_TYPE : int32_t
    {
        TASK_PROCESSTOKENSID_NONE = 0,
        TASK_PROCESSTOKENSID_UNRESTRICTED = 1,
        TASK_PROCESSTOKENSID_DEFAULT = 2,
    };
    enum class TASK_RUNLEVEL_TYPE : int32_t
    {
        TASK_RUNLEVEL_LUA = 0,
        TASK_RUNLEVEL_HIGHEST = 1,
    };
    enum class TASK_RUN_FLAGS : int32_t
    {
        TASK_RUN_NO_FLAGS = 0,
        TASK_RUN_AS_SELF = 1,
        TASK_RUN_IGNORE_CONSTRAINTS = 2,
        TASK_RUN_USE_SESSION_ID = 4,
        TASK_RUN_USER_SID = 8,
    };
    enum class TASK_SESSION_STATE_CHANGE_TYPE : int32_t
    {
        TASK_CONSOLE_CONNECT = 1,
        TASK_CONSOLE_DISCONNECT = 2,
        TASK_REMOTE_CONNECT = 3,
        TASK_REMOTE_DISCONNECT = 4,
        TASK_SESSION_LOCK = 7,
        TASK_SESSION_UNLOCK = 8,
    };
    enum class TASK_STATE : int32_t
    {
        TASK_STATE_UNKNOWN = 0,
        TASK_STATE_DISABLED = 1,
        TASK_STATE_QUEUED = 2,
        TASK_STATE_READY = 3,
        TASK_STATE_RUNNING = 4,
    };
    enum class TASK_TRIGGER_TYPE : int32_t
    {
        TASK_TIME_TRIGGER_ONCE = 0,
        TASK_TIME_TRIGGER_DAILY = 1,
        TASK_TIME_TRIGGER_WEEKLY = 2,
        TASK_TIME_TRIGGER_MONTHLYDATE = 3,
        TASK_TIME_TRIGGER_MONTHLYDOW = 4,
        TASK_EVENT_TRIGGER_ON_IDLE = 5,
        TASK_EVENT_TRIGGER_AT_SYSTEMSTART = 6,
        TASK_EVENT_TRIGGER_AT_LOGON = 7,
    };
    enum class TASK_TRIGGER_TYPE2 : int32_t
    {
        TASK_TRIGGER_EVENT = 0,
        TASK_TRIGGER_TIME = 1,
        TASK_TRIGGER_DAILY = 2,
        TASK_TRIGGER_WEEKLY = 3,
        TASK_TRIGGER_MONTHLY = 4,
        TASK_TRIGGER_MONTHLYDOW = 5,
        TASK_TRIGGER_IDLE = 6,
        TASK_TRIGGER_REGISTRATION = 7,
        TASK_TRIGGER_BOOT = 8,
        TASK_TRIGGER_LOGON = 9,
        TASK_TRIGGER_SESSION_STATE_CHANGE = 11,
        TASK_TRIGGER_CUSTOM_TRIGGER_01 = 12,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct DAILY;
    struct MONTHLYDATE;
    struct MONTHLYDOW;
    struct TASK_TRIGGER;
    union TRIGGER_TYPE_UNION;
    struct TaskHandlerPS;
    struct TaskHandlerStatusPS;
    struct TaskScheduler;
    struct WEEKLY;
    struct IAction;
    struct IActionCollection;
    struct IBootTrigger;
    struct IComHandlerAction;
    struct IDailyTrigger;
    struct IEmailAction;
    struct IEnumWorkItems;
    struct IEventTrigger;
    struct IExecAction;
    struct IExecAction2;
    struct IIdleSettings;
    struct IIdleTrigger;
    struct ILogonTrigger;
    struct IMaintenanceSettings;
    struct IMonthlyDOWTrigger;
    struct IMonthlyTrigger;
    struct INetworkSettings;
    struct IPrincipal;
    struct IPrincipal2;
    struct IProvideTaskPage;
    struct IRegisteredTask;
    struct IRegisteredTaskCollection;
    struct IRegistrationInfo;
    struct IRegistrationTrigger;
    struct IRepetitionPattern;
    struct IRunningTask;
    struct IRunningTaskCollection;
    struct IScheduledWorkItem;
    struct ISessionStateChangeTrigger;
    struct IShowMessageAction;
    struct ITask;
    struct ITaskDefinition;
    struct ITaskFolder;
    struct ITaskFolderCollection;
    struct ITaskHandler;
    struct ITaskHandlerStatus;
    struct ITaskNamedValueCollection;
    struct ITaskNamedValuePair;
    struct ITaskScheduler;
    struct ITaskService;
    struct ITaskSettings;
    struct ITaskSettings2;
    struct ITaskSettings3;
    struct ITaskTrigger;
    struct ITaskVariables;
    struct ITimeTrigger;
    struct ITrigger;
    struct ITriggerCollection;
    struct IWeeklyTrigger;
#pragma endregion forward_declarations

#pragma region delegates
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
