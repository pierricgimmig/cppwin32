// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_NetworkManagement_Rras_2_H
#define WIN32_Windows_Win32_NetworkManagement_Rras_2_H
#include "win32/Windows.Win32.NetworkManagement.Rras.h"
#include "win32/impl/Windows.Win32.NetworkManagement.Rras.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::NetworkManagement::Rras
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    uint32_t __stdcall ORBIT_IMPL_RasDialA(win32::Windows::Win32::NetworkManagement::Rras::RASDIALEXTENSIONS* param0, win32::Windows::Win32::Foundation::PSTR param1, win32::Windows::Win32::NetworkManagement::Rras::RASDIALPARAMSA* param2, uint32_t param3, void* param4, win32::Windows::Win32::NetworkManagement::Rras::HRASCONN* param5) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);
        ORBIT_TRACK_PARAM(param5);

        auto win32_impl_result = g_api_table.RasDialA(param0, param1, param2, param3, param4, param5);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasDialW(win32::Windows::Win32::NetworkManagement::Rras::RASDIALEXTENSIONS* param0, win32::Windows::Win32::Foundation::PWSTR param1, win32::Windows::Win32::NetworkManagement::Rras::RASDIALPARAMSW* param2, uint32_t param3, void* param4, win32::Windows::Win32::NetworkManagement::Rras::HRASCONN* param5) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);
        ORBIT_TRACK_PARAM(param5);

        auto win32_impl_result = g_api_table.RasDialW(param0, param1, param2, param3, param4, param5);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasEnumConnectionsA(win32::Windows::Win32::NetworkManagement::Rras::RASCONNA* param0, uint32_t* param1, uint32_t* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasEnumConnectionsA(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasEnumConnectionsW(win32::Windows::Win32::NetworkManagement::Rras::RASCONNW* param0, uint32_t* param1, uint32_t* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasEnumConnectionsW(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasEnumEntriesA(win32::Windows::Win32::Foundation::PSTR param0, win32::Windows::Win32::Foundation::PSTR param1, win32::Windows::Win32::NetworkManagement::Rras::RASENTRYNAMEA* param2, uint32_t* param3, uint32_t* param4) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);

        auto win32_impl_result = g_api_table.RasEnumEntriesA(param0, param1, param2, param3, param4);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasEnumEntriesW(win32::Windows::Win32::Foundation::PWSTR param0, win32::Windows::Win32::Foundation::PWSTR param1, win32::Windows::Win32::NetworkManagement::Rras::RASENTRYNAMEW* param2, uint32_t* param3, uint32_t* param4) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);

        auto win32_impl_result = g_api_table.RasEnumEntriesW(param0, param1, param2, param3, param4);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetConnectStatusA(win32::Windows::Win32::NetworkManagement::Rras::HRASCONN param0, win32::Windows::Win32::NetworkManagement::Rras::RASCONNSTATUSA* param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.RasGetConnectStatusA(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetConnectStatusW(win32::Windows::Win32::NetworkManagement::Rras::HRASCONN param0, win32::Windows::Win32::NetworkManagement::Rras::RASCONNSTATUSW* param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.RasGetConnectStatusW(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetErrorStringA(uint32_t ResourceId, win32::Windows::Win32::Foundation::PSTR lpszString, uint32_t InBufSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ResourceId);
        ORBIT_TRACK_PARAM(lpszString);
        ORBIT_TRACK_PARAM(InBufSize);

        auto win32_impl_result = g_api_table.RasGetErrorStringA(ResourceId, lpszString, InBufSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetErrorStringW(uint32_t ResourceId, win32::Windows::Win32::Foundation::PWSTR lpszString, uint32_t InBufSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ResourceId);
        ORBIT_TRACK_PARAM(lpszString);
        ORBIT_TRACK_PARAM(InBufSize);

        auto win32_impl_result = g_api_table.RasGetErrorStringW(ResourceId, lpszString, InBufSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasHangUpA(win32::Windows::Win32::NetworkManagement::Rras::HRASCONN param0) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);

        auto win32_impl_result = g_api_table.RasHangUpA(param0);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasHangUpW(win32::Windows::Win32::NetworkManagement::Rras::HRASCONN param0) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);

        auto win32_impl_result = g_api_table.RasHangUpW(param0);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetProjectionInfoA(win32::Windows::Win32::NetworkManagement::Rras::HRASCONN param0, win32::Windows::Win32::NetworkManagement::Rras::RASPROJECTION param1, void* param2, uint32_t* param3) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);

        auto win32_impl_result = g_api_table.RasGetProjectionInfoA(param0, param1, param2, param3);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetProjectionInfoW(win32::Windows::Win32::NetworkManagement::Rras::HRASCONN param0, win32::Windows::Win32::NetworkManagement::Rras::RASPROJECTION param1, void* param2, uint32_t* param3) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);

        auto win32_impl_result = g_api_table.RasGetProjectionInfoW(param0, param1, param2, param3);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasCreatePhonebookEntryA(win32::Windows::Win32::Foundation::HWND param0, win32::Windows::Win32::Foundation::PSTR param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.RasCreatePhonebookEntryA(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasCreatePhonebookEntryW(win32::Windows::Win32::Foundation::HWND param0, win32::Windows::Win32::Foundation::PWSTR param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.RasCreatePhonebookEntryW(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasEditPhonebookEntryA(win32::Windows::Win32::Foundation::HWND param0, win32::Windows::Win32::Foundation::PSTR param1, win32::Windows::Win32::Foundation::PSTR param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasEditPhonebookEntryA(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasEditPhonebookEntryW(win32::Windows::Win32::Foundation::HWND param0, win32::Windows::Win32::Foundation::PWSTR param1, win32::Windows::Win32::Foundation::PWSTR param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasEditPhonebookEntryW(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasSetEntryDialParamsA(win32::Windows::Win32::Foundation::PSTR param0, win32::Windows::Win32::NetworkManagement::Rras::RASDIALPARAMSA* param1, win32::Windows::Win32::Foundation::BOOL param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasSetEntryDialParamsA(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasSetEntryDialParamsW(win32::Windows::Win32::Foundation::PWSTR param0, win32::Windows::Win32::NetworkManagement::Rras::RASDIALPARAMSW* param1, win32::Windows::Win32::Foundation::BOOL param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasSetEntryDialParamsW(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetEntryDialParamsA(win32::Windows::Win32::Foundation::PSTR param0, win32::Windows::Win32::NetworkManagement::Rras::RASDIALPARAMSA* param1, int32_t* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasGetEntryDialParamsA(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetEntryDialParamsW(win32::Windows::Win32::Foundation::PWSTR param0, win32::Windows::Win32::NetworkManagement::Rras::RASDIALPARAMSW* param1, int32_t* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasGetEntryDialParamsW(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasEnumDevicesA(win32::Windows::Win32::NetworkManagement::Rras::RASDEVINFOA* param0, uint32_t* param1, uint32_t* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasEnumDevicesA(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasEnumDevicesW(win32::Windows::Win32::NetworkManagement::Rras::RASDEVINFOW* param0, uint32_t* param1, uint32_t* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasEnumDevicesW(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetCountryInfoA(win32::Windows::Win32::NetworkManagement::Rras::RASCTRYINFO* param0, uint32_t* param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.RasGetCountryInfoA(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetCountryInfoW(win32::Windows::Win32::NetworkManagement::Rras::RASCTRYINFO* param0, uint32_t* param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.RasGetCountryInfoW(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetEntryPropertiesA(win32::Windows::Win32::Foundation::PSTR param0, win32::Windows::Win32::Foundation::PSTR param1, win32::Windows::Win32::NetworkManagement::Rras::RASENTRYA* param2, uint32_t* param3, uint8_t* param4, uint32_t* param5) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);
        ORBIT_TRACK_PARAM(param5);

        auto win32_impl_result = g_api_table.RasGetEntryPropertiesA(param0, param1, param2, param3, param4, param5);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetEntryPropertiesW(win32::Windows::Win32::Foundation::PWSTR param0, win32::Windows::Win32::Foundation::PWSTR param1, win32::Windows::Win32::NetworkManagement::Rras::RASENTRYW* param2, uint32_t* param3, uint8_t* param4, uint32_t* param5) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);
        ORBIT_TRACK_PARAM(param5);

        auto win32_impl_result = g_api_table.RasGetEntryPropertiesW(param0, param1, param2, param3, param4, param5);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasSetEntryPropertiesA(win32::Windows::Win32::Foundation::PSTR param0, win32::Windows::Win32::Foundation::PSTR param1, win32::Windows::Win32::NetworkManagement::Rras::RASENTRYA* param2, uint32_t param3, uint8_t* param4, uint32_t param5) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);
        ORBIT_TRACK_PARAM(param5);

        auto win32_impl_result = g_api_table.RasSetEntryPropertiesA(param0, param1, param2, param3, param4, param5);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasSetEntryPropertiesW(win32::Windows::Win32::Foundation::PWSTR param0, win32::Windows::Win32::Foundation::PWSTR param1, win32::Windows::Win32::NetworkManagement::Rras::RASENTRYW* param2, uint32_t param3, uint8_t* param4, uint32_t param5) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);
        ORBIT_TRACK_PARAM(param5);

        auto win32_impl_result = g_api_table.RasSetEntryPropertiesW(param0, param1, param2, param3, param4, param5);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasRenameEntryA(win32::Windows::Win32::Foundation::PSTR param0, win32::Windows::Win32::Foundation::PSTR param1, win32::Windows::Win32::Foundation::PSTR param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasRenameEntryA(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasRenameEntryW(win32::Windows::Win32::Foundation::PWSTR param0, win32::Windows::Win32::Foundation::PWSTR param1, win32::Windows::Win32::Foundation::PWSTR param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasRenameEntryW(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasDeleteEntryA(win32::Windows::Win32::Foundation::PSTR param0, win32::Windows::Win32::Foundation::PSTR param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.RasDeleteEntryA(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasDeleteEntryW(win32::Windows::Win32::Foundation::PWSTR param0, win32::Windows::Win32::Foundation::PWSTR param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.RasDeleteEntryW(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasValidateEntryNameA(win32::Windows::Win32::Foundation::PSTR param0, win32::Windows::Win32::Foundation::PSTR param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.RasValidateEntryNameA(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasValidateEntryNameW(win32::Windows::Win32::Foundation::PWSTR param0, win32::Windows::Win32::Foundation::PWSTR param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.RasValidateEntryNameW(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasConnectionNotificationA(win32::Windows::Win32::NetworkManagement::Rras::HRASCONN param0, win32::Windows::Win32::Foundation::HANDLE param1, uint32_t param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasConnectionNotificationA(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasConnectionNotificationW(win32::Windows::Win32::NetworkManagement::Rras::HRASCONN param0, win32::Windows::Win32::Foundation::HANDLE param1, uint32_t param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasConnectionNotificationW(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetSubEntryHandleA(win32::Windows::Win32::NetworkManagement::Rras::HRASCONN param0, uint32_t param1, win32::Windows::Win32::NetworkManagement::Rras::HRASCONN* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasGetSubEntryHandleA(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetSubEntryHandleW(win32::Windows::Win32::NetworkManagement::Rras::HRASCONN param0, uint32_t param1, win32::Windows::Win32::NetworkManagement::Rras::HRASCONN* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasGetSubEntryHandleW(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetCredentialsA(win32::Windows::Win32::Foundation::PSTR param0, win32::Windows::Win32::Foundation::PSTR param1, win32::Windows::Win32::NetworkManagement::Rras::RASCREDENTIALSA* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasGetCredentialsA(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetCredentialsW(win32::Windows::Win32::Foundation::PWSTR param0, win32::Windows::Win32::Foundation::PWSTR param1, win32::Windows::Win32::NetworkManagement::Rras::RASCREDENTIALSW* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasGetCredentialsW(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasSetCredentialsA(win32::Windows::Win32::Foundation::PSTR param0, win32::Windows::Win32::Foundation::PSTR param1, win32::Windows::Win32::NetworkManagement::Rras::RASCREDENTIALSA* param2, win32::Windows::Win32::Foundation::BOOL param3) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);

        auto win32_impl_result = g_api_table.RasSetCredentialsA(param0, param1, param2, param3);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasSetCredentialsW(win32::Windows::Win32::Foundation::PWSTR param0, win32::Windows::Win32::Foundation::PWSTR param1, win32::Windows::Win32::NetworkManagement::Rras::RASCREDENTIALSW* param2, win32::Windows::Win32::Foundation::BOOL param3) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);

        auto win32_impl_result = g_api_table.RasSetCredentialsW(param0, param1, param2, param3);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetSubEntryPropertiesA(win32::Windows::Win32::Foundation::PSTR param0, win32::Windows::Win32::Foundation::PSTR param1, uint32_t param2, win32::Windows::Win32::NetworkManagement::Rras::RASSUBENTRYA* param3, uint32_t* param4, uint8_t* param5, uint32_t* param6) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);
        ORBIT_TRACK_PARAM(param5);
        ORBIT_TRACK_PARAM(param6);

        auto win32_impl_result = g_api_table.RasGetSubEntryPropertiesA(param0, param1, param2, param3, param4, param5, param6);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetSubEntryPropertiesW(win32::Windows::Win32::Foundation::PWSTR param0, win32::Windows::Win32::Foundation::PWSTR param1, uint32_t param2, win32::Windows::Win32::NetworkManagement::Rras::RASSUBENTRYW* param3, uint32_t* param4, uint8_t* param5, uint32_t* param6) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);
        ORBIT_TRACK_PARAM(param5);
        ORBIT_TRACK_PARAM(param6);

        auto win32_impl_result = g_api_table.RasGetSubEntryPropertiesW(param0, param1, param2, param3, param4, param5, param6);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasSetSubEntryPropertiesA(win32::Windows::Win32::Foundation::PSTR param0, win32::Windows::Win32::Foundation::PSTR param1, uint32_t param2, win32::Windows::Win32::NetworkManagement::Rras::RASSUBENTRYA* param3, uint32_t param4, uint8_t* param5, uint32_t param6) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);
        ORBIT_TRACK_PARAM(param5);
        ORBIT_TRACK_PARAM(param6);

        auto win32_impl_result = g_api_table.RasSetSubEntryPropertiesA(param0, param1, param2, param3, param4, param5, param6);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasSetSubEntryPropertiesW(win32::Windows::Win32::Foundation::PWSTR param0, win32::Windows::Win32::Foundation::PWSTR param1, uint32_t param2, win32::Windows::Win32::NetworkManagement::Rras::RASSUBENTRYW* param3, uint32_t param4, uint8_t* param5, uint32_t param6) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);
        ORBIT_TRACK_PARAM(param5);
        ORBIT_TRACK_PARAM(param6);

        auto win32_impl_result = g_api_table.RasSetSubEntryPropertiesW(param0, param1, param2, param3, param4, param5, param6);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetAutodialAddressA(win32::Windows::Win32::Foundation::PSTR param0, uint32_t* param1, win32::Windows::Win32::NetworkManagement::Rras::RASAUTODIALENTRYA* param2, uint32_t* param3, uint32_t* param4) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);

        auto win32_impl_result = g_api_table.RasGetAutodialAddressA(param0, param1, param2, param3, param4);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetAutodialAddressW(win32::Windows::Win32::Foundation::PWSTR param0, uint32_t* param1, win32::Windows::Win32::NetworkManagement::Rras::RASAUTODIALENTRYW* param2, uint32_t* param3, uint32_t* param4) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);

        auto win32_impl_result = g_api_table.RasGetAutodialAddressW(param0, param1, param2, param3, param4);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasSetAutodialAddressA(win32::Windows::Win32::Foundation::PSTR param0, uint32_t param1, win32::Windows::Win32::NetworkManagement::Rras::RASAUTODIALENTRYA* param2, uint32_t param3, uint32_t param4) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);

        auto win32_impl_result = g_api_table.RasSetAutodialAddressA(param0, param1, param2, param3, param4);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasSetAutodialAddressW(win32::Windows::Win32::Foundation::PWSTR param0, uint32_t param1, win32::Windows::Win32::NetworkManagement::Rras::RASAUTODIALENTRYW* param2, uint32_t param3, uint32_t param4) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);

        auto win32_impl_result = g_api_table.RasSetAutodialAddressW(param0, param1, param2, param3, param4);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasEnumAutodialAddressesA(win32::Windows::Win32::Foundation::PSTR* lppRasAutodialAddresses, uint32_t* lpdwcbRasAutodialAddresses, uint32_t* lpdwcRasAutodialAddresses) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lppRasAutodialAddresses);
        ORBIT_TRACK_PARAM(lpdwcbRasAutodialAddresses);
        ORBIT_TRACK_PARAM(lpdwcRasAutodialAddresses);

        auto win32_impl_result = g_api_table.RasEnumAutodialAddressesA(lppRasAutodialAddresses, lpdwcbRasAutodialAddresses, lpdwcRasAutodialAddresses);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasEnumAutodialAddressesW(win32::Windows::Win32::Foundation::PWSTR* lppRasAutodialAddresses, uint32_t* lpdwcbRasAutodialAddresses, uint32_t* lpdwcRasAutodialAddresses) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lppRasAutodialAddresses);
        ORBIT_TRACK_PARAM(lpdwcbRasAutodialAddresses);
        ORBIT_TRACK_PARAM(lpdwcRasAutodialAddresses);

        auto win32_impl_result = g_api_table.RasEnumAutodialAddressesW(lppRasAutodialAddresses, lpdwcbRasAutodialAddresses, lpdwcRasAutodialAddresses);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetAutodialEnableA(uint32_t param0, int32_t* param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.RasGetAutodialEnableA(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetAutodialEnableW(uint32_t param0, int32_t* param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.RasGetAutodialEnableW(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasSetAutodialEnableA(uint32_t param0, win32::Windows::Win32::Foundation::BOOL param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.RasSetAutodialEnableA(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasSetAutodialEnableW(uint32_t param0, win32::Windows::Win32::Foundation::BOOL param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.RasSetAutodialEnableW(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetAutodialParamA(uint32_t param0, void* param1, uint32_t* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasGetAutodialParamA(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetAutodialParamW(uint32_t param0, void* param1, uint32_t* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasGetAutodialParamW(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasSetAutodialParamA(uint32_t param0, void* param1, uint32_t param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasSetAutodialParamA(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasSetAutodialParamW(uint32_t param0, void* param1, uint32_t param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.RasSetAutodialParamW(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetPCscf(win32::Windows::Win32::Foundation::PWSTR lpszPCscf) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszPCscf);

        auto win32_impl_result = g_api_table.RasGetPCscf(lpszPCscf);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasInvokeEapUI(win32::Windows::Win32::NetworkManagement::Rras::HRASCONN param0, uint32_t param1, win32::Windows::Win32::NetworkManagement::Rras::RASDIALEXTENSIONS* param2, win32::Windows::Win32::Foundation::HWND param3) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);

        auto win32_impl_result = g_api_table.RasInvokeEapUI(param0, param1, param2, param3);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetLinkStatistics(win32::Windows::Win32::NetworkManagement::Rras::HRASCONN hRasConn, uint32_t dwSubEntry, win32::Windows::Win32::NetworkManagement::Rras::RAS_STATS* lpStatistics) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRasConn);
        ORBIT_TRACK_PARAM(dwSubEntry);
        ORBIT_TRACK_PARAM(lpStatistics);

        auto win32_impl_result = g_api_table.RasGetLinkStatistics(hRasConn, dwSubEntry, lpStatistics);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetConnectionStatistics(win32::Windows::Win32::NetworkManagement::Rras::HRASCONN hRasConn, win32::Windows::Win32::NetworkManagement::Rras::RAS_STATS* lpStatistics) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRasConn);
        ORBIT_TRACK_PARAM(lpStatistics);

        auto win32_impl_result = g_api_table.RasGetConnectionStatistics(hRasConn, lpStatistics);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasClearLinkStatistics(win32::Windows::Win32::NetworkManagement::Rras::HRASCONN hRasConn, uint32_t dwSubEntry) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRasConn);
        ORBIT_TRACK_PARAM(dwSubEntry);

        auto win32_impl_result = g_api_table.RasClearLinkStatistics(hRasConn, dwSubEntry);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasClearConnectionStatistics(win32::Windows::Win32::NetworkManagement::Rras::HRASCONN hRasConn) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRasConn);

        auto win32_impl_result = g_api_table.RasClearConnectionStatistics(hRasConn);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetEapUserDataA(win32::Windows::Win32::Foundation::HANDLE hToken, win32::Windows::Win32::Foundation::PSTR pszPhonebook, win32::Windows::Win32::Foundation::PSTR pszEntry, uint8_t* pbEapData, uint32_t* pdwSizeofEapData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hToken);
        ORBIT_TRACK_PARAM(pszPhonebook);
        ORBIT_TRACK_PARAM(pszEntry);
        ORBIT_TRACK_PARAM(pbEapData);
        ORBIT_TRACK_PARAM(pdwSizeofEapData);

        auto win32_impl_result = g_api_table.RasGetEapUserDataA(hToken, pszPhonebook, pszEntry, pbEapData, pdwSizeofEapData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetEapUserDataW(win32::Windows::Win32::Foundation::HANDLE hToken, win32::Windows::Win32::Foundation::PWSTR pszPhonebook, win32::Windows::Win32::Foundation::PWSTR pszEntry, uint8_t* pbEapData, uint32_t* pdwSizeofEapData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hToken);
        ORBIT_TRACK_PARAM(pszPhonebook);
        ORBIT_TRACK_PARAM(pszEntry);
        ORBIT_TRACK_PARAM(pbEapData);
        ORBIT_TRACK_PARAM(pdwSizeofEapData);

        auto win32_impl_result = g_api_table.RasGetEapUserDataW(hToken, pszPhonebook, pszEntry, pbEapData, pdwSizeofEapData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasSetEapUserDataA(win32::Windows::Win32::Foundation::HANDLE hToken, win32::Windows::Win32::Foundation::PSTR pszPhonebook, win32::Windows::Win32::Foundation::PSTR pszEntry, uint8_t* pbEapData, uint32_t dwSizeofEapData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hToken);
        ORBIT_TRACK_PARAM(pszPhonebook);
        ORBIT_TRACK_PARAM(pszEntry);
        ORBIT_TRACK_PARAM(pbEapData);
        ORBIT_TRACK_PARAM(dwSizeofEapData);

        auto win32_impl_result = g_api_table.RasSetEapUserDataA(hToken, pszPhonebook, pszEntry, pbEapData, dwSizeofEapData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasSetEapUserDataW(win32::Windows::Win32::Foundation::HANDLE hToken, win32::Windows::Win32::Foundation::PWSTR pszPhonebook, win32::Windows::Win32::Foundation::PWSTR pszEntry, uint8_t* pbEapData, uint32_t dwSizeofEapData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hToken);
        ORBIT_TRACK_PARAM(pszPhonebook);
        ORBIT_TRACK_PARAM(pszEntry);
        ORBIT_TRACK_PARAM(pbEapData);
        ORBIT_TRACK_PARAM(dwSizeofEapData);

        auto win32_impl_result = g_api_table.RasSetEapUserDataW(hToken, pszPhonebook, pszEntry, pbEapData, dwSizeofEapData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetCustomAuthDataA(win32::Windows::Win32::Foundation::PSTR pszPhonebook, win32::Windows::Win32::Foundation::PSTR pszEntry, uint8_t* pbCustomAuthData, uint32_t* pdwSizeofCustomAuthData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPhonebook);
        ORBIT_TRACK_PARAM(pszEntry);
        ORBIT_TRACK_PARAM(pbCustomAuthData);
        ORBIT_TRACK_PARAM(pdwSizeofCustomAuthData);

        auto win32_impl_result = g_api_table.RasGetCustomAuthDataA(pszPhonebook, pszEntry, pbCustomAuthData, pdwSizeofCustomAuthData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetCustomAuthDataW(win32::Windows::Win32::Foundation::PWSTR pszPhonebook, win32::Windows::Win32::Foundation::PWSTR pszEntry, uint8_t* pbCustomAuthData, uint32_t* pdwSizeofCustomAuthData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPhonebook);
        ORBIT_TRACK_PARAM(pszEntry);
        ORBIT_TRACK_PARAM(pbCustomAuthData);
        ORBIT_TRACK_PARAM(pdwSizeofCustomAuthData);

        auto win32_impl_result = g_api_table.RasGetCustomAuthDataW(pszPhonebook, pszEntry, pbCustomAuthData, pdwSizeofCustomAuthData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasSetCustomAuthDataA(win32::Windows::Win32::Foundation::PSTR pszPhonebook, win32::Windows::Win32::Foundation::PSTR pszEntry, uint8_t* pbCustomAuthData, uint32_t dwSizeofCustomAuthData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPhonebook);
        ORBIT_TRACK_PARAM(pszEntry);
        ORBIT_TRACK_PARAM(pbCustomAuthData);
        ORBIT_TRACK_PARAM(dwSizeofCustomAuthData);

        auto win32_impl_result = g_api_table.RasSetCustomAuthDataA(pszPhonebook, pszEntry, pbCustomAuthData, dwSizeofCustomAuthData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasSetCustomAuthDataW(win32::Windows::Win32::Foundation::PWSTR pszPhonebook, win32::Windows::Win32::Foundation::PWSTR pszEntry, uint8_t* pbCustomAuthData, uint32_t dwSizeofCustomAuthData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPhonebook);
        ORBIT_TRACK_PARAM(pszEntry);
        ORBIT_TRACK_PARAM(pbCustomAuthData);
        ORBIT_TRACK_PARAM(dwSizeofCustomAuthData);

        auto win32_impl_result = g_api_table.RasSetCustomAuthDataW(pszPhonebook, pszEntry, pbCustomAuthData, dwSizeofCustomAuthData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetEapUserIdentityW(win32::Windows::Win32::Foundation::PWSTR pszPhonebook, win32::Windows::Win32::Foundation::PWSTR pszEntry, uint32_t dwFlags, win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::NetworkManagement::Rras::RASEAPUSERIDENTITYW** ppRasEapUserIdentity) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPhonebook);
        ORBIT_TRACK_PARAM(pszEntry);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(ppRasEapUserIdentity);

        auto win32_impl_result = g_api_table.RasGetEapUserIdentityW(pszPhonebook, pszEntry, dwFlags, hwnd, ppRasEapUserIdentity);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetEapUserIdentityA(win32::Windows::Win32::Foundation::PSTR pszPhonebook, win32::Windows::Win32::Foundation::PSTR pszEntry, uint32_t dwFlags, win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::NetworkManagement::Rras::RASEAPUSERIDENTITYA** ppRasEapUserIdentity) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPhonebook);
        ORBIT_TRACK_PARAM(pszEntry);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(ppRasEapUserIdentity);

        auto win32_impl_result = g_api_table.RasGetEapUserIdentityA(pszPhonebook, pszEntry, dwFlags, hwnd, ppRasEapUserIdentity);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RasFreeEapUserIdentityW(win32::Windows::Win32::NetworkManagement::Rras::RASEAPUSERIDENTITYW* pRasEapUserIdentity) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pRasEapUserIdentity);

        g_api_table.RasFreeEapUserIdentityW(pRasEapUserIdentity);
        
    }

    void __stdcall ORBIT_IMPL_RasFreeEapUserIdentityA(win32::Windows::Win32::NetworkManagement::Rras::RASEAPUSERIDENTITYA* pRasEapUserIdentity) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pRasEapUserIdentity);

        g_api_table.RasFreeEapUserIdentityA(pRasEapUserIdentity);
        
    }

    uint32_t __stdcall ORBIT_IMPL_RasDeleteSubEntryA(win32::Windows::Win32::Foundation::PSTR pszPhonebook, win32::Windows::Win32::Foundation::PSTR pszEntry, uint32_t dwSubentryId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPhonebook);
        ORBIT_TRACK_PARAM(pszEntry);
        ORBIT_TRACK_PARAM(dwSubentryId);

        auto win32_impl_result = g_api_table.RasDeleteSubEntryA(pszPhonebook, pszEntry, dwSubentryId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasDeleteSubEntryW(win32::Windows::Win32::Foundation::PWSTR pszPhonebook, win32::Windows::Win32::Foundation::PWSTR pszEntry, uint32_t dwSubEntryId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPhonebook);
        ORBIT_TRACK_PARAM(pszEntry);
        ORBIT_TRACK_PARAM(dwSubEntryId);

        auto win32_impl_result = g_api_table.RasDeleteSubEntryW(pszPhonebook, pszEntry, dwSubEntryId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasUpdateConnection(win32::Windows::Win32::NetworkManagement::Rras::HRASCONN hrasconn, win32::Windows::Win32::NetworkManagement::Rras::RASUPDATECONN* lprasupdateconn) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hrasconn);
        ORBIT_TRACK_PARAM(lprasupdateconn);

        auto win32_impl_result = g_api_table.RasUpdateConnection(hrasconn, lprasupdateconn);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RasGetProjectionInfoEx(win32::Windows::Win32::NetworkManagement::Rras::HRASCONN hrasconn, win32::Windows::Win32::NetworkManagement::Rras::RAS_PROJECTION_INFO* pRasProjection, uint32_t* lpdwSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hrasconn);
        ORBIT_TRACK_PARAM(pRasProjection);
        ORBIT_TRACK_PARAM(lpdwSize);

        auto win32_impl_result = g_api_table.RasGetProjectionInfoEx(hrasconn, pRasProjection, lpdwSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RasPhonebookDlgA(win32::Windows::Win32::Foundation::PSTR lpszPhonebook, win32::Windows::Win32::Foundation::PSTR lpszEntry, win32::Windows::Win32::NetworkManagement::Rras::RASPBDLGA* lpInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszPhonebook);
        ORBIT_TRACK_PARAM(lpszEntry);
        ORBIT_TRACK_PARAM(lpInfo);

        auto win32_impl_result = g_api_table.RasPhonebookDlgA(lpszPhonebook, lpszEntry, lpInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RasPhonebookDlgW(win32::Windows::Win32::Foundation::PWSTR lpszPhonebook, win32::Windows::Win32::Foundation::PWSTR lpszEntry, win32::Windows::Win32::NetworkManagement::Rras::RASPBDLGW* lpInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszPhonebook);
        ORBIT_TRACK_PARAM(lpszEntry);
        ORBIT_TRACK_PARAM(lpInfo);

        auto win32_impl_result = g_api_table.RasPhonebookDlgW(lpszPhonebook, lpszEntry, lpInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RasEntryDlgA(win32::Windows::Win32::Foundation::PSTR lpszPhonebook, win32::Windows::Win32::Foundation::PSTR lpszEntry, win32::Windows::Win32::NetworkManagement::Rras::RASENTRYDLGA* lpInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszPhonebook);
        ORBIT_TRACK_PARAM(lpszEntry);
        ORBIT_TRACK_PARAM(lpInfo);

        auto win32_impl_result = g_api_table.RasEntryDlgA(lpszPhonebook, lpszEntry, lpInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RasEntryDlgW(win32::Windows::Win32::Foundation::PWSTR lpszPhonebook, win32::Windows::Win32::Foundation::PWSTR lpszEntry, win32::Windows::Win32::NetworkManagement::Rras::RASENTRYDLGW* lpInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszPhonebook);
        ORBIT_TRACK_PARAM(lpszEntry);
        ORBIT_TRACK_PARAM(lpInfo);

        auto win32_impl_result = g_api_table.RasEntryDlgW(lpszPhonebook, lpszEntry, lpInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RasDialDlgA(win32::Windows::Win32::Foundation::PSTR lpszPhonebook, win32::Windows::Win32::Foundation::PSTR lpszEntry, win32::Windows::Win32::Foundation::PSTR lpszPhoneNumber, win32::Windows::Win32::NetworkManagement::Rras::RASDIALDLG* lpInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszPhonebook);
        ORBIT_TRACK_PARAM(lpszEntry);
        ORBIT_TRACK_PARAM(lpszPhoneNumber);
        ORBIT_TRACK_PARAM(lpInfo);

        auto win32_impl_result = g_api_table.RasDialDlgA(lpszPhonebook, lpszEntry, lpszPhoneNumber, lpInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RasDialDlgW(win32::Windows::Win32::Foundation::PWSTR lpszPhonebook, win32::Windows::Win32::Foundation::PWSTR lpszEntry, win32::Windows::Win32::Foundation::PWSTR lpszPhoneNumber, win32::Windows::Win32::NetworkManagement::Rras::RASDIALDLG* lpInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszPhonebook);
        ORBIT_TRACK_PARAM(lpszEntry);
        ORBIT_TRACK_PARAM(lpszPhoneNumber);
        ORBIT_TRACK_PARAM(lpInfo);

        auto win32_impl_result = g_api_table.RasDialDlgW(lpszPhonebook, lpszEntry, lpszPhoneNumber, lpInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminConnectionEnumEx(intptr_t hRasServer, win32::Windows::Win32::NetworkManagement::Rras::MPRAPI_OBJECT_HEADER* pObjectHeader, uint32_t dwPreferedMaxLen, uint32_t* lpdwEntriesRead, uint32_t* lpdwTotalEntries, win32::Windows::Win32::NetworkManagement::Rras::RAS_CONNECTION_EX** ppRasConn, uint32_t* lpdwResumeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRasServer);
        ORBIT_TRACK_PARAM(pObjectHeader);
        ORBIT_TRACK_PARAM(dwPreferedMaxLen);
        ORBIT_TRACK_PARAM(lpdwEntriesRead);
        ORBIT_TRACK_PARAM(lpdwTotalEntries);
        ORBIT_TRACK_PARAM(ppRasConn);
        ORBIT_TRACK_PARAM(lpdwResumeHandle);

        auto win32_impl_result = g_api_table.MprAdminConnectionEnumEx(hRasServer, pObjectHeader, dwPreferedMaxLen, lpdwEntriesRead, lpdwTotalEntries, ppRasConn, lpdwResumeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminConnectionGetInfoEx(intptr_t hRasServer, win32::Windows::Win32::Foundation::HANDLE hRasConnection, win32::Windows::Win32::NetworkManagement::Rras::RAS_CONNECTION_EX* pRasConnection) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRasServer);
        ORBIT_TRACK_PARAM(hRasConnection);
        ORBIT_TRACK_PARAM(pRasConnection);

        auto win32_impl_result = g_api_table.MprAdminConnectionGetInfoEx(hRasServer, hRasConnection, pRasConnection);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminServerGetInfoEx(intptr_t hMprServer, win32::Windows::Win32::NetworkManagement::Rras::MPR_SERVER_EX1* pServerInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(pServerInfo);

        auto win32_impl_result = g_api_table.MprAdminServerGetInfoEx(hMprServer, pServerInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminServerSetInfoEx(intptr_t hMprServer, win32::Windows::Win32::NetworkManagement::Rras::MPR_SERVER_SET_CONFIG_EX1* pServerInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(pServerInfo);

        auto win32_impl_result = g_api_table.MprAdminServerSetInfoEx(hMprServer, pServerInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigServerGetInfoEx(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::NetworkManagement::Rras::MPR_SERVER_EX1* pServerInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(pServerInfo);

        auto win32_impl_result = g_api_table.MprConfigServerGetInfoEx(hMprConfig, pServerInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigServerSetInfoEx(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::NetworkManagement::Rras::MPR_SERVER_SET_CONFIG_EX1* pSetServerConfig) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(pSetServerConfig);

        auto win32_impl_result = g_api_table.MprConfigServerSetInfoEx(hMprConfig, pSetServerConfig);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminUpdateConnection(intptr_t hRasServer, win32::Windows::Win32::Foundation::HANDLE hRasConnection, win32::Windows::Win32::NetworkManagement::Rras::RAS_UPDATE_CONNECTION* pRasUpdateConnection) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRasServer);
        ORBIT_TRACK_PARAM(hRasConnection);
        ORBIT_TRACK_PARAM(pRasUpdateConnection);

        auto win32_impl_result = g_api_table.MprAdminUpdateConnection(hRasServer, hRasConnection, pRasUpdateConnection);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminIsServiceInitialized(win32::Windows::Win32::Foundation::PWSTR lpwsServerName, win32::Windows::Win32::Foundation::BOOL* fIsServiceInitialized) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpwsServerName);
        ORBIT_TRACK_PARAM(fIsServiceInitialized);

        auto win32_impl_result = g_api_table.MprAdminIsServiceInitialized(lpwsServerName, fIsServiceInitialized);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceSetCustomInfoEx(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hInterface, win32::Windows::Win32::NetworkManagement::Rras::MPR_IF_CUSTOMINFOEX2* pCustomInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hInterface);
        ORBIT_TRACK_PARAM(pCustomInfo);

        auto win32_impl_result = g_api_table.MprAdminInterfaceSetCustomInfoEx(hMprServer, hInterface, pCustomInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceGetCustomInfoEx(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hInterface, win32::Windows::Win32::NetworkManagement::Rras::MPR_IF_CUSTOMINFOEX2* pCustomInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hInterface);
        ORBIT_TRACK_PARAM(pCustomInfo);

        auto win32_impl_result = g_api_table.MprAdminInterfaceGetCustomInfoEx(hMprServer, hInterface, pCustomInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigInterfaceGetCustomInfoEx(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::HANDLE hRouterInterface, win32::Windows::Win32::NetworkManagement::Rras::MPR_IF_CUSTOMINFOEX2* pCustomInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(hRouterInterface);
        ORBIT_TRACK_PARAM(pCustomInfo);

        auto win32_impl_result = g_api_table.MprConfigInterfaceGetCustomInfoEx(hMprConfig, hRouterInterface, pCustomInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigInterfaceSetCustomInfoEx(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::HANDLE hRouterInterface, win32::Windows::Win32::NetworkManagement::Rras::MPR_IF_CUSTOMINFOEX2* pCustomInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(hRouterInterface);
        ORBIT_TRACK_PARAM(pCustomInfo);

        auto win32_impl_result = g_api_table.MprConfigInterfaceSetCustomInfoEx(hMprConfig, hRouterInterface, pCustomInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminConnectionEnum(intptr_t hRasServer, uint32_t dwLevel, uint8_t** lplpbBuffer, uint32_t dwPrefMaxLen, uint32_t* lpdwEntriesRead, uint32_t* lpdwTotalEntries, uint32_t* lpdwResumeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRasServer);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lplpbBuffer);
        ORBIT_TRACK_PARAM(dwPrefMaxLen);
        ORBIT_TRACK_PARAM(lpdwEntriesRead);
        ORBIT_TRACK_PARAM(lpdwTotalEntries);
        ORBIT_TRACK_PARAM(lpdwResumeHandle);

        auto win32_impl_result = g_api_table.MprAdminConnectionEnum(hRasServer, dwLevel, lplpbBuffer, dwPrefMaxLen, lpdwEntriesRead, lpdwTotalEntries, lpdwResumeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminPortEnum(intptr_t hRasServer, uint32_t dwLevel, win32::Windows::Win32::Foundation::HANDLE hRasConnection, uint8_t** lplpbBuffer, uint32_t dwPrefMaxLen, uint32_t* lpdwEntriesRead, uint32_t* lpdwTotalEntries, uint32_t* lpdwResumeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRasServer);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(hRasConnection);
        ORBIT_TRACK_PARAM(lplpbBuffer);
        ORBIT_TRACK_PARAM(dwPrefMaxLen);
        ORBIT_TRACK_PARAM(lpdwEntriesRead);
        ORBIT_TRACK_PARAM(lpdwTotalEntries);
        ORBIT_TRACK_PARAM(lpdwResumeHandle);

        auto win32_impl_result = g_api_table.MprAdminPortEnum(hRasServer, dwLevel, hRasConnection, lplpbBuffer, dwPrefMaxLen, lpdwEntriesRead, lpdwTotalEntries, lpdwResumeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminConnectionGetInfo(intptr_t hRasServer, uint32_t dwLevel, win32::Windows::Win32::Foundation::HANDLE hRasConnection, uint8_t** lplpbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRasServer);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(hRasConnection);
        ORBIT_TRACK_PARAM(lplpbBuffer);

        auto win32_impl_result = g_api_table.MprAdminConnectionGetInfo(hRasServer, dwLevel, hRasConnection, lplpbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminPortGetInfo(intptr_t hRasServer, uint32_t dwLevel, win32::Windows::Win32::Foundation::HANDLE hPort, uint8_t** lplpbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRasServer);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(hPort);
        ORBIT_TRACK_PARAM(lplpbBuffer);

        auto win32_impl_result = g_api_table.MprAdminPortGetInfo(hRasServer, dwLevel, hPort, lplpbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminConnectionClearStats(intptr_t hRasServer, win32::Windows::Win32::Foundation::HANDLE hRasConnection) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRasServer);
        ORBIT_TRACK_PARAM(hRasConnection);

        auto win32_impl_result = g_api_table.MprAdminConnectionClearStats(hRasServer, hRasConnection);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminPortClearStats(intptr_t hRasServer, win32::Windows::Win32::Foundation::HANDLE hPort) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRasServer);
        ORBIT_TRACK_PARAM(hPort);

        auto win32_impl_result = g_api_table.MprAdminPortClearStats(hRasServer, hPort);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminPortReset(intptr_t hRasServer, win32::Windows::Win32::Foundation::HANDLE hPort) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRasServer);
        ORBIT_TRACK_PARAM(hPort);

        auto win32_impl_result = g_api_table.MprAdminPortReset(hRasServer, hPort);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminPortDisconnect(intptr_t hRasServer, win32::Windows::Win32::Foundation::HANDLE hPort) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRasServer);
        ORBIT_TRACK_PARAM(hPort);

        auto win32_impl_result = g_api_table.MprAdminPortDisconnect(hRasServer, hPort);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminConnectionRemoveQuarantine(win32::Windows::Win32::Foundation::HANDLE hRasServer, win32::Windows::Win32::Foundation::HANDLE hRasConnection, win32::Windows::Win32::Foundation::BOOL fIsIpAddress) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRasServer);
        ORBIT_TRACK_PARAM(hRasConnection);
        ORBIT_TRACK_PARAM(fIsIpAddress);

        auto win32_impl_result = g_api_table.MprAdminConnectionRemoveQuarantine(hRasServer, hRasConnection, fIsIpAddress);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminUserGetInfo(win32::Windows::Win32::Foundation::PWSTR lpszServer, win32::Windows::Win32::Foundation::PWSTR lpszUser, uint32_t dwLevel, uint8_t* lpbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszServer);
        ORBIT_TRACK_PARAM(lpszUser);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lpbBuffer);

        auto win32_impl_result = g_api_table.MprAdminUserGetInfo(lpszServer, lpszUser, dwLevel, lpbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminUserSetInfo(win32::Windows::Win32::Foundation::PWSTR lpszServer, win32::Windows::Win32::Foundation::PWSTR lpszUser, uint32_t dwLevel, uint8_t* lpbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszServer);
        ORBIT_TRACK_PARAM(lpszUser);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lpbBuffer);

        auto win32_impl_result = g_api_table.MprAdminUserSetInfo(lpszServer, lpszUser, dwLevel, lpbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminSendUserMessage(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hConnection, win32::Windows::Win32::Foundation::PWSTR lpwszMessage) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hConnection);
        ORBIT_TRACK_PARAM(lpwszMessage);

        auto win32_impl_result = g_api_table.MprAdminSendUserMessage(hMprServer, hConnection, lpwszMessage);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminGetPDCServer(win32::Windows::Win32::Foundation::PWSTR lpszDomain, win32::Windows::Win32::Foundation::PWSTR lpszServer, win32::Windows::Win32::Foundation::PWSTR lpszPDCServer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszDomain);
        ORBIT_TRACK_PARAM(lpszServer);
        ORBIT_TRACK_PARAM(lpszPDCServer);

        auto win32_impl_result = g_api_table.MprAdminGetPDCServer(lpszDomain, lpszServer, lpszPDCServer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_MprAdminIsServiceRunning(win32::Windows::Win32::Foundation::PWSTR lpwsServerName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpwsServerName);

        auto win32_impl_result = g_api_table.MprAdminIsServiceRunning(lpwsServerName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminServerConnect(win32::Windows::Win32::Foundation::PWSTR lpwsServerName, intptr_t* phMprServer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpwsServerName);
        ORBIT_TRACK_PARAM(phMprServer);

        auto win32_impl_result = g_api_table.MprAdminServerConnect(lpwsServerName, phMprServer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_MprAdminServerDisconnect(intptr_t hMprServer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);

        g_api_table.MprAdminServerDisconnect(hMprServer);
        
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminServerGetCredentials(intptr_t hMprServer, uint32_t dwLevel, uint8_t** lplpbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lplpbBuffer);

        auto win32_impl_result = g_api_table.MprAdminServerGetCredentials(hMprServer, dwLevel, lplpbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminServerSetCredentials(intptr_t hMprServer, uint32_t dwLevel, uint8_t* lpbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lpbBuffer);

        auto win32_impl_result = g_api_table.MprAdminServerSetCredentials(hMprServer, dwLevel, lpbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminBufferFree(void* pBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pBuffer);

        auto win32_impl_result = g_api_table.MprAdminBufferFree(pBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminGetErrorString(uint32_t dwError, win32::Windows::Win32::Foundation::PWSTR* lplpwsErrorString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwError);
        ORBIT_TRACK_PARAM(lplpwsErrorString);

        auto win32_impl_result = g_api_table.MprAdminGetErrorString(dwError, lplpwsErrorString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminServerGetInfo(intptr_t hMprServer, uint32_t dwLevel, uint8_t** lplpbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lplpbBuffer);

        auto win32_impl_result = g_api_table.MprAdminServerGetInfo(hMprServer, dwLevel, lplpbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminServerSetInfo(intptr_t hMprServer, uint32_t dwLevel, uint8_t* lpbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lpbBuffer);

        auto win32_impl_result = g_api_table.MprAdminServerSetInfo(hMprServer, dwLevel, lpbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminEstablishDomainRasServer(win32::Windows::Win32::Foundation::PWSTR pszDomain, win32::Windows::Win32::Foundation::PWSTR pszMachine, win32::Windows::Win32::Foundation::BOOL bEnable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDomain);
        ORBIT_TRACK_PARAM(pszMachine);
        ORBIT_TRACK_PARAM(bEnable);

        auto win32_impl_result = g_api_table.MprAdminEstablishDomainRasServer(pszDomain, pszMachine, bEnable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminIsDomainRasServer(win32::Windows::Win32::Foundation::PWSTR pszDomain, win32::Windows::Win32::Foundation::PWSTR pszMachine, win32::Windows::Win32::Foundation::BOOL* pbIsRasServer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDomain);
        ORBIT_TRACK_PARAM(pszMachine);
        ORBIT_TRACK_PARAM(pbIsRasServer);

        auto win32_impl_result = g_api_table.MprAdminIsDomainRasServer(pszDomain, pszMachine, pbIsRasServer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminTransportCreate(intptr_t hMprServer, uint32_t dwTransportId, win32::Windows::Win32::Foundation::PWSTR lpwsTransportName, uint8_t* pGlobalInfo, uint32_t dwGlobalInfoSize, uint8_t* pClientInterfaceInfo, uint32_t dwClientInterfaceInfoSize, win32::Windows::Win32::Foundation::PWSTR lpwsDLLPath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(dwTransportId);
        ORBIT_TRACK_PARAM(lpwsTransportName);
        ORBIT_TRACK_PARAM(pGlobalInfo);
        ORBIT_TRACK_PARAM(dwGlobalInfoSize);
        ORBIT_TRACK_PARAM(pClientInterfaceInfo);
        ORBIT_TRACK_PARAM(dwClientInterfaceInfoSize);
        ORBIT_TRACK_PARAM(lpwsDLLPath);

        auto win32_impl_result = g_api_table.MprAdminTransportCreate(hMprServer, dwTransportId, lpwsTransportName, pGlobalInfo, dwGlobalInfoSize, pClientInterfaceInfo, dwClientInterfaceInfoSize, lpwsDLLPath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminTransportSetInfo(intptr_t hMprServer, uint32_t dwTransportId, uint8_t* pGlobalInfo, uint32_t dwGlobalInfoSize, uint8_t* pClientInterfaceInfo, uint32_t dwClientInterfaceInfoSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(dwTransportId);
        ORBIT_TRACK_PARAM(pGlobalInfo);
        ORBIT_TRACK_PARAM(dwGlobalInfoSize);
        ORBIT_TRACK_PARAM(pClientInterfaceInfo);
        ORBIT_TRACK_PARAM(dwClientInterfaceInfoSize);

        auto win32_impl_result = g_api_table.MprAdminTransportSetInfo(hMprServer, dwTransportId, pGlobalInfo, dwGlobalInfoSize, pClientInterfaceInfo, dwClientInterfaceInfoSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminTransportGetInfo(intptr_t hMprServer, uint32_t dwTransportId, uint8_t** ppGlobalInfo, uint32_t* lpdwGlobalInfoSize, uint8_t** ppClientInterfaceInfo, uint32_t* lpdwClientInterfaceInfoSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(dwTransportId);
        ORBIT_TRACK_PARAM(ppGlobalInfo);
        ORBIT_TRACK_PARAM(lpdwGlobalInfoSize);
        ORBIT_TRACK_PARAM(ppClientInterfaceInfo);
        ORBIT_TRACK_PARAM(lpdwClientInterfaceInfoSize);

        auto win32_impl_result = g_api_table.MprAdminTransportGetInfo(hMprServer, dwTransportId, ppGlobalInfo, lpdwGlobalInfoSize, ppClientInterfaceInfo, lpdwClientInterfaceInfoSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminDeviceEnum(intptr_t hMprServer, uint32_t dwLevel, uint8_t** lplpbBuffer, uint32_t* lpdwTotalEntries) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lplpbBuffer);
        ORBIT_TRACK_PARAM(lpdwTotalEntries);

        auto win32_impl_result = g_api_table.MprAdminDeviceEnum(hMprServer, dwLevel, lplpbBuffer, lpdwTotalEntries);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceGetHandle(intptr_t hMprServer, win32::Windows::Win32::Foundation::PWSTR lpwsInterfaceName, win32::Windows::Win32::Foundation::HANDLE* phInterface, win32::Windows::Win32::Foundation::BOOL fIncludeClientInterfaces) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(lpwsInterfaceName);
        ORBIT_TRACK_PARAM(phInterface);
        ORBIT_TRACK_PARAM(fIncludeClientInterfaces);

        auto win32_impl_result = g_api_table.MprAdminInterfaceGetHandle(hMprServer, lpwsInterfaceName, phInterface, fIncludeClientInterfaces);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceCreate(intptr_t hMprServer, uint32_t dwLevel, uint8_t* lpbBuffer, win32::Windows::Win32::Foundation::HANDLE* phInterface) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lpbBuffer);
        ORBIT_TRACK_PARAM(phInterface);

        auto win32_impl_result = g_api_table.MprAdminInterfaceCreate(hMprServer, dwLevel, lpbBuffer, phInterface);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceGetInfo(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hInterface, uint32_t dwLevel, uint8_t** lplpbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hInterface);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lplpbBuffer);

        auto win32_impl_result = g_api_table.MprAdminInterfaceGetInfo(hMprServer, hInterface, dwLevel, lplpbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceSetInfo(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hInterface, uint32_t dwLevel, uint8_t* lpbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hInterface);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lpbBuffer);

        auto win32_impl_result = g_api_table.MprAdminInterfaceSetInfo(hMprServer, hInterface, dwLevel, lpbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceDelete(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hInterface) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hInterface);

        auto win32_impl_result = g_api_table.MprAdminInterfaceDelete(hMprServer, hInterface);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceDeviceGetInfo(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hInterface, uint32_t dwIndex, uint32_t dwLevel, uint8_t** lplpBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hInterface);
        ORBIT_TRACK_PARAM(dwIndex);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lplpBuffer);

        auto win32_impl_result = g_api_table.MprAdminInterfaceDeviceGetInfo(hMprServer, hInterface, dwIndex, dwLevel, lplpBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceDeviceSetInfo(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hInterface, uint32_t dwIndex, uint32_t dwLevel, uint8_t* lpbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hInterface);
        ORBIT_TRACK_PARAM(dwIndex);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lpbBuffer);

        auto win32_impl_result = g_api_table.MprAdminInterfaceDeviceSetInfo(hMprServer, hInterface, dwIndex, dwLevel, lpbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceTransportRemove(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hInterface, uint32_t dwTransportId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hInterface);
        ORBIT_TRACK_PARAM(dwTransportId);

        auto win32_impl_result = g_api_table.MprAdminInterfaceTransportRemove(hMprServer, hInterface, dwTransportId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceTransportAdd(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hInterface, uint32_t dwTransportId, uint8_t* pInterfaceInfo, uint32_t dwInterfaceInfoSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hInterface);
        ORBIT_TRACK_PARAM(dwTransportId);
        ORBIT_TRACK_PARAM(pInterfaceInfo);
        ORBIT_TRACK_PARAM(dwInterfaceInfoSize);

        auto win32_impl_result = g_api_table.MprAdminInterfaceTransportAdd(hMprServer, hInterface, dwTransportId, pInterfaceInfo, dwInterfaceInfoSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceTransportGetInfo(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hInterface, uint32_t dwTransportId, uint8_t** ppInterfaceInfo, uint32_t* lpdwInterfaceInfoSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hInterface);
        ORBIT_TRACK_PARAM(dwTransportId);
        ORBIT_TRACK_PARAM(ppInterfaceInfo);
        ORBIT_TRACK_PARAM(lpdwInterfaceInfoSize);

        auto win32_impl_result = g_api_table.MprAdminInterfaceTransportGetInfo(hMprServer, hInterface, dwTransportId, ppInterfaceInfo, lpdwInterfaceInfoSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceTransportSetInfo(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hInterface, uint32_t dwTransportId, uint8_t* pInterfaceInfo, uint32_t dwInterfaceInfoSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hInterface);
        ORBIT_TRACK_PARAM(dwTransportId);
        ORBIT_TRACK_PARAM(pInterfaceInfo);
        ORBIT_TRACK_PARAM(dwInterfaceInfoSize);

        auto win32_impl_result = g_api_table.MprAdminInterfaceTransportSetInfo(hMprServer, hInterface, dwTransportId, pInterfaceInfo, dwInterfaceInfoSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceEnum(intptr_t hMprServer, uint32_t dwLevel, uint8_t** lplpbBuffer, uint32_t dwPrefMaxLen, uint32_t* lpdwEntriesRead, uint32_t* lpdwTotalEntries, uint32_t* lpdwResumeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lplpbBuffer);
        ORBIT_TRACK_PARAM(dwPrefMaxLen);
        ORBIT_TRACK_PARAM(lpdwEntriesRead);
        ORBIT_TRACK_PARAM(lpdwTotalEntries);
        ORBIT_TRACK_PARAM(lpdwResumeHandle);

        auto win32_impl_result = g_api_table.MprAdminInterfaceEnum(hMprServer, dwLevel, lplpbBuffer, dwPrefMaxLen, lpdwEntriesRead, lpdwTotalEntries, lpdwResumeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceSetCredentials(win32::Windows::Win32::Foundation::PWSTR lpwsServer, win32::Windows::Win32::Foundation::PWSTR lpwsInterfaceName, win32::Windows::Win32::Foundation::PWSTR lpwsUserName, win32::Windows::Win32::Foundation::PWSTR lpwsDomainName, win32::Windows::Win32::Foundation::PWSTR lpwsPassword) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpwsServer);
        ORBIT_TRACK_PARAM(lpwsInterfaceName);
        ORBIT_TRACK_PARAM(lpwsUserName);
        ORBIT_TRACK_PARAM(lpwsDomainName);
        ORBIT_TRACK_PARAM(lpwsPassword);

        auto win32_impl_result = g_api_table.MprAdminInterfaceSetCredentials(lpwsServer, lpwsInterfaceName, lpwsUserName, lpwsDomainName, lpwsPassword);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceGetCredentials(win32::Windows::Win32::Foundation::PWSTR lpwsServer, win32::Windows::Win32::Foundation::PWSTR lpwsInterfaceName, win32::Windows::Win32::Foundation::PWSTR lpwsUserName, win32::Windows::Win32::Foundation::PWSTR lpwsPassword, win32::Windows::Win32::Foundation::PWSTR lpwsDomainName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpwsServer);
        ORBIT_TRACK_PARAM(lpwsInterfaceName);
        ORBIT_TRACK_PARAM(lpwsUserName);
        ORBIT_TRACK_PARAM(lpwsPassword);
        ORBIT_TRACK_PARAM(lpwsDomainName);

        auto win32_impl_result = g_api_table.MprAdminInterfaceGetCredentials(lpwsServer, lpwsInterfaceName, lpwsUserName, lpwsPassword, lpwsDomainName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceSetCredentialsEx(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hInterface, uint32_t dwLevel, uint8_t* lpbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hInterface);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lpbBuffer);

        auto win32_impl_result = g_api_table.MprAdminInterfaceSetCredentialsEx(hMprServer, hInterface, dwLevel, lpbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceGetCredentialsEx(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hInterface, uint32_t dwLevel, uint8_t** lplpbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hInterface);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lplpbBuffer);

        auto win32_impl_result = g_api_table.MprAdminInterfaceGetCredentialsEx(hMprServer, hInterface, dwLevel, lplpbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceConnect(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hInterface, win32::Windows::Win32::Foundation::HANDLE hEvent, win32::Windows::Win32::Foundation::BOOL fSynchronous) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hInterface);
        ORBIT_TRACK_PARAM(hEvent);
        ORBIT_TRACK_PARAM(fSynchronous);

        auto win32_impl_result = g_api_table.MprAdminInterfaceConnect(hMprServer, hInterface, hEvent, fSynchronous);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceDisconnect(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hInterface) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hInterface);

        auto win32_impl_result = g_api_table.MprAdminInterfaceDisconnect(hMprServer, hInterface);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceUpdateRoutes(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hInterface, uint32_t dwProtocolId, win32::Windows::Win32::Foundation::HANDLE hEvent) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hInterface);
        ORBIT_TRACK_PARAM(dwProtocolId);
        ORBIT_TRACK_PARAM(hEvent);

        auto win32_impl_result = g_api_table.MprAdminInterfaceUpdateRoutes(hMprServer, hInterface, dwProtocolId, hEvent);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceQueryUpdateResult(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hInterface, uint32_t dwProtocolId, uint32_t* lpdwUpdateResult) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hInterface);
        ORBIT_TRACK_PARAM(dwProtocolId);
        ORBIT_TRACK_PARAM(lpdwUpdateResult);

        auto win32_impl_result = g_api_table.MprAdminInterfaceQueryUpdateResult(hMprServer, hInterface, dwProtocolId, lpdwUpdateResult);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminInterfaceUpdatePhonebookInfo(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hInterface) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hInterface);

        auto win32_impl_result = g_api_table.MprAdminInterfaceUpdatePhonebookInfo(hMprServer, hInterface);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminRegisterConnectionNotification(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hEventNotification) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hEventNotification);

        auto win32_impl_result = g_api_table.MprAdminRegisterConnectionNotification(hMprServer, hEventNotification);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminDeregisterConnectionNotification(intptr_t hMprServer, win32::Windows::Win32::Foundation::HANDLE hEventNotification) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(hEventNotification);

        auto win32_impl_result = g_api_table.MprAdminDeregisterConnectionNotification(hMprServer, hEventNotification);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminMIBServerConnect(win32::Windows::Win32::Foundation::PWSTR lpwsServerName, intptr_t* phMibServer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpwsServerName);
        ORBIT_TRACK_PARAM(phMibServer);

        auto win32_impl_result = g_api_table.MprAdminMIBServerConnect(lpwsServerName, phMibServer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_MprAdminMIBServerDisconnect(intptr_t hMibServer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMibServer);

        g_api_table.MprAdminMIBServerDisconnect(hMibServer);
        
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminMIBEntryCreate(intptr_t hMibServer, uint32_t dwPid, uint32_t dwRoutingPid, void* lpEntry, uint32_t dwEntrySize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMibServer);
        ORBIT_TRACK_PARAM(dwPid);
        ORBIT_TRACK_PARAM(dwRoutingPid);
        ORBIT_TRACK_PARAM(lpEntry);
        ORBIT_TRACK_PARAM(dwEntrySize);

        auto win32_impl_result = g_api_table.MprAdminMIBEntryCreate(hMibServer, dwPid, dwRoutingPid, lpEntry, dwEntrySize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminMIBEntryDelete(intptr_t hMibServer, uint32_t dwProtocolId, uint32_t dwRoutingPid, void* lpEntry, uint32_t dwEntrySize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMibServer);
        ORBIT_TRACK_PARAM(dwProtocolId);
        ORBIT_TRACK_PARAM(dwRoutingPid);
        ORBIT_TRACK_PARAM(lpEntry);
        ORBIT_TRACK_PARAM(dwEntrySize);

        auto win32_impl_result = g_api_table.MprAdminMIBEntryDelete(hMibServer, dwProtocolId, dwRoutingPid, lpEntry, dwEntrySize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminMIBEntrySet(intptr_t hMibServer, uint32_t dwProtocolId, uint32_t dwRoutingPid, void* lpEntry, uint32_t dwEntrySize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMibServer);
        ORBIT_TRACK_PARAM(dwProtocolId);
        ORBIT_TRACK_PARAM(dwRoutingPid);
        ORBIT_TRACK_PARAM(lpEntry);
        ORBIT_TRACK_PARAM(dwEntrySize);

        auto win32_impl_result = g_api_table.MprAdminMIBEntrySet(hMibServer, dwProtocolId, dwRoutingPid, lpEntry, dwEntrySize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminMIBEntryGet(intptr_t hMibServer, uint32_t dwProtocolId, uint32_t dwRoutingPid, void* lpInEntry, uint32_t dwInEntrySize, void** lplpOutEntry, uint32_t* lpOutEntrySize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMibServer);
        ORBIT_TRACK_PARAM(dwProtocolId);
        ORBIT_TRACK_PARAM(dwRoutingPid);
        ORBIT_TRACK_PARAM(lpInEntry);
        ORBIT_TRACK_PARAM(dwInEntrySize);
        ORBIT_TRACK_PARAM(lplpOutEntry);
        ORBIT_TRACK_PARAM(lpOutEntrySize);

        auto win32_impl_result = g_api_table.MprAdminMIBEntryGet(hMibServer, dwProtocolId, dwRoutingPid, lpInEntry, dwInEntrySize, lplpOutEntry, lpOutEntrySize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminMIBEntryGetFirst(intptr_t hMibServer, uint32_t dwProtocolId, uint32_t dwRoutingPid, void* lpInEntry, uint32_t dwInEntrySize, void** lplpOutEntry, uint32_t* lpOutEntrySize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMibServer);
        ORBIT_TRACK_PARAM(dwProtocolId);
        ORBIT_TRACK_PARAM(dwRoutingPid);
        ORBIT_TRACK_PARAM(lpInEntry);
        ORBIT_TRACK_PARAM(dwInEntrySize);
        ORBIT_TRACK_PARAM(lplpOutEntry);
        ORBIT_TRACK_PARAM(lpOutEntrySize);

        auto win32_impl_result = g_api_table.MprAdminMIBEntryGetFirst(hMibServer, dwProtocolId, dwRoutingPid, lpInEntry, dwInEntrySize, lplpOutEntry, lpOutEntrySize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminMIBEntryGetNext(intptr_t hMibServer, uint32_t dwProtocolId, uint32_t dwRoutingPid, void* lpInEntry, uint32_t dwInEntrySize, void** lplpOutEntry, uint32_t* lpOutEntrySize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMibServer);
        ORBIT_TRACK_PARAM(dwProtocolId);
        ORBIT_TRACK_PARAM(dwRoutingPid);
        ORBIT_TRACK_PARAM(lpInEntry);
        ORBIT_TRACK_PARAM(dwInEntrySize);
        ORBIT_TRACK_PARAM(lplpOutEntry);
        ORBIT_TRACK_PARAM(lpOutEntrySize);

        auto win32_impl_result = g_api_table.MprAdminMIBEntryGetNext(hMibServer, dwProtocolId, dwRoutingPid, lpInEntry, dwInEntrySize, lplpOutEntry, lpOutEntrySize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprAdminMIBBufferFree(void* pBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pBuffer);

        auto win32_impl_result = g_api_table.MprAdminMIBBufferFree(pBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigServerInstall(uint32_t dwLevel, void* pBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(pBuffer);

        auto win32_impl_result = g_api_table.MprConfigServerInstall(dwLevel, pBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigServerConnect(win32::Windows::Win32::Foundation::PWSTR lpwsServerName, win32::Windows::Win32::Foundation::HANDLE* phMprConfig) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpwsServerName);
        ORBIT_TRACK_PARAM(phMprConfig);

        auto win32_impl_result = g_api_table.MprConfigServerConnect(lpwsServerName, phMprConfig);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_MprConfigServerDisconnect(win32::Windows::Win32::Foundation::HANDLE hMprConfig) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);

        g_api_table.MprConfigServerDisconnect(hMprConfig);
        
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigServerRefresh(win32::Windows::Win32::Foundation::HANDLE hMprConfig) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);

        auto win32_impl_result = g_api_table.MprConfigServerRefresh(hMprConfig);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigBufferFree(void* pBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pBuffer);

        auto win32_impl_result = g_api_table.MprConfigBufferFree(pBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigServerGetInfo(win32::Windows::Win32::Foundation::HANDLE hMprConfig, uint32_t dwLevel, uint8_t** lplpbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lplpbBuffer);

        auto win32_impl_result = g_api_table.MprConfigServerGetInfo(hMprConfig, dwLevel, lplpbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigServerSetInfo(intptr_t hMprServer, uint32_t dwLevel, uint8_t* lpbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprServer);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lpbBuffer);

        auto win32_impl_result = g_api_table.MprConfigServerSetInfo(hMprServer, dwLevel, lpbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigServerBackup(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::PWSTR lpwsPath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(lpwsPath);

        auto win32_impl_result = g_api_table.MprConfigServerBackup(hMprConfig, lpwsPath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigServerRestore(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::PWSTR lpwsPath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(lpwsPath);

        auto win32_impl_result = g_api_table.MprConfigServerRestore(hMprConfig, lpwsPath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigTransportCreate(win32::Windows::Win32::Foundation::HANDLE hMprConfig, uint32_t dwTransportId, win32::Windows::Win32::Foundation::PWSTR lpwsTransportName, uint8_t* pGlobalInfo, uint32_t dwGlobalInfoSize, uint8_t* pClientInterfaceInfo, uint32_t dwClientInterfaceInfoSize, win32::Windows::Win32::Foundation::PWSTR lpwsDLLPath, win32::Windows::Win32::Foundation::HANDLE* phRouterTransport) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(dwTransportId);
        ORBIT_TRACK_PARAM(lpwsTransportName);
        ORBIT_TRACK_PARAM(pGlobalInfo);
        ORBIT_TRACK_PARAM(dwGlobalInfoSize);
        ORBIT_TRACK_PARAM(pClientInterfaceInfo);
        ORBIT_TRACK_PARAM(dwClientInterfaceInfoSize);
        ORBIT_TRACK_PARAM(lpwsDLLPath);
        ORBIT_TRACK_PARAM(phRouterTransport);

        auto win32_impl_result = g_api_table.MprConfigTransportCreate(hMprConfig, dwTransportId, lpwsTransportName, pGlobalInfo, dwGlobalInfoSize, pClientInterfaceInfo, dwClientInterfaceInfoSize, lpwsDLLPath, phRouterTransport);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigTransportDelete(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::HANDLE hRouterTransport) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(hRouterTransport);

        auto win32_impl_result = g_api_table.MprConfigTransportDelete(hMprConfig, hRouterTransport);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigTransportGetHandle(win32::Windows::Win32::Foundation::HANDLE hMprConfig, uint32_t dwTransportId, win32::Windows::Win32::Foundation::HANDLE* phRouterTransport) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(dwTransportId);
        ORBIT_TRACK_PARAM(phRouterTransport);

        auto win32_impl_result = g_api_table.MprConfigTransportGetHandle(hMprConfig, dwTransportId, phRouterTransport);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigTransportSetInfo(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::HANDLE hRouterTransport, uint8_t* pGlobalInfo, uint32_t dwGlobalInfoSize, uint8_t* pClientInterfaceInfo, uint32_t dwClientInterfaceInfoSize, win32::Windows::Win32::Foundation::PWSTR lpwsDLLPath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(hRouterTransport);
        ORBIT_TRACK_PARAM(pGlobalInfo);
        ORBIT_TRACK_PARAM(dwGlobalInfoSize);
        ORBIT_TRACK_PARAM(pClientInterfaceInfo);
        ORBIT_TRACK_PARAM(dwClientInterfaceInfoSize);
        ORBIT_TRACK_PARAM(lpwsDLLPath);

        auto win32_impl_result = g_api_table.MprConfigTransportSetInfo(hMprConfig, hRouterTransport, pGlobalInfo, dwGlobalInfoSize, pClientInterfaceInfo, dwClientInterfaceInfoSize, lpwsDLLPath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigTransportGetInfo(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::HANDLE hRouterTransport, uint8_t** ppGlobalInfo, uint32_t* lpdwGlobalInfoSize, uint8_t** ppClientInterfaceInfo, uint32_t* lpdwClientInterfaceInfoSize, win32::Windows::Win32::Foundation::PWSTR* lplpwsDLLPath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(hRouterTransport);
        ORBIT_TRACK_PARAM(ppGlobalInfo);
        ORBIT_TRACK_PARAM(lpdwGlobalInfoSize);
        ORBIT_TRACK_PARAM(ppClientInterfaceInfo);
        ORBIT_TRACK_PARAM(lpdwClientInterfaceInfoSize);
        ORBIT_TRACK_PARAM(lplpwsDLLPath);

        auto win32_impl_result = g_api_table.MprConfigTransportGetInfo(hMprConfig, hRouterTransport, ppGlobalInfo, lpdwGlobalInfoSize, ppClientInterfaceInfo, lpdwClientInterfaceInfoSize, lplpwsDLLPath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigTransportEnum(win32::Windows::Win32::Foundation::HANDLE hMprConfig, uint32_t dwLevel, uint8_t** lplpBuffer, uint32_t dwPrefMaxLen, uint32_t* lpdwEntriesRead, uint32_t* lpdwTotalEntries, uint32_t* lpdwResumeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lplpBuffer);
        ORBIT_TRACK_PARAM(dwPrefMaxLen);
        ORBIT_TRACK_PARAM(lpdwEntriesRead);
        ORBIT_TRACK_PARAM(lpdwTotalEntries);
        ORBIT_TRACK_PARAM(lpdwResumeHandle);

        auto win32_impl_result = g_api_table.MprConfigTransportEnum(hMprConfig, dwLevel, lplpBuffer, dwPrefMaxLen, lpdwEntriesRead, lpdwTotalEntries, lpdwResumeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigInterfaceCreate(win32::Windows::Win32::Foundation::HANDLE hMprConfig, uint32_t dwLevel, uint8_t* lpbBuffer, win32::Windows::Win32::Foundation::HANDLE* phRouterInterface) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lpbBuffer);
        ORBIT_TRACK_PARAM(phRouterInterface);

        auto win32_impl_result = g_api_table.MprConfigInterfaceCreate(hMprConfig, dwLevel, lpbBuffer, phRouterInterface);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigInterfaceDelete(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::HANDLE hRouterInterface) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(hRouterInterface);

        auto win32_impl_result = g_api_table.MprConfigInterfaceDelete(hMprConfig, hRouterInterface);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigInterfaceGetHandle(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::PWSTR lpwsInterfaceName, win32::Windows::Win32::Foundation::HANDLE* phRouterInterface) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(lpwsInterfaceName);
        ORBIT_TRACK_PARAM(phRouterInterface);

        auto win32_impl_result = g_api_table.MprConfigInterfaceGetHandle(hMprConfig, lpwsInterfaceName, phRouterInterface);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigInterfaceGetInfo(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::HANDLE hRouterInterface, uint32_t dwLevel, uint8_t** lplpBuffer, uint32_t* lpdwBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(hRouterInterface);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lplpBuffer);
        ORBIT_TRACK_PARAM(lpdwBufferSize);

        auto win32_impl_result = g_api_table.MprConfigInterfaceGetInfo(hMprConfig, hRouterInterface, dwLevel, lplpBuffer, lpdwBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigInterfaceSetInfo(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::HANDLE hRouterInterface, uint32_t dwLevel, uint8_t* lpbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(hRouterInterface);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lpbBuffer);

        auto win32_impl_result = g_api_table.MprConfigInterfaceSetInfo(hMprConfig, hRouterInterface, dwLevel, lpbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigInterfaceEnum(win32::Windows::Win32::Foundation::HANDLE hMprConfig, uint32_t dwLevel, uint8_t** lplpBuffer, uint32_t dwPrefMaxLen, uint32_t* lpdwEntriesRead, uint32_t* lpdwTotalEntries, uint32_t* lpdwResumeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lplpBuffer);
        ORBIT_TRACK_PARAM(dwPrefMaxLen);
        ORBIT_TRACK_PARAM(lpdwEntriesRead);
        ORBIT_TRACK_PARAM(lpdwTotalEntries);
        ORBIT_TRACK_PARAM(lpdwResumeHandle);

        auto win32_impl_result = g_api_table.MprConfigInterfaceEnum(hMprConfig, dwLevel, lplpBuffer, dwPrefMaxLen, lpdwEntriesRead, lpdwTotalEntries, lpdwResumeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigInterfaceTransportAdd(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::HANDLE hRouterInterface, uint32_t dwTransportId, win32::Windows::Win32::Foundation::PWSTR lpwsTransportName, uint8_t* pInterfaceInfo, uint32_t dwInterfaceInfoSize, win32::Windows::Win32::Foundation::HANDLE* phRouterIfTransport) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(hRouterInterface);
        ORBIT_TRACK_PARAM(dwTransportId);
        ORBIT_TRACK_PARAM(lpwsTransportName);
        ORBIT_TRACK_PARAM(pInterfaceInfo);
        ORBIT_TRACK_PARAM(dwInterfaceInfoSize);
        ORBIT_TRACK_PARAM(phRouterIfTransport);

        auto win32_impl_result = g_api_table.MprConfigInterfaceTransportAdd(hMprConfig, hRouterInterface, dwTransportId, lpwsTransportName, pInterfaceInfo, dwInterfaceInfoSize, phRouterIfTransport);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigInterfaceTransportRemove(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::HANDLE hRouterInterface, win32::Windows::Win32::Foundation::HANDLE hRouterIfTransport) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(hRouterInterface);
        ORBIT_TRACK_PARAM(hRouterIfTransport);

        auto win32_impl_result = g_api_table.MprConfigInterfaceTransportRemove(hMprConfig, hRouterInterface, hRouterIfTransport);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigInterfaceTransportGetHandle(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::HANDLE hRouterInterface, uint32_t dwTransportId, win32::Windows::Win32::Foundation::HANDLE* phRouterIfTransport) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(hRouterInterface);
        ORBIT_TRACK_PARAM(dwTransportId);
        ORBIT_TRACK_PARAM(phRouterIfTransport);

        auto win32_impl_result = g_api_table.MprConfigInterfaceTransportGetHandle(hMprConfig, hRouterInterface, dwTransportId, phRouterIfTransport);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigInterfaceTransportGetInfo(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::HANDLE hRouterInterface, win32::Windows::Win32::Foundation::HANDLE hRouterIfTransport, uint8_t** ppInterfaceInfo, uint32_t* lpdwInterfaceInfoSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(hRouterInterface);
        ORBIT_TRACK_PARAM(hRouterIfTransport);
        ORBIT_TRACK_PARAM(ppInterfaceInfo);
        ORBIT_TRACK_PARAM(lpdwInterfaceInfoSize);

        auto win32_impl_result = g_api_table.MprConfigInterfaceTransportGetInfo(hMprConfig, hRouterInterface, hRouterIfTransport, ppInterfaceInfo, lpdwInterfaceInfoSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigInterfaceTransportSetInfo(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::HANDLE hRouterInterface, win32::Windows::Win32::Foundation::HANDLE hRouterIfTransport, uint8_t* pInterfaceInfo, uint32_t dwInterfaceInfoSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(hRouterInterface);
        ORBIT_TRACK_PARAM(hRouterIfTransport);
        ORBIT_TRACK_PARAM(pInterfaceInfo);
        ORBIT_TRACK_PARAM(dwInterfaceInfoSize);

        auto win32_impl_result = g_api_table.MprConfigInterfaceTransportSetInfo(hMprConfig, hRouterInterface, hRouterIfTransport, pInterfaceInfo, dwInterfaceInfoSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigInterfaceTransportEnum(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::HANDLE hRouterInterface, uint32_t dwLevel, uint8_t** lplpBuffer, uint32_t dwPrefMaxLen, uint32_t* lpdwEntriesRead, uint32_t* lpdwTotalEntries, uint32_t* lpdwResumeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(hRouterInterface);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lplpBuffer);
        ORBIT_TRACK_PARAM(dwPrefMaxLen);
        ORBIT_TRACK_PARAM(lpdwEntriesRead);
        ORBIT_TRACK_PARAM(lpdwTotalEntries);
        ORBIT_TRACK_PARAM(lpdwResumeHandle);

        auto win32_impl_result = g_api_table.MprConfigInterfaceTransportEnum(hMprConfig, hRouterInterface, dwLevel, lplpBuffer, dwPrefMaxLen, lpdwEntriesRead, lpdwTotalEntries, lpdwResumeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigGetFriendlyName(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::PWSTR pszGuidName, win32::Windows::Win32::Foundation::PWSTR pszBuffer, uint32_t dwBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(pszGuidName);
        ORBIT_TRACK_PARAM(pszBuffer);
        ORBIT_TRACK_PARAM(dwBufferSize);

        auto win32_impl_result = g_api_table.MprConfigGetFriendlyName(hMprConfig, pszGuidName, pszBuffer, dwBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigGetGuidName(win32::Windows::Win32::Foundation::HANDLE hMprConfig, win32::Windows::Win32::Foundation::PWSTR pszFriendlyName, win32::Windows::Win32::Foundation::PWSTR pszBuffer, uint32_t dwBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(pszFriendlyName);
        ORBIT_TRACK_PARAM(pszBuffer);
        ORBIT_TRACK_PARAM(dwBufferSize);

        auto win32_impl_result = g_api_table.MprConfigGetGuidName(hMprConfig, pszFriendlyName, pszBuffer, dwBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigFilterGetInfo(win32::Windows::Win32::Foundation::HANDLE hMprConfig, uint32_t dwLevel, uint32_t dwTransportId, uint8_t* lpBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(dwTransportId);
        ORBIT_TRACK_PARAM(lpBuffer);

        auto win32_impl_result = g_api_table.MprConfigFilterGetInfo(hMprConfig, dwLevel, dwTransportId, lpBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprConfigFilterSetInfo(win32::Windows::Win32::Foundation::HANDLE hMprConfig, uint32_t dwLevel, uint32_t dwTransportId, uint8_t* lpBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMprConfig);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(dwTransportId);
        ORBIT_TRACK_PARAM(lpBuffer);

        auto win32_impl_result = g_api_table.MprConfigFilterSetInfo(hMprConfig, dwLevel, dwTransportId, lpBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprInfoCreate(uint32_t dwVersion, void** lplpNewHeader) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwVersion);
        ORBIT_TRACK_PARAM(lplpNewHeader);

        auto win32_impl_result = g_api_table.MprInfoCreate(dwVersion, lplpNewHeader);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprInfoDelete(void* lpHeader) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpHeader);

        auto win32_impl_result = g_api_table.MprInfoDelete(lpHeader);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprInfoRemoveAll(void* lpHeader, void** lplpNewHeader) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpHeader);
        ORBIT_TRACK_PARAM(lplpNewHeader);

        auto win32_impl_result = g_api_table.MprInfoRemoveAll(lpHeader, lplpNewHeader);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprInfoDuplicate(void* lpHeader, void** lplpNewHeader) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpHeader);
        ORBIT_TRACK_PARAM(lplpNewHeader);

        auto win32_impl_result = g_api_table.MprInfoDuplicate(lpHeader, lplpNewHeader);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprInfoBlockAdd(void* lpHeader, uint32_t dwInfoType, uint32_t dwItemSize, uint32_t dwItemCount, uint8_t* lpItemData, void** lplpNewHeader) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpHeader);
        ORBIT_TRACK_PARAM(dwInfoType);
        ORBIT_TRACK_PARAM(dwItemSize);
        ORBIT_TRACK_PARAM(dwItemCount);
        ORBIT_TRACK_PARAM(lpItemData);
        ORBIT_TRACK_PARAM(lplpNewHeader);

        auto win32_impl_result = g_api_table.MprInfoBlockAdd(lpHeader, dwInfoType, dwItemSize, dwItemCount, lpItemData, lplpNewHeader);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprInfoBlockRemove(void* lpHeader, uint32_t dwInfoType, void** lplpNewHeader) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpHeader);
        ORBIT_TRACK_PARAM(dwInfoType);
        ORBIT_TRACK_PARAM(lplpNewHeader);

        auto win32_impl_result = g_api_table.MprInfoBlockRemove(lpHeader, dwInfoType, lplpNewHeader);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprInfoBlockSet(void* lpHeader, uint32_t dwInfoType, uint32_t dwItemSize, uint32_t dwItemCount, uint8_t* lpItemData, void** lplpNewHeader) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpHeader);
        ORBIT_TRACK_PARAM(dwInfoType);
        ORBIT_TRACK_PARAM(dwItemSize);
        ORBIT_TRACK_PARAM(dwItemCount);
        ORBIT_TRACK_PARAM(lpItemData);
        ORBIT_TRACK_PARAM(lplpNewHeader);

        auto win32_impl_result = g_api_table.MprInfoBlockSet(lpHeader, dwInfoType, dwItemSize, dwItemCount, lpItemData, lplpNewHeader);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprInfoBlockFind(void* lpHeader, uint32_t dwInfoType, uint32_t* lpdwItemSize, uint32_t* lpdwItemCount, uint8_t** lplpItemData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpHeader);
        ORBIT_TRACK_PARAM(dwInfoType);
        ORBIT_TRACK_PARAM(lpdwItemSize);
        ORBIT_TRACK_PARAM(lpdwItemCount);
        ORBIT_TRACK_PARAM(lplpItemData);

        auto win32_impl_result = g_api_table.MprInfoBlockFind(lpHeader, dwInfoType, lpdwItemSize, lpdwItemCount, lplpItemData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MprInfoBlockQuerySize(void* lpHeader) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpHeader);

        auto win32_impl_result = g_api_table.MprInfoBlockQuerySize(lpHeader);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MgmRegisterMProtocol(win32::Windows::Win32::NetworkManagement::Rras::ROUTING_PROTOCOL_CONFIG* prpiInfo, uint32_t dwProtocolId, uint32_t dwComponentId, win32::Windows::Win32::Foundation::HANDLE* phProtocol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(prpiInfo);
        ORBIT_TRACK_PARAM(dwProtocolId);
        ORBIT_TRACK_PARAM(dwComponentId);
        ORBIT_TRACK_PARAM(phProtocol);

        auto win32_impl_result = g_api_table.MgmRegisterMProtocol(prpiInfo, dwProtocolId, dwComponentId, phProtocol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MgmDeRegisterMProtocol(win32::Windows::Win32::Foundation::HANDLE hProtocol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProtocol);

        auto win32_impl_result = g_api_table.MgmDeRegisterMProtocol(hProtocol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MgmTakeInterfaceOwnership(win32::Windows::Win32::Foundation::HANDLE hProtocol, uint32_t dwIfIndex, uint32_t dwIfNextHopAddr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProtocol);
        ORBIT_TRACK_PARAM(dwIfIndex);
        ORBIT_TRACK_PARAM(dwIfNextHopAddr);

        auto win32_impl_result = g_api_table.MgmTakeInterfaceOwnership(hProtocol, dwIfIndex, dwIfNextHopAddr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MgmReleaseInterfaceOwnership(win32::Windows::Win32::Foundation::HANDLE hProtocol, uint32_t dwIfIndex, uint32_t dwIfNextHopAddr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProtocol);
        ORBIT_TRACK_PARAM(dwIfIndex);
        ORBIT_TRACK_PARAM(dwIfNextHopAddr);

        auto win32_impl_result = g_api_table.MgmReleaseInterfaceOwnership(hProtocol, dwIfIndex, dwIfNextHopAddr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MgmGetProtocolOnInterface(uint32_t dwIfIndex, uint32_t dwIfNextHopAddr, uint32_t* pdwIfProtocolId, uint32_t* pdwIfComponentId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwIfIndex);
        ORBIT_TRACK_PARAM(dwIfNextHopAddr);
        ORBIT_TRACK_PARAM(pdwIfProtocolId);
        ORBIT_TRACK_PARAM(pdwIfComponentId);

        auto win32_impl_result = g_api_table.MgmGetProtocolOnInterface(dwIfIndex, dwIfNextHopAddr, pdwIfProtocolId, pdwIfComponentId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MgmAddGroupMembershipEntry(win32::Windows::Win32::Foundation::HANDLE hProtocol, uint32_t dwSourceAddr, uint32_t dwSourceMask, uint32_t dwGroupAddr, uint32_t dwGroupMask, uint32_t dwIfIndex, uint32_t dwIfNextHopIPAddr, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProtocol);
        ORBIT_TRACK_PARAM(dwSourceAddr);
        ORBIT_TRACK_PARAM(dwSourceMask);
        ORBIT_TRACK_PARAM(dwGroupAddr);
        ORBIT_TRACK_PARAM(dwGroupMask);
        ORBIT_TRACK_PARAM(dwIfIndex);
        ORBIT_TRACK_PARAM(dwIfNextHopIPAddr);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.MgmAddGroupMembershipEntry(hProtocol, dwSourceAddr, dwSourceMask, dwGroupAddr, dwGroupMask, dwIfIndex, dwIfNextHopIPAddr, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MgmDeleteGroupMembershipEntry(win32::Windows::Win32::Foundation::HANDLE hProtocol, uint32_t dwSourceAddr, uint32_t dwSourceMask, uint32_t dwGroupAddr, uint32_t dwGroupMask, uint32_t dwIfIndex, uint32_t dwIfNextHopIPAddr, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProtocol);
        ORBIT_TRACK_PARAM(dwSourceAddr);
        ORBIT_TRACK_PARAM(dwSourceMask);
        ORBIT_TRACK_PARAM(dwGroupAddr);
        ORBIT_TRACK_PARAM(dwGroupMask);
        ORBIT_TRACK_PARAM(dwIfIndex);
        ORBIT_TRACK_PARAM(dwIfNextHopIPAddr);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.MgmDeleteGroupMembershipEntry(hProtocol, dwSourceAddr, dwSourceMask, dwGroupAddr, dwGroupMask, dwIfIndex, dwIfNextHopIPAddr, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MgmGetMfe(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPMCAST_MFE* pimm, uint32_t* pdwBufferSize, uint8_t* pbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pimm);
        ORBIT_TRACK_PARAM(pdwBufferSize);
        ORBIT_TRACK_PARAM(pbBuffer);

        auto win32_impl_result = g_api_table.MgmGetMfe(pimm, pdwBufferSize, pbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MgmGetFirstMfe(uint32_t* pdwBufferSize, uint8_t* pbBuffer, uint32_t* pdwNumEntries) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdwBufferSize);
        ORBIT_TRACK_PARAM(pbBuffer);
        ORBIT_TRACK_PARAM(pdwNumEntries);

        auto win32_impl_result = g_api_table.MgmGetFirstMfe(pdwBufferSize, pbBuffer, pdwNumEntries);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MgmGetNextMfe(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPMCAST_MFE* pimmStart, uint32_t* pdwBufferSize, uint8_t* pbBuffer, uint32_t* pdwNumEntries) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pimmStart);
        ORBIT_TRACK_PARAM(pdwBufferSize);
        ORBIT_TRACK_PARAM(pbBuffer);
        ORBIT_TRACK_PARAM(pdwNumEntries);

        auto win32_impl_result = g_api_table.MgmGetNextMfe(pimmStart, pdwBufferSize, pbBuffer, pdwNumEntries);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MgmGetMfeStats(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPMCAST_MFE* pimm, uint32_t* pdwBufferSize, uint8_t* pbBuffer, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pimm);
        ORBIT_TRACK_PARAM(pdwBufferSize);
        ORBIT_TRACK_PARAM(pbBuffer);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.MgmGetMfeStats(pimm, pdwBufferSize, pbBuffer, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MgmGetFirstMfeStats(uint32_t* pdwBufferSize, uint8_t* pbBuffer, uint32_t* pdwNumEntries, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdwBufferSize);
        ORBIT_TRACK_PARAM(pbBuffer);
        ORBIT_TRACK_PARAM(pdwNumEntries);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.MgmGetFirstMfeStats(pdwBufferSize, pbBuffer, pdwNumEntries, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MgmGetNextMfeStats(win32::Windows::Win32::NetworkManagement::IpHelper::MIB_IPMCAST_MFE* pimmStart, uint32_t* pdwBufferSize, uint8_t* pbBuffer, uint32_t* pdwNumEntries, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pimmStart);
        ORBIT_TRACK_PARAM(pdwBufferSize);
        ORBIT_TRACK_PARAM(pbBuffer);
        ORBIT_TRACK_PARAM(pdwNumEntries);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.MgmGetNextMfeStats(pimmStart, pdwBufferSize, pbBuffer, pdwNumEntries, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MgmGroupEnumerationStart(win32::Windows::Win32::Foundation::HANDLE hProtocol, win32::Windows::Win32::NetworkManagement::Rras::MGM_ENUM_TYPES metEnumType, win32::Windows::Win32::Foundation::HANDLE* phEnumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProtocol);
        ORBIT_TRACK_PARAM(metEnumType);
        ORBIT_TRACK_PARAM(phEnumHandle);

        auto win32_impl_result = g_api_table.MgmGroupEnumerationStart(hProtocol, metEnumType, phEnumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MgmGroupEnumerationGetNext(win32::Windows::Win32::Foundation::HANDLE hEnum, uint32_t* pdwBufferSize, uint8_t* pbBuffer, uint32_t* pdwNumEntries) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hEnum);
        ORBIT_TRACK_PARAM(pdwBufferSize);
        ORBIT_TRACK_PARAM(pbBuffer);
        ORBIT_TRACK_PARAM(pdwNumEntries);

        auto win32_impl_result = g_api_table.MgmGroupEnumerationGetNext(hEnum, pdwBufferSize, pbBuffer, pdwNumEntries);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MgmGroupEnumerationEnd(win32::Windows::Win32::Foundation::HANDLE hEnum) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hEnum);

        auto win32_impl_result = g_api_table.MgmGroupEnumerationEnd(hEnum);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmConvertNetAddressToIpv6AddressAndLength(win32::Windows::Win32::NetworkManagement::Rras::RTM_NET_ADDRESS* pNetAddress, win32::Windows::Win32::Networking::WinSock::IN6_ADDR* pAddress, uint32_t* pLength, uint32_t dwAddressSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pNetAddress);
        ORBIT_TRACK_PARAM(pAddress);
        ORBIT_TRACK_PARAM(pLength);
        ORBIT_TRACK_PARAM(dwAddressSize);

        auto win32_impl_result = g_api_table.RtmConvertNetAddressToIpv6AddressAndLength(pNetAddress, pAddress, pLength, dwAddressSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmConvertIpv6AddressAndLengthToNetAddress(win32::Windows::Win32::NetworkManagement::Rras::RTM_NET_ADDRESS* pNetAddress, win32::Windows::Win32::Networking::WinSock::IN6_ADDR Address, uint32_t dwLength, uint32_t dwAddressSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pNetAddress);
        ORBIT_TRACK_PARAM(Address);
        ORBIT_TRACK_PARAM(dwLength);
        ORBIT_TRACK_PARAM(dwAddressSize);

        auto win32_impl_result = g_api_table.RtmConvertIpv6AddressAndLengthToNetAddress(pNetAddress, Address, dwLength, dwAddressSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmRegisterEntity(win32::Windows::Win32::NetworkManagement::Rras::RTM_ENTITY_INFO* RtmEntityInfo, win32::Windows::Win32::NetworkManagement::Rras::RTM_ENTITY_EXPORT_METHODS* ExportMethods, win32::Windows::Win32::NetworkManagement::Rras::RTM_EVENT_CALLBACK* EventCallback, win32::Windows::Win32::Foundation::BOOL ReserveOpaquePointer, win32::Windows::Win32::NetworkManagement::Rras::RTM_REGN_PROFILE* RtmRegProfile, intptr_t* RtmRegHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmEntityInfo);
        ORBIT_TRACK_PARAM(ExportMethods);
        ORBIT_TRACK_PARAM(EventCallback);
        ORBIT_TRACK_PARAM(ReserveOpaquePointer);
        ORBIT_TRACK_PARAM(RtmRegProfile);
        ORBIT_TRACK_PARAM(RtmRegHandle);

        auto win32_impl_result = g_api_table.RtmRegisterEntity(RtmEntityInfo, ExportMethods, EventCallback, ReserveOpaquePointer, RtmRegProfile, RtmRegHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmDeregisterEntity(intptr_t RtmRegHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);

        auto win32_impl_result = g_api_table.RtmDeregisterEntity(RtmRegHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetRegisteredEntities(intptr_t RtmRegHandle, uint32_t* NumEntities, intptr_t* EntityHandles, win32::Windows::Win32::NetworkManagement::Rras::RTM_ENTITY_INFO* EntityInfos) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NumEntities);
        ORBIT_TRACK_PARAM(EntityHandles);
        ORBIT_TRACK_PARAM(EntityInfos);

        auto win32_impl_result = g_api_table.RtmGetRegisteredEntities(RtmRegHandle, NumEntities, EntityHandles, EntityInfos);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmReleaseEntities(intptr_t RtmRegHandle, uint32_t NumEntities, intptr_t* EntityHandles) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NumEntities);
        ORBIT_TRACK_PARAM(EntityHandles);

        auto win32_impl_result = g_api_table.RtmReleaseEntities(RtmRegHandle, NumEntities, EntityHandles);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmLockDestination(intptr_t RtmRegHandle, intptr_t DestHandle, win32::Windows::Win32::Foundation::BOOL Exclusive, win32::Windows::Win32::Foundation::BOOL LockDest) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(DestHandle);
        ORBIT_TRACK_PARAM(Exclusive);
        ORBIT_TRACK_PARAM(LockDest);

        auto win32_impl_result = g_api_table.RtmLockDestination(RtmRegHandle, DestHandle, Exclusive, LockDest);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetOpaqueInformationPointer(intptr_t RtmRegHandle, intptr_t DestHandle, void** OpaqueInfoPointer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(DestHandle);
        ORBIT_TRACK_PARAM(OpaqueInfoPointer);

        auto win32_impl_result = g_api_table.RtmGetOpaqueInformationPointer(RtmRegHandle, DestHandle, OpaqueInfoPointer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetEntityMethods(intptr_t RtmRegHandle, intptr_t EntityHandle, uint32_t* NumMethods, win32::Windows::Win32::NetworkManagement::Rras::RTM_ENTITY_EXPORT_METHOD** ExptMethods) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(EntityHandle);
        ORBIT_TRACK_PARAM(NumMethods);
        ORBIT_TRACK_PARAM(ExptMethods);

        auto win32_impl_result = g_api_table.RtmGetEntityMethods(RtmRegHandle, EntityHandle, NumMethods, ExptMethods);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmInvokeMethod(intptr_t RtmRegHandle, intptr_t EntityHandle, win32::Windows::Win32::NetworkManagement::Rras::RTM_ENTITY_METHOD_INPUT* Input, uint32_t* OutputSize, win32::Windows::Win32::NetworkManagement::Rras::RTM_ENTITY_METHOD_OUTPUT* Output) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(EntityHandle);
        ORBIT_TRACK_PARAM(Input);
        ORBIT_TRACK_PARAM(OutputSize);
        ORBIT_TRACK_PARAM(Output);

        auto win32_impl_result = g_api_table.RtmInvokeMethod(RtmRegHandle, EntityHandle, Input, OutputSize, Output);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmBlockMethods(intptr_t RtmRegHandle, win32::Windows::Win32::Foundation::HANDLE TargetHandle, uint8_t TargetType, uint32_t BlockingFlag) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(TargetHandle);
        ORBIT_TRACK_PARAM(TargetType);
        ORBIT_TRACK_PARAM(BlockingFlag);

        auto win32_impl_result = g_api_table.RtmBlockMethods(RtmRegHandle, TargetHandle, TargetType, BlockingFlag);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetEntityInfo(intptr_t RtmRegHandle, intptr_t EntityHandle, win32::Windows::Win32::NetworkManagement::Rras::RTM_ENTITY_INFO* EntityInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(EntityHandle);
        ORBIT_TRACK_PARAM(EntityInfo);

        auto win32_impl_result = g_api_table.RtmGetEntityInfo(RtmRegHandle, EntityHandle, EntityInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetDestInfo(intptr_t RtmRegHandle, intptr_t DestHandle, uint32_t ProtocolId, uint32_t TargetViews, win32::Windows::Win32::NetworkManagement::Rras::RTM_DEST_INFO* DestInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(DestHandle);
        ORBIT_TRACK_PARAM(ProtocolId);
        ORBIT_TRACK_PARAM(TargetViews);
        ORBIT_TRACK_PARAM(DestInfo);

        auto win32_impl_result = g_api_table.RtmGetDestInfo(RtmRegHandle, DestHandle, ProtocolId, TargetViews, DestInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetRouteInfo(intptr_t RtmRegHandle, intptr_t RouteHandle, win32::Windows::Win32::NetworkManagement::Rras::RTM_ROUTE_INFO* RouteInfo, win32::Windows::Win32::NetworkManagement::Rras::RTM_NET_ADDRESS* DestAddress) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(RouteHandle);
        ORBIT_TRACK_PARAM(RouteInfo);
        ORBIT_TRACK_PARAM(DestAddress);

        auto win32_impl_result = g_api_table.RtmGetRouteInfo(RtmRegHandle, RouteHandle, RouteInfo, DestAddress);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetNextHopInfo(intptr_t RtmRegHandle, intptr_t NextHopHandle, win32::Windows::Win32::NetworkManagement::Rras::RTM_NEXTHOP_INFO* NextHopInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NextHopHandle);
        ORBIT_TRACK_PARAM(NextHopInfo);

        auto win32_impl_result = g_api_table.RtmGetNextHopInfo(RtmRegHandle, NextHopHandle, NextHopInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmReleaseEntityInfo(intptr_t RtmRegHandle, win32::Windows::Win32::NetworkManagement::Rras::RTM_ENTITY_INFO* EntityInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(EntityInfo);

        auto win32_impl_result = g_api_table.RtmReleaseEntityInfo(RtmRegHandle, EntityInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmReleaseDestInfo(intptr_t RtmRegHandle, win32::Windows::Win32::NetworkManagement::Rras::RTM_DEST_INFO* DestInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(DestInfo);

        auto win32_impl_result = g_api_table.RtmReleaseDestInfo(RtmRegHandle, DestInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmReleaseRouteInfo(intptr_t RtmRegHandle, win32::Windows::Win32::NetworkManagement::Rras::RTM_ROUTE_INFO* RouteInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(RouteInfo);

        auto win32_impl_result = g_api_table.RtmReleaseRouteInfo(RtmRegHandle, RouteInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmReleaseNextHopInfo(intptr_t RtmRegHandle, win32::Windows::Win32::NetworkManagement::Rras::RTM_NEXTHOP_INFO* NextHopInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NextHopInfo);

        auto win32_impl_result = g_api_table.RtmReleaseNextHopInfo(RtmRegHandle, NextHopInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmAddRouteToDest(intptr_t RtmRegHandle, intptr_t* RouteHandle, win32::Windows::Win32::NetworkManagement::Rras::RTM_NET_ADDRESS* DestAddress, win32::Windows::Win32::NetworkManagement::Rras::RTM_ROUTE_INFO* RouteInfo, uint32_t TimeToLive, intptr_t RouteListHandle, uint32_t NotifyType, intptr_t NotifyHandle, uint32_t* ChangeFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(RouteHandle);
        ORBIT_TRACK_PARAM(DestAddress);
        ORBIT_TRACK_PARAM(RouteInfo);
        ORBIT_TRACK_PARAM(TimeToLive);
        ORBIT_TRACK_PARAM(RouteListHandle);
        ORBIT_TRACK_PARAM(NotifyType);
        ORBIT_TRACK_PARAM(NotifyHandle);
        ORBIT_TRACK_PARAM(ChangeFlags);

        auto win32_impl_result = g_api_table.RtmAddRouteToDest(RtmRegHandle, RouteHandle, DestAddress, RouteInfo, TimeToLive, RouteListHandle, NotifyType, NotifyHandle, ChangeFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmDeleteRouteToDest(intptr_t RtmRegHandle, intptr_t RouteHandle, uint32_t* ChangeFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(RouteHandle);
        ORBIT_TRACK_PARAM(ChangeFlags);

        auto win32_impl_result = g_api_table.RtmDeleteRouteToDest(RtmRegHandle, RouteHandle, ChangeFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmHoldDestination(intptr_t RtmRegHandle, intptr_t DestHandle, uint32_t TargetViews, uint32_t HoldTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(DestHandle);
        ORBIT_TRACK_PARAM(TargetViews);
        ORBIT_TRACK_PARAM(HoldTime);

        auto win32_impl_result = g_api_table.RtmHoldDestination(RtmRegHandle, DestHandle, TargetViews, HoldTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetRoutePointer(intptr_t RtmRegHandle, intptr_t RouteHandle, win32::Windows::Win32::NetworkManagement::Rras::RTM_ROUTE_INFO** RoutePointer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(RouteHandle);
        ORBIT_TRACK_PARAM(RoutePointer);

        auto win32_impl_result = g_api_table.RtmGetRoutePointer(RtmRegHandle, RouteHandle, RoutePointer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmLockRoute(intptr_t RtmRegHandle, intptr_t RouteHandle, win32::Windows::Win32::Foundation::BOOL Exclusive, win32::Windows::Win32::Foundation::BOOL LockRoute, win32::Windows::Win32::NetworkManagement::Rras::RTM_ROUTE_INFO** RoutePointer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(RouteHandle);
        ORBIT_TRACK_PARAM(Exclusive);
        ORBIT_TRACK_PARAM(LockRoute);
        ORBIT_TRACK_PARAM(RoutePointer);

        auto win32_impl_result = g_api_table.RtmLockRoute(RtmRegHandle, RouteHandle, Exclusive, LockRoute, RoutePointer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmUpdateAndUnlockRoute(intptr_t RtmRegHandle, intptr_t RouteHandle, uint32_t TimeToLive, intptr_t RouteListHandle, uint32_t NotifyType, intptr_t NotifyHandle, uint32_t* ChangeFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(RouteHandle);
        ORBIT_TRACK_PARAM(TimeToLive);
        ORBIT_TRACK_PARAM(RouteListHandle);
        ORBIT_TRACK_PARAM(NotifyType);
        ORBIT_TRACK_PARAM(NotifyHandle);
        ORBIT_TRACK_PARAM(ChangeFlags);

        auto win32_impl_result = g_api_table.RtmUpdateAndUnlockRoute(RtmRegHandle, RouteHandle, TimeToLive, RouteListHandle, NotifyType, NotifyHandle, ChangeFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetExactMatchDestination(intptr_t RtmRegHandle, win32::Windows::Win32::NetworkManagement::Rras::RTM_NET_ADDRESS* DestAddress, uint32_t ProtocolId, uint32_t TargetViews, win32::Windows::Win32::NetworkManagement::Rras::RTM_DEST_INFO* DestInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(DestAddress);
        ORBIT_TRACK_PARAM(ProtocolId);
        ORBIT_TRACK_PARAM(TargetViews);
        ORBIT_TRACK_PARAM(DestInfo);

        auto win32_impl_result = g_api_table.RtmGetExactMatchDestination(RtmRegHandle, DestAddress, ProtocolId, TargetViews, DestInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetMostSpecificDestination(intptr_t RtmRegHandle, win32::Windows::Win32::NetworkManagement::Rras::RTM_NET_ADDRESS* DestAddress, uint32_t ProtocolId, uint32_t TargetViews, win32::Windows::Win32::NetworkManagement::Rras::RTM_DEST_INFO* DestInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(DestAddress);
        ORBIT_TRACK_PARAM(ProtocolId);
        ORBIT_TRACK_PARAM(TargetViews);
        ORBIT_TRACK_PARAM(DestInfo);

        auto win32_impl_result = g_api_table.RtmGetMostSpecificDestination(RtmRegHandle, DestAddress, ProtocolId, TargetViews, DestInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetLessSpecificDestination(intptr_t RtmRegHandle, intptr_t DestHandle, uint32_t ProtocolId, uint32_t TargetViews, win32::Windows::Win32::NetworkManagement::Rras::RTM_DEST_INFO* DestInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(DestHandle);
        ORBIT_TRACK_PARAM(ProtocolId);
        ORBIT_TRACK_PARAM(TargetViews);
        ORBIT_TRACK_PARAM(DestInfo);

        auto win32_impl_result = g_api_table.RtmGetLessSpecificDestination(RtmRegHandle, DestHandle, ProtocolId, TargetViews, DestInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetExactMatchRoute(intptr_t RtmRegHandle, win32::Windows::Win32::NetworkManagement::Rras::RTM_NET_ADDRESS* DestAddress, uint32_t MatchingFlags, win32::Windows::Win32::NetworkManagement::Rras::RTM_ROUTE_INFO* RouteInfo, uint32_t InterfaceIndex, uint32_t TargetViews, intptr_t* RouteHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(DestAddress);
        ORBIT_TRACK_PARAM(MatchingFlags);
        ORBIT_TRACK_PARAM(RouteInfo);
        ORBIT_TRACK_PARAM(InterfaceIndex);
        ORBIT_TRACK_PARAM(TargetViews);
        ORBIT_TRACK_PARAM(RouteHandle);

        auto win32_impl_result = g_api_table.RtmGetExactMatchRoute(RtmRegHandle, DestAddress, MatchingFlags, RouteInfo, InterfaceIndex, TargetViews, RouteHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmIsBestRoute(intptr_t RtmRegHandle, intptr_t RouteHandle, uint32_t* BestInViews) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(RouteHandle);
        ORBIT_TRACK_PARAM(BestInViews);

        auto win32_impl_result = g_api_table.RtmIsBestRoute(RtmRegHandle, RouteHandle, BestInViews);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmAddNextHop(intptr_t RtmRegHandle, win32::Windows::Win32::NetworkManagement::Rras::RTM_NEXTHOP_INFO* NextHopInfo, intptr_t* NextHopHandle, uint32_t* ChangeFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NextHopInfo);
        ORBIT_TRACK_PARAM(NextHopHandle);
        ORBIT_TRACK_PARAM(ChangeFlags);

        auto win32_impl_result = g_api_table.RtmAddNextHop(RtmRegHandle, NextHopInfo, NextHopHandle, ChangeFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmFindNextHop(intptr_t RtmRegHandle, win32::Windows::Win32::NetworkManagement::Rras::RTM_NEXTHOP_INFO* NextHopInfo, intptr_t* NextHopHandle, win32::Windows::Win32::NetworkManagement::Rras::RTM_NEXTHOP_INFO** NextHopPointer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NextHopInfo);
        ORBIT_TRACK_PARAM(NextHopHandle);
        ORBIT_TRACK_PARAM(NextHopPointer);

        auto win32_impl_result = g_api_table.RtmFindNextHop(RtmRegHandle, NextHopInfo, NextHopHandle, NextHopPointer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmDeleteNextHop(intptr_t RtmRegHandle, intptr_t NextHopHandle, win32::Windows::Win32::NetworkManagement::Rras::RTM_NEXTHOP_INFO* NextHopInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NextHopHandle);
        ORBIT_TRACK_PARAM(NextHopInfo);

        auto win32_impl_result = g_api_table.RtmDeleteNextHop(RtmRegHandle, NextHopHandle, NextHopInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetNextHopPointer(intptr_t RtmRegHandle, intptr_t NextHopHandle, win32::Windows::Win32::NetworkManagement::Rras::RTM_NEXTHOP_INFO** NextHopPointer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NextHopHandle);
        ORBIT_TRACK_PARAM(NextHopPointer);

        auto win32_impl_result = g_api_table.RtmGetNextHopPointer(RtmRegHandle, NextHopHandle, NextHopPointer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmLockNextHop(intptr_t RtmRegHandle, intptr_t NextHopHandle, win32::Windows::Win32::Foundation::BOOL Exclusive, win32::Windows::Win32::Foundation::BOOL LockNextHop, win32::Windows::Win32::NetworkManagement::Rras::RTM_NEXTHOP_INFO** NextHopPointer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NextHopHandle);
        ORBIT_TRACK_PARAM(Exclusive);
        ORBIT_TRACK_PARAM(LockNextHop);
        ORBIT_TRACK_PARAM(NextHopPointer);

        auto win32_impl_result = g_api_table.RtmLockNextHop(RtmRegHandle, NextHopHandle, Exclusive, LockNextHop, NextHopPointer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmCreateDestEnum(intptr_t RtmRegHandle, uint32_t TargetViews, uint32_t EnumFlags, win32::Windows::Win32::NetworkManagement::Rras::RTM_NET_ADDRESS* NetAddress, uint32_t ProtocolId, intptr_t* RtmEnumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(TargetViews);
        ORBIT_TRACK_PARAM(EnumFlags);
        ORBIT_TRACK_PARAM(NetAddress);
        ORBIT_TRACK_PARAM(ProtocolId);
        ORBIT_TRACK_PARAM(RtmEnumHandle);

        auto win32_impl_result = g_api_table.RtmCreateDestEnum(RtmRegHandle, TargetViews, EnumFlags, NetAddress, ProtocolId, RtmEnumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetEnumDests(intptr_t RtmRegHandle, intptr_t EnumHandle, uint32_t* NumDests, win32::Windows::Win32::NetworkManagement::Rras::RTM_DEST_INFO* DestInfos) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(EnumHandle);
        ORBIT_TRACK_PARAM(NumDests);
        ORBIT_TRACK_PARAM(DestInfos);

        auto win32_impl_result = g_api_table.RtmGetEnumDests(RtmRegHandle, EnumHandle, NumDests, DestInfos);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmReleaseDests(intptr_t RtmRegHandle, uint32_t NumDests, win32::Windows::Win32::NetworkManagement::Rras::RTM_DEST_INFO* DestInfos) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NumDests);
        ORBIT_TRACK_PARAM(DestInfos);

        auto win32_impl_result = g_api_table.RtmReleaseDests(RtmRegHandle, NumDests, DestInfos);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmCreateRouteEnum(intptr_t RtmRegHandle, intptr_t DestHandle, uint32_t TargetViews, uint32_t EnumFlags, win32::Windows::Win32::NetworkManagement::Rras::RTM_NET_ADDRESS* StartDest, uint32_t MatchingFlags, win32::Windows::Win32::NetworkManagement::Rras::RTM_ROUTE_INFO* CriteriaRoute, uint32_t CriteriaInterface, intptr_t* RtmEnumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(DestHandle);
        ORBIT_TRACK_PARAM(TargetViews);
        ORBIT_TRACK_PARAM(EnumFlags);
        ORBIT_TRACK_PARAM(StartDest);
        ORBIT_TRACK_PARAM(MatchingFlags);
        ORBIT_TRACK_PARAM(CriteriaRoute);
        ORBIT_TRACK_PARAM(CriteriaInterface);
        ORBIT_TRACK_PARAM(RtmEnumHandle);

        auto win32_impl_result = g_api_table.RtmCreateRouteEnum(RtmRegHandle, DestHandle, TargetViews, EnumFlags, StartDest, MatchingFlags, CriteriaRoute, CriteriaInterface, RtmEnumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetEnumRoutes(intptr_t RtmRegHandle, intptr_t EnumHandle, uint32_t* NumRoutes, intptr_t* RouteHandles) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(EnumHandle);
        ORBIT_TRACK_PARAM(NumRoutes);
        ORBIT_TRACK_PARAM(RouteHandles);

        auto win32_impl_result = g_api_table.RtmGetEnumRoutes(RtmRegHandle, EnumHandle, NumRoutes, RouteHandles);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmReleaseRoutes(intptr_t RtmRegHandle, uint32_t NumRoutes, intptr_t* RouteHandles) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NumRoutes);
        ORBIT_TRACK_PARAM(RouteHandles);

        auto win32_impl_result = g_api_table.RtmReleaseRoutes(RtmRegHandle, NumRoutes, RouteHandles);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmCreateNextHopEnum(intptr_t RtmRegHandle, uint32_t EnumFlags, win32::Windows::Win32::NetworkManagement::Rras::RTM_NET_ADDRESS* NetAddress, intptr_t* RtmEnumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(EnumFlags);
        ORBIT_TRACK_PARAM(NetAddress);
        ORBIT_TRACK_PARAM(RtmEnumHandle);

        auto win32_impl_result = g_api_table.RtmCreateNextHopEnum(RtmRegHandle, EnumFlags, NetAddress, RtmEnumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetEnumNextHops(intptr_t RtmRegHandle, intptr_t EnumHandle, uint32_t* NumNextHops, intptr_t* NextHopHandles) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(EnumHandle);
        ORBIT_TRACK_PARAM(NumNextHops);
        ORBIT_TRACK_PARAM(NextHopHandles);

        auto win32_impl_result = g_api_table.RtmGetEnumNextHops(RtmRegHandle, EnumHandle, NumNextHops, NextHopHandles);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmReleaseNextHops(intptr_t RtmRegHandle, uint32_t NumNextHops, intptr_t* NextHopHandles) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NumNextHops);
        ORBIT_TRACK_PARAM(NextHopHandles);

        auto win32_impl_result = g_api_table.RtmReleaseNextHops(RtmRegHandle, NumNextHops, NextHopHandles);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmDeleteEnumHandle(intptr_t RtmRegHandle, intptr_t EnumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(EnumHandle);

        auto win32_impl_result = g_api_table.RtmDeleteEnumHandle(RtmRegHandle, EnumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmRegisterForChangeNotification(intptr_t RtmRegHandle, uint32_t TargetViews, uint32_t NotifyFlags, void* NotifyContext, intptr_t* NotifyHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(TargetViews);
        ORBIT_TRACK_PARAM(NotifyFlags);
        ORBIT_TRACK_PARAM(NotifyContext);
        ORBIT_TRACK_PARAM(NotifyHandle);

        auto win32_impl_result = g_api_table.RtmRegisterForChangeNotification(RtmRegHandle, TargetViews, NotifyFlags, NotifyContext, NotifyHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetChangedDests(intptr_t RtmRegHandle, intptr_t NotifyHandle, uint32_t* NumDests, win32::Windows::Win32::NetworkManagement::Rras::RTM_DEST_INFO* ChangedDests) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NotifyHandle);
        ORBIT_TRACK_PARAM(NumDests);
        ORBIT_TRACK_PARAM(ChangedDests);

        auto win32_impl_result = g_api_table.RtmGetChangedDests(RtmRegHandle, NotifyHandle, NumDests, ChangedDests);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmReleaseChangedDests(intptr_t RtmRegHandle, intptr_t NotifyHandle, uint32_t NumDests, win32::Windows::Win32::NetworkManagement::Rras::RTM_DEST_INFO* ChangedDests) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NotifyHandle);
        ORBIT_TRACK_PARAM(NumDests);
        ORBIT_TRACK_PARAM(ChangedDests);

        auto win32_impl_result = g_api_table.RtmReleaseChangedDests(RtmRegHandle, NotifyHandle, NumDests, ChangedDests);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmIgnoreChangedDests(intptr_t RtmRegHandle, intptr_t NotifyHandle, uint32_t NumDests, intptr_t* ChangedDests) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NotifyHandle);
        ORBIT_TRACK_PARAM(NumDests);
        ORBIT_TRACK_PARAM(ChangedDests);

        auto win32_impl_result = g_api_table.RtmIgnoreChangedDests(RtmRegHandle, NotifyHandle, NumDests, ChangedDests);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetChangeStatus(intptr_t RtmRegHandle, intptr_t NotifyHandle, intptr_t DestHandle, win32::Windows::Win32::Foundation::BOOL* ChangeStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NotifyHandle);
        ORBIT_TRACK_PARAM(DestHandle);
        ORBIT_TRACK_PARAM(ChangeStatus);

        auto win32_impl_result = g_api_table.RtmGetChangeStatus(RtmRegHandle, NotifyHandle, DestHandle, ChangeStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmMarkDestForChangeNotification(intptr_t RtmRegHandle, intptr_t NotifyHandle, intptr_t DestHandle, win32::Windows::Win32::Foundation::BOOL MarkDest) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NotifyHandle);
        ORBIT_TRACK_PARAM(DestHandle);
        ORBIT_TRACK_PARAM(MarkDest);

        auto win32_impl_result = g_api_table.RtmMarkDestForChangeNotification(RtmRegHandle, NotifyHandle, DestHandle, MarkDest);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmIsMarkedForChangeNotification(intptr_t RtmRegHandle, intptr_t NotifyHandle, intptr_t DestHandle, win32::Windows::Win32::Foundation::BOOL* DestMarked) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NotifyHandle);
        ORBIT_TRACK_PARAM(DestHandle);
        ORBIT_TRACK_PARAM(DestMarked);

        auto win32_impl_result = g_api_table.RtmIsMarkedForChangeNotification(RtmRegHandle, NotifyHandle, DestHandle, DestMarked);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmDeregisterFromChangeNotification(intptr_t RtmRegHandle, intptr_t NotifyHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NotifyHandle);

        auto win32_impl_result = g_api_table.RtmDeregisterFromChangeNotification(RtmRegHandle, NotifyHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmCreateRouteList(intptr_t RtmRegHandle, intptr_t* RouteListHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(RouteListHandle);

        auto win32_impl_result = g_api_table.RtmCreateRouteList(RtmRegHandle, RouteListHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmInsertInRouteList(intptr_t RtmRegHandle, intptr_t RouteListHandle, uint32_t NumRoutes, intptr_t* RouteHandles) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(RouteListHandle);
        ORBIT_TRACK_PARAM(NumRoutes);
        ORBIT_TRACK_PARAM(RouteHandles);

        auto win32_impl_result = g_api_table.RtmInsertInRouteList(RtmRegHandle, RouteListHandle, NumRoutes, RouteHandles);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmCreateRouteListEnum(intptr_t RtmRegHandle, intptr_t RouteListHandle, intptr_t* RtmEnumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(RouteListHandle);
        ORBIT_TRACK_PARAM(RtmEnumHandle);

        auto win32_impl_result = g_api_table.RtmCreateRouteListEnum(RtmRegHandle, RouteListHandle, RtmEnumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmGetListEnumRoutes(intptr_t RtmRegHandle, intptr_t EnumHandle, uint32_t* NumRoutes, intptr_t* RouteHandles) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(EnumHandle);
        ORBIT_TRACK_PARAM(NumRoutes);
        ORBIT_TRACK_PARAM(RouteHandles);

        auto win32_impl_result = g_api_table.RtmGetListEnumRoutes(RtmRegHandle, EnumHandle, NumRoutes, RouteHandles);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmDeleteRouteList(intptr_t RtmRegHandle, intptr_t RouteListHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(RouteListHandle);

        auto win32_impl_result = g_api_table.RtmDeleteRouteList(RtmRegHandle, RouteListHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtmReferenceHandles(intptr_t RtmRegHandle, uint32_t NumHandles, win32::Windows::Win32::Foundation::HANDLE* RtmHandles) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RtmRegHandle);
        ORBIT_TRACK_PARAM(NumHandles);
        ORBIT_TRACK_PARAM(RtmHandles);

        auto win32_impl_result = g_api_table.RtmReferenceHandles(RtmRegHandle, NumHandles, RtmHandles);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
