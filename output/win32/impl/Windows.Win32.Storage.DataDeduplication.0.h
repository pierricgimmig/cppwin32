// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Storage_DataDeduplication_0_H
#define WIN32_Windows_Win32_Storage_DataDeduplication_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Storage::DataDeduplication
{
#pragma region enums
    enum class DEDUP_BACKUP_SUPPORT_PARAM_TYPE : int32_t
    {
        DEDUP_RECONSTRUCT_UNOPTIMIZED = 1,
        DEDUP_RECONSTRUCT_OPTIMIZED = 2,
    };
    enum class DEDUP_SET_PARAM_TYPE : int32_t
    {
        DEDUP_PT_MinChunkSizeBytes = 1,
        DEDUP_PT_MaxChunkSizeBytes = 2,
        DEDUP_PT_AvgChunkSizeBytes = 3,
        DEDUP_PT_InvariantChunking = 4,
        DEDUP_PT_DisableStrongHashComputation = 5,
    };
    enum class DedupChunkFlags : int32_t
    {
        DedupChunkFlags_None = 0,
        DedupChunkFlags_Compressed = 1,
    };
    enum class DedupChunkingAlgorithm : int32_t
    {
        DedupChunkingAlgorithm_Unknonwn = 0,
        DedupChunkingAlgorithm_V1 = 1,
    };
    enum class DedupCompressionAlgorithm : int32_t
    {
        DedupCompressionAlgorithm_Unknonwn = 0,
        DedupCompressionAlgorithm_Xpress = 1,
    };
    enum class DedupDataPortManagerOption : int32_t
    {
        DedupDataPortManagerOption_None = 0,
        DedupDataPortManagerOption_AutoStart = 1,
        DedupDataPortManagerOption_SkipReconciliation = 2,
    };
    enum class DedupDataPortRequestStatus : int32_t
    {
        DedupDataPortRequestStatus_Unknown = 0,
        DedupDataPortRequestStatus_Queued = 1,
        DedupDataPortRequestStatus_Processing = 2,
        DedupDataPortRequestStatus_Partial = 3,
        DedupDataPortRequestStatus_Complete = 4,
        DedupDataPortRequestStatus_Failed = 5,
    };
    enum class DedupDataPortVolumeStatus : int32_t
    {
        DedupDataPortVolumeStatus_Unknown = 0,
        DedupDataPortVolumeStatus_NotEnabled = 1,
        DedupDataPortVolumeStatus_NotAvailable = 2,
        DedupDataPortVolumeStatus_Initializing = 3,
        DedupDataPortVolumeStatus_Ready = 4,
        DedupDataPortVolumeStatus_Maintenance = 5,
        DedupDataPortVolumeStatus_Shutdown = 6,
    };
    enum class DedupHashingAlgorithm : int32_t
    {
        DedupHashingAlgorithm_Unknonwn = 0,
        DedupHashingAlgorithm_V1 = 1,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct DDP_FILE_EXTENT;
    struct DEDUP_CHUNK_INFO_HASH32;
    struct DEDUP_CONTAINER_EXTENT;
    struct DedupBackupSupport;
    struct DedupChunk;
    struct DedupDataPort;
    struct DedupHash;
    struct DedupStream;
    struct DedupStreamEntry;
    struct IDedupBackupSupport;
    struct IDedupChunkLibrary;
    struct IDedupDataPort;
    struct IDedupDataPortManager;
    struct IDedupIterateChunksHash32;
    struct IDedupReadFileCallback;
#pragma endregion forward_declarations

#pragma region delegates
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
