// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_NetworkManagement_WindowsFilteringPlatform_2_H
#define WIN32_Windows_Win32_NetworkManagement_WindowsFilteringPlatform_2_H
#include "win32/Windows.Win32.NetworkManagement.WindowsFilteringPlatform.h"
#include "win32/impl/Windows.Win32.NetworkManagement.WindowsFilteringPlatform.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    void __stdcall ORBIT_IMPL_FwpmFreeMemory0(void** p) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(p);

        g_api_table.FwpmFreeMemory0(p);
        
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmEngineOpen0(win32::Windows::Win32::Foundation::PWSTR serverName, uint32_t authnService, win32::Windows::Win32::System::Rpc::SEC_WINNT_AUTH_IDENTITY_W* authIdentity, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_SESSION0* session, win32::Windows::Win32::Foundation::HANDLE* engineHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(serverName);
        ORBIT_TRACK_PARAM(authnService);
        ORBIT_TRACK_PARAM(authIdentity);
        ORBIT_TRACK_PARAM(session);
        ORBIT_TRACK_PARAM(engineHandle);

        auto win32_impl_result = g_api_table.FwpmEngineOpen0(serverName, authnService, authIdentity, session, engineHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmEngineClose0(win32::Windows::Win32::Foundation::HANDLE engineHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);

        auto win32_impl_result = g_api_table.FwpmEngineClose0(engineHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmEngineGetOption0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_ENGINE_OPTION option, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWP_VALUE0** value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(option);
        ORBIT_TRACK_PARAM(value);

        auto win32_impl_result = g_api_table.FwpmEngineGetOption0(engineHandle, option, value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmEngineSetOption0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_ENGINE_OPTION option, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWP_VALUE0* newValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(option);
        ORBIT_TRACK_PARAM(newValue);

        auto win32_impl_result = g_api_table.FwpmEngineSetOption0(engineHandle, option, newValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmEngineGetSecurityInfo0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t securityInfo, win32::Windows::Win32::Foundation::PSID* sidOwner, win32::Windows::Win32::Foundation::PSID* sidGroup, win32::Windows::Win32::Security::ACL** dacl, win32::Windows::Win32::Security::ACL** sacl, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** securityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);
        ORBIT_TRACK_PARAM(securityDescriptor);

        auto win32_impl_result = g_api_table.FwpmEngineGetSecurityInfo0(engineHandle, securityInfo, sidOwner, sidGroup, dacl, sacl, securityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmEngineSetSecurityInfo0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t securityInfo, win32::Windows::Win32::Security::SID* sidOwner, win32::Windows::Win32::Security::SID* sidGroup, win32::Windows::Win32::Security::ACL* dacl, win32::Windows::Win32::Security::ACL* sacl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);

        auto win32_impl_result = g_api_table.FwpmEngineSetSecurityInfo0(engineHandle, securityInfo, sidOwner, sidGroup, dacl, sacl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmSessionCreateEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_SESSION_ENUM_TEMPLATE0* enumTemplate, win32::Windows::Win32::Foundation::HANDLE* enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumTemplate);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.FwpmSessionCreateEnumHandle0(engineHandle, enumTemplate, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmSessionEnum0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_SESSION0*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.FwpmSessionEnum0(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmSessionDestroyEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.FwpmSessionDestroyEnumHandle0(engineHandle, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmTransactionBegin0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(flags);

        auto win32_impl_result = g_api_table.FwpmTransactionBegin0(engineHandle, flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmTransactionCommit0(win32::Windows::Win32::Foundation::HANDLE engineHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);

        auto win32_impl_result = g_api_table.FwpmTransactionCommit0(engineHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmTransactionAbort0(win32::Windows::Win32::Foundation::HANDLE engineHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);

        auto win32_impl_result = g_api_table.FwpmTransactionAbort0(engineHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderAdd0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER0* provider, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* sd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(provider);
        ORBIT_TRACK_PARAM(sd);

        auto win32_impl_result = g_api_table.FwpmProviderAdd0(engineHandle, provider, sd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderDeleteByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);

        auto win32_impl_result = g_api_table.FwpmProviderDeleteByKey0(engineHandle, key);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderGetByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER0** provider) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(provider);

        auto win32_impl_result = g_api_table.FwpmProviderGetByKey0(engineHandle, key, provider);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderCreateEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_ENUM_TEMPLATE0* enumTemplate, win32::Windows::Win32::Foundation::HANDLE* enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumTemplate);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.FwpmProviderCreateEnumHandle0(engineHandle, enumTemplate, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderEnum0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER0*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.FwpmProviderEnum0(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderDestroyEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.FwpmProviderDestroyEnumHandle0(engineHandle, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderGetSecurityInfoByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, uint32_t securityInfo, win32::Windows::Win32::Foundation::PSID* sidOwner, win32::Windows::Win32::Foundation::PSID* sidGroup, win32::Windows::Win32::Security::ACL** dacl, win32::Windows::Win32::Security::ACL** sacl, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** securityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);
        ORBIT_TRACK_PARAM(securityDescriptor);

        auto win32_impl_result = g_api_table.FwpmProviderGetSecurityInfoByKey0(engineHandle, key, securityInfo, sidOwner, sidGroup, dacl, sacl, securityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderSetSecurityInfoByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, uint32_t securityInfo, win32::Windows::Win32::Security::SID* sidOwner, win32::Windows::Win32::Security::SID* sidGroup, win32::Windows::Win32::Security::ACL* dacl, win32::Windows::Win32::Security::ACL* sacl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);

        auto win32_impl_result = g_api_table.FwpmProviderSetSecurityInfoByKey0(engineHandle, key, securityInfo, sidOwner, sidGroup, dacl, sacl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderSubscribeChanges0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_SUBSCRIPTION0* subscription, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CHANGE_CALLBACK0* callback, void* context, win32::Windows::Win32::Foundation::HANDLE* changeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(subscription);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(changeHandle);

        auto win32_impl_result = g_api_table.FwpmProviderSubscribeChanges0(engineHandle, subscription, callback, context, changeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderUnsubscribeChanges0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE changeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(changeHandle);

        auto win32_impl_result = g_api_table.FwpmProviderUnsubscribeChanges0(engineHandle, changeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderSubscriptionsGet0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_SUBSCRIPTION0*** entries, uint32_t* numEntries) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntries);

        auto win32_impl_result = g_api_table.FwpmProviderSubscriptionsGet0(engineHandle, entries, numEntries);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextAdd0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT0* providerContext, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* sd, uint64_t* id) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(providerContext);
        ORBIT_TRACK_PARAM(sd);
        ORBIT_TRACK_PARAM(id);

        auto win32_impl_result = g_api_table.FwpmProviderContextAdd0(engineHandle, providerContext, sd, id);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextAdd1(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT1* providerContext, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* sd, uint64_t* id) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(providerContext);
        ORBIT_TRACK_PARAM(sd);
        ORBIT_TRACK_PARAM(id);

        auto win32_impl_result = g_api_table.FwpmProviderContextAdd1(engineHandle, providerContext, sd, id);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextAdd2(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT2* providerContext, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* sd, uint64_t* id) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(providerContext);
        ORBIT_TRACK_PARAM(sd);
        ORBIT_TRACK_PARAM(id);

        auto win32_impl_result = g_api_table.FwpmProviderContextAdd2(engineHandle, providerContext, sd, id);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextAdd3(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT3_* providerContext, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* sd, uint64_t* id) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(providerContext);
        ORBIT_TRACK_PARAM(sd);
        ORBIT_TRACK_PARAM(id);

        auto win32_impl_result = g_api_table.FwpmProviderContextAdd3(engineHandle, providerContext, sd, id);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextDeleteById0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);

        auto win32_impl_result = g_api_table.FwpmProviderContextDeleteById0(engineHandle, id);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextDeleteByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);

        auto win32_impl_result = g_api_table.FwpmProviderContextDeleteByKey0(engineHandle, key);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextGetById0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT0** providerContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(providerContext);

        auto win32_impl_result = g_api_table.FwpmProviderContextGetById0(engineHandle, id, providerContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextGetById1(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT1** providerContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(providerContext);

        auto win32_impl_result = g_api_table.FwpmProviderContextGetById1(engineHandle, id, providerContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextGetById2(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT2** providerContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(providerContext);

        auto win32_impl_result = g_api_table.FwpmProviderContextGetById2(engineHandle, id, providerContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextGetById3(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT3_** providerContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(providerContext);

        auto win32_impl_result = g_api_table.FwpmProviderContextGetById3(engineHandle, id, providerContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextGetByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT0** providerContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(providerContext);

        auto win32_impl_result = g_api_table.FwpmProviderContextGetByKey0(engineHandle, key, providerContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextGetByKey1(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT1** providerContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(providerContext);

        auto win32_impl_result = g_api_table.FwpmProviderContextGetByKey1(engineHandle, key, providerContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextGetByKey2(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT2** providerContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(providerContext);

        auto win32_impl_result = g_api_table.FwpmProviderContextGetByKey2(engineHandle, key, providerContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextGetByKey3(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT3_** providerContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(providerContext);

        auto win32_impl_result = g_api_table.FwpmProviderContextGetByKey3(engineHandle, key, providerContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextCreateEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0* enumTemplate, win32::Windows::Win32::Foundation::HANDLE* enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumTemplate);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.FwpmProviderContextCreateEnumHandle0(engineHandle, enumTemplate, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextEnum0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT0*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.FwpmProviderContextEnum0(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextEnum1(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT1*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.FwpmProviderContextEnum1(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextEnum2(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT2*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.FwpmProviderContextEnum2(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextEnum3(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT3_*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.FwpmProviderContextEnum3(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextDestroyEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.FwpmProviderContextDestroyEnumHandle0(engineHandle, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextGetSecurityInfoByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, uint32_t securityInfo, win32::Windows::Win32::Foundation::PSID* sidOwner, win32::Windows::Win32::Foundation::PSID* sidGroup, win32::Windows::Win32::Security::ACL** dacl, win32::Windows::Win32::Security::ACL** sacl, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** securityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);
        ORBIT_TRACK_PARAM(securityDescriptor);

        auto win32_impl_result = g_api_table.FwpmProviderContextGetSecurityInfoByKey0(engineHandle, key, securityInfo, sidOwner, sidGroup, dacl, sacl, securityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextSetSecurityInfoByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, uint32_t securityInfo, win32::Windows::Win32::Security::SID* sidOwner, win32::Windows::Win32::Security::SID* sidGroup, win32::Windows::Win32::Security::ACL* dacl, win32::Windows::Win32::Security::ACL* sacl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);

        auto win32_impl_result = g_api_table.FwpmProviderContextSetSecurityInfoByKey0(engineHandle, key, securityInfo, sidOwner, sidGroup, dacl, sacl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextSubscribeChanges0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0* subscription, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT_CHANGE_CALLBACK0* callback, void* context, win32::Windows::Win32::Foundation::HANDLE* changeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(subscription);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(changeHandle);

        auto win32_impl_result = g_api_table.FwpmProviderContextSubscribeChanges0(engineHandle, subscription, callback, context, changeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextUnsubscribeChanges0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE changeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(changeHandle);

        auto win32_impl_result = g_api_table.FwpmProviderContextUnsubscribeChanges0(engineHandle, changeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmProviderContextSubscriptionsGet0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0*** entries, uint32_t* numEntries) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntries);

        auto win32_impl_result = g_api_table.FwpmProviderContextSubscriptionsGet0(engineHandle, entries, numEntries);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmSubLayerAdd0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_SUBLAYER0* subLayer, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* sd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(subLayer);
        ORBIT_TRACK_PARAM(sd);

        auto win32_impl_result = g_api_table.FwpmSubLayerAdd0(engineHandle, subLayer, sd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmSubLayerDeleteByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);

        auto win32_impl_result = g_api_table.FwpmSubLayerDeleteByKey0(engineHandle, key);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmSubLayerGetByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_SUBLAYER0** subLayer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(subLayer);

        auto win32_impl_result = g_api_table.FwpmSubLayerGetByKey0(engineHandle, key, subLayer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmSubLayerCreateEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_SUBLAYER_ENUM_TEMPLATE0* enumTemplate, win32::Windows::Win32::Foundation::HANDLE* enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumTemplate);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.FwpmSubLayerCreateEnumHandle0(engineHandle, enumTemplate, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmSubLayerEnum0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_SUBLAYER0*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.FwpmSubLayerEnum0(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmSubLayerDestroyEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.FwpmSubLayerDestroyEnumHandle0(engineHandle, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmSubLayerGetSecurityInfoByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, uint32_t securityInfo, win32::Windows::Win32::Foundation::PSID* sidOwner, win32::Windows::Win32::Foundation::PSID* sidGroup, win32::Windows::Win32::Security::ACL** dacl, win32::Windows::Win32::Security::ACL** sacl, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** securityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);
        ORBIT_TRACK_PARAM(securityDescriptor);

        auto win32_impl_result = g_api_table.FwpmSubLayerGetSecurityInfoByKey0(engineHandle, key, securityInfo, sidOwner, sidGroup, dacl, sacl, securityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmSubLayerSetSecurityInfoByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, uint32_t securityInfo, win32::Windows::Win32::Security::SID* sidOwner, win32::Windows::Win32::Security::SID* sidGroup, win32::Windows::Win32::Security::ACL* dacl, win32::Windows::Win32::Security::ACL* sacl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);

        auto win32_impl_result = g_api_table.FwpmSubLayerSetSecurityInfoByKey0(engineHandle, key, securityInfo, sidOwner, sidGroup, dacl, sacl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmSubLayerSubscribeChanges0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_SUBLAYER_SUBSCRIPTION0* subscription, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_SUBLAYER_CHANGE_CALLBACK0* callback, void* context, win32::Windows::Win32::Foundation::HANDLE* changeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(subscription);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(changeHandle);

        auto win32_impl_result = g_api_table.FwpmSubLayerSubscribeChanges0(engineHandle, subscription, callback, context, changeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmSubLayerUnsubscribeChanges0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE changeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(changeHandle);

        auto win32_impl_result = g_api_table.FwpmSubLayerUnsubscribeChanges0(engineHandle, changeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmSubLayerSubscriptionsGet0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_SUBLAYER_SUBSCRIPTION0*** entries, uint32_t* numEntries) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntries);

        auto win32_impl_result = g_api_table.FwpmSubLayerSubscriptionsGet0(engineHandle, entries, numEntries);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmLayerGetById0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint16_t id, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_LAYER0** layer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(layer);

        auto win32_impl_result = g_api_table.FwpmLayerGetById0(engineHandle, id, layer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmLayerGetByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_LAYER0** layer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(layer);

        auto win32_impl_result = g_api_table.FwpmLayerGetByKey0(engineHandle, key, layer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmLayerCreateEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_LAYER_ENUM_TEMPLATE0* enumTemplate, win32::Windows::Win32::Foundation::HANDLE* enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumTemplate);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.FwpmLayerCreateEnumHandle0(engineHandle, enumTemplate, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmLayerEnum0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_LAYER0*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.FwpmLayerEnum0(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmLayerDestroyEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.FwpmLayerDestroyEnumHandle0(engineHandle, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmLayerGetSecurityInfoByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, uint32_t securityInfo, win32::Windows::Win32::Foundation::PSID* sidOwner, win32::Windows::Win32::Foundation::PSID* sidGroup, win32::Windows::Win32::Security::ACL** dacl, win32::Windows::Win32::Security::ACL** sacl, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** securityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);
        ORBIT_TRACK_PARAM(securityDescriptor);

        auto win32_impl_result = g_api_table.FwpmLayerGetSecurityInfoByKey0(engineHandle, key, securityInfo, sidOwner, sidGroup, dacl, sacl, securityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmLayerSetSecurityInfoByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, uint32_t securityInfo, win32::Windows::Win32::Security::SID* sidOwner, win32::Windows::Win32::Security::SID* sidGroup, win32::Windows::Win32::Security::ACL* dacl, win32::Windows::Win32::Security::ACL* sacl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);

        auto win32_impl_result = g_api_table.FwpmLayerSetSecurityInfoByKey0(engineHandle, key, securityInfo, sidOwner, sidGroup, dacl, sacl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmCalloutAdd0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_CALLOUT0* callout, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* sd, uint32_t* id) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(callout);
        ORBIT_TRACK_PARAM(sd);
        ORBIT_TRACK_PARAM(id);

        auto win32_impl_result = g_api_table.FwpmCalloutAdd0(engineHandle, callout, sd, id);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmCalloutDeleteById0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t id) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);

        auto win32_impl_result = g_api_table.FwpmCalloutDeleteById0(engineHandle, id);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmCalloutDeleteByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);

        auto win32_impl_result = g_api_table.FwpmCalloutDeleteByKey0(engineHandle, key);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmCalloutGetById0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t id, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_CALLOUT0** callout) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(callout);

        auto win32_impl_result = g_api_table.FwpmCalloutGetById0(engineHandle, id, callout);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmCalloutGetByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_CALLOUT0** callout) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(callout);

        auto win32_impl_result = g_api_table.FwpmCalloutGetByKey0(engineHandle, key, callout);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmCalloutCreateEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_CALLOUT_ENUM_TEMPLATE0* enumTemplate, win32::Windows::Win32::Foundation::HANDLE* enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumTemplate);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.FwpmCalloutCreateEnumHandle0(engineHandle, enumTemplate, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmCalloutEnum0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_CALLOUT0*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.FwpmCalloutEnum0(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmCalloutDestroyEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.FwpmCalloutDestroyEnumHandle0(engineHandle, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmCalloutGetSecurityInfoByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, uint32_t securityInfo, win32::Windows::Win32::Foundation::PSID* sidOwner, win32::Windows::Win32::Foundation::PSID* sidGroup, win32::Windows::Win32::Security::ACL** dacl, win32::Windows::Win32::Security::ACL** sacl, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** securityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);
        ORBIT_TRACK_PARAM(securityDescriptor);

        auto win32_impl_result = g_api_table.FwpmCalloutGetSecurityInfoByKey0(engineHandle, key, securityInfo, sidOwner, sidGroup, dacl, sacl, securityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmCalloutSetSecurityInfoByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, uint32_t securityInfo, win32::Windows::Win32::Security::SID* sidOwner, win32::Windows::Win32::Security::SID* sidGroup, win32::Windows::Win32::Security::ACL* dacl, win32::Windows::Win32::Security::ACL* sacl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);

        auto win32_impl_result = g_api_table.FwpmCalloutSetSecurityInfoByKey0(engineHandle, key, securityInfo, sidOwner, sidGroup, dacl, sacl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmCalloutSubscribeChanges0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_CALLOUT_SUBSCRIPTION0* subscription, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_CALLOUT_CHANGE_CALLBACK0* callback, void* context, win32::Windows::Win32::Foundation::HANDLE* changeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(subscription);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(changeHandle);

        auto win32_impl_result = g_api_table.FwpmCalloutSubscribeChanges0(engineHandle, subscription, callback, context, changeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmCalloutUnsubscribeChanges0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE changeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(changeHandle);

        auto win32_impl_result = g_api_table.FwpmCalloutUnsubscribeChanges0(engineHandle, changeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmCalloutSubscriptionsGet0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_CALLOUT_SUBSCRIPTION0*** entries, uint32_t* numEntries) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntries);

        auto win32_impl_result = g_api_table.FwpmCalloutSubscriptionsGet0(engineHandle, entries, numEntries);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmFilterAdd0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_FILTER0* filter, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* sd, uint64_t* id) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(filter);
        ORBIT_TRACK_PARAM(sd);
        ORBIT_TRACK_PARAM(id);

        auto win32_impl_result = g_api_table.FwpmFilterAdd0(engineHandle, filter, sd, id);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmFilterDeleteById0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);

        auto win32_impl_result = g_api_table.FwpmFilterDeleteById0(engineHandle, id);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmFilterDeleteByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);

        auto win32_impl_result = g_api_table.FwpmFilterDeleteByKey0(engineHandle, key);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmFilterGetById0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_FILTER0** filter) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(filter);

        auto win32_impl_result = g_api_table.FwpmFilterGetById0(engineHandle, id, filter);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmFilterGetByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_FILTER0** filter) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(filter);

        auto win32_impl_result = g_api_table.FwpmFilterGetByKey0(engineHandle, key, filter);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmFilterCreateEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_FILTER_ENUM_TEMPLATE0* enumTemplate, win32::Windows::Win32::Foundation::HANDLE* enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumTemplate);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.FwpmFilterCreateEnumHandle0(engineHandle, enumTemplate, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmFilterEnum0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_FILTER0*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.FwpmFilterEnum0(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmFilterDestroyEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.FwpmFilterDestroyEnumHandle0(engineHandle, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmFilterGetSecurityInfoByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, uint32_t securityInfo, win32::Windows::Win32::Foundation::PSID* sidOwner, win32::Windows::Win32::Foundation::PSID* sidGroup, win32::Windows::Win32::Security::ACL** dacl, win32::Windows::Win32::Security::ACL** sacl, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** securityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);
        ORBIT_TRACK_PARAM(securityDescriptor);

        auto win32_impl_result = g_api_table.FwpmFilterGetSecurityInfoByKey0(engineHandle, key, securityInfo, sidOwner, sidGroup, dacl, sacl, securityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmFilterSetSecurityInfoByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key, uint32_t securityInfo, win32::Windows::Win32::Security::SID* sidOwner, win32::Windows::Win32::Security::SID* sidGroup, win32::Windows::Win32::Security::ACL* dacl, win32::Windows::Win32::Security::ACL* sacl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);

        auto win32_impl_result = g_api_table.FwpmFilterSetSecurityInfoByKey0(engineHandle, key, securityInfo, sidOwner, sidGroup, dacl, sacl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmFilterSubscribeChanges0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_FILTER_SUBSCRIPTION0* subscription, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_FILTER_CHANGE_CALLBACK0* callback, void* context, win32::Windows::Win32::Foundation::HANDLE* changeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(subscription);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(changeHandle);

        auto win32_impl_result = g_api_table.FwpmFilterSubscribeChanges0(engineHandle, subscription, callback, context, changeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmFilterUnsubscribeChanges0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE changeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(changeHandle);

        auto win32_impl_result = g_api_table.FwpmFilterUnsubscribeChanges0(engineHandle, changeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmFilterSubscriptionsGet0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_FILTER_SUBSCRIPTION0*** entries, uint32_t* numEntries) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntries);

        auto win32_impl_result = g_api_table.FwpmFilterSubscriptionsGet0(engineHandle, entries, numEntries);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmGetAppIdFromFileName0(win32::Windows::Win32::Foundation::PWSTR fileName, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWP_BYTE_BLOB** appId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(fileName);
        ORBIT_TRACK_PARAM(appId);

        auto win32_impl_result = g_api_table.FwpmGetAppIdFromFileName0(fileName, appId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmIPsecTunnelAdd0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t flags, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT0* mainModePolicy, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT0* tunnelPolicy, uint32_t numFilterConditions, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_FILTER_CONDITION0* filterConditions, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* sd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(mainModePolicy);
        ORBIT_TRACK_PARAM(tunnelPolicy);
        ORBIT_TRACK_PARAM(numFilterConditions);
        ORBIT_TRACK_PARAM(filterConditions);
        ORBIT_TRACK_PARAM(sd);

        auto win32_impl_result = g_api_table.FwpmIPsecTunnelAdd0(engineHandle, flags, mainModePolicy, tunnelPolicy, numFilterConditions, filterConditions, sd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmIPsecTunnelAdd1(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t flags, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT1* mainModePolicy, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT1* tunnelPolicy, uint32_t numFilterConditions, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_FILTER_CONDITION0* filterConditions, ::win32::guid* keyModKey, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* sd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(mainModePolicy);
        ORBIT_TRACK_PARAM(tunnelPolicy);
        ORBIT_TRACK_PARAM(numFilterConditions);
        ORBIT_TRACK_PARAM(filterConditions);
        ORBIT_TRACK_PARAM(keyModKey);
        ORBIT_TRACK_PARAM(sd);

        auto win32_impl_result = g_api_table.FwpmIPsecTunnelAdd1(engineHandle, flags, mainModePolicy, tunnelPolicy, numFilterConditions, filterConditions, keyModKey, sd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmIPsecTunnelAdd2(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t flags, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT2* mainModePolicy, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT2* tunnelPolicy, uint32_t numFilterConditions, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_FILTER_CONDITION0* filterConditions, ::win32::guid* keyModKey, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* sd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(mainModePolicy);
        ORBIT_TRACK_PARAM(tunnelPolicy);
        ORBIT_TRACK_PARAM(numFilterConditions);
        ORBIT_TRACK_PARAM(filterConditions);
        ORBIT_TRACK_PARAM(keyModKey);
        ORBIT_TRACK_PARAM(sd);

        auto win32_impl_result = g_api_table.FwpmIPsecTunnelAdd2(engineHandle, flags, mainModePolicy, tunnelPolicy, numFilterConditions, filterConditions, keyModKey, sd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmIPsecTunnelAdd3(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t flags, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT3_* mainModePolicy, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_PROVIDER_CONTEXT3_* tunnelPolicy, uint32_t numFilterConditions, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_FILTER_CONDITION0* filterConditions, ::win32::guid* keyModKey, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* sd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(mainModePolicy);
        ORBIT_TRACK_PARAM(tunnelPolicy);
        ORBIT_TRACK_PARAM(numFilterConditions);
        ORBIT_TRACK_PARAM(filterConditions);
        ORBIT_TRACK_PARAM(keyModKey);
        ORBIT_TRACK_PARAM(sd);

        auto win32_impl_result = g_api_table.FwpmIPsecTunnelAdd3(engineHandle, flags, mainModePolicy, tunnelPolicy, numFilterConditions, filterConditions, keyModKey, sd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmIPsecTunnelDeleteByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, ::win32::guid* key) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(key);

        auto win32_impl_result = g_api_table.FwpmIPsecTunnelDeleteByKey0(engineHandle, key);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecGetStatistics0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_STATISTICS0* ipsecStatistics) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(ipsecStatistics);

        auto win32_impl_result = g_api_table.IPsecGetStatistics0(engineHandle, ipsecStatistics);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecGetStatistics1(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_STATISTICS1* ipsecStatistics) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(ipsecStatistics);

        auto win32_impl_result = g_api_table.IPsecGetStatistics1(engineHandle, ipsecStatistics);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextCreate0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_TRAFFIC0* outboundTraffic, uint64_t* inboundFilterId, uint64_t* id) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(outboundTraffic);
        ORBIT_TRACK_PARAM(inboundFilterId);
        ORBIT_TRACK_PARAM(id);

        auto win32_impl_result = g_api_table.IPsecSaContextCreate0(engineHandle, outboundTraffic, inboundFilterId, id);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextCreate1(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_TRAFFIC1* outboundTraffic, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_VIRTUAL_IF_TUNNEL_INFO0* virtualIfTunnelInfo, uint64_t* inboundFilterId, uint64_t* id) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(outboundTraffic);
        ORBIT_TRACK_PARAM(virtualIfTunnelInfo);
        ORBIT_TRACK_PARAM(inboundFilterId);
        ORBIT_TRACK_PARAM(id);

        auto win32_impl_result = g_api_table.IPsecSaContextCreate1(engineHandle, outboundTraffic, virtualIfTunnelInfo, inboundFilterId, id);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextDeleteById0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);

        auto win32_impl_result = g_api_table.IPsecSaContextDeleteById0(engineHandle, id);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextGetById0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_SA_CONTEXT0** saContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(saContext);

        auto win32_impl_result = g_api_table.IPsecSaContextGetById0(engineHandle, id, saContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextGetById1(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_SA_CONTEXT1** saContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(saContext);

        auto win32_impl_result = g_api_table.IPsecSaContextGetById1(engineHandle, id, saContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextGetSpi0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_GETSPI0* getSpi, uint32_t* inboundSpi) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(getSpi);
        ORBIT_TRACK_PARAM(inboundSpi);

        auto win32_impl_result = g_api_table.IPsecSaContextGetSpi0(engineHandle, id, getSpi, inboundSpi);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextGetSpi1(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_GETSPI1* getSpi, uint32_t* inboundSpi) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(getSpi);
        ORBIT_TRACK_PARAM(inboundSpi);

        auto win32_impl_result = g_api_table.IPsecSaContextGetSpi1(engineHandle, id, getSpi, inboundSpi);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextSetSpi0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_GETSPI1* getSpi, uint32_t inboundSpi) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(getSpi);
        ORBIT_TRACK_PARAM(inboundSpi);

        auto win32_impl_result = g_api_table.IPsecSaContextSetSpi0(engineHandle, id, getSpi, inboundSpi);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextAddInbound0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_SA_BUNDLE0* inboundBundle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(inboundBundle);

        auto win32_impl_result = g_api_table.IPsecSaContextAddInbound0(engineHandle, id, inboundBundle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextAddOutbound0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_SA_BUNDLE0* outboundBundle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(outboundBundle);

        auto win32_impl_result = g_api_table.IPsecSaContextAddOutbound0(engineHandle, id, outboundBundle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextAddInbound1(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_SA_BUNDLE1* inboundBundle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(inboundBundle);

        auto win32_impl_result = g_api_table.IPsecSaContextAddInbound1(engineHandle, id, inboundBundle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextAddOutbound1(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_SA_BUNDLE1* outboundBundle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(outboundBundle);

        auto win32_impl_result = g_api_table.IPsecSaContextAddOutbound1(engineHandle, id, outboundBundle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextExpire0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);

        auto win32_impl_result = g_api_table.IPsecSaContextExpire0(engineHandle, id);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextUpdate0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t flags, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_SA_CONTEXT1* newValues) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(newValues);

        auto win32_impl_result = g_api_table.IPsecSaContextUpdate0(engineHandle, flags, newValues);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextCreateEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_SA_CONTEXT_ENUM_TEMPLATE0* enumTemplate, win32::Windows::Win32::Foundation::HANDLE* enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumTemplate);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.IPsecSaContextCreateEnumHandle0(engineHandle, enumTemplate, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextEnum0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_SA_CONTEXT0*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.IPsecSaContextEnum0(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextEnum1(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_SA_CONTEXT1*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.IPsecSaContextEnum1(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextDestroyEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.IPsecSaContextDestroyEnumHandle0(engineHandle, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextSubscribe0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_SA_CONTEXT_SUBSCRIPTION0* subscription, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_SA_CONTEXT_CALLBACK0* callback, void* context, win32::Windows::Win32::Foundation::HANDLE* eventsHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(subscription);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(eventsHandle);

        auto win32_impl_result = g_api_table.IPsecSaContextSubscribe0(engineHandle, subscription, callback, context, eventsHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextUnsubscribe0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE eventsHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(eventsHandle);

        auto win32_impl_result = g_api_table.IPsecSaContextUnsubscribe0(engineHandle, eventsHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaContextSubscriptionsGet0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_SA_CONTEXT_SUBSCRIPTION0*** entries, uint32_t* numEntries) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntries);

        auto win32_impl_result = g_api_table.IPsecSaContextSubscriptionsGet0(engineHandle, entries, numEntries);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaCreateEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_SA_ENUM_TEMPLATE0* enumTemplate, win32::Windows::Win32::Foundation::HANDLE* enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumTemplate);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.IPsecSaCreateEnumHandle0(engineHandle, enumTemplate, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaEnum0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_SA_DETAILS0*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.IPsecSaEnum0(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaEnum1(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_SA_DETAILS1*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.IPsecSaEnum1(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaDestroyEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.IPsecSaDestroyEnumHandle0(engineHandle, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaDbGetSecurityInfo0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t securityInfo, win32::Windows::Win32::Foundation::PSID* sidOwner, win32::Windows::Win32::Foundation::PSID* sidGroup, win32::Windows::Win32::Security::ACL** dacl, win32::Windows::Win32::Security::ACL** sacl, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** securityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);
        ORBIT_TRACK_PARAM(securityDescriptor);

        auto win32_impl_result = g_api_table.IPsecSaDbGetSecurityInfo0(engineHandle, securityInfo, sidOwner, sidGroup, dacl, sacl, securityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecSaDbSetSecurityInfo0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t securityInfo, win32::Windows::Win32::Security::SID* sidOwner, win32::Windows::Win32::Security::SID* sidGroup, win32::Windows::Win32::Security::ACL* dacl, win32::Windows::Win32::Security::ACL* sacl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);

        auto win32_impl_result = g_api_table.IPsecSaDbSetSecurityInfo0(engineHandle, securityInfo, sidOwner, sidGroup, dacl, sacl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecDospGetStatistics0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_DOSP_STATISTICS0* idpStatistics) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(idpStatistics);

        auto win32_impl_result = g_api_table.IPsecDospGetStatistics0(engineHandle, idpStatistics);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecDospStateCreateEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_DOSP_STATE_ENUM_TEMPLATE0* enumTemplate, win32::Windows::Win32::Foundation::HANDLE* enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumTemplate);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.IPsecDospStateCreateEnumHandle0(engineHandle, enumTemplate, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecDospStateEnum0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_DOSP_STATE0*** entries, uint32_t* numEntries) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntries);

        auto win32_impl_result = g_api_table.IPsecDospStateEnum0(engineHandle, enumHandle, numEntriesRequested, entries, numEntries);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecDospStateDestroyEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.IPsecDospStateDestroyEnumHandle0(engineHandle, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecDospGetSecurityInfo0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t securityInfo, win32::Windows::Win32::Foundation::PSID* sidOwner, win32::Windows::Win32::Foundation::PSID* sidGroup, win32::Windows::Win32::Security::ACL** dacl, win32::Windows::Win32::Security::ACL** sacl, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** securityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);
        ORBIT_TRACK_PARAM(securityDescriptor);

        auto win32_impl_result = g_api_table.IPsecDospGetSecurityInfo0(engineHandle, securityInfo, sidOwner, sidGroup, dacl, sacl, securityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecDospSetSecurityInfo0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t securityInfo, win32::Windows::Win32::Security::SID* sidOwner, win32::Windows::Win32::Security::SID* sidGroup, win32::Windows::Win32::Security::ACL* dacl, win32::Windows::Win32::Security::ACL* sacl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);

        auto win32_impl_result = g_api_table.IPsecDospSetSecurityInfo0(engineHandle, securityInfo, sidOwner, sidGroup, dacl, sacl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecKeyManagerAddAndRegister0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_KEY_MANAGER0* keyManager, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_KEY_MANAGER_CALLBACKS0* keyManagerCallbacks, win32::Windows::Win32::Foundation::HANDLE* keyMgmtHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(keyManager);
        ORBIT_TRACK_PARAM(keyManagerCallbacks);
        ORBIT_TRACK_PARAM(keyMgmtHandle);

        auto win32_impl_result = g_api_table.IPsecKeyManagerAddAndRegister0(engineHandle, keyManager, keyManagerCallbacks, keyMgmtHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecKeyManagerUnregisterAndDelete0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE keyMgmtHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(keyMgmtHandle);

        auto win32_impl_result = g_api_table.IPsecKeyManagerUnregisterAndDelete0(engineHandle, keyMgmtHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecKeyManagersGet0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IPSEC_KEY_MANAGER0*** entries, uint32_t* numEntries) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntries);

        auto win32_impl_result = g_api_table.IPsecKeyManagersGet0(engineHandle, entries, numEntries);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecKeyManagerGetSecurityInfoByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, void* reserved, uint32_t securityInfo, win32::Windows::Win32::Foundation::PSID* sidOwner, win32::Windows::Win32::Foundation::PSID* sidGroup, win32::Windows::Win32::Security::ACL** dacl, win32::Windows::Win32::Security::ACL** sacl, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** securityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(reserved);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);
        ORBIT_TRACK_PARAM(securityDescriptor);

        auto win32_impl_result = g_api_table.IPsecKeyManagerGetSecurityInfoByKey0(engineHandle, reserved, securityInfo, sidOwner, sidGroup, dacl, sacl, securityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IPsecKeyManagerSetSecurityInfoByKey0(win32::Windows::Win32::Foundation::HANDLE engineHandle, void* reserved, uint32_t securityInfo, win32::Windows::Win32::Security::SID* sidOwner, win32::Windows::Win32::Security::SID* sidGroup, win32::Windows::Win32::Security::ACL* dacl, win32::Windows::Win32::Security::ACL* sacl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(reserved);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);

        auto win32_impl_result = g_api_table.IPsecKeyManagerSetSecurityInfoByKey0(engineHandle, reserved, securityInfo, sidOwner, sidGroup, dacl, sacl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IkeextGetStatistics0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IKEEXT_STATISTICS0* ikeextStatistics) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(ikeextStatistics);

        auto win32_impl_result = g_api_table.IkeextGetStatistics0(engineHandle, ikeextStatistics);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IkeextGetStatistics1(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IKEEXT_STATISTICS1* ikeextStatistics) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(ikeextStatistics);

        auto win32_impl_result = g_api_table.IkeextGetStatistics1(engineHandle, ikeextStatistics);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IkeextSaDeleteById0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);

        auto win32_impl_result = g_api_table.IkeextSaDeleteById0(engineHandle, id);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IkeextSaGetById0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IKEEXT_SA_DETAILS0** sa) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(sa);

        auto win32_impl_result = g_api_table.IkeextSaGetById0(engineHandle, id, sa);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IkeextSaGetById1(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id, ::win32::guid* saLookupContext, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IKEEXT_SA_DETAILS1** sa) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(saLookupContext);
        ORBIT_TRACK_PARAM(sa);

        auto win32_impl_result = g_api_table.IkeextSaGetById1(engineHandle, id, saLookupContext, sa);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IkeextSaGetById2(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id, ::win32::guid* saLookupContext, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IKEEXT_SA_DETAILS2** sa) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(saLookupContext);
        ORBIT_TRACK_PARAM(sa);

        auto win32_impl_result = g_api_table.IkeextSaGetById2(engineHandle, id, saLookupContext, sa);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IkeextSaCreateEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IKEEXT_SA_ENUM_TEMPLATE0* enumTemplate, win32::Windows::Win32::Foundation::HANDLE* enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumTemplate);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.IkeextSaCreateEnumHandle0(engineHandle, enumTemplate, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IkeextSaEnum0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IKEEXT_SA_DETAILS0*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.IkeextSaEnum0(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IkeextSaEnum1(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IKEEXT_SA_DETAILS1*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.IkeextSaEnum1(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IkeextSaEnum2(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::IKEEXT_SA_DETAILS2*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.IkeextSaEnum2(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IkeextSaDestroyEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.IkeextSaDestroyEnumHandle0(engineHandle, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IkeextSaDbGetSecurityInfo0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t securityInfo, win32::Windows::Win32::Foundation::PSID* sidOwner, win32::Windows::Win32::Foundation::PSID* sidGroup, win32::Windows::Win32::Security::ACL** dacl, win32::Windows::Win32::Security::ACL** sacl, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** securityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);
        ORBIT_TRACK_PARAM(securityDescriptor);

        auto win32_impl_result = g_api_table.IkeextSaDbGetSecurityInfo0(engineHandle, securityInfo, sidOwner, sidGroup, dacl, sacl, securityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_IkeextSaDbSetSecurityInfo0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t securityInfo, win32::Windows::Win32::Security::SID* sidOwner, win32::Windows::Win32::Security::SID* sidGroup, win32::Windows::Win32::Security::ACL* dacl, win32::Windows::Win32::Security::ACL* sacl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);

        auto win32_impl_result = g_api_table.IkeextSaDbSetSecurityInfo0(engineHandle, securityInfo, sidOwner, sidGroup, dacl, sacl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmNetEventCreateEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_NET_EVENT_ENUM_TEMPLATE0* enumTemplate, win32::Windows::Win32::Foundation::HANDLE* enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumTemplate);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.FwpmNetEventCreateEnumHandle0(engineHandle, enumTemplate, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmNetEventEnum0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_NET_EVENT0*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.FwpmNetEventEnum0(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmNetEventEnum1(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_NET_EVENT1*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.FwpmNetEventEnum1(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmNetEventEnum2(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_NET_EVENT2*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.FwpmNetEventEnum2(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmNetEventEnum3(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_NET_EVENT3*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.FwpmNetEventEnum3(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmNetEventEnum4(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_NET_EVENT4_*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.FwpmNetEventEnum4(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmNetEventEnum5(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_NET_EVENT5_*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.FwpmNetEventEnum5(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmNetEventDestroyEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.FwpmNetEventDestroyEnumHandle0(engineHandle, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmNetEventsGetSecurityInfo0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t securityInfo, win32::Windows::Win32::Foundation::PSID* sidOwner, win32::Windows::Win32::Foundation::PSID* sidGroup, win32::Windows::Win32::Security::ACL** dacl, win32::Windows::Win32::Security::ACL** sacl, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** securityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);
        ORBIT_TRACK_PARAM(securityDescriptor);

        auto win32_impl_result = g_api_table.FwpmNetEventsGetSecurityInfo0(engineHandle, securityInfo, sidOwner, sidGroup, dacl, sacl, securityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmNetEventsSetSecurityInfo0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t securityInfo, win32::Windows::Win32::Security::SID* sidOwner, win32::Windows::Win32::Security::SID* sidGroup, win32::Windows::Win32::Security::ACL* dacl, win32::Windows::Win32::Security::ACL* sacl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);

        auto win32_impl_result = g_api_table.FwpmNetEventsSetSecurityInfo0(engineHandle, securityInfo, sidOwner, sidGroup, dacl, sacl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmNetEventSubscribe0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_NET_EVENT_SUBSCRIPTION0* subscription, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_NET_EVENT_CALLBACK0* callback, void* context, win32::Windows::Win32::Foundation::HANDLE* eventsHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(subscription);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(eventsHandle);

        auto win32_impl_result = g_api_table.FwpmNetEventSubscribe0(engineHandle, subscription, callback, context, eventsHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmNetEventUnsubscribe0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE eventsHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(eventsHandle);

        auto win32_impl_result = g_api_table.FwpmNetEventUnsubscribe0(engineHandle, eventsHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmNetEventSubscriptionsGet0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_NET_EVENT_SUBSCRIPTION0*** entries, uint32_t* numEntries) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntries);

        auto win32_impl_result = g_api_table.FwpmNetEventSubscriptionsGet0(engineHandle, entries, numEntries);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmNetEventSubscribe1(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_NET_EVENT_SUBSCRIPTION0* subscription, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_NET_EVENT_CALLBACK1* callback, void* context, win32::Windows::Win32::Foundation::HANDLE* eventsHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(subscription);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(eventsHandle);

        auto win32_impl_result = g_api_table.FwpmNetEventSubscribe1(engineHandle, subscription, callback, context, eventsHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmNetEventSubscribe2(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_NET_EVENT_SUBSCRIPTION0* subscription, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_NET_EVENT_CALLBACK2* callback, void* context, win32::Windows::Win32::Foundation::HANDLE* eventsHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(subscription);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(eventsHandle);

        auto win32_impl_result = g_api_table.FwpmNetEventSubscribe2(engineHandle, subscription, callback, context, eventsHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmNetEventSubscribe3(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_NET_EVENT_SUBSCRIPTION0* subscription, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_NET_EVENT_CALLBACK3* callback, void* context, win32::Windows::Win32::Foundation::HANDLE* eventsHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(subscription);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(eventsHandle);

        auto win32_impl_result = g_api_table.FwpmNetEventSubscribe3(engineHandle, subscription, callback, context, eventsHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmNetEventSubscribe4(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_NET_EVENT_SUBSCRIPTION0* subscription, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_NET_EVENT_CALLBACK4* callback, void* context, win32::Windows::Win32::Foundation::HANDLE* eventsHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(subscription);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(eventsHandle);

        auto win32_impl_result = g_api_table.FwpmNetEventSubscribe4(engineHandle, subscription, callback, context, eventsHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmDynamicKeywordSubscribe0(uint32_t flags, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_DYNAMIC_KEYWORD_CALLBACK0* callback, void* context, win32::Windows::Win32::Foundation::HANDLE* subscriptionHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(subscriptionHandle);

        auto win32_impl_result = g_api_table.FwpmDynamicKeywordSubscribe0(flags, callback, context, subscriptionHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmDynamicKeywordUnsubscribe0(win32::Windows::Win32::Foundation::HANDLE subscriptionHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(subscriptionHandle);

        auto win32_impl_result = g_api_table.FwpmDynamicKeywordUnsubscribe0(subscriptionHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmSystemPortsGet0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_SYSTEM_PORTS0** sysPorts) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(sysPorts);

        auto win32_impl_result = g_api_table.FwpmSystemPortsGet0(engineHandle, sysPorts);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmSystemPortsSubscribe0(win32::Windows::Win32::Foundation::HANDLE engineHandle, void* reserved, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_SYSTEM_PORTS_CALLBACK0* callback, void* context, win32::Windows::Win32::Foundation::HANDLE* sysPortsHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(reserved);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(sysPortsHandle);

        auto win32_impl_result = g_api_table.FwpmSystemPortsSubscribe0(engineHandle, reserved, callback, context, sysPortsHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmSystemPortsUnsubscribe0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE sysPortsHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(sysPortsHandle);

        auto win32_impl_result = g_api_table.FwpmSystemPortsUnsubscribe0(engineHandle, sysPortsHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmConnectionGetById0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint64_t id, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_CONNECTION0** connection) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(connection);

        auto win32_impl_result = g_api_table.FwpmConnectionGetById0(engineHandle, id, connection);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmConnectionEnum0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle, uint32_t numEntriesRequested, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_CONNECTION0*** entries, uint32_t* numEntriesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);
        ORBIT_TRACK_PARAM(numEntriesRequested);
        ORBIT_TRACK_PARAM(entries);
        ORBIT_TRACK_PARAM(numEntriesReturned);

        auto win32_impl_result = g_api_table.FwpmConnectionEnum0(engineHandle, enumHandle, numEntriesRequested, entries, numEntriesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmConnectionCreateEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_CONNECTION_ENUM_TEMPLATE0* enumTemplate, win32::Windows::Win32::Foundation::HANDLE* enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumTemplate);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.FwpmConnectionCreateEnumHandle0(engineHandle, enumTemplate, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmConnectionDestroyEnumHandle0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE enumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(enumHandle);

        auto win32_impl_result = g_api_table.FwpmConnectionDestroyEnumHandle0(engineHandle, enumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmConnectionGetSecurityInfo0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t securityInfo, win32::Windows::Win32::Foundation::PSID* sidOwner, win32::Windows::Win32::Foundation::PSID* sidGroup, win32::Windows::Win32::Security::ACL** dacl, win32::Windows::Win32::Security::ACL** sacl, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** securityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);
        ORBIT_TRACK_PARAM(securityDescriptor);

        auto win32_impl_result = g_api_table.FwpmConnectionGetSecurityInfo0(engineHandle, securityInfo, sidOwner, sidGroup, dacl, sacl, securityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmConnectionSetSecurityInfo0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t securityInfo, win32::Windows::Win32::Security::SID* sidOwner, win32::Windows::Win32::Security::SID* sidGroup, win32::Windows::Win32::Security::ACL* dacl, win32::Windows::Win32::Security::ACL* sacl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);

        auto win32_impl_result = g_api_table.FwpmConnectionSetSecurityInfo0(engineHandle, securityInfo, sidOwner, sidGroup, dacl, sacl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmConnectionSubscribe0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_CONNECTION_SUBSCRIPTION0* subscription, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_CONNECTION_CALLBACK0* callback, void* context, win32::Windows::Win32::Foundation::HANDLE* eventsHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(subscription);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(eventsHandle);

        auto win32_impl_result = g_api_table.FwpmConnectionSubscribe0(engineHandle, subscription, callback, context, eventsHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmConnectionUnsubscribe0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE eventsHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(eventsHandle);

        auto win32_impl_result = g_api_table.FwpmConnectionUnsubscribe0(engineHandle, eventsHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmvSwitchEventSubscribe0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_VSWITCH_EVENT_SUBSCRIPTION0* subscription, win32::Windows::Win32::NetworkManagement::WindowsFilteringPlatform::FWPM_VSWITCH_EVENT_CALLBACK0* callback, void* context, win32::Windows::Win32::Foundation::HANDLE* subscriptionHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(subscription);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(subscriptionHandle);

        auto win32_impl_result = g_api_table.FwpmvSwitchEventSubscribe0(engineHandle, subscription, callback, context, subscriptionHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmvSwitchEventUnsubscribe0(win32::Windows::Win32::Foundation::HANDLE engineHandle, win32::Windows::Win32::Foundation::HANDLE subscriptionHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(subscriptionHandle);

        auto win32_impl_result = g_api_table.FwpmvSwitchEventUnsubscribe0(engineHandle, subscriptionHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmvSwitchEventsGetSecurityInfo0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t securityInfo, win32::Windows::Win32::Foundation::PSID* sidOwner, win32::Windows::Win32::Foundation::PSID* sidGroup, win32::Windows::Win32::Security::ACL** dacl, win32::Windows::Win32::Security::ACL** sacl, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** securityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);
        ORBIT_TRACK_PARAM(securityDescriptor);

        auto win32_impl_result = g_api_table.FwpmvSwitchEventsGetSecurityInfo0(engineHandle, securityInfo, sidOwner, sidGroup, dacl, sacl, securityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FwpmvSwitchEventsSetSecurityInfo0(win32::Windows::Win32::Foundation::HANDLE engineHandle, uint32_t securityInfo, win32::Windows::Win32::Security::SID* sidOwner, win32::Windows::Win32::Security::SID* sidGroup, win32::Windows::Win32::Security::ACL* dacl, win32::Windows::Win32::Security::ACL* sacl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(engineHandle);
        ORBIT_TRACK_PARAM(securityInfo);
        ORBIT_TRACK_PARAM(sidOwner);
        ORBIT_TRACK_PARAM(sidGroup);
        ORBIT_TRACK_PARAM(dacl);
        ORBIT_TRACK_PARAM(sacl);

        auto win32_impl_result = g_api_table.FwpmvSwitchEventsSetSecurityInfo0(engineHandle, securityInfo, sidOwner, sidGroup, dacl, sacl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
