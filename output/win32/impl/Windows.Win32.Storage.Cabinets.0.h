// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Storage_Cabinets_0_H
#define WIN32_Windows_Win32_Storage_Cabinets_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct BOOL;
    struct PSTR;
}
WIN32_EXPORT namespace win32::Windows::Win32::Storage::Cabinets
{
#pragma region enums
    enum class FCIERROR : int32_t
    {
        FCIERR_NONE = 0,
        FCIERR_OPEN_SRC = 1,
        FCIERR_READ_SRC = 2,
        FCIERR_ALLOC_FAIL = 3,
        FCIERR_TEMP_FILE = 4,
        FCIERR_BAD_COMPR_TYPE = 5,
        FCIERR_CAB_FILE = 6,
        FCIERR_USER_ABORT = 7,
        FCIERR_MCI_FAIL = 8,
        FCIERR_CAB_FORMAT_LIMIT = 9,
    };
    enum class FDICREATE_CPU_TYPE : uint32_t
    {
        cpu80286 = 0x0,
        cpu80386 = 0x1,
    };
    enum class FDIDECRYPTTYPE : int32_t
    {
        fdidtNEW_CABINET = 0,
        fdidtNEW_FOLDER = 1,
        fdidtDECRYPT = 2,
    };
    enum class FDIERROR : int32_t
    {
        FDIERROR_NONE = 0,
        FDIERROR_CABINET_NOT_FOUND = 1,
        FDIERROR_NOT_A_CABINET = 2,
        FDIERROR_UNKNOWN_CABINET_VERSION = 3,
        FDIERROR_CORRUPT_CABINET = 4,
        FDIERROR_ALLOC_FAIL = 5,
        FDIERROR_BAD_COMPR_TYPE = 6,
        FDIERROR_MDI_FAIL = 7,
        FDIERROR_TARGET_FILE = 8,
        FDIERROR_RESERVE_MISMATCH = 9,
        FDIERROR_WRONG_CABINET = 10,
        FDIERROR_USER_ABORT = 11,
        FDIERROR_EOF = 12,
    };
    enum class FDINOTIFICATIONTYPE : int32_t
    {
        fdintCABINET_INFO = 0,
        fdintPARTIAL_FILE = 1,
        fdintCOPY_FILE = 2,
        fdintCLOSE_FILE_INFO = 3,
        fdintNEXT_CABINET = 4,
        fdintENUMERATE = 5,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct CCAB;
    struct ERF;
    struct FDICABINETINFO;
    struct FDIDECRYPT;
    struct FDINOTIFICATION;
    struct FDISPILLFILE;
#pragma endregion forward_declarations

#pragma region delegates
    using PFNFCIALLOC = void* __stdcall(uint32_t);
    using PFNFCIFREE = void __stdcall(void*);
    using PFNFCIOPEN = intptr_t __stdcall(Windows::Win32::Foundation::PSTR, int32_t, int32_t, int32_t*, void*);
    using PFNFCIREAD = uint32_t __stdcall(intptr_t, void*, uint32_t, int32_t*, void*);
    using PFNFCIWRITE = uint32_t __stdcall(intptr_t, void*, uint32_t, int32_t*, void*);
    using PFNFCICLOSE = int32_t __stdcall(intptr_t, int32_t*, void*);
    using PFNFCISEEK = int32_t __stdcall(intptr_t, int32_t, int32_t, int32_t*, void*);
    using PFNFCIDELETE = int32_t __stdcall(Windows::Win32::Foundation::PSTR, int32_t*, void*);
    using PFNFCIGETNEXTCABINET = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Storage::Cabinets::CCAB*, uint32_t, void*);
    using PFNFCIFILEPLACED = int32_t __stdcall(Windows::Win32::Storage::Cabinets::CCAB*, Windows::Win32::Foundation::PSTR, int32_t, Windows::Win32::Foundation::BOOL, void*);
    using PFNFCIGETOPENINFO = intptr_t __stdcall(Windows::Win32::Foundation::PSTR, uint16_t*, uint16_t*, uint16_t*, int32_t*, void*);
    using PFNFCISTATUS = int32_t __stdcall(uint32_t, uint32_t, uint32_t, void*);
    using PFNFCIGETTEMPFILE = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PSTR, int32_t, void*);
    using PFNALLOC = void* __stdcall(uint32_t);
    using PFNFREE = void __stdcall(void*);
    using PFNOPEN = intptr_t __stdcall(Windows::Win32::Foundation::PSTR, int32_t, int32_t);
    using PFNREAD = uint32_t __stdcall(intptr_t, void*, uint32_t);
    using PFNWRITE = uint32_t __stdcall(intptr_t, void*, uint32_t);
    using PFNCLOSE = int32_t __stdcall(intptr_t);
    using PFNSEEK = int32_t __stdcall(intptr_t, int32_t, int32_t);
    using PFNFDIDECRYPT = int32_t __stdcall(Windows::Win32::Storage::Cabinets::FDIDECRYPT*);
    using PFNFDINOTIFY = intptr_t __stdcall(Windows::Win32::Storage::Cabinets::FDINOTIFICATIONTYPE, Windows::Win32::Storage::Cabinets::FDINOTIFICATION*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
