// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Media_WindowsMediaFormat_0_H
#define WIN32_Windows_Win32_Media_WindowsMediaFormat_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Media::WindowsMediaFormat
{
#pragma region enums
    enum class NETSOURCE_URLCREDPOLICY_SETTINGS : int32_t
    {
        NETSOURCE_URLCREDPOLICY_SETTING_SILENTLOGONOK = 0,
        NETSOURCE_URLCREDPOLICY_SETTING_MUSTPROMPTUSER = 1,
        NETSOURCE_URLCREDPOLICY_SETTING_ANONYMOUSONLY = 2,
    };
    enum class WEBSTREAM_SAMPLE_TYPE : int32_t
    {
        WEBSTREAM_SAMPLE_TYPE_FILE = 1,
        WEBSTREAM_SAMPLE_TYPE_RENDER = 2,
    };
    enum class WMT_ATTR_DATATYPE : int32_t
    {
        WMT_TYPE_DWORD = 0,
        WMT_TYPE_STRING = 1,
        WMT_TYPE_BINARY = 2,
        WMT_TYPE_BOOL = 3,
        WMT_TYPE_QWORD = 4,
        WMT_TYPE_WORD = 5,
        WMT_TYPE_GUID = 6,
    };
    enum class WMT_ATTR_IMAGETYPE : int32_t
    {
        WMT_IMAGETYPE_BITMAP = 1,
        WMT_IMAGETYPE_JPEG = 2,
        WMT_IMAGETYPE_GIF = 3,
    };
    enum class WMT_CODEC_INFO_TYPE : int32_t
    {
        WMT_CODECINFO_AUDIO = 0,
        WMT_CODECINFO_VIDEO = 1,
        WMT_CODECINFO_UNKNOWN = -1,
    };
    enum class WMT_CREDENTIAL_FLAGS : int32_t
    {
        WMT_CREDENTIAL_SAVE = 1,
        WMT_CREDENTIAL_DONT_CACHE = 2,
        WMT_CREDENTIAL_CLEAR_TEXT = 4,
        WMT_CREDENTIAL_PROXY = 8,
        WMT_CREDENTIAL_ENCRYPT = 16,
    };
    enum class WMT_DRMLA_TRUST : int32_t
    {
        WMT_DRMLA_UNTRUSTED = 0,
        WMT_DRMLA_TRUSTED = 1,
        WMT_DRMLA_TAMPERED = 2,
    };
    enum class WMT_FILESINK_MODE : int32_t
    {
        WMT_FM_SINGLE_BUFFERS = 1,
        WMT_FM_FILESINK_DATA_UNITS = 2,
        WMT_FM_FILESINK_UNBUFFERED = 4,
    };
    enum class WMT_IMAGE_TYPE : int32_t
    {
        WMT_IT_NONE = 0,
        WMT_IT_BITMAP = 1,
        WMT_IT_JPEG = 2,
        WMT_IT_GIF = 3,
    };
    enum class WMT_INDEXER_TYPE : int32_t
    {
        WMT_IT_PRESENTATION_TIME = 0,
        WMT_IT_FRAME_NUMBERS = 1,
        WMT_IT_TIMECODE = 2,
    };
    enum class WMT_INDEX_TYPE : int32_t
    {
        WMT_IT_NEAREST_DATA_UNIT = 1,
        WMT_IT_NEAREST_OBJECT = 2,
        WMT_IT_NEAREST_CLEAN_POINT = 3,
    };
    enum class WMT_MUSICSPEECH_CLASS_MODE : int32_t
    {
        WMT_MS_CLASS_MUSIC = 0,
        WMT_MS_CLASS_SPEECH = 1,
        WMT_MS_CLASS_MIXED = 2,
    };
    enum class WMT_NET_PROTOCOL : int32_t
    {
        WMT_PROTOCOL_HTTP = 0,
    };
    enum class WMT_OFFSET_FORMAT : int32_t
    {
        WMT_OFFSET_FORMAT_100NS = 0,
        WMT_OFFSET_FORMAT_FRAME_NUMBERS = 1,
        WMT_OFFSET_FORMAT_PLAYLIST_OFFSET = 2,
        WMT_OFFSET_FORMAT_TIMECODE = 3,
        WMT_OFFSET_FORMAT_100NS_APPROXIMATE = 4,
    };
    enum class WMT_PLAY_MODE : int32_t
    {
        WMT_PLAY_MODE_AUTOSELECT = 0,
        WMT_PLAY_MODE_LOCAL = 1,
        WMT_PLAY_MODE_DOWNLOAD = 2,
        WMT_PLAY_MODE_STREAMING = 3,
    };
    enum class WMT_PROXY_SETTINGS : int32_t
    {
        WMT_PROXY_SETTING_NONE = 0,
        WMT_PROXY_SETTING_MANUAL = 1,
        WMT_PROXY_SETTING_AUTO = 2,
        WMT_PROXY_SETTING_BROWSER = 3,
        WMT_PROXY_SETTING_MAX = 4,
    };
    enum class WMT_RIGHTS : int32_t
    {
        WMT_RIGHT_PLAYBACK = 1,
        WMT_RIGHT_COPY_TO_NON_SDMI_DEVICE = 2,
        WMT_RIGHT_COPY_TO_CD = 8,
        WMT_RIGHT_COPY_TO_SDMI_DEVICE = 16,
        WMT_RIGHT_ONE_TIME = 32,
        WMT_RIGHT_SAVE_STREAM_PROTECTED = 64,
        WMT_RIGHT_COPY = 128,
        WMT_RIGHT_COLLABORATIVE_PLAY = 256,
        WMT_RIGHT_SDMI_TRIGGER = 65536,
        WMT_RIGHT_SDMI_NOMORECOPIES = 131072,
    };
    enum class WMT_STATUS : int32_t
    {
        WMT_ERROR = 0,
        WMT_OPENED = 1,
        WMT_BUFFERING_START = 2,
        WMT_BUFFERING_STOP = 3,
        WMT_EOF = 4,
        WMT_END_OF_FILE = 4,
        WMT_END_OF_SEGMENT = 5,
        WMT_END_OF_STREAMING = 6,
        WMT_LOCATING = 7,
        WMT_CONNECTING = 8,
        WMT_NO_RIGHTS = 9,
        WMT_MISSING_CODEC = 10,
        WMT_STARTED = 11,
        WMT_STOPPED = 12,
        WMT_CLOSED = 13,
        WMT_STRIDING = 14,
        WMT_TIMER = 15,
        WMT_INDEX_PROGRESS = 16,
        WMT_SAVEAS_START = 17,
        WMT_SAVEAS_STOP = 18,
        WMT_NEW_SOURCEFLAGS = 19,
        WMT_NEW_METADATA = 20,
        WMT_BACKUPRESTORE_BEGIN = 21,
        WMT_SOURCE_SWITCH = 22,
        WMT_ACQUIRE_LICENSE = 23,
        WMT_INDIVIDUALIZE = 24,
        WMT_NEEDS_INDIVIDUALIZATION = 25,
        WMT_NO_RIGHTS_EX = 26,
        WMT_BACKUPRESTORE_END = 27,
        WMT_BACKUPRESTORE_CONNECTING = 28,
        WMT_BACKUPRESTORE_DISCONNECTING = 29,
        WMT_ERROR_WITHURL = 30,
        WMT_RESTRICTED_LICENSE = 31,
        WMT_CLIENT_CONNECT = 32,
        WMT_CLIENT_DISCONNECT = 33,
        WMT_NATIVE_OUTPUT_PROPS_CHANGED = 34,
        WMT_RECONNECT_START = 35,
        WMT_RECONNECT_END = 36,
        WMT_CLIENT_CONNECT_EX = 37,
        WMT_CLIENT_DISCONNECT_EX = 38,
        WMT_SET_FEC_SPAN = 39,
        WMT_PREROLL_READY = 40,
        WMT_PREROLL_COMPLETE = 41,
        WMT_CLIENT_PROPERTIES = 42,
        WMT_LICENSEURL_SIGNATURE_STATE = 43,
        WMT_INIT_PLAYLIST_BURN = 44,
        WMT_TRANSCRYPTOR_INIT = 45,
        WMT_TRANSCRYPTOR_SEEKED = 46,
        WMT_TRANSCRYPTOR_READ = 47,
        WMT_TRANSCRYPTOR_CLOSED = 48,
        WMT_PROXIMITY_RESULT = 49,
        WMT_PROXIMITY_COMPLETED = 50,
        WMT_CONTENT_ENABLER = 51,
    };
    enum class WMT_STORAGE_FORMAT : int32_t
    {
        WMT_Storage_Format_MP3 = 0,
        WMT_Storage_Format_V1 = 1,
    };
    enum class WMT_STREAM_SELECTION : int32_t
    {
        WMT_OFF = 0,
        WMT_CLEANPOINT_ONLY = 1,
        WMT_ON = 2,
    };
    enum class WMT_TIMECODE_FRAMERATE : int32_t
    {
        WMT_TIMECODE_FRAMERATE_30 = 0,
        WMT_TIMECODE_FRAMERATE_30DROP = 1,
        WMT_TIMECODE_FRAMERATE_25 = 2,
        WMT_TIMECODE_FRAMERATE_24 = 3,
    };
    enum class WMT_TRANSPORT_TYPE : int32_t
    {
        WMT_Transport_Type_Unreliable = 0,
        WMT_Transport_Type_Reliable = 1,
    };
    enum class WMT_VERSION : int32_t
    {
        WMT_VER_4_0 = 262144,
        WMT_VER_7_0 = 458752,
        WMT_VER_8_0 = 524288,
        WMT_VER_9_0 = 589824,
    };
    enum class WMT_WATERMARK_ENTRY_TYPE : int32_t
    {
        WMT_WMETYPE_AUDIO = 1,
        WMT_WMETYPE_VIDEO = 2,
    };
    enum class WM_AETYPE : int32_t
    {
        WM_AETYPE_INCLUDE = 105,
        WM_AETYPE_EXCLUDE = 101,
    };
    enum class WM_DM_INTERLACED_TYPE : int32_t
    {
        WM_DM_NOTINTERLACED = 0,
        WM_DM_DEINTERLACE_NORMAL = 1,
        WM_DM_DEINTERLACE_HALFSIZE = 2,
        WM_DM_DEINTERLACE_HALFSIZEDOUBLERATE = 3,
        WM_DM_DEINTERLACE_INVERSETELECINE = 4,
        WM_DM_DEINTERLACE_VERTICALHALFSIZEDOUBLERATE = 5,
    };
    enum class WM_DM_IT_FIRST_FRAME_COHERENCY : int32_t
    {
        WM_DM_IT_DISABLE_COHERENT_MODE = 0,
        WM_DM_IT_FIRST_FRAME_IN_CLIP_IS_AA_TOP = 1,
        WM_DM_IT_FIRST_FRAME_IN_CLIP_IS_BB_TOP = 2,
        WM_DM_IT_FIRST_FRAME_IN_CLIP_IS_BC_TOP = 3,
        WM_DM_IT_FIRST_FRAME_IN_CLIP_IS_CD_TOP = 4,
        WM_DM_IT_FIRST_FRAME_IN_CLIP_IS_DD_TOP = 5,
        WM_DM_IT_FIRST_FRAME_IN_CLIP_IS_AA_BOTTOM = 6,
        WM_DM_IT_FIRST_FRAME_IN_CLIP_IS_BB_BOTTOM = 7,
        WM_DM_IT_FIRST_FRAME_IN_CLIP_IS_BC_BOTTOM = 8,
        WM_DM_IT_FIRST_FRAME_IN_CLIP_IS_CD_BOTTOM = 9,
        WM_DM_IT_FIRST_FRAME_IN_CLIP_IS_DD_BOTTOM = 10,
    };
    enum class WM_PLAYBACK_DRC_LEVEL : int32_t
    {
        WM_PLAYBACK_DRC_HIGH = 0,
        WM_PLAYBACK_DRC_MEDIUM = 1,
        WM_PLAYBACK_DRC_LOW = 2,
    };
    enum class WM_SFEX_TYPE : int32_t
    {
        WM_SFEX_NOTASYNCPOINT = 2,
        WM_SFEX_DATALOSS = 4,
    };
    enum class WM_SF_TYPE : int32_t
    {
        WM_SF_CLEANPOINT = 1,
        WM_SF_DISCONTINUITY = 2,
        WM_SF_DATALOSS = 4,
    };
    enum class _AM_ASFWRITERCONFIG_PARAM : int32_t
    {
        AM_CONFIGASFWRITER_PARAM_AUTOINDEX = 1,
        AM_CONFIGASFWRITER_PARAM_MULTIPASS = 2,
        AM_CONFIGASFWRITER_PARAM_DONTCOMPRESS = 3,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct AM_WMT_EVENT_DATA;
    struct DRM_COPY_OPL;
    struct DRM_MINIMUM_OUTPUT_PROTECTION_LEVELS;
    struct DRM_OPL_OUTPUT_IDS;
    struct DRM_OUTPUT_PROTECTION;
    struct DRM_PLAY_OPL;
    struct DRM_VAL16;
    struct DRM_VIDEO_OUTPUT_PROTECTION_IDS;
    struct WMDRM_IMPORT_INIT_STRUCT;
    struct WMMPEG2VIDEOINFO;
    struct WMSCRIPTFORMAT;
    struct WMT_BUFFER_SEGMENT;
    struct WMT_COLORSPACEINFO_EXTENSION_DATA;
    struct WMT_FILESINK_DATA_UNIT;
    struct WMT_PAYLOAD_FRAGMENT;
    struct WMT_TIMECODE_EXTENSION_DATA;
    struct WMT_VIDEOIMAGE_SAMPLE;
    struct WMT_VIDEOIMAGE_SAMPLE2;
    struct WMT_WATERMARK_ENTRY;
    struct WMT_WEBSTREAM_FORMAT;
    struct WMT_WEBSTREAM_SAMPLE_HEADER;
    struct WMVIDEOINFOHEADER;
    struct WMVIDEOINFOHEADER2;
    struct WM_ADDRESS_ACCESSENTRY;
    struct WM_CLIENT_PROPERTIES;
    struct WM_CLIENT_PROPERTIES_EX;
    struct WM_LEAKY_BUCKET_PAIR;
    struct WM_MEDIA_TYPE;
    struct WM_PICTURE;
    struct WM_PORT_NUMBER_RANGE;
    struct WM_READER_CLIENTINFO;
    struct WM_READER_STATISTICS;
    struct WM_STREAM_PRIORITY_RECORD;
    struct WM_STREAM_TYPE_INFO;
    struct WM_SYNCHRONISED_LYRICS;
    struct WM_USER_TEXT;
    struct WM_USER_WEB_URL;
    struct WM_WRITER_STATISTICS;
    struct WM_WRITER_STATISTICS_EX;
    struct IAMWMBufferPass;
    struct IAMWMBufferPassCallback;
    struct INSNetSourceCreator;
    struct INSSBuffer;
    struct INSSBuffer2;
    struct INSSBuffer3;
    struct INSSBuffer4;
    struct IWMAddressAccess;
    struct IWMAddressAccess2;
    struct IWMAuthorizer;
    struct IWMBackupRestoreProps;
    struct IWMBandwidthSharing;
    struct IWMClientConnections;
    struct IWMClientConnections2;
    struct IWMCodecAMVideoAccelerator;
    struct IWMCodecInfo;
    struct IWMCodecInfo2;
    struct IWMCodecInfo3;
    struct IWMCodecVideoAccelerator;
    struct IWMCredentialCallback;
    struct IWMDRMEditor;
    struct IWMDRMMessageParser;
    struct IWMDRMReader;
    struct IWMDRMReader2;
    struct IWMDRMReader3;
    struct IWMDRMTranscryptionManager;
    struct IWMDRMTranscryptor;
    struct IWMDRMTranscryptor2;
    struct IWMDRMWriter;
    struct IWMDRMWriter2;
    struct IWMDRMWriter3;
    struct IWMDeviceRegistration;
    struct IWMGetSecureChannel;
    struct IWMHeaderInfo;
    struct IWMHeaderInfo2;
    struct IWMHeaderInfo3;
    struct IWMIStreamProps;
    struct IWMImageInfo;
    struct IWMIndexer;
    struct IWMIndexer2;
    struct IWMInputMediaProps;
    struct IWMLanguageList;
    struct IWMLicenseBackup;
    struct IWMLicenseRestore;
    struct IWMLicenseRevocationAgent;
    struct IWMMediaProps;
    struct IWMMetadataEditor;
    struct IWMMetadataEditor2;
    struct IWMMutualExclusion;
    struct IWMMutualExclusion2;
    struct IWMOutputMediaProps;
    struct IWMPacketSize;
    struct IWMPacketSize2;
    struct IWMPlayerHook;
    struct IWMPlayerTimestampHook;
    struct IWMProfile;
    struct IWMProfile2;
    struct IWMProfile3;
    struct IWMProfileManager;
    struct IWMProfileManager2;
    struct IWMProfileManagerLanguage;
    struct IWMPropertyVault;
    struct IWMProximityDetection;
    struct IWMReader;
    struct IWMReaderAccelerator;
    struct IWMReaderAdvanced;
    struct IWMReaderAdvanced2;
    struct IWMReaderAdvanced3;
    struct IWMReaderAdvanced4;
    struct IWMReaderAdvanced5;
    struct IWMReaderAdvanced6;
    struct IWMReaderAllocatorEx;
    struct IWMReaderCallback;
    struct IWMReaderCallbackAdvanced;
    struct IWMReaderNetworkConfig;
    struct IWMReaderNetworkConfig2;
    struct IWMReaderPlaylistBurn;
    struct IWMReaderStreamClock;
    struct IWMReaderTimecode;
    struct IWMReaderTypeNegotiation;
    struct IWMRegisterCallback;
    struct IWMRegisteredDevice;
    struct IWMSBufferAllocator;
    struct IWMSInternalAdminNetSource;
    struct IWMSInternalAdminNetSource2;
    struct IWMSInternalAdminNetSource3;
    struct IWMSecureChannel;
    struct IWMStatusCallback;
    struct IWMStreamConfig;
    struct IWMStreamConfig2;
    struct IWMStreamConfig3;
    struct IWMStreamList;
    struct IWMStreamPrioritization;
    struct IWMSyncReader;
    struct IWMSyncReader2;
    struct IWMVideoMediaProps;
    struct IWMWatermarkInfo;
    struct IWMWriter;
    struct IWMWriterAdvanced;
    struct IWMWriterAdvanced2;
    struct IWMWriterAdvanced3;
    struct IWMWriterFileSink;
    struct IWMWriterFileSink2;
    struct IWMWriterFileSink3;
    struct IWMWriterNetworkSink;
    struct IWMWriterPostView;
    struct IWMWriterPostViewCallback;
    struct IWMWriterPreprocess;
    struct IWMWriterPushSink;
    struct IWMWriterSink;
#pragma endregion forward_declarations

#pragma region delegates
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
