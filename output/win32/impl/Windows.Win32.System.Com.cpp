// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_Com_2_H
#define WIN32_Windows_Win32_System_Com_2_H
#include "win32/Windows.Win32.System.Com.h"
#include "win32/impl/Windows.Win32.System.Com.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::System::Com
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    uint32_t __stdcall ORBIT_IMPL_CoBuildVersion() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.CoBuildVersion();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoInitialize(void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.CoInitialize(pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoRegisterMallocSpy(win32::Windows::Win32::System::Com::IMallocSpy* pMallocSpy) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pMallocSpy);

        auto win32_impl_result = g_api_table.CoRegisterMallocSpy(pMallocSpy);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoRevokeMallocSpy() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.CoRevokeMallocSpy();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoRegisterInitializeSpy(win32::Windows::Win32::System::Com::IInitializeSpy* pSpy, win32::Windows::Win32::Foundation::ULARGE_INTEGER* puliCookie) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSpy);
        ORBIT_TRACK_PARAM(puliCookie);

        auto win32_impl_result = g_api_table.CoRegisterInitializeSpy(pSpy, puliCookie);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoRevokeInitializeSpy(win32::Windows::Win32::Foundation::ULARGE_INTEGER uliCookie) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(uliCookie);

        auto win32_impl_result = g_api_table.CoRevokeInitializeSpy(uliCookie);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoGetSystemSecurityPermissions(win32::Windows::Win32::System::Com::COMSD comSDType, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** ppSD) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(comSDType);
        ORBIT_TRACK_PARAM(ppSD);

        auto win32_impl_result = g_api_table.CoGetSystemSecurityPermissions(comSDType, ppSD);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HINSTANCE __stdcall ORBIT_IMPL_CoLoadLibrary(win32::Windows::Win32::Foundation::PWSTR lpszLibName, win32::Windows::Win32::Foundation::BOOL bAutoFree) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszLibName);
        ORBIT_TRACK_PARAM(bAutoFree);

        auto win32_impl_result = g_api_table.CoLoadLibrary(lpszLibName, bAutoFree);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_CoFreeLibrary(win32::Windows::Win32::Foundation::HINSTANCE hInst) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hInst);

        g_api_table.CoFreeLibrary(hInst);
        
    }

    void __stdcall ORBIT_IMPL_CoFreeAllLibraries() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        g_api_table.CoFreeAllLibraries();
        
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoAllowSetForegroundWindow(win32::Windows::Win32::System::Com::IUnknown* pUnk, void* lpvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pUnk);
        ORBIT_TRACK_PARAM(lpvReserved);

        auto win32_impl_result = g_api_table.CoAllowSetForegroundWindow(pUnk, lpvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DcomChannelSetHResult(void* pvReserved, uint32_t* pulReserved, win32::Windows::Win32::Foundation::HRESULT appsHR) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pvReserved);
        ORBIT_TRACK_PARAM(pulReserved);
        ORBIT_TRACK_PARAM(appsHR);

        auto win32_impl_result = g_api_table.DcomChannelSetHResult(pvReserved, pulReserved, appsHR);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CoIsOle1Class(::win32::guid* rclsid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rclsid);

        auto win32_impl_result = g_api_table.CoIsOle1Class(rclsid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CLSIDFromProgIDEx(win32::Windows::Win32::Foundation::PWSTR lpszProgID, ::win32::guid* lpclsid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszProgID);
        ORBIT_TRACK_PARAM(lpclsid);

        auto win32_impl_result = g_api_table.CLSIDFromProgIDEx(lpszProgID, lpclsid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CoFileTimeToDosDateTime(win32::Windows::Win32::Foundation::FILETIME* lpFileTime, uint16_t* lpDosDate, uint16_t* lpDosTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpFileTime);
        ORBIT_TRACK_PARAM(lpDosDate);
        ORBIT_TRACK_PARAM(lpDosTime);

        auto win32_impl_result = g_api_table.CoFileTimeToDosDateTime(lpFileTime, lpDosDate, lpDosTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CoDosDateTimeToFileTime(uint16_t nDosDate, uint16_t nDosTime, win32::Windows::Win32::Foundation::FILETIME* lpFileTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(nDosDate);
        ORBIT_TRACK_PARAM(nDosTime);
        ORBIT_TRACK_PARAM(lpFileTime);

        auto win32_impl_result = g_api_table.CoDosDateTimeToFileTime(nDosDate, nDosTime, lpFileTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoFileTimeNow(win32::Windows::Win32::Foundation::FILETIME* lpFileTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpFileTime);

        auto win32_impl_result = g_api_table.CoFileTimeNow(lpFileTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoRegisterChannelHook(::win32::guid* ExtensionUuid, win32::Windows::Win32::System::Com::IChannelHook* pChannelHook) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ExtensionUuid);
        ORBIT_TRACK_PARAM(pChannelHook);

        auto win32_impl_result = g_api_table.CoRegisterChannelHook(ExtensionUuid, pChannelHook);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoTreatAsClass(::win32::guid* clsidOld, ::win32::guid* clsidNew) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(clsidOld);
        ORBIT_TRACK_PARAM(clsidNew);

        auto win32_impl_result = g_api_table.CoTreatAsClass(clsidOld, clsidNew);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateDataAdviseHolder(win32::Windows::Win32::System::Com::IDataAdviseHolder** ppDAHolder) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ppDAHolder);

        auto win32_impl_result = g_api_table.CreateDataAdviseHolder(ppDAHolder);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateDataCache(win32::Windows::Win32::System::Com::IUnknown* pUnkOuter, ::win32::guid* rclsid, ::win32::guid* iid, void** ppv) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pUnkOuter);
        ORBIT_TRACK_PARAM(rclsid);
        ORBIT_TRACK_PARAM(iid);
        ORBIT_TRACK_PARAM(ppv);

        auto win32_impl_result = g_api_table.CreateDataCache(pUnkOuter, rclsid, iid, ppv);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoInstall(win32::Windows::Win32::System::Com::IBindCtx* pbc, uint32_t dwFlags, win32::Windows::Win32::System::Com::uCLSSPEC* pClassSpec, win32::Windows::Win32::System::Com::QUERYCONTEXT* pQuery, win32::Windows::Win32::Foundation::PWSTR pszCodeBase) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pbc);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(pClassSpec);
        ORBIT_TRACK_PARAM(pQuery);
        ORBIT_TRACK_PARAM(pszCodeBase);

        auto win32_impl_result = g_api_table.CoInstall(pbc, dwFlags, pClassSpec, pQuery, pszCodeBase);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_BindMoniker(win32::Windows::Win32::System::Com::IMoniker* pmk, uint32_t grfOpt, ::win32::guid* iidResult, void** ppvResult) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pmk);
        ORBIT_TRACK_PARAM(grfOpt);
        ORBIT_TRACK_PARAM(iidResult);
        ORBIT_TRACK_PARAM(ppvResult);

        auto win32_impl_result = g_api_table.BindMoniker(pmk, grfOpt, iidResult, ppvResult);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoGetObject(win32::Windows::Win32::Foundation::PWSTR pszName, win32::Windows::Win32::System::Com::BIND_OPTS* pBindOptions, ::win32::guid* riid, void** ppv) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszName);
        ORBIT_TRACK_PARAM(pBindOptions);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppv);

        auto win32_impl_result = g_api_table.CoGetObject(pszName, pBindOptions, riid, ppv);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_MkParseDisplayName(win32::Windows::Win32::System::Com::IBindCtx* pbc, win32::Windows::Win32::Foundation::PWSTR szUserName, uint32_t* pchEaten, win32::Windows::Win32::System::Com::IMoniker** ppmk) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pbc);
        ORBIT_TRACK_PARAM(szUserName);
        ORBIT_TRACK_PARAM(pchEaten);
        ORBIT_TRACK_PARAM(ppmk);

        auto win32_impl_result = g_api_table.MkParseDisplayName(pbc, szUserName, pchEaten, ppmk);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_MonikerRelativePathTo(win32::Windows::Win32::System::Com::IMoniker* pmkSrc, win32::Windows::Win32::System::Com::IMoniker* pmkDest, win32::Windows::Win32::System::Com::IMoniker** ppmkRelPath, win32::Windows::Win32::Foundation::BOOL dwReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pmkSrc);
        ORBIT_TRACK_PARAM(pmkDest);
        ORBIT_TRACK_PARAM(ppmkRelPath);
        ORBIT_TRACK_PARAM(dwReserved);

        auto win32_impl_result = g_api_table.MonikerRelativePathTo(pmkSrc, pmkDest, ppmkRelPath, dwReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_MonikerCommonPrefixWith(win32::Windows::Win32::System::Com::IMoniker* pmkThis, win32::Windows::Win32::System::Com::IMoniker* pmkOther, win32::Windows::Win32::System::Com::IMoniker** ppmkCommon) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pmkThis);
        ORBIT_TRACK_PARAM(pmkOther);
        ORBIT_TRACK_PARAM(ppmkCommon);

        auto win32_impl_result = g_api_table.MonikerCommonPrefixWith(pmkThis, pmkOther, ppmkCommon);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateBindCtx(uint32_t reserved, win32::Windows::Win32::System::Com::IBindCtx** ppbc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(reserved);
        ORBIT_TRACK_PARAM(ppbc);

        auto win32_impl_result = g_api_table.CreateBindCtx(reserved, ppbc);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateGenericComposite(win32::Windows::Win32::System::Com::IMoniker* pmkFirst, win32::Windows::Win32::System::Com::IMoniker* pmkRest, win32::Windows::Win32::System::Com::IMoniker** ppmkComposite) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pmkFirst);
        ORBIT_TRACK_PARAM(pmkRest);
        ORBIT_TRACK_PARAM(ppmkComposite);

        auto win32_impl_result = g_api_table.CreateGenericComposite(pmkFirst, pmkRest, ppmkComposite);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetClassFile(win32::Windows::Win32::Foundation::PWSTR szFilename, ::win32::guid* pclsid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szFilename);
        ORBIT_TRACK_PARAM(pclsid);

        auto win32_impl_result = g_api_table.GetClassFile(szFilename, pclsid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateClassMoniker(::win32::guid* rclsid, win32::Windows::Win32::System::Com::IMoniker** ppmk) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rclsid);
        ORBIT_TRACK_PARAM(ppmk);

        auto win32_impl_result = g_api_table.CreateClassMoniker(rclsid, ppmk);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateFileMoniker(win32::Windows::Win32::Foundation::PWSTR lpszPathName, win32::Windows::Win32::System::Com::IMoniker** ppmk) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszPathName);
        ORBIT_TRACK_PARAM(ppmk);

        auto win32_impl_result = g_api_table.CreateFileMoniker(lpszPathName, ppmk);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateItemMoniker(win32::Windows::Win32::Foundation::PWSTR lpszDelim, win32::Windows::Win32::Foundation::PWSTR lpszItem, win32::Windows::Win32::System::Com::IMoniker** ppmk) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszDelim);
        ORBIT_TRACK_PARAM(lpszItem);
        ORBIT_TRACK_PARAM(ppmk);

        auto win32_impl_result = g_api_table.CreateItemMoniker(lpszDelim, lpszItem, ppmk);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateAntiMoniker(win32::Windows::Win32::System::Com::IMoniker** ppmk) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ppmk);

        auto win32_impl_result = g_api_table.CreateAntiMoniker(ppmk);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreatePointerMoniker(win32::Windows::Win32::System::Com::IUnknown* punk, win32::Windows::Win32::System::Com::IMoniker** ppmk) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(punk);
        ORBIT_TRACK_PARAM(ppmk);

        auto win32_impl_result = g_api_table.CreatePointerMoniker(punk, ppmk);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateObjrefMoniker(win32::Windows::Win32::System::Com::IUnknown* punk, win32::Windows::Win32::System::Com::IMoniker** ppmk) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(punk);
        ORBIT_TRACK_PARAM(ppmk);

        auto win32_impl_result = g_api_table.CreateObjrefMoniker(punk, ppmk);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetRunningObjectTable(uint32_t reserved, win32::Windows::Win32::System::Com::IRunningObjectTable** pprot) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(reserved);
        ORBIT_TRACK_PARAM(pprot);

        auto win32_impl_result = g_api_table.GetRunningObjectTable(reserved, pprot);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateStdProgressIndicator(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PWSTR pszTitle, win32::Windows::Win32::System::Com::IBindStatusCallback* pIbscCaller, win32::Windows::Win32::System::Com::IBindStatusCallback** ppIbsc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(pszTitle);
        ORBIT_TRACK_PARAM(pIbscCaller);
        ORBIT_TRACK_PARAM(ppIbsc);

        auto win32_impl_result = g_api_table.CreateStdProgressIndicator(hwndParent, pszTitle, pIbscCaller, ppIbsc);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoGetMalloc(uint32_t dwMemContext, win32::Windows::Win32::System::Com::IMalloc** ppMalloc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwMemContext);
        ORBIT_TRACK_PARAM(ppMalloc);

        auto win32_impl_result = g_api_table.CoGetMalloc(dwMemContext, ppMalloc);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_CoUninitialize() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        g_api_table.CoUninitialize();
        
    }

    uint32_t __stdcall ORBIT_IMPL_CoGetCurrentProcess() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.CoGetCurrentProcess();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoInitializeEx(void* pvReserved, win32::Windows::Win32::System::Com::COINIT dwCoInit) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pvReserved);
        ORBIT_TRACK_PARAM(dwCoInit);

        auto win32_impl_result = g_api_table.CoInitializeEx(pvReserved, dwCoInit);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoGetCallerTID(uint32_t* lpdwTID) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpdwTID);

        auto win32_impl_result = g_api_table.CoGetCallerTID(lpdwTID);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoGetCurrentLogicalThreadId(::win32::guid* pguid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pguid);

        auto win32_impl_result = g_api_table.CoGetCurrentLogicalThreadId(pguid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoGetContextToken(size_t* pToken) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pToken);

        auto win32_impl_result = g_api_table.CoGetContextToken(pToken);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoGetApartmentType(win32::Windows::Win32::System::Com::APTTYPE* pAptType, win32::Windows::Win32::System::Com::APTTYPEQUALIFIER* pAptQualifier) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAptType);
        ORBIT_TRACK_PARAM(pAptQualifier);

        auto win32_impl_result = g_api_table.CoGetApartmentType(pAptType, pAptQualifier);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoIncrementMTAUsage(win32::Windows::Win32::System::Com::CO_MTA_USAGE_COOKIE* pCookie) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pCookie);

        auto win32_impl_result = g_api_table.CoIncrementMTAUsage(pCookie);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoDecrementMTAUsage(win32::Windows::Win32::System::Com::CO_MTA_USAGE_COOKIE Cookie) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Cookie);

        auto win32_impl_result = g_api_table.CoDecrementMTAUsage(Cookie);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoAllowUnmarshalerCLSID(::win32::guid* clsid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(clsid);

        auto win32_impl_result = g_api_table.CoAllowUnmarshalerCLSID(clsid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoGetObjectContext(::win32::guid* riid, void** ppv) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppv);

        auto win32_impl_result = g_api_table.CoGetObjectContext(riid, ppv);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoGetClassObject(::win32::guid* rclsid, win32::Windows::Win32::System::Com::CLSCTX dwClsContext, void* pvReserved, ::win32::guid* riid, void** ppv) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rclsid);
        ORBIT_TRACK_PARAM(dwClsContext);
        ORBIT_TRACK_PARAM(pvReserved);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppv);

        auto win32_impl_result = g_api_table.CoGetClassObject(rclsid, dwClsContext, pvReserved, riid, ppv);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoRegisterClassObject(::win32::guid* rclsid, win32::Windows::Win32::System::Com::IUnknown* pUnk, win32::Windows::Win32::System::Com::CLSCTX dwClsContext, uint32_t flags, uint32_t* lpdwRegister) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rclsid);
        ORBIT_TRACK_PARAM(pUnk);
        ORBIT_TRACK_PARAM(dwClsContext);
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(lpdwRegister);

        auto win32_impl_result = g_api_table.CoRegisterClassObject(rclsid, pUnk, dwClsContext, flags, lpdwRegister);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoRevokeClassObject(uint32_t dwRegister) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwRegister);

        auto win32_impl_result = g_api_table.CoRevokeClassObject(dwRegister);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoResumeClassObjects() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.CoResumeClassObjects();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoSuspendClassObjects() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.CoSuspendClassObjects();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_CoAddRefServerProcess() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.CoAddRefServerProcess();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_CoReleaseServerProcess() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.CoReleaseServerProcess();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoGetPSClsid(::win32::guid* riid, ::win32::guid* pClsid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(pClsid);

        auto win32_impl_result = g_api_table.CoGetPSClsid(riid, pClsid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoRegisterPSClsid(::win32::guid* riid, ::win32::guid* rclsid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(rclsid);

        auto win32_impl_result = g_api_table.CoRegisterPSClsid(riid, rclsid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoRegisterSurrogate(win32::Windows::Win32::System::Com::ISurrogate* pSurrogate) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSurrogate);

        auto win32_impl_result = g_api_table.CoRegisterSurrogate(pSurrogate);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoDisconnectObject(win32::Windows::Win32::System::Com::IUnknown* pUnk, uint32_t dwReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pUnk);
        ORBIT_TRACK_PARAM(dwReserved);

        auto win32_impl_result = g_api_table.CoDisconnectObject(pUnk, dwReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoLockObjectExternal(win32::Windows::Win32::System::Com::IUnknown* pUnk, win32::Windows::Win32::Foundation::BOOL fLock, win32::Windows::Win32::Foundation::BOOL fLastUnlockReleases) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pUnk);
        ORBIT_TRACK_PARAM(fLock);
        ORBIT_TRACK_PARAM(fLastUnlockReleases);

        auto win32_impl_result = g_api_table.CoLockObjectExternal(pUnk, fLock, fLastUnlockReleases);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CoIsHandlerConnected(win32::Windows::Win32::System::Com::IUnknown* pUnk) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pUnk);

        auto win32_impl_result = g_api_table.CoIsHandlerConnected(pUnk);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoCreateFreeThreadedMarshaler(win32::Windows::Win32::System::Com::IUnknown* punkOuter, win32::Windows::Win32::System::Com::IUnknown** ppunkMarshal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(punkOuter);
        ORBIT_TRACK_PARAM(ppunkMarshal);

        auto win32_impl_result = g_api_table.CoCreateFreeThreadedMarshaler(punkOuter, ppunkMarshal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_CoFreeUnusedLibraries() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        g_api_table.CoFreeUnusedLibraries();
        
    }

    void __stdcall ORBIT_IMPL_CoFreeUnusedLibrariesEx(uint32_t dwUnloadDelay, uint32_t dwReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwUnloadDelay);
        ORBIT_TRACK_PARAM(dwReserved);

        g_api_table.CoFreeUnusedLibrariesEx(dwUnloadDelay, dwReserved);
        
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoDisconnectContext(uint32_t dwTimeout) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwTimeout);

        auto win32_impl_result = g_api_table.CoDisconnectContext(dwTimeout);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoInitializeSecurity(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecDesc, int32_t cAuthSvc, win32::Windows::Win32::System::Com::SOLE_AUTHENTICATION_SERVICE* asAuthSvc, void* pReserved1, win32::Windows::Win32::System::Com::RPC_C_AUTHN_LEVEL dwAuthnLevel, win32::Windows::Win32::System::Com::RPC_C_IMP_LEVEL dwImpLevel, void* pAuthList, win32::Windows::Win32::System::Com::EOLE_AUTHENTICATION_CAPABILITIES dwCapabilities, void* pReserved3) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSecDesc);
        ORBIT_TRACK_PARAM(cAuthSvc);
        ORBIT_TRACK_PARAM(asAuthSvc);
        ORBIT_TRACK_PARAM(pReserved1);
        ORBIT_TRACK_PARAM(dwAuthnLevel);
        ORBIT_TRACK_PARAM(dwImpLevel);
        ORBIT_TRACK_PARAM(pAuthList);
        ORBIT_TRACK_PARAM(dwCapabilities);
        ORBIT_TRACK_PARAM(pReserved3);

        auto win32_impl_result = g_api_table.CoInitializeSecurity(pSecDesc, cAuthSvc, asAuthSvc, pReserved1, dwAuthnLevel, dwImpLevel, pAuthList, dwCapabilities, pReserved3);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoGetCallContext(::win32::guid* riid, void** ppInterface) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppInterface);

        auto win32_impl_result = g_api_table.CoGetCallContext(riid, ppInterface);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoQueryProxyBlanket(win32::Windows::Win32::System::Com::IUnknown* pProxy, uint32_t* pwAuthnSvc, uint32_t* pAuthzSvc, win32::Windows::Win32::Foundation::PWSTR* pServerPrincName, uint32_t* pAuthnLevel, uint32_t* pImpLevel, void** pAuthInfo, uint32_t* pCapabilites) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProxy);
        ORBIT_TRACK_PARAM(pwAuthnSvc);
        ORBIT_TRACK_PARAM(pAuthzSvc);
        ORBIT_TRACK_PARAM(pServerPrincName);
        ORBIT_TRACK_PARAM(pAuthnLevel);
        ORBIT_TRACK_PARAM(pImpLevel);
        ORBIT_TRACK_PARAM(pAuthInfo);
        ORBIT_TRACK_PARAM(pCapabilites);

        auto win32_impl_result = g_api_table.CoQueryProxyBlanket(pProxy, pwAuthnSvc, pAuthzSvc, pServerPrincName, pAuthnLevel, pImpLevel, pAuthInfo, pCapabilites);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoSetProxyBlanket(win32::Windows::Win32::System::Com::IUnknown* pProxy, uint32_t dwAuthnSvc, uint32_t dwAuthzSvc, win32::Windows::Win32::Foundation::PWSTR pServerPrincName, win32::Windows::Win32::System::Com::RPC_C_AUTHN_LEVEL dwAuthnLevel, win32::Windows::Win32::System::Com::RPC_C_IMP_LEVEL dwImpLevel, void* pAuthInfo, win32::Windows::Win32::System::Com::EOLE_AUTHENTICATION_CAPABILITIES dwCapabilities) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProxy);
        ORBIT_TRACK_PARAM(dwAuthnSvc);
        ORBIT_TRACK_PARAM(dwAuthzSvc);
        ORBIT_TRACK_PARAM(pServerPrincName);
        ORBIT_TRACK_PARAM(dwAuthnLevel);
        ORBIT_TRACK_PARAM(dwImpLevel);
        ORBIT_TRACK_PARAM(pAuthInfo);
        ORBIT_TRACK_PARAM(dwCapabilities);

        auto win32_impl_result = g_api_table.CoSetProxyBlanket(pProxy, dwAuthnSvc, dwAuthzSvc, pServerPrincName, dwAuthnLevel, dwImpLevel, pAuthInfo, dwCapabilities);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoCopyProxy(win32::Windows::Win32::System::Com::IUnknown* pProxy, win32::Windows::Win32::System::Com::IUnknown** ppCopy) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProxy);
        ORBIT_TRACK_PARAM(ppCopy);

        auto win32_impl_result = g_api_table.CoCopyProxy(pProxy, ppCopy);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoQueryClientBlanket(uint32_t* pAuthnSvc, uint32_t* pAuthzSvc, win32::Windows::Win32::Foundation::PWSTR* pServerPrincName, uint32_t* pAuthnLevel, uint32_t* pImpLevel, void** pPrivs, uint32_t* pCapabilities) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAuthnSvc);
        ORBIT_TRACK_PARAM(pAuthzSvc);
        ORBIT_TRACK_PARAM(pServerPrincName);
        ORBIT_TRACK_PARAM(pAuthnLevel);
        ORBIT_TRACK_PARAM(pImpLevel);
        ORBIT_TRACK_PARAM(pPrivs);
        ORBIT_TRACK_PARAM(pCapabilities);

        auto win32_impl_result = g_api_table.CoQueryClientBlanket(pAuthnSvc, pAuthzSvc, pServerPrincName, pAuthnLevel, pImpLevel, pPrivs, pCapabilities);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoImpersonateClient() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.CoImpersonateClient();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoRevertToSelf() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.CoRevertToSelf();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoQueryAuthenticationServices(uint32_t* pcAuthSvc, win32::Windows::Win32::System::Com::SOLE_AUTHENTICATION_SERVICE** asAuthSvc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pcAuthSvc);
        ORBIT_TRACK_PARAM(asAuthSvc);

        auto win32_impl_result = g_api_table.CoQueryAuthenticationServices(pcAuthSvc, asAuthSvc);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoSwitchCallContext(win32::Windows::Win32::System::Com::IUnknown* pNewObject, win32::Windows::Win32::System::Com::IUnknown** ppOldObject) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pNewObject);
        ORBIT_TRACK_PARAM(ppOldObject);

        auto win32_impl_result = g_api_table.CoSwitchCallContext(pNewObject, ppOldObject);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoCreateInstance(::win32::guid* rclsid, win32::Windows::Win32::System::Com::IUnknown* pUnkOuter, win32::Windows::Win32::System::Com::CLSCTX dwClsContext, ::win32::guid* riid, void** ppv) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rclsid);
        ORBIT_TRACK_PARAM(pUnkOuter);
        ORBIT_TRACK_PARAM(dwClsContext);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppv);

        auto win32_impl_result = g_api_table.CoCreateInstance(rclsid, pUnkOuter, dwClsContext, riid, ppv);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoCreateInstanceEx(::win32::guid* Clsid, win32::Windows::Win32::System::Com::IUnknown* punkOuter, win32::Windows::Win32::System::Com::CLSCTX dwClsCtx, win32::Windows::Win32::System::Com::COSERVERINFO* pServerInfo, uint32_t dwCount, win32::Windows::Win32::System::Com::MULTI_QI* pResults) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Clsid);
        ORBIT_TRACK_PARAM(punkOuter);
        ORBIT_TRACK_PARAM(dwClsCtx);
        ORBIT_TRACK_PARAM(pServerInfo);
        ORBIT_TRACK_PARAM(dwCount);
        ORBIT_TRACK_PARAM(pResults);

        auto win32_impl_result = g_api_table.CoCreateInstanceEx(Clsid, punkOuter, dwClsCtx, pServerInfo, dwCount, pResults);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoCreateInstanceFromApp(::win32::guid* Clsid, win32::Windows::Win32::System::Com::IUnknown* punkOuter, win32::Windows::Win32::System::Com::CLSCTX dwClsCtx, void* reserved, uint32_t dwCount, win32::Windows::Win32::System::Com::MULTI_QI* pResults) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Clsid);
        ORBIT_TRACK_PARAM(punkOuter);
        ORBIT_TRACK_PARAM(dwClsCtx);
        ORBIT_TRACK_PARAM(reserved);
        ORBIT_TRACK_PARAM(dwCount);
        ORBIT_TRACK_PARAM(pResults);

        auto win32_impl_result = g_api_table.CoCreateInstanceFromApp(Clsid, punkOuter, dwClsCtx, reserved, dwCount, pResults);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoRegisterActivationFilter(win32::Windows::Win32::System::Com::IActivationFilter* pActivationFilter) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pActivationFilter);

        auto win32_impl_result = g_api_table.CoRegisterActivationFilter(pActivationFilter);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoGetCancelObject(uint32_t dwThreadId, ::win32::guid* iid, void** ppUnk) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwThreadId);
        ORBIT_TRACK_PARAM(iid);
        ORBIT_TRACK_PARAM(ppUnk);

        auto win32_impl_result = g_api_table.CoGetCancelObject(dwThreadId, iid, ppUnk);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoSetCancelObject(win32::Windows::Win32::System::Com::IUnknown* pUnk) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pUnk);

        auto win32_impl_result = g_api_table.CoSetCancelObject(pUnk);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoCancelCall(uint32_t dwThreadId, uint32_t ulTimeout) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwThreadId);
        ORBIT_TRACK_PARAM(ulTimeout);

        auto win32_impl_result = g_api_table.CoCancelCall(dwThreadId, ulTimeout);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoTestCancel() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.CoTestCancel();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoEnableCallCancellation(void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.CoEnableCallCancellation(pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoDisableCallCancellation(void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.CoDisableCallCancellation(pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_StringFromCLSID(::win32::guid* rclsid, win32::Windows::Win32::Foundation::PWSTR* lplpsz) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rclsid);
        ORBIT_TRACK_PARAM(lplpsz);

        auto win32_impl_result = g_api_table.StringFromCLSID(rclsid, lplpsz);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CLSIDFromString(win32::Windows::Win32::Foundation::PWSTR lpsz, ::win32::guid* pclsid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpsz);
        ORBIT_TRACK_PARAM(pclsid);

        auto win32_impl_result = g_api_table.CLSIDFromString(lpsz, pclsid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_StringFromIID(::win32::guid* rclsid, win32::Windows::Win32::Foundation::PWSTR* lplpsz) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rclsid);
        ORBIT_TRACK_PARAM(lplpsz);

        auto win32_impl_result = g_api_table.StringFromIID(rclsid, lplpsz);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_IIDFromString(win32::Windows::Win32::Foundation::PWSTR lpsz, ::win32::guid* lpiid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpsz);
        ORBIT_TRACK_PARAM(lpiid);

        auto win32_impl_result = g_api_table.IIDFromString(lpsz, lpiid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ProgIDFromCLSID(::win32::guid* clsid, win32::Windows::Win32::Foundation::PWSTR* lplpszProgID) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(clsid);
        ORBIT_TRACK_PARAM(lplpszProgID);

        auto win32_impl_result = g_api_table.ProgIDFromCLSID(clsid, lplpszProgID);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CLSIDFromProgID(win32::Windows::Win32::Foundation::PWSTR lpszProgID, ::win32::guid* lpclsid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszProgID);
        ORBIT_TRACK_PARAM(lpclsid);

        auto win32_impl_result = g_api_table.CLSIDFromProgID(lpszProgID, lpclsid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_StringFromGUID2(::win32::guid* rguid, win32::Windows::Win32::Foundation::PWSTR lpsz, int32_t cchMax) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rguid);
        ORBIT_TRACK_PARAM(lpsz);
        ORBIT_TRACK_PARAM(cchMax);

        auto win32_impl_result = g_api_table.StringFromGUID2(rguid, lpsz, cchMax);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoCreateGuid(::win32::guid* pguid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pguid);

        auto win32_impl_result = g_api_table.CoCreateGuid(pguid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoWaitForMultipleHandles(uint32_t dwFlags, uint32_t dwTimeout, uint32_t cHandles, win32::Windows::Win32::Foundation::HANDLE* pHandles, uint32_t* lpdwindex) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(dwTimeout);
        ORBIT_TRACK_PARAM(cHandles);
        ORBIT_TRACK_PARAM(pHandles);
        ORBIT_TRACK_PARAM(lpdwindex);

        auto win32_impl_result = g_api_table.CoWaitForMultipleHandles(dwFlags, dwTimeout, cHandles, pHandles, lpdwindex);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoWaitForMultipleObjects(uint32_t dwFlags, uint32_t dwTimeout, uint32_t cHandles, win32::Windows::Win32::Foundation::HANDLE* pHandles, uint32_t* lpdwindex) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(dwTimeout);
        ORBIT_TRACK_PARAM(cHandles);
        ORBIT_TRACK_PARAM(pHandles);
        ORBIT_TRACK_PARAM(lpdwindex);

        auto win32_impl_result = g_api_table.CoWaitForMultipleObjects(dwFlags, dwTimeout, cHandles, pHandles, lpdwindex);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoGetTreatAsClass(::win32::guid* clsidOld, ::win32::guid* pClsidNew) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(clsidOld);
        ORBIT_TRACK_PARAM(pClsidNew);

        auto win32_impl_result = g_api_table.CoGetTreatAsClass(clsidOld, pClsidNew);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoInvalidateRemoteMachineBindings(win32::Windows::Win32::Foundation::PWSTR pszMachineName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszMachineName);

        auto win32_impl_result = g_api_table.CoInvalidateRemoteMachineBindings(pszMachineName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_CoTaskMemAlloc(size_t cb) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(cb);

        auto win32_impl_result = g_api_table.CoTaskMemAlloc(cb);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_CoTaskMemRealloc(void* pv, size_t cb) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pv);
        ORBIT_TRACK_PARAM(cb);

        auto win32_impl_result = g_api_table.CoTaskMemRealloc(pv, cb);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_CoTaskMemFree(void* pv) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pv);

        g_api_table.CoTaskMemFree(pv);
        
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoRegisterDeviceCatalog(win32::Windows::Win32::Foundation::PWSTR deviceInstanceId, win32::Windows::Win32::System::Com::CO_DEVICE_CATALOG_COOKIE* cookie) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(deviceInstanceId);
        ORBIT_TRACK_PARAM(cookie);

        auto win32_impl_result = g_api_table.CoRegisterDeviceCatalog(deviceInstanceId, cookie);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoRevokeDeviceCatalog(win32::Windows::Win32::System::Com::CO_DEVICE_CATALOG_COOKIE cookie) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(cookie);

        auto win32_impl_result = g_api_table.CoRevokeDeviceCatalog(cookie);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateUri(win32::Windows::Win32::Foundation::PWSTR pwzURI, win32::Windows::Win32::System::Com::URI_CREATE_FLAGS dwFlags, size_t dwReserved, win32::Windows::Win32::System::Com::IUri** ppURI) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pwzURI);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(dwReserved);
        ORBIT_TRACK_PARAM(ppURI);

        auto win32_impl_result = g_api_table.CreateUri(pwzURI, dwFlags, dwReserved, ppURI);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateUriWithFragment(win32::Windows::Win32::Foundation::PWSTR pwzURI, win32::Windows::Win32::Foundation::PWSTR pwzFragment, uint32_t dwFlags, size_t dwReserved, win32::Windows::Win32::System::Com::IUri** ppURI) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pwzURI);
        ORBIT_TRACK_PARAM(pwzFragment);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(dwReserved);
        ORBIT_TRACK_PARAM(ppURI);

        auto win32_impl_result = g_api_table.CreateUriWithFragment(pwzURI, pwzFragment, dwFlags, dwReserved, ppURI);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateUriFromMultiByteString(win32::Windows::Win32::Foundation::PSTR pszANSIInputUri, uint32_t dwEncodingFlags, uint32_t dwCodePage, uint32_t dwCreateFlags, size_t dwReserved, win32::Windows::Win32::System::Com::IUri** ppUri) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszANSIInputUri);
        ORBIT_TRACK_PARAM(dwEncodingFlags);
        ORBIT_TRACK_PARAM(dwCodePage);
        ORBIT_TRACK_PARAM(dwCreateFlags);
        ORBIT_TRACK_PARAM(dwReserved);
        ORBIT_TRACK_PARAM(ppUri);

        auto win32_impl_result = g_api_table.CreateUriFromMultiByteString(pszANSIInputUri, dwEncodingFlags, dwCodePage, dwCreateFlags, dwReserved, ppUri);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateIUriBuilder(win32::Windows::Win32::System::Com::IUri* pIUri, uint32_t dwFlags, size_t dwReserved, win32::Windows::Win32::System::Com::IUriBuilder** ppIUriBuilder) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pIUri);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(dwReserved);
        ORBIT_TRACK_PARAM(ppIUriBuilder);

        auto win32_impl_result = g_api_table.CreateIUriBuilder(pIUri, dwFlags, dwReserved, ppIUriBuilder);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
