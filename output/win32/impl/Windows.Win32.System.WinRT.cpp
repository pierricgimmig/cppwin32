// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_WinRT_2_H
#define WIN32_Windows_Win32_System_WinRT_2_H
#include "win32/Windows.Win32.System.WinRT.h"
#include "win32/impl/Windows.Win32.System.WinRT.1.h"
WIN32_EXPORT namespace win32::Windows::System
{
    struct DispatcherQueueController;
}
WIN32_EXPORT namespace win32::Windows::Win32::System::WinRT
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoDecodeProxy(uint32_t dwClientPid, uint64_t ui64ProxyAddress, win32::Windows::Win32::System::WinRT::ServerInformation* pServerInformation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwClientPid);
        ORBIT_TRACK_PARAM(ui64ProxyAddress);
        ORBIT_TRACK_PARAM(pServerInformation);

        auto win32_impl_result = g_api_table.CoDecodeProxy(dwClientPid, ui64ProxyAddress, pServerInformation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoGetAgileReference(win32::Windows::Win32::System::WinRT::AgileReferenceOptions options, ::win32::guid* riid, win32::Windows::Win32::System::Com::IUnknown* pUnk, win32::Windows::Win32::System::WinRT::IAgileReference** ppAgileReference) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(options);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(pUnk);
        ORBIT_TRACK_PARAM(ppAgileReference);

        auto win32_impl_result = g_api_table.RoGetAgileReference(options, riid, pUnk, ppAgileReference);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_HSTRING_UserSize(uint32_t* param0, uint32_t param1, win32::Windows::Win32::System::WinRT::HSTRING* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.HSTRING_UserSize(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint8_t* __stdcall ORBIT_IMPL_HSTRING_UserMarshal(uint32_t* param0, uint8_t* param1, win32::Windows::Win32::System::WinRT::HSTRING* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.HSTRING_UserMarshal(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint8_t* __stdcall ORBIT_IMPL_HSTRING_UserUnmarshal(uint32_t* param0, uint8_t* param1, win32::Windows::Win32::System::WinRT::HSTRING* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.HSTRING_UserUnmarshal(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_HSTRING_UserFree(uint32_t* param0, win32::Windows::Win32::System::WinRT::HSTRING* param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        g_api_table.HSTRING_UserFree(param0, param1);
        
    }

    uint32_t __stdcall ORBIT_IMPL_HSTRING_UserSize64(uint32_t* param0, uint32_t param1, win32::Windows::Win32::System::WinRT::HSTRING* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.HSTRING_UserSize64(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint8_t* __stdcall ORBIT_IMPL_HSTRING_UserMarshal64(uint32_t* param0, uint8_t* param1, win32::Windows::Win32::System::WinRT::HSTRING* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.HSTRING_UserMarshal64(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint8_t* __stdcall ORBIT_IMPL_HSTRING_UserUnmarshal64(uint32_t* param0, uint8_t* param1, win32::Windows::Win32::System::WinRT::HSTRING* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.HSTRING_UserUnmarshal64(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_HSTRING_UserFree64(uint32_t* param0, win32::Windows::Win32::System::WinRT::HSTRING* param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        g_api_table.HSTRING_UserFree64(param0, param1);
        
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowsCreateString(win32::Windows::Win32::Foundation::PWSTR sourceString, uint32_t length, win32::Windows::Win32::System::WinRT::HSTRING* string) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(sourceString);
        ORBIT_TRACK_PARAM(length);
        ORBIT_TRACK_PARAM(string);

        auto win32_impl_result = g_api_table.WindowsCreateString(sourceString, length, string);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowsCreateStringReference(win32::Windows::Win32::Foundation::PWSTR sourceString, uint32_t length, win32::Windows::Win32::System::WinRT::HSTRING_HEADER* hstringHeader, win32::Windows::Win32::System::WinRT::HSTRING* string) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(sourceString);
        ORBIT_TRACK_PARAM(length);
        ORBIT_TRACK_PARAM(hstringHeader);
        ORBIT_TRACK_PARAM(string);

        auto win32_impl_result = g_api_table.WindowsCreateStringReference(sourceString, length, hstringHeader, string);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowsDeleteString(win32::Windows::Win32::System::WinRT::HSTRING string) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(string);

        auto win32_impl_result = g_api_table.WindowsDeleteString(string);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowsDuplicateString(win32::Windows::Win32::System::WinRT::HSTRING string, win32::Windows::Win32::System::WinRT::HSTRING* newString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(string);
        ORBIT_TRACK_PARAM(newString);

        auto win32_impl_result = g_api_table.WindowsDuplicateString(string, newString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WindowsGetStringLen(win32::Windows::Win32::System::WinRT::HSTRING string) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(string);

        auto win32_impl_result = g_api_table.WindowsGetStringLen(string);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::PWSTR __stdcall ORBIT_IMPL_WindowsGetStringRawBuffer(win32::Windows::Win32::System::WinRT::HSTRING string, uint32_t* length) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(string);
        ORBIT_TRACK_PARAM(length);

        auto win32_impl_result = g_api_table.WindowsGetStringRawBuffer(string, length);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WindowsIsStringEmpty(win32::Windows::Win32::System::WinRT::HSTRING string) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(string);

        auto win32_impl_result = g_api_table.WindowsIsStringEmpty(string);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowsStringHasEmbeddedNull(win32::Windows::Win32::System::WinRT::HSTRING string, win32::Windows::Win32::Foundation::BOOL* hasEmbedNull) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(string);
        ORBIT_TRACK_PARAM(hasEmbedNull);

        auto win32_impl_result = g_api_table.WindowsStringHasEmbeddedNull(string, hasEmbedNull);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowsCompareStringOrdinal(win32::Windows::Win32::System::WinRT::HSTRING string1, win32::Windows::Win32::System::WinRT::HSTRING string2, int32_t* result) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(string1);
        ORBIT_TRACK_PARAM(string2);
        ORBIT_TRACK_PARAM(result);

        auto win32_impl_result = g_api_table.WindowsCompareStringOrdinal(string1, string2, result);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowsSubstring(win32::Windows::Win32::System::WinRT::HSTRING string, uint32_t startIndex, win32::Windows::Win32::System::WinRT::HSTRING* newString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(string);
        ORBIT_TRACK_PARAM(startIndex);
        ORBIT_TRACK_PARAM(newString);

        auto win32_impl_result = g_api_table.WindowsSubstring(string, startIndex, newString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowsSubstringWithSpecifiedLength(win32::Windows::Win32::System::WinRT::HSTRING string, uint32_t startIndex, uint32_t length, win32::Windows::Win32::System::WinRT::HSTRING* newString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(string);
        ORBIT_TRACK_PARAM(startIndex);
        ORBIT_TRACK_PARAM(length);
        ORBIT_TRACK_PARAM(newString);

        auto win32_impl_result = g_api_table.WindowsSubstringWithSpecifiedLength(string, startIndex, length, newString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowsConcatString(win32::Windows::Win32::System::WinRT::HSTRING string1, win32::Windows::Win32::System::WinRT::HSTRING string2, win32::Windows::Win32::System::WinRT::HSTRING* newString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(string1);
        ORBIT_TRACK_PARAM(string2);
        ORBIT_TRACK_PARAM(newString);

        auto win32_impl_result = g_api_table.WindowsConcatString(string1, string2, newString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowsReplaceString(win32::Windows::Win32::System::WinRT::HSTRING string, win32::Windows::Win32::System::WinRT::HSTRING stringReplaced, win32::Windows::Win32::System::WinRT::HSTRING stringReplaceWith, win32::Windows::Win32::System::WinRT::HSTRING* newString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(string);
        ORBIT_TRACK_PARAM(stringReplaced);
        ORBIT_TRACK_PARAM(stringReplaceWith);
        ORBIT_TRACK_PARAM(newString);

        auto win32_impl_result = g_api_table.WindowsReplaceString(string, stringReplaced, stringReplaceWith, newString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowsTrimStringStart(win32::Windows::Win32::System::WinRT::HSTRING string, win32::Windows::Win32::System::WinRT::HSTRING trimString, win32::Windows::Win32::System::WinRT::HSTRING* newString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(string);
        ORBIT_TRACK_PARAM(trimString);
        ORBIT_TRACK_PARAM(newString);

        auto win32_impl_result = g_api_table.WindowsTrimStringStart(string, trimString, newString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowsTrimStringEnd(win32::Windows::Win32::System::WinRT::HSTRING string, win32::Windows::Win32::System::WinRT::HSTRING trimString, win32::Windows::Win32::System::WinRT::HSTRING* newString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(string);
        ORBIT_TRACK_PARAM(trimString);
        ORBIT_TRACK_PARAM(newString);

        auto win32_impl_result = g_api_table.WindowsTrimStringEnd(string, trimString, newString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowsPreallocateStringBuffer(uint32_t length, uint16_t** charBuffer, win32::Windows::Win32::System::WinRT::HSTRING_BUFFER* bufferHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(length);
        ORBIT_TRACK_PARAM(charBuffer);
        ORBIT_TRACK_PARAM(bufferHandle);

        auto win32_impl_result = g_api_table.WindowsPreallocateStringBuffer(length, charBuffer, bufferHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowsPromoteStringBuffer(win32::Windows::Win32::System::WinRT::HSTRING_BUFFER bufferHandle, win32::Windows::Win32::System::WinRT::HSTRING* string) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(bufferHandle);
        ORBIT_TRACK_PARAM(string);

        auto win32_impl_result = g_api_table.WindowsPromoteStringBuffer(bufferHandle, string);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowsDeleteStringBuffer(win32::Windows::Win32::System::WinRT::HSTRING_BUFFER bufferHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(bufferHandle);

        auto win32_impl_result = g_api_table.WindowsDeleteStringBuffer(bufferHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowsInspectString(size_t targetHString, uint16_t machine, win32::Windows::Win32::System::WinRT::PINSPECT_HSTRING_CALLBACK* callback, void* context, uint32_t* length, size_t* targetStringAddress) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(targetHString);
        ORBIT_TRACK_PARAM(machine);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(length);
        ORBIT_TRACK_PARAM(targetStringAddress);

        auto win32_impl_result = g_api_table.WindowsInspectString(targetHString, machine, callback, context, length, targetStringAddress);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowsInspectString2(uint64_t targetHString, uint16_t machine, win32::Windows::Win32::System::WinRT::PINSPECT_HSTRING_CALLBACK2* callback, void* context, uint32_t* length, uint64_t* targetStringAddress) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(targetHString);
        ORBIT_TRACK_PARAM(machine);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(length);
        ORBIT_TRACK_PARAM(targetStringAddress);

        auto win32_impl_result = g_api_table.WindowsInspectString2(targetHString, machine, callback, context, length, targetStringAddress);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateDispatcherQueueController(win32::Windows::Win32::System::WinRT::DispatcherQueueOptions options, win32::Windows::System::DispatcherQueueController** dispatcherQueueController) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(options);
        ORBIT_TRACK_PARAM(dispatcherQueueController);

        auto win32_impl_result = g_api_table.CreateDispatcherQueueController(options, dispatcherQueueController);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_PdfCreateRenderer(win32::Windows::Win32::Graphics::Dxgi::IDXGIDevice* pDevice, win32::Windows::Win32::System::WinRT::IPdfRendererNative** ppRenderer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDevice);
        ORBIT_TRACK_PARAM(ppRenderer);

        auto win32_impl_result = g_api_table.PdfCreateRenderer(pDevice, ppRenderer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateDirect3D11DeviceFromDXGIDevice(win32::Windows::Win32::Graphics::Dxgi::IDXGIDevice* dxgiDevice, win32::Windows::Win32::System::WinRT::IInspectable** graphicsDevice) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dxgiDevice);
        ORBIT_TRACK_PARAM(graphicsDevice);

        auto win32_impl_result = g_api_table.CreateDirect3D11DeviceFromDXGIDevice(dxgiDevice, graphicsDevice);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateDirect3D11SurfaceFromDXGISurface(win32::Windows::Win32::Graphics::Dxgi::IDXGISurface* dgxiSurface, win32::Windows::Win32::System::WinRT::IInspectable** graphicsSurface) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dgxiSurface);
        ORBIT_TRACK_PARAM(graphicsSurface);

        auto win32_impl_result = g_api_table.CreateDirect3D11SurfaceFromDXGISurface(dgxiSurface, graphicsSurface);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoInitialize(win32::Windows::Win32::System::WinRT::RO_INIT_TYPE initType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(initType);

        auto win32_impl_result = g_api_table.RoInitialize(initType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RoUninitialize() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        g_api_table.RoUninitialize();
        
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoActivateInstance(win32::Windows::Win32::System::WinRT::HSTRING activatableClassId, win32::Windows::Win32::System::WinRT::IInspectable** instance) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(activatableClassId);
        ORBIT_TRACK_PARAM(instance);

        auto win32_impl_result = g_api_table.RoActivateInstance(activatableClassId, instance);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoRegisterActivationFactories(win32::Windows::Win32::System::WinRT::HSTRING* activatableClassIds, intptr_t* activationFactoryCallbacks, uint32_t count, intptr_t* cookie) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(activatableClassIds);
        ORBIT_TRACK_PARAM(activationFactoryCallbacks);
        ORBIT_TRACK_PARAM(count);
        ORBIT_TRACK_PARAM(cookie);

        auto win32_impl_result = g_api_table.RoRegisterActivationFactories(activatableClassIds, activationFactoryCallbacks, count, cookie);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RoRevokeActivationFactories(intptr_t cookie) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(cookie);

        g_api_table.RoRevokeActivationFactories(cookie);
        
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoGetActivationFactory(win32::Windows::Win32::System::WinRT::HSTRING activatableClassId, ::win32::guid* iid, void** factory) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(activatableClassId);
        ORBIT_TRACK_PARAM(iid);
        ORBIT_TRACK_PARAM(factory);

        auto win32_impl_result = g_api_table.RoGetActivationFactory(activatableClassId, iid, factory);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoRegisterForApartmentShutdown(win32::Windows::Win32::System::WinRT::IApartmentShutdown* callbackObject, uint64_t* apartmentIdentifier, win32::Windows::Win32::System::WinRT::APARTMENT_SHUTDOWN_REGISTRATION_COOKIE* regCookie) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(callbackObject);
        ORBIT_TRACK_PARAM(apartmentIdentifier);
        ORBIT_TRACK_PARAM(regCookie);

        auto win32_impl_result = g_api_table.RoRegisterForApartmentShutdown(callbackObject, apartmentIdentifier, regCookie);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoUnregisterForApartmentShutdown(win32::Windows::Win32::System::WinRT::APARTMENT_SHUTDOWN_REGISTRATION_COOKIE regCookie) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(regCookie);

        auto win32_impl_result = g_api_table.RoUnregisterForApartmentShutdown(regCookie);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoGetApartmentIdentifier(uint64_t* apartmentIdentifier) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(apartmentIdentifier);

        auto win32_impl_result = g_api_table.RoGetApartmentIdentifier(apartmentIdentifier);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoGetBufferMarshaler(win32::Windows::Win32::System::Com::Marshal::IMarshal** bufferMarshaler) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(bufferMarshaler);

        auto win32_impl_result = g_api_table.RoGetBufferMarshaler(bufferMarshaler);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoGetErrorReportingFlags(uint32_t* pflags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pflags);

        auto win32_impl_result = g_api_table.RoGetErrorReportingFlags(pflags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoSetErrorReportingFlags(uint32_t flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(flags);

        auto win32_impl_result = g_api_table.RoSetErrorReportingFlags(flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoResolveRestrictedErrorInfoReference(win32::Windows::Win32::Foundation::PWSTR reference, win32::Windows::Win32::System::WinRT::IRestrictedErrorInfo** ppRestrictedErrorInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(reference);
        ORBIT_TRACK_PARAM(ppRestrictedErrorInfo);

        auto win32_impl_result = g_api_table.RoResolveRestrictedErrorInfoReference(reference, ppRestrictedErrorInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SetRestrictedErrorInfo(win32::Windows::Win32::System::WinRT::IRestrictedErrorInfo* pRestrictedErrorInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pRestrictedErrorInfo);

        auto win32_impl_result = g_api_table.SetRestrictedErrorInfo(pRestrictedErrorInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetRestrictedErrorInfo(win32::Windows::Win32::System::WinRT::IRestrictedErrorInfo** ppRestrictedErrorInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ppRestrictedErrorInfo);

        auto win32_impl_result = g_api_table.GetRestrictedErrorInfo(ppRestrictedErrorInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RoOriginateErrorW(win32::Windows::Win32::Foundation::HRESULT error, uint32_t cchMax, win32::Windows::Win32::Foundation::PWSTR message) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(error);
        ORBIT_TRACK_PARAM(cchMax);
        ORBIT_TRACK_PARAM(message);

        auto win32_impl_result = g_api_table.RoOriginateErrorW(error, cchMax, message);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RoOriginateError(win32::Windows::Win32::Foundation::HRESULT error, win32::Windows::Win32::System::WinRT::HSTRING message) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(error);
        ORBIT_TRACK_PARAM(message);

        auto win32_impl_result = g_api_table.RoOriginateError(error, message);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RoTransformErrorW(win32::Windows::Win32::Foundation::HRESULT oldError, win32::Windows::Win32::Foundation::HRESULT newError, uint32_t cchMax, win32::Windows::Win32::Foundation::PWSTR message) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(oldError);
        ORBIT_TRACK_PARAM(newError);
        ORBIT_TRACK_PARAM(cchMax);
        ORBIT_TRACK_PARAM(message);

        auto win32_impl_result = g_api_table.RoTransformErrorW(oldError, newError, cchMax, message);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RoTransformError(win32::Windows::Win32::Foundation::HRESULT oldError, win32::Windows::Win32::Foundation::HRESULT newError, win32::Windows::Win32::System::WinRT::HSTRING message) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(oldError);
        ORBIT_TRACK_PARAM(newError);
        ORBIT_TRACK_PARAM(message);

        auto win32_impl_result = g_api_table.RoTransformError(oldError, newError, message);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoCaptureErrorContext(win32::Windows::Win32::Foundation::HRESULT hr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hr);

        auto win32_impl_result = g_api_table.RoCaptureErrorContext(hr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RoFailFastWithErrorContext(win32::Windows::Win32::Foundation::HRESULT hrError) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hrError);

        g_api_table.RoFailFastWithErrorContext(hrError);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RoOriginateLanguageException(win32::Windows::Win32::Foundation::HRESULT error, win32::Windows::Win32::System::WinRT::HSTRING message, win32::Windows::Win32::System::Com::IUnknown* languageException) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(error);
        ORBIT_TRACK_PARAM(message);
        ORBIT_TRACK_PARAM(languageException);

        auto win32_impl_result = g_api_table.RoOriginateLanguageException(error, message, languageException);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RoClearError() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        g_api_table.RoClearError();
        
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoReportUnhandledError(win32::Windows::Win32::System::WinRT::IRestrictedErrorInfo* pRestrictedErrorInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pRestrictedErrorInfo);

        auto win32_impl_result = g_api_table.RoReportUnhandledError(pRestrictedErrorInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoInspectThreadErrorInfo(size_t targetTebAddress, uint16_t machine, win32::Windows::Win32::System::WinRT::PINSPECT_MEMORY_CALLBACK* readMemoryCallback, void* context, size_t* targetErrorInfoAddress) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(targetTebAddress);
        ORBIT_TRACK_PARAM(machine);
        ORBIT_TRACK_PARAM(readMemoryCallback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(targetErrorInfoAddress);

        auto win32_impl_result = g_api_table.RoInspectThreadErrorInfo(targetTebAddress, machine, readMemoryCallback, context, targetErrorInfoAddress);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoInspectCapturedStackBackTrace(size_t targetErrorInfoAddress, uint16_t machine, win32::Windows::Win32::System::WinRT::PINSPECT_MEMORY_CALLBACK* readMemoryCallback, void* context, uint32_t* frameCount, size_t* targetBackTraceAddress) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(targetErrorInfoAddress);
        ORBIT_TRACK_PARAM(machine);
        ORBIT_TRACK_PARAM(readMemoryCallback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(frameCount);
        ORBIT_TRACK_PARAM(targetBackTraceAddress);

        auto win32_impl_result = g_api_table.RoInspectCapturedStackBackTrace(targetErrorInfoAddress, machine, readMemoryCallback, context, frameCount, targetBackTraceAddress);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoGetMatchingRestrictedErrorInfo(win32::Windows::Win32::Foundation::HRESULT hrIn, win32::Windows::Win32::System::WinRT::IRestrictedErrorInfo** ppRestrictedErrorInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hrIn);
        ORBIT_TRACK_PARAM(ppRestrictedErrorInfo);

        auto win32_impl_result = g_api_table.RoGetMatchingRestrictedErrorInfo(hrIn, ppRestrictedErrorInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoReportFailedDelegate(win32::Windows::Win32::System::Com::IUnknown* punkDelegate, win32::Windows::Win32::System::WinRT::IRestrictedErrorInfo* pRestrictedErrorInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(punkDelegate);
        ORBIT_TRACK_PARAM(pRestrictedErrorInfo);

        auto win32_impl_result = g_api_table.RoReportFailedDelegate(punkDelegate, pRestrictedErrorInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsErrorPropagationEnabled() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.IsErrorPropagationEnabled();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_MetaDataGetDispenser(::win32::guid* rclsid, ::win32::guid* riid, void** ppv) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rclsid);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppv);

        auto win32_impl_result = g_api_table.MetaDataGetDispenser(rclsid, riid, ppv);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoGetParameterizedTypeInstanceIID(uint32_t nameElementCount, win32::Windows::Win32::Foundation::PWSTR* nameElements, win32::Windows::Win32::System::WinRT::IRoMetaDataLocator* metaDataLocator, ::win32::guid* iid, win32::Windows::Win32::System::WinRT::ROPARAMIIDHANDLE* pExtra) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(nameElementCount);
        ORBIT_TRACK_PARAM(nameElements);
        ORBIT_TRACK_PARAM(metaDataLocator);
        ORBIT_TRACK_PARAM(iid);
        ORBIT_TRACK_PARAM(pExtra);

        auto win32_impl_result = g_api_table.RoGetParameterizedTypeInstanceIID(nameElementCount, nameElements, metaDataLocator, iid, pExtra);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RoFreeParameterizedTypeExtra(win32::Windows::Win32::System::WinRT::ROPARAMIIDHANDLE extra) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(extra);

        g_api_table.RoFreeParameterizedTypeExtra(extra);
        
    }

    win32::Windows::Win32::Foundation::PSTR __stdcall ORBIT_IMPL_RoParameterizedTypeExtraGetTypeSignature(win32::Windows::Win32::System::WinRT::ROPARAMIIDHANDLE extra) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(extra);

        auto win32_impl_result = g_api_table.RoParameterizedTypeExtraGetTypeSignature(extra);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RoGetServerActivatableClasses(win32::Windows::Win32::System::WinRT::HSTRING serverName, win32::Windows::Win32::System::WinRT::HSTRING** activatableClassIds, uint32_t* count) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(serverName);
        ORBIT_TRACK_PARAM(activatableClassIds);
        ORBIT_TRACK_PARAM(count);

        auto win32_impl_result = g_api_table.RoGetServerActivatableClasses(serverName, activatableClassIds, count);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateRandomAccessStreamOnFile(win32::Windows::Win32::Foundation::PWSTR filePath, uint32_t accessMode, ::win32::guid* riid, void** ppv) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(filePath);
        ORBIT_TRACK_PARAM(accessMode);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppv);

        auto win32_impl_result = g_api_table.CreateRandomAccessStreamOnFile(filePath, accessMode, riid, ppv);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateRandomAccessStreamOverStream(win32::Windows::Win32::System::Com::IStream* stream, win32::Windows::Win32::System::WinRT::BSOS_OPTIONS options, ::win32::guid* riid, void** ppv) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(stream);
        ORBIT_TRACK_PARAM(options);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppv);

        auto win32_impl_result = g_api_table.CreateRandomAccessStreamOverStream(stream, options, riid, ppv);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateStreamOverRandomAccessStream(win32::Windows::Win32::System::Com::IUnknown* randomAccessStream, ::win32::guid* riid, void** ppv) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(randomAccessStream);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppv);

        auto win32_impl_result = g_api_table.CreateStreamOverRandomAccessStream(randomAccessStream, riid, ppv);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
