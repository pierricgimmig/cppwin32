// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_Registry_0_H
#define WIN32_Windows_Win32_System_Registry_0_H
WIN32_EXPORT namespace win32::Windows::Win32::System::Registry
{
#pragma region enums
    enum class REG_CREATE_KEY_DISPOSITION : uint32_t
    {
        REG_CREATED_NEW_KEY = 0x1,
        REG_OPENED_EXISTING_KEY = 0x2,
    };
    enum class REG_NOTIFY_FILTER : uint32_t
    {
        REG_NOTIFY_CHANGE_NAME = 0x1,
        REG_NOTIFY_CHANGE_ATTRIBUTES = 0x2,
        REG_NOTIFY_CHANGE_LAST_SET = 0x4,
        REG_NOTIFY_CHANGE_SECURITY = 0x8,
        REG_NOTIFY_THREAD_AGNOSTIC = 0x10000000,
    };
    enum class REG_OPEN_CREATE_OPTIONS : uint32_t
    {
        REG_OPTION_RESERVED = 0x0,
        REG_OPTION_NON_VOLATILE = 0x0,
        REG_OPTION_VOLATILE = 0x1,
        REG_OPTION_CREATE_LINK = 0x2,
        REG_OPTION_BACKUP_RESTORE = 0x4,
        REG_OPTION_OPEN_LINK = 0x8,
        REG_OPTION_DONT_VIRTUALIZE = 0x10,
    };
    enum class REG_RESTORE_KEY_FLAGS : int32_t
    {
        REG_FORCE_RESTORE = 8,
        REG_WHOLE_HIVE_VOLATILE = 1,
    };
    enum class REG_SAM_FLAGS : uint32_t
    {
        KEY_QUERY_VALUE = 0x1,
        KEY_SET_VALUE = 0x2,
        KEY_CREATE_SUB_KEY = 0x4,
        KEY_ENUMERATE_SUB_KEYS = 0x8,
        KEY_NOTIFY = 0x10,
        KEY_CREATE_LINK = 0x20,
        KEY_WOW64_32KEY = 0x200,
        KEY_WOW64_64KEY = 0x100,
        KEY_WOW64_RES = 0x300,
        KEY_READ = 0x20019,
        KEY_WRITE = 0x20006,
        KEY_EXECUTE = 0x20019,
        KEY_ALL_ACCESS = 0xf003f,
    };
    enum class REG_SAVE_FORMAT : uint32_t
    {
        REG_STANDARD_FORMAT = 0x1,
        REG_LATEST_FORMAT = 0x2,
        REG_NO_COMPRESSION = 0x4,
    };
    enum class REG_VALUE_TYPE : uint32_t
    {
        REG_NONE = 0x0,
        REG_SZ = 0x1,
        REG_EXPAND_SZ = 0x2,
        REG_BINARY = 0x3,
        REG_DWORD = 0x4,
        REG_DWORD_LITTLE_ENDIAN = 0x4,
        REG_DWORD_BIG_ENDIAN = 0x5,
        REG_LINK = 0x6,
        REG_MULTI_SZ = 0x7,
        REG_RESOURCE_LIST = 0x8,
        REG_FULL_RESOURCE_DESCRIPTOR = 0x9,
        REG_RESOURCE_REQUIREMENTS_LIST = 0xa,
        REG_QWORD = 0xb,
        REG_QWORD_LITTLE_ENDIAN = 0xb,
    };
    enum class RRF_RT : uint32_t
    {
        RRF_RT_ANY = 0xffff,
        RRF_RT_DWORD = 0x18,
        RRF_RT_QWORD = 0x48,
        RRF_RT_REG_BINARY = 0x8,
        RRF_RT_REG_DWORD = 0x10,
        RRF_RT_REG_EXPAND_SZ = 0x4,
        RRF_RT_REG_MULTI_SZ = 0x20,
        RRF_RT_REG_NONE = 0x1,
        RRF_RT_REG_QWORD = 0x40,
        RRF_RT_REG_SZ = 0x2,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct DSKTLSYSTEMTIME;
    struct HKEY;
    struct VALENTA;
    struct VALENTW;
    struct provider_info;
    struct pvalueA;
    struct pvalueW;
    struct val_context;
#pragma endregion forward_declarations

#pragma region delegates
    using PQUERYHANDLER = uint32_t __stdcall(void*, Windows::Win32::System::Registry::val_context*, uint32_t, void*, uint32_t*, uint32_t);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
