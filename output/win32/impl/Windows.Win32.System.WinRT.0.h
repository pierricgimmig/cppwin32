// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_WinRT_0_H
#define WIN32_Windows_Win32_System_WinRT_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct HRESULT;
}
WIN32_EXPORT namespace win32::Windows::Win32::Graphics::Dxgi
{
    struct IDXGIDevice;
}
WIN32_EXPORT namespace win32::Windows::Win32::System::WinRT
{
#pragma region enums
    enum class ACTIVATIONTYPE : int32_t
    {
        ACTIVATIONTYPE_UNCATEGORIZED = 0,
        ACTIVATIONTYPE_FROM_MONIKER = 1,
        ACTIVATIONTYPE_FROM_DATA = 2,
        ACTIVATIONTYPE_FROM_STORAGE = 4,
        ACTIVATIONTYPE_FROM_STREAM = 8,
        ACTIVATIONTYPE_FROM_FILE = 16,
    };
    enum class AgileReferenceOptions : int32_t
    {
        AGILEREFERENCE_DEFAULT = 0,
        AGILEREFERENCE_DELAYEDMARSHAL = 1,
    };
    enum class BSOS_OPTIONS : int32_t
    {
        BSOS_DEFAULT = 0,
        BSOS_PREFERDESTINATIONSTREAM = 1,
    };
    enum class CASTING_CONNECTION_ERROR_STATUS : int32_t
    {
        CASTING_CONNECTION_ERROR_STATUS_SUCCEEDED = 0,
        CASTING_CONNECTION_ERROR_STATUS_DEVICE_DID_NOT_RESPOND = 1,
        CASTING_CONNECTION_ERROR_STATUS_DEVICE_ERROR = 2,
        CASTING_CONNECTION_ERROR_STATUS_DEVICE_LOCKED = 3,
        CASTING_CONNECTION_ERROR_STATUS_PROTECTED_PLAYBACK_FAILED = 4,
        CASTING_CONNECTION_ERROR_STATUS_INVALID_CASTING_SOURCE = 5,
        CASTING_CONNECTION_ERROR_STATUS_UNKNOWN = 6,
    };
    enum class CASTING_CONNECTION_STATE : int32_t
    {
        CASTING_CONNECTION_STATE_DISCONNECTED = 0,
        CASTING_CONNECTION_STATE_CONNECTED = 1,
        CASTING_CONNECTION_STATE_RENDERING = 2,
        CASTING_CONNECTION_STATE_DISCONNECTING = 3,
        CASTING_CONNECTION_STATE_CONNECTING = 4,
    };
    enum class CreateProcessMethod : int32_t
    {
        CpCreateProcess = 0,
        CpCreateProcessAsUser = 1,
        CpAicLaunchAdminProcess = 2,
    };
    enum class DISPATCHERQUEUE_THREAD_APARTMENTTYPE : int32_t
    {
        DQTAT_COM_NONE = 0,
        DQTAT_COM_ASTA = 1,
        DQTAT_COM_STA = 2,
    };
    enum class DISPATCHERQUEUE_THREAD_TYPE : int32_t
    {
        DQTYPE_THREAD_DEDICATED = 1,
        DQTYPE_THREAD_CURRENT = 2,
    };
    enum class GRAPHICS_EFFECT_PROPERTY_MAPPING : int32_t
    {
        GRAPHICS_EFFECT_PROPERTY_MAPPING_UNKNOWN = 0,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_DIRECT = 1,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_VECTORX = 2,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_VECTORY = 3,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_VECTORZ = 4,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_VECTORW = 5,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_RECT_TO_VECTOR4 = 6,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_RADIANS_TO_DEGREES = 7,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_COLORMATRIX_ALPHA_MODE = 8,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_COLOR_TO_VECTOR3 = 9,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_COLOR_TO_VECTOR4 = 10,
    };
    enum class HANDLE_ACCESS_OPTIONS : uint32_t
    {
        HAO_NONE = 0x0,
        HAO_READ_ATTRIBUTES = 0x80,
        HAO_READ = 0x120089,
        HAO_WRITE = 0x120116,
        HAO_DELETE = 0x10000,
    };
    enum class HANDLE_CREATION_OPTIONS : int32_t
    {
        HCO_CREATE_NEW = 1,
        HCO_CREATE_ALWAYS = 2,
        HCO_OPEN_EXISTING = 3,
        HCO_OPEN_ALWAYS = 4,
        HCO_TRUNCATE_EXISTING = 5,
    };
    enum class HANDLE_OPTIONS : uint32_t
    {
        HO_NONE = 0x0,
        HO_OPEN_REQUIRING_OPLOCK = 0x40000,
        HO_DELETE_ON_CLOSE = 0x4000000,
        HO_SEQUENTIAL_SCAN = 0x8000000,
        HO_RANDOM_ACCESS = 0x10000000,
        HO_NO_BUFFERING = 0x20000000,
        HO_OVERLAPPED = 0x40000000,
        HO_WRITE_THROUGH = 0x80000000,
    };
    enum class HANDLE_SHARING_OPTIONS : uint32_t
    {
        HSO_SHARE_NONE = 0x0,
        HSO_SHARE_READ = 0x1,
        HSO_SHARE_WRITE = 0x2,
        HSO_SHARE_DELETE = 0x4,
    };
    enum class RO_ERROR_REPORTING_FLAGS : uint32_t
    {
        RO_ERROR_REPORTING_NONE = 0x0,
        RO_ERROR_REPORTING_SUPPRESSEXCEPTIONS = 0x1,
        RO_ERROR_REPORTING_FORCEEXCEPTIONS = 0x2,
        RO_ERROR_REPORTING_USESETERRORINFO = 0x4,
        RO_ERROR_REPORTING_SUPPRESSSETERRORINFO = 0x8,
    };
    enum class RO_INIT_TYPE : int32_t
    {
        RO_INIT_SINGLETHREADED = 0,
        RO_INIT_MULTITHREADED = 1,
    };
    enum class TrustLevel : int32_t
    {
        BaseTrust = 0,
        PartialTrust = 1,
        FullTrust = 2,
    };
    enum class XAML_REFERENCETRACKER_DISCONNECT : int32_t
    {
        XAML_REFERENCETRACKER_DISCONNECT_DEFAULT = 0,
        XAML_REFERENCETRACKER_DISCONNECT_SUSPEND = 1,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct APARTMENT_SHUTDOWN_REGISTRATION_COOKIE;
    struct DispatcherQueueOptions;
    struct EventRegistrationToken;
    struct HSTRING;
    struct HSTRING_BUFFER;
    struct HSTRING_HEADER;
    struct PDF_RENDER_PARAMS;
    struct ROPARAMIIDHANDLE;
    struct ServerInformation;
    struct TrackerHandle__;
    struct _RO_REGISTRATION_COOKIE;
    struct IAccountsSettingsPaneInterop;
    struct IActivationFactory;
    struct IAgileReference;
    struct IApartmentShutdown;
    struct IAppServiceConnectionExtendedExecution;
    struct IAudioFrameNative;
    struct IAudioFrameNativeFactory;
    struct IBufferByteAccess;
    struct ICastingController;
    struct ICastingEventHandler;
    struct ICastingSourceInfo;
    struct ICompositionCapabilitiesInteropFactory;
    struct ICompositionDrawingSurfaceInterop;
    struct ICompositionDrawingSurfaceInterop2;
    struct ICompositionGraphicsDeviceInterop;
    struct ICompositorDesktopInterop;
    struct ICompositorInterop;
    struct ICoreFrameworkInputViewInterop;
    struct ICorrelationVectorInformation;
    struct ICorrelationVectorSource;
    struct IDDEInitializer;
    struct IDesktopWindowTargetInterop;
    struct IDesktopWindowXamlSourceNative;
    struct IDesktopWindowXamlSourceNative2;
    struct IDirect3DDxgiInterfaceAccess;
    struct IDisplayDeviceInterop;
    struct IDisplayPathInterop;
    struct IDragDropManagerInterop;
    struct IFindReferenceTargetsCallback;
    struct IGeometrySource2DInterop;
    struct IGraphicsCaptureItemInterop;
    struct IGraphicsEffectD2D1Interop;
    struct IHolographicCameraInterop;
    struct IHolographicCameraRenderingParametersInterop;
    struct IHolographicQuadLayerInterop;
    struct IHolographicQuadLayerUpdateParametersInterop;
    struct IHolographicSpaceInterop;
    struct IInputPaneInterop;
    struct IInspectable;
    struct IIsolatedEnvironmentInterop;
    struct ILanguageExceptionErrorInfo;
    struct ILanguageExceptionErrorInfo2;
    struct ILanguageExceptionStackBackTrace;
    struct ILanguageExceptionTransform;
    struct ILearningModelDeviceFactoryNative;
    struct ILearningModelOperatorProviderNative;
    struct ILearningModelSessionOptionsNative;
    struct IMemoryBufferByteAccess;
    struct IMessageDispatcher;
    struct IOplockBreakingHandler;
    struct IPdfRendererNative;
    struct IPlayToManagerInterop;
    struct IPrintManagerInterop;
    struct IPrintWorkflowConfigurationNative;
    struct IPrintWorkflowObjectModelSourceFileContentNative;
    struct IPrintWorkflowXpsObjectModelTargetPackageNative;
    struct IPrintWorkflowXpsReceiver;
    struct IPrintWorkflowXpsReceiver2;
    struct IPrinting3DManagerInterop;
    struct IRandomAccessStreamFileAccessMode;
    struct IReferenceTracker;
    struct IReferenceTrackerExtension;
    struct IReferenceTrackerHost;
    struct IReferenceTrackerManager;
    struct IReferenceTrackerTarget;
    struct IRestrictedErrorInfo;
    struct IRoMetaDataLocator;
    struct IRoSimpleMetaDataBuilder;
    struct IShareWindowCommandEventArgsInterop;
    struct IShareWindowCommandSourceInterop;
    struct ISoftwareBitmapNative;
    struct ISoftwareBitmapNativeFactory;
    struct ISpatialInteractionManagerInterop;
    struct IStorageFolderHandleAccess;
    struct IStorageItemHandleAccess;
    struct ISurfaceImageSourceManagerNative;
    struct ISurfaceImageSourceNative;
    struct ISurfaceImageSourceNativeWithD2D;
    struct ISwapChainBackgroundPanelNative;
    struct ISwapChainInterop;
    struct ISwapChainPanelNative;
    struct ISwapChainPanelNative2;
    struct ISystemMediaTransportControlsInterop;
    struct ITensorNative;
    struct ITensorStaticsNative;
    struct ITrackerOwner;
    struct IUIViewSettingsInterop;
    struct IUnbufferedFileHandleOplockCallback;
    struct IUnbufferedFileHandleProvider;
    struct IUserActivityInterop;
    struct IUserActivityRequestManagerInterop;
    struct IUserActivitySourceHostInterop;
    struct IUserConsentVerifierInterop;
    struct IVideoFrameNative;
    struct IVideoFrameNativeFactory;
    struct IVirtualSurfaceImageSourceNative;
    struct IVirtualSurfaceUpdatesCallbackNative;
    struct IVisualInteractionSourceInterop;
    struct IWeakReference;
    struct IWeakReferenceSource;
    struct IWebAuthenticationCoreManagerInterop;
    struct IWindowsDevicesAllJoynBusAttachmentFactoryInterop;
    struct IWindowsDevicesAllJoynBusAttachmentInterop;
    struct IWindowsDevicesAllJoynBusObjectFactoryInterop;
    struct IWindowsDevicesAllJoynBusObjectInterop;
#pragma endregion forward_declarations

#pragma region delegates
    using PINSPECT_HSTRING_CALLBACK = Windows::Win32::Foundation::HRESULT __stdcall(void*, size_t, uint32_t, uint8_t*);
    using PINSPECT_HSTRING_CALLBACK2 = Windows::Win32::Foundation::HRESULT __stdcall(void*, uint64_t, uint32_t, uint8_t*);
    using PFN_PDF_CREATE_RENDERER = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Graphics::Dxgi::IDXGIDevice*, Windows::Win32::System::WinRT::IPdfRendererNative**);
    using PINSPECT_MEMORY_CALLBACK = Windows::Win32::Foundation::HRESULT __stdcall(void*, size_t, uint32_t, uint8_t*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
