// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Security_Authorization_0_H
#define WIN32_Windows_Win32_Security_Authorization_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct BOOL;
    struct PSID;
    struct PWSTR;
}
WIN32_EXPORT namespace win32::Windows::Win32::Security
{
    struct ACE_HEADER;
    struct SID_AND_ATTRIBUTES;
}
WIN32_EXPORT namespace win32::Windows::Win32::Security::Authorization
{
#pragma region enums
    enum class ACCESS_MODE : int32_t
    {
        NOT_USED_ACCESS = 0,
        GRANT_ACCESS = 1,
        SET_ACCESS = 2,
        DENY_ACCESS = 3,
        REVOKE_ACCESS = 4,
        SET_AUDIT_SUCCESS = 5,
        SET_AUDIT_FAILURE = 6,
    };
    enum class ACTRL_ACCESS_ENTRY_ACCESS_FLAGS : uint32_t
    {
        ACTRL_ACCESS_ALLOWED = 0x1,
        ACTRL_ACCESS_DENIED = 0x2,
        ACTRL_AUDIT_SUCCESS = 0x4,
        ACTRL_AUDIT_FAILURE = 0x8,
    };
    enum class AUDIT_PARAM_TYPE : int32_t
    {
        APT_None = 1,
        APT_String = 2,
        APT_Ulong = 3,
        APT_Pointer = 4,
        APT_Sid = 5,
        APT_LogonId = 6,
        APT_ObjectTypeList = 7,
        APT_Luid = 8,
        APT_Guid = 9,
        APT_Time = 10,
        APT_Int64 = 11,
        APT_IpAddress = 12,
        APT_LogonIdWithSid = 13,
    };
    enum class AUTHZ_ACCESS_CHECK_FLAGS : uint32_t
    {
        AUTHZ_ACCESS_CHECK_NO_DEEP_COPY_SD = 0x1,
    };
    enum class AUTHZ_AUDIT_EVENT_INFORMATION_CLASS : int32_t
    {
        AuthzAuditEventInfoFlags = 1,
        AuthzAuditEventInfoOperationType = 2,
        AuthzAuditEventInfoObjectType = 3,
        AuthzAuditEventInfoObjectName = 4,
        AuthzAuditEventInfoAdditionalInfo = 5,
    };
    enum class AUTHZ_CONTEXT_INFORMATION_CLASS : int32_t
    {
        AuthzContextInfoUserSid = 1,
        AuthzContextInfoGroupsSids = 2,
        AuthzContextInfoRestrictedSids = 3,
        AuthzContextInfoPrivileges = 4,
        AuthzContextInfoExpirationTime = 5,
        AuthzContextInfoServerContext = 6,
        AuthzContextInfoIdentifier = 7,
        AuthzContextInfoSource = 8,
        AuthzContextInfoAll = 9,
        AuthzContextInfoAuthenticationId = 10,
        AuthzContextInfoSecurityAttributes = 11,
        AuthzContextInfoDeviceSids = 12,
        AuthzContextInfoUserClaims = 13,
        AuthzContextInfoDeviceClaims = 14,
        AuthzContextInfoAppContainerSid = 15,
        AuthzContextInfoCapabilitySids = 16,
    };
    enum class AUTHZ_GENERATE_RESULTS : uint32_t
    {
        AUTHZ_GENERATE_SUCCESS_AUDIT = 0x1,
        AUTHZ_GENERATE_FAILURE_AUDIT = 0x2,
    };
    enum class AUTHZ_INITIALIZE_OBJECT_ACCESS_AUDIT_EVENT_FLAGS : uint32_t
    {
        AUTHZ_NO_SUCCESS_AUDIT = 0x1,
        AUTHZ_NO_FAILURE_AUDIT = 0x2,
        AUTHZ_NO_ALLOC_STRINGS = 0x4,
    };
    enum class AUTHZ_RESOURCE_MANAGER_FLAGS : uint32_t
    {
        AUTHZ_RM_FLAG_NO_AUDIT = 0x1,
        AUTHZ_RM_FLAG_INITIALIZE_UNDER_IMPERSONATION = 0x2,
        AUTHZ_RM_FLAG_NO_CENTRAL_ACCESS_POLICIES = 0x4,
    };
    enum class AUTHZ_SECURITY_ATTRIBUTE_FLAGS : uint32_t
    {
        AUTHZ_SECURITY_ATTRIBUTE_NON_INHERITABLE = 0x1,
        AUTHZ_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE = 0x2,
    };
    enum class AUTHZ_SECURITY_ATTRIBUTE_OPERATION : int32_t
    {
        AUTHZ_SECURITY_ATTRIBUTE_OPERATION_NONE = 0,
        AUTHZ_SECURITY_ATTRIBUTE_OPERATION_REPLACE_ALL = 1,
        AUTHZ_SECURITY_ATTRIBUTE_OPERATION_ADD = 2,
        AUTHZ_SECURITY_ATTRIBUTE_OPERATION_DELETE = 3,
        AUTHZ_SECURITY_ATTRIBUTE_OPERATION_REPLACE = 4,
    };
    enum class AUTHZ_SID_OPERATION : int32_t
    {
        AUTHZ_SID_OPERATION_NONE = 0,
        AUTHZ_SID_OPERATION_REPLACE_ALL = 1,
        AUTHZ_SID_OPERATION_ADD = 2,
        AUTHZ_SID_OPERATION_DELETE = 3,
        AUTHZ_SID_OPERATION_REPLACE = 4,
    };
    enum class AZ_PROP_CONSTANTS : int32_t
    {
        AZ_PROP_NAME = 1,
        AZ_PROP_DESCRIPTION = 2,
        AZ_PROP_WRITABLE = 3,
        AZ_PROP_APPLICATION_DATA = 4,
        AZ_PROP_CHILD_CREATE = 5,
        AZ_MAX_APPLICATION_NAME_LENGTH = 512,
        AZ_MAX_OPERATION_NAME_LENGTH = 64,
        AZ_MAX_TASK_NAME_LENGTH = 64,
        AZ_MAX_SCOPE_NAME_LENGTH = 65536,
        AZ_MAX_GROUP_NAME_LENGTH = 64,
        AZ_MAX_ROLE_NAME_LENGTH = 64,
        AZ_MAX_NAME_LENGTH = 65536,
        AZ_MAX_DESCRIPTION_LENGTH = 1024,
        AZ_MAX_APPLICATION_DATA_LENGTH = 4096,
        AZ_SUBMIT_FLAG_ABORT = 1,
        AZ_SUBMIT_FLAG_FLUSH = 2,
        AZ_MAX_POLICY_URL_LENGTH = 65536,
        AZ_AZSTORE_FLAG_CREATE = 1,
        AZ_AZSTORE_FLAG_MANAGE_STORE_ONLY = 2,
        AZ_AZSTORE_FLAG_BATCH_UPDATE = 4,
        AZ_AZSTORE_FLAG_AUDIT_IS_CRITICAL = 8,
        AZ_AZSTORE_FORCE_APPLICATION_CLOSE = 16,
        AZ_AZSTORE_NT6_FUNCTION_LEVEL = 32,
        AZ_AZSTORE_FLAG_MANAGE_ONLY_PASSIVE_SUBMIT = 32768,
        AZ_PROP_AZSTORE_DOMAIN_TIMEOUT = 100,
        AZ_AZSTORE_DEFAULT_DOMAIN_TIMEOUT = 15000,
        AZ_PROP_AZSTORE_SCRIPT_ENGINE_TIMEOUT = 101,
        AZ_AZSTORE_MIN_DOMAIN_TIMEOUT = 500,
        AZ_AZSTORE_MIN_SCRIPT_ENGINE_TIMEOUT = 5000,
        AZ_AZSTORE_DEFAULT_SCRIPT_ENGINE_TIMEOUT = 45000,
        AZ_PROP_AZSTORE_MAX_SCRIPT_ENGINES = 102,
        AZ_AZSTORE_DEFAULT_MAX_SCRIPT_ENGINES = 120,
        AZ_PROP_AZSTORE_MAJOR_VERSION = 103,
        AZ_PROP_AZSTORE_MINOR_VERSION = 104,
        AZ_PROP_AZSTORE_TARGET_MACHINE = 105,
        AZ_PROP_AZTORE_IS_ADAM_INSTANCE = 106,
        AZ_PROP_OPERATION_ID = 200,
        AZ_PROP_TASK_OPERATIONS = 300,
        AZ_PROP_TASK_BIZRULE = 301,
        AZ_PROP_TASK_BIZRULE_LANGUAGE = 302,
        AZ_PROP_TASK_TASKS = 303,
        AZ_PROP_TASK_BIZRULE_IMPORTED_PATH = 304,
        AZ_PROP_TASK_IS_ROLE_DEFINITION = 305,
        AZ_MAX_TASK_BIZRULE_LENGTH = 65536,
        AZ_MAX_TASK_BIZRULE_LANGUAGE_LENGTH = 64,
        AZ_MAX_TASK_BIZRULE_IMPORTED_PATH_LENGTH = 512,
        AZ_MAX_BIZRULE_STRING = 65536,
        AZ_PROP_GROUP_TYPE = 400,
        AZ_GROUPTYPE_LDAP_QUERY = 1,
        AZ_GROUPTYPE_BASIC = 2,
        AZ_GROUPTYPE_BIZRULE = 3,
        AZ_PROP_GROUP_APP_MEMBERS = 401,
        AZ_PROP_GROUP_APP_NON_MEMBERS = 402,
        AZ_PROP_GROUP_LDAP_QUERY = 403,
        AZ_MAX_GROUP_LDAP_QUERY_LENGTH = 4096,
        AZ_PROP_GROUP_MEMBERS = 404,
        AZ_PROP_GROUP_NON_MEMBERS = 405,
        AZ_PROP_GROUP_MEMBERS_NAME = 406,
        AZ_PROP_GROUP_NON_MEMBERS_NAME = 407,
        AZ_PROP_GROUP_BIZRULE = 408,
        AZ_PROP_GROUP_BIZRULE_LANGUAGE = 409,
        AZ_PROP_GROUP_BIZRULE_IMPORTED_PATH = 410,
        AZ_MAX_GROUP_BIZRULE_LENGTH = 65536,
        AZ_MAX_GROUP_BIZRULE_LANGUAGE_LENGTH = 64,
        AZ_MAX_GROUP_BIZRULE_IMPORTED_PATH_LENGTH = 512,
        AZ_PROP_ROLE_APP_MEMBERS = 500,
        AZ_PROP_ROLE_MEMBERS = 501,
        AZ_PROP_ROLE_OPERATIONS = 502,
        AZ_PROP_ROLE_TASKS = 504,
        AZ_PROP_ROLE_MEMBERS_NAME = 505,
        AZ_PROP_SCOPE_BIZRULES_WRITABLE = 600,
        AZ_PROP_SCOPE_CAN_BE_DELEGATED = 601,
        AZ_PROP_CLIENT_CONTEXT_USER_DN = 700,
        AZ_PROP_CLIENT_CONTEXT_USER_SAM_COMPAT = 701,
        AZ_PROP_CLIENT_CONTEXT_USER_DISPLAY = 702,
        AZ_PROP_CLIENT_CONTEXT_USER_GUID = 703,
        AZ_PROP_CLIENT_CONTEXT_USER_CANONICAL = 704,
        AZ_PROP_CLIENT_CONTEXT_USER_UPN = 705,
        AZ_PROP_CLIENT_CONTEXT_USER_DNS_SAM_COMPAT = 707,
        AZ_PROP_CLIENT_CONTEXT_ROLE_FOR_ACCESS_CHECK = 708,
        AZ_PROP_CLIENT_CONTEXT_LDAP_QUERY_DN = 709,
        AZ_PROP_APPLICATION_AUTHZ_INTERFACE_CLSID = 800,
        AZ_PROP_APPLICATION_VERSION = 801,
        AZ_MAX_APPLICATION_VERSION_LENGTH = 512,
        AZ_PROP_APPLICATION_NAME = 802,
        AZ_PROP_APPLICATION_BIZRULE_ENABLED = 803,
        AZ_PROP_APPLY_STORE_SACL = 900,
        AZ_PROP_GENERATE_AUDITS = 901,
        AZ_PROP_POLICY_ADMINS = 902,
        AZ_PROP_POLICY_READERS = 903,
        AZ_PROP_DELEGATED_POLICY_USERS = 904,
        AZ_PROP_POLICY_ADMINS_NAME = 905,
        AZ_PROP_POLICY_READERS_NAME = 906,
        AZ_PROP_DELEGATED_POLICY_USERS_NAME = 907,
        AZ_CLIENT_CONTEXT_SKIP_GROUP = 1,
        AZ_CLIENT_CONTEXT_SKIP_LDAP_QUERY = 1,
        AZ_CLIENT_CONTEXT_GET_GROUP_RECURSIVE = 2,
        AZ_CLIENT_CONTEXT_GET_GROUPS_STORE_LEVEL_ONLY = 2,
    };
    enum class MULTIPLE_TRUSTEE_OPERATION : int32_t
    {
        NO_MULTIPLE_TRUSTEE = 0,
        TRUSTEE_IS_IMPERSONATE = 1,
    };
    enum class PROG_INVOKE_SETTING : int32_t
    {
        ProgressInvokeNever = 1,
        ProgressInvokeEveryObject = 2,
        ProgressInvokeOnError = 3,
        ProgressCancelOperation = 4,
        ProgressRetryOperation = 5,
        ProgressInvokePrePostError = 6,
    };
    enum class SECURITY_INFO_PAGE_FLAGS : uint32_t
    {
        SI_ADVANCED = 0x10,
        SI_EDIT_AUDITS = 0x2,
        SI_EDIT_PROPERTIES = 0x80,
    };
    enum class SE_OBJECT_TYPE : int32_t
    {
        SE_UNKNOWN_OBJECT_TYPE = 0,
        SE_FILE_OBJECT = 1,
        SE_SERVICE = 2,
        SE_PRINTER = 3,
        SE_REGISTRY_KEY = 4,
        SE_LMSHARE = 5,
        SE_KERNEL_OBJECT = 6,
        SE_WINDOW_OBJECT = 7,
        SE_DS_OBJECT = 8,
        SE_DS_OBJECT_ALL = 9,
        SE_PROVIDER_DEFINED_OBJECT = 10,
        SE_WMIGUID_OBJECT = 11,
        SE_REGISTRY_WOW64_32KEY = 12,
        SE_REGISTRY_WOW64_64KEY = 13,
    };
    enum class SI_OBJECT_INFO_FLAGS : uint32_t
    {
        SI_AUDITS_ELEVATION_REQUIRED = 0x2000000,
        SI_DISABLE_DENY_ACE = 0x80000000,
        SI_EDIT_EFFECTIVE = 0x20000,
        SI_ENABLE_CENTRAL_POLICY = 0x40000000,
        SI_ENABLE_EDIT_ATTRIBUTE_CONDITION = 0x20000000,
        SI_MAY_WRITE = 0x10000000,
        SI_NO_ADDITIONAL_PERMISSION = 0x200000,
        SI_OWNER_ELEVATION_REQUIRED = 0x4000000,
        SI_PERMS_ELEVATION_REQUIRED = 0x1000000,
        SI_RESET_DACL = 0x40000,
        SI_RESET_OWNER = 0x100000,
        SI_RESET_SACL = 0x80000,
        SI_SCOPE_ELEVATION_REQUIRED = 0x8000000,
        SI_VIEW_ONLY = 0x400000,
    };
    enum class SI_PAGE_ACTIVATED : int32_t
    {
        SI_SHOW_DEFAULT = 0,
        SI_SHOW_PERM_ACTIVATED = 1,
        SI_SHOW_AUDIT_ACTIVATED = 2,
        SI_SHOW_OWNER_ACTIVATED = 3,
        SI_SHOW_EFFECTIVE_ACTIVATED = 4,
        SI_SHOW_SHARE_ACTIVATED = 5,
        SI_SHOW_CENTRAL_POLICY_ACTIVATED = 6,
    };
    enum class SI_PAGE_TYPE : int32_t
    {
        SI_PAGE_PERM = 0,
        SI_PAGE_ADVPERM = 1,
        SI_PAGE_AUDIT = 2,
        SI_PAGE_OWNER = 3,
        SI_PAGE_EFFECTIVE = 4,
        SI_PAGE_TAKEOWNERSHIP = 5,
        SI_PAGE_SHARE = 6,
    };
    enum class TREE_SEC_INFO : uint32_t
    {
        TREE_SEC_INFO_SET = 0x1,
        TREE_SEC_INFO_RESET = 0x2,
        TREE_SEC_INFO_RESET_KEEP_EXPLICIT = 0x3,
    };
    enum class TRUSTEE_FORM : int32_t
    {
        TRUSTEE_IS_SID = 0,
        TRUSTEE_IS_NAME = 1,
        TRUSTEE_BAD_FORM = 2,
        TRUSTEE_IS_OBJECTS_AND_SID = 3,
        TRUSTEE_IS_OBJECTS_AND_NAME = 4,
    };
    enum class TRUSTEE_TYPE : int32_t
    {
        TRUSTEE_IS_UNKNOWN = 0,
        TRUSTEE_IS_USER = 1,
        TRUSTEE_IS_GROUP = 2,
        TRUSTEE_IS_DOMAIN = 3,
        TRUSTEE_IS_ALIAS = 4,
        TRUSTEE_IS_WELL_KNOWN_GROUP = 5,
        TRUSTEE_IS_DELETED = 6,
        TRUSTEE_IS_INVALID = 7,
        TRUSTEE_IS_COMPUTER = 8,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct ACTRL_ACCESSA;
    struct ACTRL_ACCESSW;
    struct ACTRL_ACCESS_ENTRYA;
    struct ACTRL_ACCESS_ENTRYW;
    struct ACTRL_ACCESS_ENTRY_LISTA;
    struct ACTRL_ACCESS_ENTRY_LISTW;
    struct ACTRL_ACCESS_INFOA;
    struct ACTRL_ACCESS_INFOW;
    struct ACTRL_CONTROL_INFOA;
    struct ACTRL_CONTROL_INFOW;
    struct ACTRL_OVERLAPPED;
    struct ACTRL_PROPERTY_ENTRYA;
    struct ACTRL_PROPERTY_ENTRYW;
    struct AUDIT_IP_ADDRESS;
    struct AUDIT_OBJECT_TYPE;
    struct AUDIT_OBJECT_TYPES;
    struct AUDIT_PARAM;
    struct AUDIT_PARAMS;
    struct AUTHZ_ACCESS_CHECK_RESULTS_HANDLE;
    struct AUTHZ_ACCESS_REPLY;
    struct AUTHZ_ACCESS_REQUEST;
    struct AUTHZ_AUDIT_EVENT_HANDLE;
    struct AUTHZ_AUDIT_EVENT_TYPE_HANDLE;
    struct AUTHZ_AUDIT_EVENT_TYPE_LEGACY;
    struct AUTHZ_AUDIT_EVENT_TYPE_OLD;
    union AUTHZ_AUDIT_EVENT_TYPE_UNION;
    struct AUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE__;
    struct AUTHZ_CLIENT_CONTEXT_HANDLE;
    struct AUTHZ_INIT_INFO;
    struct AUTHZ_REGISTRATION_OBJECT_TYPE_NAME_OFFSET;
    struct AUTHZ_RESOURCE_MANAGER_HANDLE;
    struct AUTHZ_RPC_INIT_INFO_CLIENT;
    struct AUTHZ_SECURITY_ATTRIBUTES_INFORMATION;
    struct AUTHZ_SECURITY_ATTRIBUTE_FQBN_VALUE;
    struct AUTHZ_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE;
    struct AUTHZ_SECURITY_ATTRIBUTE_V1;
    struct AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE;
    struct AUTHZ_SOURCE_SCHEMA_REGISTRATION;
    struct AzAuthorizationStore;
    struct AzBizRuleContext;
    struct AzPrincipalLocator;
    struct EFFPERM_RESULT_LIST;
    struct EXPLICIT_ACCESS_A;
    struct EXPLICIT_ACCESS_W;
    struct FN_OBJECT_MGR_FUNCTIONS;
    struct INHERITED_FROMA;
    struct INHERITED_FROMW;
    struct OBJECTS_AND_NAME_A;
    struct OBJECTS_AND_NAME_W;
    struct OBJECTS_AND_SID;
    struct SECURITY_OBJECT;
    struct SID_INFO;
    struct SID_INFO_LIST;
    struct SI_ACCESS;
    struct SI_INHERIT_TYPE;
    struct SI_OBJECT_INFO;
    struct TRUSTEE_A;
    struct TRUSTEE_ACCESSA;
    struct TRUSTEE_ACCESSW;
    struct TRUSTEE_W;
    struct IAzApplication;
    struct IAzApplication2;
    struct IAzApplication3;
    struct IAzApplicationGroup;
    struct IAzApplicationGroup2;
    struct IAzApplicationGroups;
    struct IAzApplications;
    struct IAzAuthorizationStore;
    struct IAzAuthorizationStore2;
    struct IAzAuthorizationStore3;
    struct IAzBizRuleContext;
    struct IAzBizRuleInterfaces;
    struct IAzBizRuleParameters;
    struct IAzClientContext;
    struct IAzClientContext2;
    struct IAzClientContext3;
    struct IAzNameResolver;
    struct IAzObjectPicker;
    struct IAzOperation;
    struct IAzOperation2;
    struct IAzOperations;
    struct IAzPrincipalLocator;
    struct IAzRole;
    struct IAzRoleAssignment;
    struct IAzRoleAssignments;
    struct IAzRoleDefinition;
    struct IAzRoleDefinitions;
    struct IAzRoles;
    struct IAzScope;
    struct IAzScope2;
    struct IAzScopes;
    struct IAzTask;
    struct IAzTask2;
    struct IAzTasks;
    struct IEffectivePermission;
    struct IEffectivePermission2;
    struct ISecurityInformation;
    struct ISecurityInformation2;
    struct ISecurityInformation3;
    struct ISecurityInformation4;
    struct ISecurityObjectTypeInfo;
#pragma endregion forward_declarations

#pragma region delegates
    using PFN_AUTHZ_DYNAMIC_ACCESS_CHECK = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Security::Authorization::AUTHZ_CLIENT_CONTEXT_HANDLE, Windows::Win32::Security::ACE_HEADER*, void*, Windows::Win32::Foundation::BOOL*);
    using PFN_AUTHZ_COMPUTE_DYNAMIC_GROUPS = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Security::Authorization::AUTHZ_CLIENT_CONTEXT_HANDLE, void*, Windows::Win32::Security::SID_AND_ATTRIBUTES**, uint32_t*, Windows::Win32::Security::SID_AND_ATTRIBUTES**, uint32_t*);
    using PFN_AUTHZ_FREE_DYNAMIC_GROUPS = void __stdcall(Windows::Win32::Security::SID_AND_ATTRIBUTES*);
    using PFN_AUTHZ_GET_CENTRAL_ACCESS_POLICY = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Security::Authorization::AUTHZ_CLIENT_CONTEXT_HANDLE, Windows::Win32::Foundation::PSID, void*, Windows::Win32::Foundation::BOOL*, void**);
    using PFN_AUTHZ_FREE_CENTRAL_ACCESS_POLICY = void __stdcall(void*);
    using FN_PROGRESS = void __stdcall(Windows::Win32::Foundation::PWSTR, uint32_t, Windows::Win32::Security::Authorization::PROG_INVOKE_SETTING*, void*, Windows::Win32::Foundation::BOOL);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
