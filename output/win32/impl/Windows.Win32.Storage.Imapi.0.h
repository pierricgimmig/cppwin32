// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Storage_Imapi_0_H
#define WIN32_Windows_Win32_Storage_Imapi_0_H
WIN32_EXPORT namespace win32::Windows::Win32::System::AddressBook
{
    struct IMessage;
}
WIN32_EXPORT namespace win32::Windows::Win32::Storage::Imapi
{
#pragma region enums
    enum class DISC_RECORDER_STATE_FLAGS : uint32_t
    {
        RECORDER_BURNING = 0x2,
        RECORDER_DOING_NOTHING = 0x0,
        RECORDER_OPENED = 0x1,
    };
    enum class EmulationType : int32_t
    {
        EmulationNone = 0,
        Emulation12MFloppy = 1,
        Emulation144MFloppy = 2,
        Emulation288MFloppy = 3,
        EmulationHardDisk = 4,
    };
    enum class FsiFileSystems : int32_t
    {
        FsiFileSystemNone = 0,
        FsiFileSystemISO9660 = 1,
        FsiFileSystemJoliet = 2,
        FsiFileSystemUDF = 4,
        FsiFileSystemUnknown = 1073741824,
    };
    enum class FsiItemType : int32_t
    {
        FsiItemNotFound = 0,
        FsiItemDirectory = 1,
        FsiItemFile = 2,
    };
    enum class IMAPI_BURN_VERIFICATION_LEVEL : int32_t
    {
        IMAPI_BURN_VERIFICATION_NONE = 0,
        IMAPI_BURN_VERIFICATION_QUICK = 1,
        IMAPI_BURN_VERIFICATION_FULL = 2,
    };
    enum class IMAPI_CD_SECTOR_TYPE : int32_t
    {
        IMAPI_CD_SECTOR_AUDIO = 0,
        IMAPI_CD_SECTOR_MODE_ZERO = 1,
        IMAPI_CD_SECTOR_MODE1 = 2,
        IMAPI_CD_SECTOR_MODE2FORM0 = 3,
        IMAPI_CD_SECTOR_MODE2FORM1 = 4,
        IMAPI_CD_SECTOR_MODE2FORM2 = 5,
        IMAPI_CD_SECTOR_MODE1RAW = 6,
        IMAPI_CD_SECTOR_MODE2FORM0RAW = 7,
        IMAPI_CD_SECTOR_MODE2FORM1RAW = 8,
        IMAPI_CD_SECTOR_MODE2FORM2RAW = 9,
    };
    enum class IMAPI_CD_TRACK_DIGITAL_COPY_SETTING : int32_t
    {
        IMAPI_CD_TRACK_DIGITAL_COPY_PERMITTED = 0,
        IMAPI_CD_TRACK_DIGITAL_COPY_PROHIBITED = 1,
        IMAPI_CD_TRACK_DIGITAL_COPY_SCMS = 2,
    };
    enum class IMAPI_FEATURE_PAGE_TYPE : int32_t
    {
        IMAPI_FEATURE_PAGE_TYPE_PROFILE_LIST = 0,
        IMAPI_FEATURE_PAGE_TYPE_CORE = 1,
        IMAPI_FEATURE_PAGE_TYPE_MORPHING = 2,
        IMAPI_FEATURE_PAGE_TYPE_REMOVABLE_MEDIUM = 3,
        IMAPI_FEATURE_PAGE_TYPE_WRITE_PROTECT = 4,
        IMAPI_FEATURE_PAGE_TYPE_RANDOMLY_READABLE = 16,
        IMAPI_FEATURE_PAGE_TYPE_CD_MULTIREAD = 29,
        IMAPI_FEATURE_PAGE_TYPE_CD_READ = 30,
        IMAPI_FEATURE_PAGE_TYPE_DVD_READ = 31,
        IMAPI_FEATURE_PAGE_TYPE_RANDOMLY_WRITABLE = 32,
        IMAPI_FEATURE_PAGE_TYPE_INCREMENTAL_STREAMING_WRITABLE = 33,
        IMAPI_FEATURE_PAGE_TYPE_SECTOR_ERASABLE = 34,
        IMAPI_FEATURE_PAGE_TYPE_FORMATTABLE = 35,
        IMAPI_FEATURE_PAGE_TYPE_HARDWARE_DEFECT_MANAGEMENT = 36,
        IMAPI_FEATURE_PAGE_TYPE_WRITE_ONCE = 37,
        IMAPI_FEATURE_PAGE_TYPE_RESTRICTED_OVERWRITE = 38,
        IMAPI_FEATURE_PAGE_TYPE_CDRW_CAV_WRITE = 39,
        IMAPI_FEATURE_PAGE_TYPE_MRW = 40,
        IMAPI_FEATURE_PAGE_TYPE_ENHANCED_DEFECT_REPORTING = 41,
        IMAPI_FEATURE_PAGE_TYPE_DVD_PLUS_RW = 42,
        IMAPI_FEATURE_PAGE_TYPE_DVD_PLUS_R = 43,
        IMAPI_FEATURE_PAGE_TYPE_RIGID_RESTRICTED_OVERWRITE = 44,
        IMAPI_FEATURE_PAGE_TYPE_CD_TRACK_AT_ONCE = 45,
        IMAPI_FEATURE_PAGE_TYPE_CD_MASTERING = 46,
        IMAPI_FEATURE_PAGE_TYPE_DVD_DASH_WRITE = 47,
        IMAPI_FEATURE_PAGE_TYPE_DOUBLE_DENSITY_CD_READ = 48,
        IMAPI_FEATURE_PAGE_TYPE_DOUBLE_DENSITY_CD_R_WRITE = 49,
        IMAPI_FEATURE_PAGE_TYPE_DOUBLE_DENSITY_CD_RW_WRITE = 50,
        IMAPI_FEATURE_PAGE_TYPE_LAYER_JUMP_RECORDING = 51,
        IMAPI_FEATURE_PAGE_TYPE_CD_RW_MEDIA_WRITE_SUPPORT = 55,
        IMAPI_FEATURE_PAGE_TYPE_BD_PSEUDO_OVERWRITE = 56,
        IMAPI_FEATURE_PAGE_TYPE_DVD_PLUS_R_DUAL_LAYER = 59,
        IMAPI_FEATURE_PAGE_TYPE_BD_READ = 64,
        IMAPI_FEATURE_PAGE_TYPE_BD_WRITE = 65,
        IMAPI_FEATURE_PAGE_TYPE_HD_DVD_READ = 80,
        IMAPI_FEATURE_PAGE_TYPE_HD_DVD_WRITE = 81,
        IMAPI_FEATURE_PAGE_TYPE_POWER_MANAGEMENT = 256,
        IMAPI_FEATURE_PAGE_TYPE_SMART = 257,
        IMAPI_FEATURE_PAGE_TYPE_EMBEDDED_CHANGER = 258,
        IMAPI_FEATURE_PAGE_TYPE_CD_ANALOG_PLAY = 259,
        IMAPI_FEATURE_PAGE_TYPE_MICROCODE_UPDATE = 260,
        IMAPI_FEATURE_PAGE_TYPE_TIMEOUT = 261,
        IMAPI_FEATURE_PAGE_TYPE_DVD_CSS = 262,
        IMAPI_FEATURE_PAGE_TYPE_REAL_TIME_STREAMING = 263,
        IMAPI_FEATURE_PAGE_TYPE_LOGICAL_UNIT_SERIAL_NUMBER = 264,
        IMAPI_FEATURE_PAGE_TYPE_MEDIA_SERIAL_NUMBER = 265,
        IMAPI_FEATURE_PAGE_TYPE_DISC_CONTROL_BLOCKS = 266,
        IMAPI_FEATURE_PAGE_TYPE_DVD_CPRM = 267,
        IMAPI_FEATURE_PAGE_TYPE_FIRMWARE_INFORMATION = 268,
        IMAPI_FEATURE_PAGE_TYPE_AACS = 269,
        IMAPI_FEATURE_PAGE_TYPE_VCPS = 272,
    };
    enum class IMAPI_FORMAT2_DATA_MEDIA_STATE : int32_t
    {
        IMAPI_FORMAT2_DATA_MEDIA_STATE_UNKNOWN = 0,
        IMAPI_FORMAT2_DATA_MEDIA_STATE_INFORMATIONAL_MASK = 15,
        IMAPI_FORMAT2_DATA_MEDIA_STATE_UNSUPPORTED_MASK = 64512,
        IMAPI_FORMAT2_DATA_MEDIA_STATE_OVERWRITE_ONLY = 1,
        IMAPI_FORMAT2_DATA_MEDIA_STATE_RANDOMLY_WRITABLE = 1,
        IMAPI_FORMAT2_DATA_MEDIA_STATE_BLANK = 2,
        IMAPI_FORMAT2_DATA_MEDIA_STATE_APPENDABLE = 4,
        IMAPI_FORMAT2_DATA_MEDIA_STATE_FINAL_SESSION = 8,
        IMAPI_FORMAT2_DATA_MEDIA_STATE_DAMAGED = 1024,
        IMAPI_FORMAT2_DATA_MEDIA_STATE_ERASE_REQUIRED = 2048,
        IMAPI_FORMAT2_DATA_MEDIA_STATE_NON_EMPTY_SESSION = 4096,
        IMAPI_FORMAT2_DATA_MEDIA_STATE_WRITE_PROTECTED = 8192,
        IMAPI_FORMAT2_DATA_MEDIA_STATE_FINALIZED = 16384,
        IMAPI_FORMAT2_DATA_MEDIA_STATE_UNSUPPORTED_MEDIA = 32768,
    };
    enum class IMAPI_FORMAT2_DATA_WRITE_ACTION : int32_t
    {
        IMAPI_FORMAT2_DATA_WRITE_ACTION_VALIDATING_MEDIA = 0,
        IMAPI_FORMAT2_DATA_WRITE_ACTION_FORMATTING_MEDIA = 1,
        IMAPI_FORMAT2_DATA_WRITE_ACTION_INITIALIZING_HARDWARE = 2,
        IMAPI_FORMAT2_DATA_WRITE_ACTION_CALIBRATING_POWER = 3,
        IMAPI_FORMAT2_DATA_WRITE_ACTION_WRITING_DATA = 4,
        IMAPI_FORMAT2_DATA_WRITE_ACTION_FINALIZATION = 5,
        IMAPI_FORMAT2_DATA_WRITE_ACTION_COMPLETED = 6,
        IMAPI_FORMAT2_DATA_WRITE_ACTION_VERIFYING = 7,
    };
    enum class IMAPI_FORMAT2_RAW_CD_DATA_SECTOR_TYPE : int32_t
    {
        IMAPI_FORMAT2_RAW_CD_SUBCODE_PQ_ONLY = 1,
        IMAPI_FORMAT2_RAW_CD_SUBCODE_IS_COOKED = 2,
        IMAPI_FORMAT2_RAW_CD_SUBCODE_IS_RAW = 3,
    };
    enum class IMAPI_FORMAT2_RAW_CD_WRITE_ACTION : int32_t
    {
        IMAPI_FORMAT2_RAW_CD_WRITE_ACTION_UNKNOWN = 0,
        IMAPI_FORMAT2_RAW_CD_WRITE_ACTION_PREPARING = 1,
        IMAPI_FORMAT2_RAW_CD_WRITE_ACTION_WRITING = 2,
        IMAPI_FORMAT2_RAW_CD_WRITE_ACTION_FINISHING = 3,
    };
    enum class IMAPI_FORMAT2_TAO_WRITE_ACTION : int32_t
    {
        IMAPI_FORMAT2_TAO_WRITE_ACTION_UNKNOWN = 0,
        IMAPI_FORMAT2_TAO_WRITE_ACTION_PREPARING = 1,
        IMAPI_FORMAT2_TAO_WRITE_ACTION_WRITING = 2,
        IMAPI_FORMAT2_TAO_WRITE_ACTION_FINISHING = 3,
        IMAPI_FORMAT2_TAO_WRITE_ACTION_VERIFYING = 4,
    };
    enum class IMAPI_MEDIA_PHYSICAL_TYPE : int32_t
    {
        IMAPI_MEDIA_TYPE_UNKNOWN = 0,
        IMAPI_MEDIA_TYPE_CDROM = 1,
        IMAPI_MEDIA_TYPE_CDR = 2,
        IMAPI_MEDIA_TYPE_CDRW = 3,
        IMAPI_MEDIA_TYPE_DVDROM = 4,
        IMAPI_MEDIA_TYPE_DVDRAM = 5,
        IMAPI_MEDIA_TYPE_DVDPLUSR = 6,
        IMAPI_MEDIA_TYPE_DVDPLUSRW = 7,
        IMAPI_MEDIA_TYPE_DVDPLUSR_DUALLAYER = 8,
        IMAPI_MEDIA_TYPE_DVDDASHR = 9,
        IMAPI_MEDIA_TYPE_DVDDASHRW = 10,
        IMAPI_MEDIA_TYPE_DVDDASHR_DUALLAYER = 11,
        IMAPI_MEDIA_TYPE_DISK = 12,
        IMAPI_MEDIA_TYPE_DVDPLUSRW_DUALLAYER = 13,
        IMAPI_MEDIA_TYPE_HDDVDROM = 14,
        IMAPI_MEDIA_TYPE_HDDVDR = 15,
        IMAPI_MEDIA_TYPE_HDDVDRAM = 16,
        IMAPI_MEDIA_TYPE_BDROM = 17,
        IMAPI_MEDIA_TYPE_BDR = 18,
        IMAPI_MEDIA_TYPE_BDRE = 19,
        IMAPI_MEDIA_TYPE_MAX = 19,
    };
    enum class IMAPI_MEDIA_WRITE_PROTECT_STATE : int32_t
    {
        IMAPI_WRITEPROTECTED_UNTIL_POWERDOWN = 1,
        IMAPI_WRITEPROTECTED_BY_CARTRIDGE = 2,
        IMAPI_WRITEPROTECTED_BY_MEDIA_SPECIFIC_REASON = 4,
        IMAPI_WRITEPROTECTED_BY_SOFTWARE_WRITE_PROTECT = 8,
        IMAPI_WRITEPROTECTED_BY_DISC_CONTROL_BLOCK = 16,
        IMAPI_WRITEPROTECTED_READ_ONLY_MEDIA = 16384,
    };
    enum class IMAPI_MODE_PAGE_REQUEST_TYPE : int32_t
    {
        IMAPI_MODE_PAGE_REQUEST_TYPE_CURRENT_VALUES = 0,
        IMAPI_MODE_PAGE_REQUEST_TYPE_CHANGEABLE_VALUES = 1,
        IMAPI_MODE_PAGE_REQUEST_TYPE_DEFAULT_VALUES = 2,
        IMAPI_MODE_PAGE_REQUEST_TYPE_SAVED_VALUES = 3,
    };
    enum class IMAPI_MODE_PAGE_TYPE : int32_t
    {
        IMAPI_MODE_PAGE_TYPE_READ_WRITE_ERROR_RECOVERY = 1,
        IMAPI_MODE_PAGE_TYPE_MRW = 3,
        IMAPI_MODE_PAGE_TYPE_WRITE_PARAMETERS = 5,
        IMAPI_MODE_PAGE_TYPE_CACHING = 8,
        IMAPI_MODE_PAGE_TYPE_INFORMATIONAL_EXCEPTIONS = 28,
        IMAPI_MODE_PAGE_TYPE_TIMEOUT_AND_PROTECT = 29,
        IMAPI_MODE_PAGE_TYPE_POWER_CONDITION = 26,
        IMAPI_MODE_PAGE_TYPE_LEGACY_CAPABILITIES = 42,
    };
    enum class IMAPI_PROFILE_TYPE : int32_t
    {
        IMAPI_PROFILE_TYPE_INVALID = 0,
        IMAPI_PROFILE_TYPE_NON_REMOVABLE_DISK = 1,
        IMAPI_PROFILE_TYPE_REMOVABLE_DISK = 2,
        IMAPI_PROFILE_TYPE_MO_ERASABLE = 3,
        IMAPI_PROFILE_TYPE_MO_WRITE_ONCE = 4,
        IMAPI_PROFILE_TYPE_AS_MO = 5,
        IMAPI_PROFILE_TYPE_CDROM = 8,
        IMAPI_PROFILE_TYPE_CD_RECORDABLE = 9,
        IMAPI_PROFILE_TYPE_CD_REWRITABLE = 10,
        IMAPI_PROFILE_TYPE_DVDROM = 16,
        IMAPI_PROFILE_TYPE_DVD_DASH_RECORDABLE = 17,
        IMAPI_PROFILE_TYPE_DVD_RAM = 18,
        IMAPI_PROFILE_TYPE_DVD_DASH_REWRITABLE = 19,
        IMAPI_PROFILE_TYPE_DVD_DASH_RW_SEQUENTIAL = 20,
        IMAPI_PROFILE_TYPE_DVD_DASH_R_DUAL_SEQUENTIAL = 21,
        IMAPI_PROFILE_TYPE_DVD_DASH_R_DUAL_LAYER_JUMP = 22,
        IMAPI_PROFILE_TYPE_DVD_PLUS_RW = 26,
        IMAPI_PROFILE_TYPE_DVD_PLUS_R = 27,
        IMAPI_PROFILE_TYPE_DDCDROM = 32,
        IMAPI_PROFILE_TYPE_DDCD_RECORDABLE = 33,
        IMAPI_PROFILE_TYPE_DDCD_REWRITABLE = 34,
        IMAPI_PROFILE_TYPE_DVD_PLUS_RW_DUAL = 42,
        IMAPI_PROFILE_TYPE_DVD_PLUS_R_DUAL = 43,
        IMAPI_PROFILE_TYPE_BD_ROM = 64,
        IMAPI_PROFILE_TYPE_BD_R_SEQUENTIAL = 65,
        IMAPI_PROFILE_TYPE_BD_R_RANDOM_RECORDING = 66,
        IMAPI_PROFILE_TYPE_BD_REWRITABLE = 67,
        IMAPI_PROFILE_TYPE_HD_DVD_ROM = 80,
        IMAPI_PROFILE_TYPE_HD_DVD_RECORDABLE = 81,
        IMAPI_PROFILE_TYPE_HD_DVD_RAM = 82,
        IMAPI_PROFILE_TYPE_NON_STANDARD = 65535,
    };
    enum class IMAPI_READ_TRACK_ADDRESS_TYPE : int32_t
    {
        IMAPI_READ_TRACK_ADDRESS_TYPE_LBA = 0,
        IMAPI_READ_TRACK_ADDRESS_TYPE_TRACK = 1,
        IMAPI_READ_TRACK_ADDRESS_TYPE_SESSION = 2,
    };
    enum class IMMPID_CPV_ENUM : int32_t
    {
        IMMPID_CPV_BEFORE__ = 32767,
        IMMPID_CP_START = 32768,
        IMMPID_CPV_AFTER__ = 32769,
    };
    enum class IMMPID_MPV_ENUM : int32_t
    {
        IMMPID_MPV_BEFORE__ = 12287,
        IMMPID_MPV_STORE_DRIVER_HANDLE = 12288,
        IMMPID_MPV_MESSAGE_CREATION_FLAGS = 12289,
        IMMPID_MPV_MESSAGE_OPEN_HANDLES = 12290,
        IMMPID_MPV_TOTAL_OPEN_HANDLES = 12291,
        IMMPID_MPV_TOTAL_OPEN_PROPERTY_STREAM_HANDLES = 12292,
        IMMPID_MPV_TOTAL_OPEN_CONTENT_HANDLES = 12293,
        IMMPID_MPV_AFTER__ = 12294,
    };
    enum class IMMPID_MP_ENUM : int32_t
    {
        IMMPID_MP_BEFORE__ = 4095,
        IMMPID_MP_RECIPIENT_LIST = 4096,
        IMMPID_MP_CONTENT_FILE_NAME = 4097,
        IMMPID_MP_SENDER_ADDRESS_SMTP = 4098,
        IMMPID_MP_SENDER_ADDRESS_X500 = 4099,
        IMMPID_MP_SENDER_ADDRESS_X400 = 4100,
        IMMPID_MP_SENDER_ADDRESS_LEGACY_EX_DN = 4101,
        IMMPID_MP_DOMAIN_LIST = 4102,
        IMMPID_MP_PICKUP_FILE_NAME = 4103,
        IMMPID_MP_AUTHENTICATED_USER_NAME = 4104,
        IMMPID_MP_CONNECTION_IP_ADDRESS = 4105,
        IMMPID_MP_HELO_DOMAIN = 4106,
        IMMPID_MP_EIGHTBIT_MIME_OPTION = 4107,
        IMMPID_MP_CHUNKING_OPTION = 4108,
        IMMPID_MP_BINARYMIME_OPTION = 4109,
        IMMPID_MP_REMOTE_AUTHENTICATION_TYPE = 4110,
        IMMPID_MP_ERROR_CODE = 4111,
        IMMPID_MP_DSN_ENVID_VALUE = 4112,
        IMMPID_MP_DSN_RET_VALUE = 4113,
        IMMPID_MP_REMOTE_SERVER_DSN_CAPABLE = 4114,
        IMMPID_MP_ARRIVAL_TIME = 4115,
        IMMPID_MP_MESSAGE_STATUS = 4116,
        IMMPID_MP_EXPIRE_DELAY = 4117,
        IMMPID_MP_EXPIRE_NDR = 4118,
        IMMPID_MP_LOCAL_EXPIRE_DELAY = 4119,
        IMMPID_MP_LOCAL_EXPIRE_NDR = 4120,
        IMMPID_MP_ARRIVAL_FILETIME = 4121,
        IMMPID_MP_HR_CAT_STATUS = 4122,
        IMMPID_MP_MSG_GUID = 4123,
        IMMPID_MP_SUPERSEDES_MSG_GUID = 4124,
        IMMPID_MP_SCANNED_FOR_CRLF_DOT_CRLF = 4125,
        IMMPID_MP_FOUND_EMBEDDED_CRLF_DOT_CRLF = 4126,
        IMMPID_MP_MSG_SIZE_HINT = 4127,
        IMMPID_MP_RFC822_MSG_ID = 4128,
        IMMPID_MP_RFC822_MSG_SUBJECT = 4129,
        IMMPID_MP_RFC822_FROM_ADDRESS = 4130,
        IMMPID_MP_RFC822_TO_ADDRESS = 4131,
        IMMPID_MP_RFC822_CC_ADDRESS = 4132,
        IMMPID_MP_RFC822_BCC_ADDRESS = 4133,
        IMMPID_MP_CONNECTION_SERVER_IP_ADDRESS = 4134,
        IMMPID_MP_SERVER_NAME = 4135,
        IMMPID_MP_SERVER_VERSION = 4136,
        IMMPID_MP_NUM_RECIPIENTS = 4137,
        IMMPID_MP_X_PRIORITY = 4138,
        IMMPID_MP_FROM_ADDRESS = 4139,
        IMMPID_MP_SENDER_ADDRESS = 4140,
        IMMPID_MP_DEFERRED_DELIVERY_FILETIME = 4141,
        IMMPID_MP_SENDER_ADDRESS_OTHER = 4142,
        IMMPID_MP_ORIGINAL_ARRIVAL_TIME = 4143,
        IMMPID_MP_MSGCLASS = 4144,
        IMMPID_MP_CONTENT_TYPE = 4145,
        IMMPID_MP_ENCRYPTION_TYPE = 4146,
        IMMPID_MP_CONNECTION_SERVER_PORT = 4147,
        IMMPID_MP_CLIENT_AUTH_USER = 4148,
        IMMPID_MP_CLIENT_AUTH_TYPE = 4149,
        IMMPID_MP_CRC_GLOBAL = 4150,
        IMMPID_MP_CRC_RECIPS = 4151,
        IMMPID_MP_INBOUND_MAIL_FROM_AUTH = 4152,
        IMMPID_MP_AFTER__ = 4153,
    };
    enum class IMMPID_NMP_ENUM : int32_t
    {
        IMMPID_NMP_BEFORE__ = 24575,
        IMMPID_NMP_SECONDARY_GROUPS = 24576,
        IMMPID_NMP_SECONDARY_ARTNUM = 24577,
        IMMPID_NMP_PRIMARY_GROUP = 24578,
        IMMPID_NMP_PRIMARY_ARTID = 24579,
        IMMPID_NMP_POST_TOKEN = 24580,
        IMMPID_NMP_NEWSGROUP_LIST = 24581,
        IMMPID_NMP_HEADERS = 24582,
        IMMPID_NMP_NNTP_PROCESSING = 24583,
        IMMPID_NMP_NNTP_APPROVED_HEADER = 24584,
        IMMPID_NMP_AFTER__ = 24585,
    };
    enum class IMMPID_RPV_ENUM : int32_t
    {
        IMMPID_RPV_BEFORE__ = 16383,
        IMMPID_RPV_DONT_DELIVER = 16384,
        IMMPID_RPV_NO_NAME_COLLISIONS = 16385,
        IMMPID_RPV_AFTER__ = 16386,
    };
    enum class IMMPID_RP_ENUM : int32_t
    {
        IMMPID_RP_BEFORE__ = 8191,
        IMMPID_RP_DSN_NOTIFY_SUCCESS = 8192,
        IMMPID_RP_DSN_NOTIFY_INVALID = 8193,
        IMMPID_RP_ADDRESS_TYPE = 8194,
        IMMPID_RP_ADDRESS = 8195,
        IMMPID_RP_ADDRESS_TYPE_SMTP = 8196,
        IMMPID_RP_ERROR_CODE = 8197,
        IMMPID_RP_ERROR_STRING = 8198,
        IMMPID_RP_DSN_NOTIFY_VALUE = 8199,
        IMMPID_RP_DSN_ORCPT_VALUE = 8200,
        IMMPID_RP_ADDRESS_SMTP = 8201,
        IMMPID_RP_ADDRESS_X400 = 8202,
        IMMPID_RP_ADDRESS_X500 = 8203,
        IMMPID_RP_LEGACY_EX_DN = 8204,
        IMMPID_RP_RECIPIENT_FLAGS = 8205,
        IMMPID_RP_SMTP_STATUS_STRING = 8206,
        IMMPID_RP_DSN_PRE_CAT_ADDRESS = 8207,
        IMMPID_RP_MDB_GUID = 8208,
        IMMPID_RP_USER_GUID = 8209,
        IMMPID_RP_DOMAIN = 8210,
        IMMPID_RP_ADDRESS_OTHER = 8211,
        IMMPID_RP_DISPLAY_NAME = 8212,
        IMMPID_RP_AFTER__ = 8213,
    };
    enum class MEDIA_FLAGS : int32_t
    {
        MEDIA_BLANK = 1,
        MEDIA_RW = 2,
        MEDIA_WRITABLE = 4,
        MEDIA_FORMAT_UNUSABLE_BY_IMAPI = 8,
    };
    enum class MEDIA_TYPES : int32_t
    {
        MEDIA_CDDA_CDROM = 1,
        MEDIA_CD_ROM_XA = 2,
        MEDIA_CD_I = 3,
        MEDIA_CD_EXTRA = 4,
        MEDIA_CD_OTHER = 5,
        MEDIA_SPECIAL = 6,
    };
    enum class PlatformId : int32_t
    {
        PlatformX86 = 0,
        PlatformPowerPC = 1,
        PlatformMac = 2,
        PlatformEFI = 239,
    };
    enum class RECORDER_TYPES : int32_t
    {
        RECORDER_CDR = 1,
        RECORDER_CDRW = 2,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct BlockRange;
    struct BlockRangeList;
    struct BootOptions;
    struct EnumFsiItems;
    struct EnumProgressItems;
    struct FileSystemImageResult;
    struct FsiDirectoryItem;
    struct FsiFileItem;
    struct FsiNamedStreams;
    struct FsiStream;
    struct IMMP_MPV_STORE_DRIVER_HANDLE;
    struct MSDiscMasterObj;
    struct MSDiscRecorderObj;
    struct MSEnumDiscRecordersObj;
    struct MsftDiscFormat2Data;
    struct MsftDiscFormat2Erase;
    struct MsftDiscFormat2RawCD;
    struct MsftDiscFormat2TrackAtOnce;
    struct MsftDiscMaster2;
    struct MsftDiscRecorder2;
    struct MsftFileSystemImage;
    struct MsftIsoImageManager;
    struct MsftMultisessionRandomWrite;
    struct MsftMultisessionSequential;
    struct MsftRawCDImageCreator;
    struct MsftStreamConcatenate;
    struct MsftStreamInterleave;
    struct MsftStreamPrng001;
    struct MsftStreamZero;
    struct MsftWriteEngine2;
    struct MsftWriteSpeedDescriptor;
    struct ProgressItem;
    struct ProgressItems;
    struct SPropAttrArray;
    struct _MSGSESS;
    struct tagIMMPID_CPV_STRUCT;
    struct tagIMMPID_GUIDLIST_ITEM;
    struct tagIMMPID_MPV_STRUCT;
    struct tagIMMPID_MP_STRUCT;
    struct tagIMMPID_NMP_STRUCT;
    struct tagIMMPID_RPV_STRUCT;
    struct tagIMMPID_RP_STRUCT;
    struct DDiscFormat2DataEvents;
    struct DDiscFormat2EraseEvents;
    struct DDiscFormat2RawCDEvents;
    struct DDiscFormat2TrackAtOnceEvents;
    struct DDiscMaster2Events;
    struct DFileSystemImageEvents;
    struct DFileSystemImageImportEvents;
    struct DWriteEngine2Events;
    struct IBlockRange;
    struct IBlockRangeList;
    struct IBootOptions;
    struct IBurnVerification;
    struct IDiscFormat2;
    struct IDiscFormat2Data;
    struct IDiscFormat2DataEventArgs;
    struct IDiscFormat2Erase;
    struct IDiscFormat2RawCD;
    struct IDiscFormat2RawCDEventArgs;
    struct IDiscFormat2TrackAtOnce;
    struct IDiscFormat2TrackAtOnceEventArgs;
    struct IDiscMaster;
    struct IDiscMaster2;
    struct IDiscMasterProgressEvents;
    struct IDiscRecorder;
    struct IDiscRecorder2;
    struct IDiscRecorder2Ex;
    struct IEnumDiscMasterFormats;
    struct IEnumDiscRecorders;
    struct IEnumFsiItems;
    struct IEnumProgressItems;
    struct IFileSystemImage;
    struct IFileSystemImage2;
    struct IFileSystemImage3;
    struct IFileSystemImageResult;
    struct IFileSystemImageResult2;
    struct IFsiDirectoryItem;
    struct IFsiDirectoryItem2;
    struct IFsiFileItem;
    struct IFsiFileItem2;
    struct IFsiItem;
    struct IFsiNamedStreams;
    struct IIsoImageManager;
    struct IJolietDiscMaster;
    struct IMultisession;
    struct IMultisessionRandomWrite;
    struct IMultisessionSequential;
    struct IMultisessionSequential2;
    struct IProgressItem;
    struct IProgressItems;
    struct IRawCDImageCreator;
    struct IRawCDImageTrackInfo;
    struct IRedbookDiscMaster;
    struct IStreamConcatenate;
    struct IStreamInterleave;
    struct IStreamPseudoRandomBased;
    struct IWriteEngine2;
    struct IWriteEngine2EventArgs;
    struct IWriteSpeedDescriptor;
#pragma endregion forward_declarations

#pragma region delegates
    using MSGCALLRELEASE = void __stdcall(uint32_t, Windows::Win32::System::AddressBook::IMessage*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
