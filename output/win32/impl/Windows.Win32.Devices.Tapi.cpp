// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Devices_Tapi_2_H
#define WIN32_Windows_Win32_Devices_Tapi_2_H
#include "win32/Windows.Win32.Devices.Tapi.h"
#include "win32/impl/Windows.Win32.Devices.Tapi.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::Devices::Tapi
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    int32_t __stdcall ORBIT_IMPL_lineAccept(uint32_t hCall, win32::Windows::Win32::Foundation::PSTR lpsUserUserInfo, uint32_t dwSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpsUserUserInfo);
        ORBIT_TRACK_PARAM(dwSize);

        auto win32_impl_result = g_api_table.lineAccept(hCall, lpsUserUserInfo, dwSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineAddProvider(win32::Windows::Win32::Foundation::PSTR lpszProviderFilename, win32::Windows::Win32::Foundation::HWND hwndOwner, uint32_t* lpdwPermanentProviderID) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszProviderFilename);
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpdwPermanentProviderID);

        auto win32_impl_result = g_api_table.lineAddProvider(lpszProviderFilename, hwndOwner, lpdwPermanentProviderID);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineAddProviderA(win32::Windows::Win32::Foundation::PSTR lpszProviderFilename, win32::Windows::Win32::Foundation::HWND hwndOwner, uint32_t* lpdwPermanentProviderID) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszProviderFilename);
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpdwPermanentProviderID);

        auto win32_impl_result = g_api_table.lineAddProviderA(lpszProviderFilename, hwndOwner, lpdwPermanentProviderID);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineAddProviderW(win32::Windows::Win32::Foundation::PWSTR lpszProviderFilename, win32::Windows::Win32::Foundation::HWND hwndOwner, uint32_t* lpdwPermanentProviderID) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszProviderFilename);
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpdwPermanentProviderID);

        auto win32_impl_result = g_api_table.lineAddProviderW(lpszProviderFilename, hwndOwner, lpdwPermanentProviderID);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineAddToConference(uint32_t hConfCall, uint32_t hConsultCall) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hConfCall);
        ORBIT_TRACK_PARAM(hConsultCall);

        auto win32_impl_result = g_api_table.lineAddToConference(hConfCall, hConsultCall);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineAgentSpecific(uint32_t hLine, uint32_t dwAddressID, uint32_t dwAgentExtensionIDIndex, void* lpParams, uint32_t dwSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(dwAgentExtensionIDIndex);
        ORBIT_TRACK_PARAM(lpParams);
        ORBIT_TRACK_PARAM(dwSize);

        auto win32_impl_result = g_api_table.lineAgentSpecific(hLine, dwAddressID, dwAgentExtensionIDIndex, lpParams, dwSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineAnswer(uint32_t hCall, win32::Windows::Win32::Foundation::PSTR lpsUserUserInfo, uint32_t dwSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpsUserUserInfo);
        ORBIT_TRACK_PARAM(dwSize);

        auto win32_impl_result = g_api_table.lineAnswer(hCall, lpsUserUserInfo, dwSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineBlindTransfer(uint32_t hCall, win32::Windows::Win32::Foundation::PSTR lpszDestAddress, uint32_t dwCountryCode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(dwCountryCode);

        auto win32_impl_result = g_api_table.lineBlindTransfer(hCall, lpszDestAddress, dwCountryCode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineBlindTransferA(uint32_t hCall, win32::Windows::Win32::Foundation::PSTR lpszDestAddress, uint32_t dwCountryCode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(dwCountryCode);

        auto win32_impl_result = g_api_table.lineBlindTransferA(hCall, lpszDestAddress, dwCountryCode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineBlindTransferW(uint32_t hCall, win32::Windows::Win32::Foundation::PWSTR lpszDestAddressW, uint32_t dwCountryCode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpszDestAddressW);
        ORBIT_TRACK_PARAM(dwCountryCode);

        auto win32_impl_result = g_api_table.lineBlindTransferW(hCall, lpszDestAddressW, dwCountryCode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineClose(uint32_t hLine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);

        auto win32_impl_result = g_api_table.lineClose(hLine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineCompleteCall(uint32_t hCall, uint32_t* lpdwCompletionID, uint32_t dwCompletionMode, uint32_t dwMessageID) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpdwCompletionID);
        ORBIT_TRACK_PARAM(dwCompletionMode);
        ORBIT_TRACK_PARAM(dwMessageID);

        auto win32_impl_result = g_api_table.lineCompleteCall(hCall, lpdwCompletionID, dwCompletionMode, dwMessageID);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineCompleteTransfer(uint32_t hCall, uint32_t hConsultCall, uint32_t* lphConfCall, uint32_t dwTransferMode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(hConsultCall);
        ORBIT_TRACK_PARAM(lphConfCall);
        ORBIT_TRACK_PARAM(dwTransferMode);

        auto win32_impl_result = g_api_table.lineCompleteTransfer(hCall, hConsultCall, lphConfCall, dwTransferMode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineConfigDialog(uint32_t dwDeviceID, win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpszDeviceClass);

        auto win32_impl_result = g_api_table.lineConfigDialog(dwDeviceID, hwndOwner, lpszDeviceClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineConfigDialogA(uint32_t dwDeviceID, win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpszDeviceClass);

        auto win32_impl_result = g_api_table.lineConfigDialogA(dwDeviceID, hwndOwner, lpszDeviceClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineConfigDialogW(uint32_t dwDeviceID, win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::Foundation::PWSTR lpszDeviceClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpszDeviceClass);

        auto win32_impl_result = g_api_table.lineConfigDialogW(dwDeviceID, hwndOwner, lpszDeviceClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineConfigDialogEdit(uint32_t dwDeviceID, win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass, void* lpDeviceConfigIn, uint32_t dwSize, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpDeviceConfigOut) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpszDeviceClass);
        ORBIT_TRACK_PARAM(lpDeviceConfigIn);
        ORBIT_TRACK_PARAM(dwSize);
        ORBIT_TRACK_PARAM(lpDeviceConfigOut);

        auto win32_impl_result = g_api_table.lineConfigDialogEdit(dwDeviceID, hwndOwner, lpszDeviceClass, lpDeviceConfigIn, dwSize, lpDeviceConfigOut);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineConfigDialogEditA(uint32_t dwDeviceID, win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass, void* lpDeviceConfigIn, uint32_t dwSize, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpDeviceConfigOut) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpszDeviceClass);
        ORBIT_TRACK_PARAM(lpDeviceConfigIn);
        ORBIT_TRACK_PARAM(dwSize);
        ORBIT_TRACK_PARAM(lpDeviceConfigOut);

        auto win32_impl_result = g_api_table.lineConfigDialogEditA(dwDeviceID, hwndOwner, lpszDeviceClass, lpDeviceConfigIn, dwSize, lpDeviceConfigOut);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineConfigDialogEditW(uint32_t dwDeviceID, win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::Foundation::PWSTR lpszDeviceClass, void* lpDeviceConfigIn, uint32_t dwSize, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpDeviceConfigOut) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpszDeviceClass);
        ORBIT_TRACK_PARAM(lpDeviceConfigIn);
        ORBIT_TRACK_PARAM(dwSize);
        ORBIT_TRACK_PARAM(lpDeviceConfigOut);

        auto win32_impl_result = g_api_table.lineConfigDialogEditW(dwDeviceID, hwndOwner, lpszDeviceClass, lpDeviceConfigIn, dwSize, lpDeviceConfigOut);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineConfigProvider(win32::Windows::Win32::Foundation::HWND hwndOwner, uint32_t dwPermanentProviderID) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(dwPermanentProviderID);

        auto win32_impl_result = g_api_table.lineConfigProvider(hwndOwner, dwPermanentProviderID);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineCreateAgentW(uint32_t hLine, win32::Windows::Win32::Foundation::PWSTR lpszAgentID, win32::Windows::Win32::Foundation::PWSTR lpszAgentPIN, uint32_t* lphAgent) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lpszAgentID);
        ORBIT_TRACK_PARAM(lpszAgentPIN);
        ORBIT_TRACK_PARAM(lphAgent);

        auto win32_impl_result = g_api_table.lineCreateAgentW(hLine, lpszAgentID, lpszAgentPIN, lphAgent);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineCreateAgentA(uint32_t hLine, win32::Windows::Win32::Foundation::PSTR lpszAgentID, win32::Windows::Win32::Foundation::PSTR lpszAgentPIN, uint32_t* lphAgent) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lpszAgentID);
        ORBIT_TRACK_PARAM(lpszAgentPIN);
        ORBIT_TRACK_PARAM(lphAgent);

        auto win32_impl_result = g_api_table.lineCreateAgentA(hLine, lpszAgentID, lpszAgentPIN, lphAgent);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineCreateAgentSessionW(uint32_t hLine, uint32_t hAgent, win32::Windows::Win32::Foundation::PWSTR lpszAgentPIN, uint32_t dwWorkingAddressID, ::win32::guid* lpGroupID, uint32_t* lphAgentSession) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(hAgent);
        ORBIT_TRACK_PARAM(lpszAgentPIN);
        ORBIT_TRACK_PARAM(dwWorkingAddressID);
        ORBIT_TRACK_PARAM(lpGroupID);
        ORBIT_TRACK_PARAM(lphAgentSession);

        auto win32_impl_result = g_api_table.lineCreateAgentSessionW(hLine, hAgent, lpszAgentPIN, dwWorkingAddressID, lpGroupID, lphAgentSession);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineCreateAgentSessionA(uint32_t hLine, uint32_t hAgent, win32::Windows::Win32::Foundation::PSTR lpszAgentPIN, uint32_t dwWorkingAddressID, ::win32::guid* lpGroupID, uint32_t* lphAgentSession) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(hAgent);
        ORBIT_TRACK_PARAM(lpszAgentPIN);
        ORBIT_TRACK_PARAM(dwWorkingAddressID);
        ORBIT_TRACK_PARAM(lpGroupID);
        ORBIT_TRACK_PARAM(lphAgentSession);

        auto win32_impl_result = g_api_table.lineCreateAgentSessionA(hLine, hAgent, lpszAgentPIN, dwWorkingAddressID, lpGroupID, lphAgentSession);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineDeallocateCall(uint32_t hCall) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);

        auto win32_impl_result = g_api_table.lineDeallocateCall(hCall);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineDevSpecific(uint32_t hLine, uint32_t dwAddressID, uint32_t hCall, void* lpParams, uint32_t dwSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpParams);
        ORBIT_TRACK_PARAM(dwSize);

        auto win32_impl_result = g_api_table.lineDevSpecific(hLine, dwAddressID, hCall, lpParams, dwSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineDevSpecificFeature(uint32_t hLine, uint32_t dwFeature, void* lpParams, uint32_t dwSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwFeature);
        ORBIT_TRACK_PARAM(lpParams);
        ORBIT_TRACK_PARAM(dwSize);

        auto win32_impl_result = g_api_table.lineDevSpecificFeature(hLine, dwFeature, lpParams, dwSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineDial(uint32_t hCall, win32::Windows::Win32::Foundation::PSTR lpszDestAddress, uint32_t dwCountryCode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(dwCountryCode);

        auto win32_impl_result = g_api_table.lineDial(hCall, lpszDestAddress, dwCountryCode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineDialA(uint32_t hCall, win32::Windows::Win32::Foundation::PSTR lpszDestAddress, uint32_t dwCountryCode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(dwCountryCode);

        auto win32_impl_result = g_api_table.lineDialA(hCall, lpszDestAddress, dwCountryCode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineDialW(uint32_t hCall, win32::Windows::Win32::Foundation::PWSTR lpszDestAddress, uint32_t dwCountryCode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(dwCountryCode);

        auto win32_impl_result = g_api_table.lineDialW(hCall, lpszDestAddress, dwCountryCode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineDrop(uint32_t hCall, win32::Windows::Win32::Foundation::PSTR lpsUserUserInfo, uint32_t dwSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpsUserUserInfo);
        ORBIT_TRACK_PARAM(dwSize);

        auto win32_impl_result = g_api_table.lineDrop(hCall, lpsUserUserInfo, dwSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineForward(uint32_t hLine, uint32_t bAllAddresses, uint32_t dwAddressID, win32::Windows::Win32::Devices::Tapi::LINEFORWARDLIST* lpForwardList, uint32_t dwNumRingsNoAnswer, uint32_t* lphConsultCall, win32::Windows::Win32::Devices::Tapi::LINECALLPARAMS* lpCallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(bAllAddresses);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lpForwardList);
        ORBIT_TRACK_PARAM(dwNumRingsNoAnswer);
        ORBIT_TRACK_PARAM(lphConsultCall);
        ORBIT_TRACK_PARAM(lpCallParams);

        auto win32_impl_result = g_api_table.lineForward(hLine, bAllAddresses, dwAddressID, lpForwardList, dwNumRingsNoAnswer, lphConsultCall, lpCallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineForwardA(uint32_t hLine, uint32_t bAllAddresses, uint32_t dwAddressID, win32::Windows::Win32::Devices::Tapi::LINEFORWARDLIST* lpForwardList, uint32_t dwNumRingsNoAnswer, uint32_t* lphConsultCall, win32::Windows::Win32::Devices::Tapi::LINECALLPARAMS* lpCallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(bAllAddresses);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lpForwardList);
        ORBIT_TRACK_PARAM(dwNumRingsNoAnswer);
        ORBIT_TRACK_PARAM(lphConsultCall);
        ORBIT_TRACK_PARAM(lpCallParams);

        auto win32_impl_result = g_api_table.lineForwardA(hLine, bAllAddresses, dwAddressID, lpForwardList, dwNumRingsNoAnswer, lphConsultCall, lpCallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineForwardW(uint32_t hLine, uint32_t bAllAddresses, uint32_t dwAddressID, win32::Windows::Win32::Devices::Tapi::LINEFORWARDLIST* lpForwardList, uint32_t dwNumRingsNoAnswer, uint32_t* lphConsultCall, win32::Windows::Win32::Devices::Tapi::LINECALLPARAMS* lpCallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(bAllAddresses);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lpForwardList);
        ORBIT_TRACK_PARAM(dwNumRingsNoAnswer);
        ORBIT_TRACK_PARAM(lphConsultCall);
        ORBIT_TRACK_PARAM(lpCallParams);

        auto win32_impl_result = g_api_table.lineForwardW(hLine, bAllAddresses, dwAddressID, lpForwardList, dwNumRingsNoAnswer, lphConsultCall, lpCallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGatherDigits(uint32_t hCall, uint32_t dwDigitModes, win32::Windows::Win32::Foundation::PSTR lpsDigits, uint32_t dwNumDigits, win32::Windows::Win32::Foundation::PSTR lpszTerminationDigits, uint32_t dwFirstDigitTimeout, uint32_t dwInterDigitTimeout) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwDigitModes);
        ORBIT_TRACK_PARAM(lpsDigits);
        ORBIT_TRACK_PARAM(dwNumDigits);
        ORBIT_TRACK_PARAM(lpszTerminationDigits);
        ORBIT_TRACK_PARAM(dwFirstDigitTimeout);
        ORBIT_TRACK_PARAM(dwInterDigitTimeout);

        auto win32_impl_result = g_api_table.lineGatherDigits(hCall, dwDigitModes, lpsDigits, dwNumDigits, lpszTerminationDigits, dwFirstDigitTimeout, dwInterDigitTimeout);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGatherDigitsA(uint32_t hCall, uint32_t dwDigitModes, win32::Windows::Win32::Foundation::PSTR lpsDigits, uint32_t dwNumDigits, win32::Windows::Win32::Foundation::PSTR lpszTerminationDigits, uint32_t dwFirstDigitTimeout, uint32_t dwInterDigitTimeout) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwDigitModes);
        ORBIT_TRACK_PARAM(lpsDigits);
        ORBIT_TRACK_PARAM(dwNumDigits);
        ORBIT_TRACK_PARAM(lpszTerminationDigits);
        ORBIT_TRACK_PARAM(dwFirstDigitTimeout);
        ORBIT_TRACK_PARAM(dwInterDigitTimeout);

        auto win32_impl_result = g_api_table.lineGatherDigitsA(hCall, dwDigitModes, lpsDigits, dwNumDigits, lpszTerminationDigits, dwFirstDigitTimeout, dwInterDigitTimeout);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGatherDigitsW(uint32_t hCall, uint32_t dwDigitModes, win32::Windows::Win32::Foundation::PWSTR lpsDigits, uint32_t dwNumDigits, win32::Windows::Win32::Foundation::PWSTR lpszTerminationDigits, uint32_t dwFirstDigitTimeout, uint32_t dwInterDigitTimeout) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwDigitModes);
        ORBIT_TRACK_PARAM(lpsDigits);
        ORBIT_TRACK_PARAM(dwNumDigits);
        ORBIT_TRACK_PARAM(lpszTerminationDigits);
        ORBIT_TRACK_PARAM(dwFirstDigitTimeout);
        ORBIT_TRACK_PARAM(dwInterDigitTimeout);

        auto win32_impl_result = g_api_table.lineGatherDigitsW(hCall, dwDigitModes, lpsDigits, dwNumDigits, lpszTerminationDigits, dwFirstDigitTimeout, dwInterDigitTimeout);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGenerateDigits(uint32_t hCall, uint32_t dwDigitMode, win32::Windows::Win32::Foundation::PSTR lpszDigits, uint32_t dwDuration) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwDigitMode);
        ORBIT_TRACK_PARAM(lpszDigits);
        ORBIT_TRACK_PARAM(dwDuration);

        auto win32_impl_result = g_api_table.lineGenerateDigits(hCall, dwDigitMode, lpszDigits, dwDuration);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGenerateDigitsA(uint32_t hCall, uint32_t dwDigitMode, win32::Windows::Win32::Foundation::PSTR lpszDigits, uint32_t dwDuration) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwDigitMode);
        ORBIT_TRACK_PARAM(lpszDigits);
        ORBIT_TRACK_PARAM(dwDuration);

        auto win32_impl_result = g_api_table.lineGenerateDigitsA(hCall, dwDigitMode, lpszDigits, dwDuration);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGenerateDigitsW(uint32_t hCall, uint32_t dwDigitMode, win32::Windows::Win32::Foundation::PWSTR lpszDigits, uint32_t dwDuration) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwDigitMode);
        ORBIT_TRACK_PARAM(lpszDigits);
        ORBIT_TRACK_PARAM(dwDuration);

        auto win32_impl_result = g_api_table.lineGenerateDigitsW(hCall, dwDigitMode, lpszDigits, dwDuration);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGenerateTone(uint32_t hCall, uint32_t dwToneMode, uint32_t dwDuration, uint32_t dwNumTones, win32::Windows::Win32::Devices::Tapi::LINEGENERATETONE* lpTones) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwToneMode);
        ORBIT_TRACK_PARAM(dwDuration);
        ORBIT_TRACK_PARAM(dwNumTones);
        ORBIT_TRACK_PARAM(lpTones);

        auto win32_impl_result = g_api_table.lineGenerateTone(hCall, dwToneMode, dwDuration, dwNumTones, lpTones);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAddressCaps(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t dwAddressID, uint32_t dwAPIVersion, uint32_t dwExtVersion, win32::Windows::Win32::Devices::Tapi::LINEADDRESSCAPS* lpAddressCaps) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(dwExtVersion);
        ORBIT_TRACK_PARAM(lpAddressCaps);

        auto win32_impl_result = g_api_table.lineGetAddressCaps(hLineApp, dwDeviceID, dwAddressID, dwAPIVersion, dwExtVersion, lpAddressCaps);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAddressCapsA(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t dwAddressID, uint32_t dwAPIVersion, uint32_t dwExtVersion, win32::Windows::Win32::Devices::Tapi::LINEADDRESSCAPS* lpAddressCaps) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(dwExtVersion);
        ORBIT_TRACK_PARAM(lpAddressCaps);

        auto win32_impl_result = g_api_table.lineGetAddressCapsA(hLineApp, dwDeviceID, dwAddressID, dwAPIVersion, dwExtVersion, lpAddressCaps);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAddressCapsW(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t dwAddressID, uint32_t dwAPIVersion, uint32_t dwExtVersion, win32::Windows::Win32::Devices::Tapi::LINEADDRESSCAPS* lpAddressCaps) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(dwExtVersion);
        ORBIT_TRACK_PARAM(lpAddressCaps);

        auto win32_impl_result = g_api_table.lineGetAddressCapsW(hLineApp, dwDeviceID, dwAddressID, dwAPIVersion, dwExtVersion, lpAddressCaps);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAddressID(uint32_t hLine, uint32_t* lpdwAddressID, uint32_t dwAddressMode, win32::Windows::Win32::Foundation::PSTR lpsAddress, uint32_t dwSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lpdwAddressID);
        ORBIT_TRACK_PARAM(dwAddressMode);
        ORBIT_TRACK_PARAM(lpsAddress);
        ORBIT_TRACK_PARAM(dwSize);

        auto win32_impl_result = g_api_table.lineGetAddressID(hLine, lpdwAddressID, dwAddressMode, lpsAddress, dwSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAddressIDA(uint32_t hLine, uint32_t* lpdwAddressID, uint32_t dwAddressMode, win32::Windows::Win32::Foundation::PSTR lpsAddress, uint32_t dwSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lpdwAddressID);
        ORBIT_TRACK_PARAM(dwAddressMode);
        ORBIT_TRACK_PARAM(lpsAddress);
        ORBIT_TRACK_PARAM(dwSize);

        auto win32_impl_result = g_api_table.lineGetAddressIDA(hLine, lpdwAddressID, dwAddressMode, lpsAddress, dwSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAddressIDW(uint32_t hLine, uint32_t* lpdwAddressID, uint32_t dwAddressMode, win32::Windows::Win32::Foundation::PWSTR lpsAddress, uint32_t dwSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lpdwAddressID);
        ORBIT_TRACK_PARAM(dwAddressMode);
        ORBIT_TRACK_PARAM(lpsAddress);
        ORBIT_TRACK_PARAM(dwSize);

        auto win32_impl_result = g_api_table.lineGetAddressIDW(hLine, lpdwAddressID, dwAddressMode, lpsAddress, dwSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAddressStatus(uint32_t hLine, uint32_t dwAddressID, win32::Windows::Win32::Devices::Tapi::LINEADDRESSSTATUS* lpAddressStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lpAddressStatus);

        auto win32_impl_result = g_api_table.lineGetAddressStatus(hLine, dwAddressID, lpAddressStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAddressStatusA(uint32_t hLine, uint32_t dwAddressID, win32::Windows::Win32::Devices::Tapi::LINEADDRESSSTATUS* lpAddressStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lpAddressStatus);

        auto win32_impl_result = g_api_table.lineGetAddressStatusA(hLine, dwAddressID, lpAddressStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAddressStatusW(uint32_t hLine, uint32_t dwAddressID, win32::Windows::Win32::Devices::Tapi::LINEADDRESSSTATUS* lpAddressStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lpAddressStatus);

        auto win32_impl_result = g_api_table.lineGetAddressStatusW(hLine, dwAddressID, lpAddressStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAgentActivityListA(uint32_t hLine, uint32_t dwAddressID, win32::Windows::Win32::Devices::Tapi::LINEAGENTACTIVITYLIST* lpAgentActivityList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lpAgentActivityList);

        auto win32_impl_result = g_api_table.lineGetAgentActivityListA(hLine, dwAddressID, lpAgentActivityList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAgentActivityListW(uint32_t hLine, uint32_t dwAddressID, win32::Windows::Win32::Devices::Tapi::LINEAGENTACTIVITYLIST* lpAgentActivityList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lpAgentActivityList);

        auto win32_impl_result = g_api_table.lineGetAgentActivityListW(hLine, dwAddressID, lpAgentActivityList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAgentCapsA(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t dwAddressID, uint32_t dwAppAPIVersion, win32::Windows::Win32::Devices::Tapi::LINEAGENTCAPS* lpAgentCaps) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(dwAppAPIVersion);
        ORBIT_TRACK_PARAM(lpAgentCaps);

        auto win32_impl_result = g_api_table.lineGetAgentCapsA(hLineApp, dwDeviceID, dwAddressID, dwAppAPIVersion, lpAgentCaps);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAgentCapsW(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t dwAddressID, uint32_t dwAppAPIVersion, win32::Windows::Win32::Devices::Tapi::LINEAGENTCAPS* lpAgentCaps) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(dwAppAPIVersion);
        ORBIT_TRACK_PARAM(lpAgentCaps);

        auto win32_impl_result = g_api_table.lineGetAgentCapsW(hLineApp, dwDeviceID, dwAddressID, dwAppAPIVersion, lpAgentCaps);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAgentGroupListA(uint32_t hLine, uint32_t dwAddressID, win32::Windows::Win32::Devices::Tapi::LINEAGENTGROUPLIST* lpAgentGroupList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lpAgentGroupList);

        auto win32_impl_result = g_api_table.lineGetAgentGroupListA(hLine, dwAddressID, lpAgentGroupList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAgentGroupListW(uint32_t hLine, uint32_t dwAddressID, win32::Windows::Win32::Devices::Tapi::LINEAGENTGROUPLIST* lpAgentGroupList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lpAgentGroupList);

        auto win32_impl_result = g_api_table.lineGetAgentGroupListW(hLine, dwAddressID, lpAgentGroupList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAgentInfo(uint32_t hLine, uint32_t hAgent, win32::Windows::Win32::Devices::Tapi::LINEAGENTINFO* lpAgentInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(hAgent);
        ORBIT_TRACK_PARAM(lpAgentInfo);

        auto win32_impl_result = g_api_table.lineGetAgentInfo(hLine, hAgent, lpAgentInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAgentSessionInfo(uint32_t hLine, uint32_t hAgentSession, win32::Windows::Win32::Devices::Tapi::LINEAGENTSESSIONINFO* lpAgentSessionInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(hAgentSession);
        ORBIT_TRACK_PARAM(lpAgentSessionInfo);

        auto win32_impl_result = g_api_table.lineGetAgentSessionInfo(hLine, hAgentSession, lpAgentSessionInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAgentSessionList(uint32_t hLine, uint32_t hAgent, win32::Windows::Win32::Devices::Tapi::LINEAGENTSESSIONLIST* lpAgentSessionList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(hAgent);
        ORBIT_TRACK_PARAM(lpAgentSessionList);

        auto win32_impl_result = g_api_table.lineGetAgentSessionList(hLine, hAgent, lpAgentSessionList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAgentStatusA(uint32_t hLine, uint32_t dwAddressID, win32::Windows::Win32::Devices::Tapi::LINEAGENTSTATUS* lpAgentStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lpAgentStatus);

        auto win32_impl_result = g_api_table.lineGetAgentStatusA(hLine, dwAddressID, lpAgentStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAgentStatusW(uint32_t hLine, uint32_t dwAddressID, win32::Windows::Win32::Devices::Tapi::LINEAGENTSTATUS* lpAgentStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lpAgentStatus);

        auto win32_impl_result = g_api_table.lineGetAgentStatusW(hLine, dwAddressID, lpAgentStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAppPriority(win32::Windows::Win32::Foundation::PSTR lpszAppFilename, uint32_t dwMediaMode, win32::Windows::Win32::Devices::Tapi::LINEEXTENSIONID* lpExtensionID, uint32_t dwRequestMode, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpExtensionName, uint32_t* lpdwPriority) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszAppFilename);
        ORBIT_TRACK_PARAM(dwMediaMode);
        ORBIT_TRACK_PARAM(lpExtensionID);
        ORBIT_TRACK_PARAM(dwRequestMode);
        ORBIT_TRACK_PARAM(lpExtensionName);
        ORBIT_TRACK_PARAM(lpdwPriority);

        auto win32_impl_result = g_api_table.lineGetAppPriority(lpszAppFilename, dwMediaMode, lpExtensionID, dwRequestMode, lpExtensionName, lpdwPriority);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAppPriorityA(win32::Windows::Win32::Foundation::PSTR lpszAppFilename, uint32_t dwMediaMode, win32::Windows::Win32::Devices::Tapi::LINEEXTENSIONID* lpExtensionID, uint32_t dwRequestMode, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpExtensionName, uint32_t* lpdwPriority) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszAppFilename);
        ORBIT_TRACK_PARAM(dwMediaMode);
        ORBIT_TRACK_PARAM(lpExtensionID);
        ORBIT_TRACK_PARAM(dwRequestMode);
        ORBIT_TRACK_PARAM(lpExtensionName);
        ORBIT_TRACK_PARAM(lpdwPriority);

        auto win32_impl_result = g_api_table.lineGetAppPriorityA(lpszAppFilename, dwMediaMode, lpExtensionID, dwRequestMode, lpExtensionName, lpdwPriority);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetAppPriorityW(win32::Windows::Win32::Foundation::PWSTR lpszAppFilename, uint32_t dwMediaMode, win32::Windows::Win32::Devices::Tapi::LINEEXTENSIONID* lpExtensionID, uint32_t dwRequestMode, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpExtensionName, uint32_t* lpdwPriority) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszAppFilename);
        ORBIT_TRACK_PARAM(dwMediaMode);
        ORBIT_TRACK_PARAM(lpExtensionID);
        ORBIT_TRACK_PARAM(dwRequestMode);
        ORBIT_TRACK_PARAM(lpExtensionName);
        ORBIT_TRACK_PARAM(lpdwPriority);

        auto win32_impl_result = g_api_table.lineGetAppPriorityW(lpszAppFilename, dwMediaMode, lpExtensionID, dwRequestMode, lpExtensionName, lpdwPriority);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetCallInfo(uint32_t hCall, win32::Windows::Win32::Devices::Tapi::LINECALLINFO* lpCallInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpCallInfo);

        auto win32_impl_result = g_api_table.lineGetCallInfo(hCall, lpCallInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetCallInfoA(uint32_t hCall, win32::Windows::Win32::Devices::Tapi::LINECALLINFO* lpCallInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpCallInfo);

        auto win32_impl_result = g_api_table.lineGetCallInfoA(hCall, lpCallInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetCallInfoW(uint32_t hCall, win32::Windows::Win32::Devices::Tapi::LINECALLINFO* lpCallInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpCallInfo);

        auto win32_impl_result = g_api_table.lineGetCallInfoW(hCall, lpCallInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetCallStatus(uint32_t hCall, win32::Windows::Win32::Devices::Tapi::LINECALLSTATUS* lpCallStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpCallStatus);

        auto win32_impl_result = g_api_table.lineGetCallStatus(hCall, lpCallStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetConfRelatedCalls(uint32_t hCall, win32::Windows::Win32::Devices::Tapi::LINECALLLIST* lpCallList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpCallList);

        auto win32_impl_result = g_api_table.lineGetConfRelatedCalls(hCall, lpCallList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetCountry(uint32_t dwCountryID, uint32_t dwAPIVersion, win32::Windows::Win32::Devices::Tapi::LINECOUNTRYLIST* lpLineCountryList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwCountryID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(lpLineCountryList);

        auto win32_impl_result = g_api_table.lineGetCountry(dwCountryID, dwAPIVersion, lpLineCountryList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetCountryA(uint32_t dwCountryID, uint32_t dwAPIVersion, win32::Windows::Win32::Devices::Tapi::LINECOUNTRYLIST* lpLineCountryList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwCountryID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(lpLineCountryList);

        auto win32_impl_result = g_api_table.lineGetCountryA(dwCountryID, dwAPIVersion, lpLineCountryList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetCountryW(uint32_t dwCountryID, uint32_t dwAPIVersion, win32::Windows::Win32::Devices::Tapi::LINECOUNTRYLIST* lpLineCountryList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwCountryID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(lpLineCountryList);

        auto win32_impl_result = g_api_table.lineGetCountryW(dwCountryID, dwAPIVersion, lpLineCountryList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetDevCaps(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t dwAPIVersion, uint32_t dwExtVersion, win32::Windows::Win32::Devices::Tapi::LINEDEVCAPS* lpLineDevCaps) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(dwExtVersion);
        ORBIT_TRACK_PARAM(lpLineDevCaps);

        auto win32_impl_result = g_api_table.lineGetDevCaps(hLineApp, dwDeviceID, dwAPIVersion, dwExtVersion, lpLineDevCaps);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetDevCapsA(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t dwAPIVersion, uint32_t dwExtVersion, win32::Windows::Win32::Devices::Tapi::LINEDEVCAPS* lpLineDevCaps) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(dwExtVersion);
        ORBIT_TRACK_PARAM(lpLineDevCaps);

        auto win32_impl_result = g_api_table.lineGetDevCapsA(hLineApp, dwDeviceID, dwAPIVersion, dwExtVersion, lpLineDevCaps);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetDevCapsW(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t dwAPIVersion, uint32_t dwExtVersion, win32::Windows::Win32::Devices::Tapi::LINEDEVCAPS* lpLineDevCaps) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(dwExtVersion);
        ORBIT_TRACK_PARAM(lpLineDevCaps);

        auto win32_impl_result = g_api_table.lineGetDevCapsW(hLineApp, dwDeviceID, dwAPIVersion, dwExtVersion, lpLineDevCaps);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetDevConfig(uint32_t dwDeviceID, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpDeviceConfig, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lpDeviceConfig);
        ORBIT_TRACK_PARAM(lpszDeviceClass);

        auto win32_impl_result = g_api_table.lineGetDevConfig(dwDeviceID, lpDeviceConfig, lpszDeviceClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetDevConfigA(uint32_t dwDeviceID, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpDeviceConfig, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lpDeviceConfig);
        ORBIT_TRACK_PARAM(lpszDeviceClass);

        auto win32_impl_result = g_api_table.lineGetDevConfigA(dwDeviceID, lpDeviceConfig, lpszDeviceClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetDevConfigW(uint32_t dwDeviceID, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpDeviceConfig, win32::Windows::Win32::Foundation::PWSTR lpszDeviceClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lpDeviceConfig);
        ORBIT_TRACK_PARAM(lpszDeviceClass);

        auto win32_impl_result = g_api_table.lineGetDevConfigW(dwDeviceID, lpDeviceConfig, lpszDeviceClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetGroupListA(uint32_t hLine, win32::Windows::Win32::Devices::Tapi::LINEAGENTGROUPLIST* lpGroupList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lpGroupList);

        auto win32_impl_result = g_api_table.lineGetGroupListA(hLine, lpGroupList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetGroupListW(uint32_t hLine, win32::Windows::Win32::Devices::Tapi::LINEAGENTGROUPLIST* lpGroupList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lpGroupList);

        auto win32_impl_result = g_api_table.lineGetGroupListW(hLine, lpGroupList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetIcon(uint32_t dwDeviceID, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass, intptr_t* lphIcon) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lpszDeviceClass);
        ORBIT_TRACK_PARAM(lphIcon);

        auto win32_impl_result = g_api_table.lineGetIcon(dwDeviceID, lpszDeviceClass, lphIcon);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetIconA(uint32_t dwDeviceID, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass, intptr_t* lphIcon) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lpszDeviceClass);
        ORBIT_TRACK_PARAM(lphIcon);

        auto win32_impl_result = g_api_table.lineGetIconA(dwDeviceID, lpszDeviceClass, lphIcon);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetIconW(uint32_t dwDeviceID, win32::Windows::Win32::Foundation::PWSTR lpszDeviceClass, intptr_t* lphIcon) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lpszDeviceClass);
        ORBIT_TRACK_PARAM(lphIcon);

        auto win32_impl_result = g_api_table.lineGetIconW(dwDeviceID, lpszDeviceClass, lphIcon);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetID(uint32_t hLine, uint32_t dwAddressID, uint32_t hCall, uint32_t dwSelect, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpDeviceID, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwSelect);
        ORBIT_TRACK_PARAM(lpDeviceID);
        ORBIT_TRACK_PARAM(lpszDeviceClass);

        auto win32_impl_result = g_api_table.lineGetID(hLine, dwAddressID, hCall, dwSelect, lpDeviceID, lpszDeviceClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetIDA(uint32_t hLine, uint32_t dwAddressID, uint32_t hCall, uint32_t dwSelect, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpDeviceID, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwSelect);
        ORBIT_TRACK_PARAM(lpDeviceID);
        ORBIT_TRACK_PARAM(lpszDeviceClass);

        auto win32_impl_result = g_api_table.lineGetIDA(hLine, dwAddressID, hCall, dwSelect, lpDeviceID, lpszDeviceClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetIDW(uint32_t hLine, uint32_t dwAddressID, uint32_t hCall, uint32_t dwSelect, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpDeviceID, win32::Windows::Win32::Foundation::PWSTR lpszDeviceClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwSelect);
        ORBIT_TRACK_PARAM(lpDeviceID);
        ORBIT_TRACK_PARAM(lpszDeviceClass);

        auto win32_impl_result = g_api_table.lineGetIDW(hLine, dwAddressID, hCall, dwSelect, lpDeviceID, lpszDeviceClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetLineDevStatus(uint32_t hLine, win32::Windows::Win32::Devices::Tapi::LINEDEVSTATUS* lpLineDevStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lpLineDevStatus);

        auto win32_impl_result = g_api_table.lineGetLineDevStatus(hLine, lpLineDevStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetLineDevStatusA(uint32_t hLine, win32::Windows::Win32::Devices::Tapi::LINEDEVSTATUS* lpLineDevStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lpLineDevStatus);

        auto win32_impl_result = g_api_table.lineGetLineDevStatusA(hLine, lpLineDevStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetLineDevStatusW(uint32_t hLine, win32::Windows::Win32::Devices::Tapi::LINEDEVSTATUS* lpLineDevStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lpLineDevStatus);

        auto win32_impl_result = g_api_table.lineGetLineDevStatusW(hLine, lpLineDevStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetMessage(uint32_t hLineApp, win32::Windows::Win32::Devices::Tapi::LINEMESSAGE* lpMessage, uint32_t dwTimeout) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(lpMessage);
        ORBIT_TRACK_PARAM(dwTimeout);

        auto win32_impl_result = g_api_table.lineGetMessage(hLineApp, lpMessage, dwTimeout);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetNewCalls(uint32_t hLine, uint32_t dwAddressID, uint32_t dwSelect, win32::Windows::Win32::Devices::Tapi::LINECALLLIST* lpCallList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(dwSelect);
        ORBIT_TRACK_PARAM(lpCallList);

        auto win32_impl_result = g_api_table.lineGetNewCalls(hLine, dwAddressID, dwSelect, lpCallList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetNumRings(uint32_t hLine, uint32_t dwAddressID, uint32_t* lpdwNumRings) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lpdwNumRings);

        auto win32_impl_result = g_api_table.lineGetNumRings(hLine, dwAddressID, lpdwNumRings);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetProviderList(uint32_t dwAPIVersion, win32::Windows::Win32::Devices::Tapi::LINEPROVIDERLIST* lpProviderList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(lpProviderList);

        auto win32_impl_result = g_api_table.lineGetProviderList(dwAPIVersion, lpProviderList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetProviderListA(uint32_t dwAPIVersion, win32::Windows::Win32::Devices::Tapi::LINEPROVIDERLIST* lpProviderList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(lpProviderList);

        auto win32_impl_result = g_api_table.lineGetProviderListA(dwAPIVersion, lpProviderList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetProviderListW(uint32_t dwAPIVersion, win32::Windows::Win32::Devices::Tapi::LINEPROVIDERLIST* lpProviderList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(lpProviderList);

        auto win32_impl_result = g_api_table.lineGetProviderListW(dwAPIVersion, lpProviderList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetProxyStatus(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t dwAppAPIVersion, win32::Windows::Win32::Devices::Tapi::LINEPROXYREQUESTLIST* lpLineProxyReqestList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAppAPIVersion);
        ORBIT_TRACK_PARAM(lpLineProxyReqestList);

        auto win32_impl_result = g_api_table.lineGetProxyStatus(hLineApp, dwDeviceID, dwAppAPIVersion, lpLineProxyReqestList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetQueueInfo(uint32_t hLine, uint32_t dwQueueID, win32::Windows::Win32::Devices::Tapi::LINEQUEUEINFO* lpLineQueueInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwQueueID);
        ORBIT_TRACK_PARAM(lpLineQueueInfo);

        auto win32_impl_result = g_api_table.lineGetQueueInfo(hLine, dwQueueID, lpLineQueueInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetQueueListA(uint32_t hLine, ::win32::guid* lpGroupID, win32::Windows::Win32::Devices::Tapi::LINEQUEUELIST* lpQueueList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lpGroupID);
        ORBIT_TRACK_PARAM(lpQueueList);

        auto win32_impl_result = g_api_table.lineGetQueueListA(hLine, lpGroupID, lpQueueList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetQueueListW(uint32_t hLine, ::win32::guid* lpGroupID, win32::Windows::Win32::Devices::Tapi::LINEQUEUELIST* lpQueueList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lpGroupID);
        ORBIT_TRACK_PARAM(lpQueueList);

        auto win32_impl_result = g_api_table.lineGetQueueListW(hLine, lpGroupID, lpQueueList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetRequest(uint32_t hLineApp, uint32_t dwRequestMode, void* lpRequestBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwRequestMode);
        ORBIT_TRACK_PARAM(lpRequestBuffer);

        auto win32_impl_result = g_api_table.lineGetRequest(hLineApp, dwRequestMode, lpRequestBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetRequestA(uint32_t hLineApp, uint32_t dwRequestMode, void* lpRequestBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwRequestMode);
        ORBIT_TRACK_PARAM(lpRequestBuffer);

        auto win32_impl_result = g_api_table.lineGetRequestA(hLineApp, dwRequestMode, lpRequestBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetRequestW(uint32_t hLineApp, uint32_t dwRequestMode, void* lpRequestBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwRequestMode);
        ORBIT_TRACK_PARAM(lpRequestBuffer);

        auto win32_impl_result = g_api_table.lineGetRequestW(hLineApp, dwRequestMode, lpRequestBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetStatusMessages(uint32_t hLine, uint32_t* lpdwLineStates, uint32_t* lpdwAddressStates) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lpdwLineStates);
        ORBIT_TRACK_PARAM(lpdwAddressStates);

        auto win32_impl_result = g_api_table.lineGetStatusMessages(hLine, lpdwLineStates, lpdwAddressStates);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetTranslateCaps(uint32_t hLineApp, uint32_t dwAPIVersion, win32::Windows::Win32::Devices::Tapi::LINETRANSLATECAPS* lpTranslateCaps) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(lpTranslateCaps);

        auto win32_impl_result = g_api_table.lineGetTranslateCaps(hLineApp, dwAPIVersion, lpTranslateCaps);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetTranslateCapsA(uint32_t hLineApp, uint32_t dwAPIVersion, win32::Windows::Win32::Devices::Tapi::LINETRANSLATECAPS* lpTranslateCaps) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(lpTranslateCaps);

        auto win32_impl_result = g_api_table.lineGetTranslateCapsA(hLineApp, dwAPIVersion, lpTranslateCaps);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineGetTranslateCapsW(uint32_t hLineApp, uint32_t dwAPIVersion, win32::Windows::Win32::Devices::Tapi::LINETRANSLATECAPS* lpTranslateCaps) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(lpTranslateCaps);

        auto win32_impl_result = g_api_table.lineGetTranslateCapsW(hLineApp, dwAPIVersion, lpTranslateCaps);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineHandoff(uint32_t hCall, win32::Windows::Win32::Foundation::PSTR lpszFileName, uint32_t dwMediaMode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpszFileName);
        ORBIT_TRACK_PARAM(dwMediaMode);

        auto win32_impl_result = g_api_table.lineHandoff(hCall, lpszFileName, dwMediaMode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineHandoffA(uint32_t hCall, win32::Windows::Win32::Foundation::PSTR lpszFileName, uint32_t dwMediaMode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpszFileName);
        ORBIT_TRACK_PARAM(dwMediaMode);

        auto win32_impl_result = g_api_table.lineHandoffA(hCall, lpszFileName, dwMediaMode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineHandoffW(uint32_t hCall, win32::Windows::Win32::Foundation::PWSTR lpszFileName, uint32_t dwMediaMode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpszFileName);
        ORBIT_TRACK_PARAM(dwMediaMode);

        auto win32_impl_result = g_api_table.lineHandoffW(hCall, lpszFileName, dwMediaMode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineHold(uint32_t hCall) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);

        auto win32_impl_result = g_api_table.lineHold(hCall);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineInitialize(uint32_t* lphLineApp, win32::Windows::Win32::Foundation::HINSTANCE hInstance, win32::Windows::Win32::Devices::Tapi::LINECALLBACK* lpfnCallback, win32::Windows::Win32::Foundation::PSTR lpszAppName, uint32_t* lpdwNumDevs) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lphLineApp);
        ORBIT_TRACK_PARAM(hInstance);
        ORBIT_TRACK_PARAM(lpfnCallback);
        ORBIT_TRACK_PARAM(lpszAppName);
        ORBIT_TRACK_PARAM(lpdwNumDevs);

        auto win32_impl_result = g_api_table.lineInitialize(lphLineApp, hInstance, lpfnCallback, lpszAppName, lpdwNumDevs);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineInitializeExA(uint32_t* lphLineApp, win32::Windows::Win32::Foundation::HINSTANCE hInstance, win32::Windows::Win32::Devices::Tapi::LINECALLBACK* lpfnCallback, win32::Windows::Win32::Foundation::PSTR lpszFriendlyAppName, uint32_t* lpdwNumDevs, uint32_t* lpdwAPIVersion, win32::Windows::Win32::Devices::Tapi::LINEINITIALIZEEXPARAMS* lpLineInitializeExParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lphLineApp);
        ORBIT_TRACK_PARAM(hInstance);
        ORBIT_TRACK_PARAM(lpfnCallback);
        ORBIT_TRACK_PARAM(lpszFriendlyAppName);
        ORBIT_TRACK_PARAM(lpdwNumDevs);
        ORBIT_TRACK_PARAM(lpdwAPIVersion);
        ORBIT_TRACK_PARAM(lpLineInitializeExParams);

        auto win32_impl_result = g_api_table.lineInitializeExA(lphLineApp, hInstance, lpfnCallback, lpszFriendlyAppName, lpdwNumDevs, lpdwAPIVersion, lpLineInitializeExParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineInitializeExW(uint32_t* lphLineApp, win32::Windows::Win32::Foundation::HINSTANCE hInstance, win32::Windows::Win32::Devices::Tapi::LINECALLBACK* lpfnCallback, win32::Windows::Win32::Foundation::PWSTR lpszFriendlyAppName, uint32_t* lpdwNumDevs, uint32_t* lpdwAPIVersion, win32::Windows::Win32::Devices::Tapi::LINEINITIALIZEEXPARAMS* lpLineInitializeExParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lphLineApp);
        ORBIT_TRACK_PARAM(hInstance);
        ORBIT_TRACK_PARAM(lpfnCallback);
        ORBIT_TRACK_PARAM(lpszFriendlyAppName);
        ORBIT_TRACK_PARAM(lpdwNumDevs);
        ORBIT_TRACK_PARAM(lpdwAPIVersion);
        ORBIT_TRACK_PARAM(lpLineInitializeExParams);

        auto win32_impl_result = g_api_table.lineInitializeExW(lphLineApp, hInstance, lpfnCallback, lpszFriendlyAppName, lpdwNumDevs, lpdwAPIVersion, lpLineInitializeExParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineMakeCall(uint32_t hLine, uint32_t* lphCall, win32::Windows::Win32::Foundation::PSTR lpszDestAddress, uint32_t dwCountryCode, win32::Windows::Win32::Devices::Tapi::LINECALLPARAMS* lpCallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lphCall);
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(dwCountryCode);
        ORBIT_TRACK_PARAM(lpCallParams);

        auto win32_impl_result = g_api_table.lineMakeCall(hLine, lphCall, lpszDestAddress, dwCountryCode, lpCallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineMakeCallA(uint32_t hLine, uint32_t* lphCall, win32::Windows::Win32::Foundation::PSTR lpszDestAddress, uint32_t dwCountryCode, win32::Windows::Win32::Devices::Tapi::LINECALLPARAMS* lpCallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lphCall);
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(dwCountryCode);
        ORBIT_TRACK_PARAM(lpCallParams);

        auto win32_impl_result = g_api_table.lineMakeCallA(hLine, lphCall, lpszDestAddress, dwCountryCode, lpCallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineMakeCallW(uint32_t hLine, uint32_t* lphCall, win32::Windows::Win32::Foundation::PWSTR lpszDestAddress, uint32_t dwCountryCode, win32::Windows::Win32::Devices::Tapi::LINECALLPARAMS* lpCallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lphCall);
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(dwCountryCode);
        ORBIT_TRACK_PARAM(lpCallParams);

        auto win32_impl_result = g_api_table.lineMakeCallW(hLine, lphCall, lpszDestAddress, dwCountryCode, lpCallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineMonitorDigits(uint32_t hCall, uint32_t dwDigitModes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwDigitModes);

        auto win32_impl_result = g_api_table.lineMonitorDigits(hCall, dwDigitModes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineMonitorMedia(uint32_t hCall, uint32_t dwMediaModes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwMediaModes);

        auto win32_impl_result = g_api_table.lineMonitorMedia(hCall, dwMediaModes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineMonitorTones(uint32_t hCall, win32::Windows::Win32::Devices::Tapi::LINEMONITORTONE* lpToneList, uint32_t dwNumEntries) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpToneList);
        ORBIT_TRACK_PARAM(dwNumEntries);

        auto win32_impl_result = g_api_table.lineMonitorTones(hCall, lpToneList, dwNumEntries);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineNegotiateAPIVersion(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t dwAPILowVersion, uint32_t dwAPIHighVersion, uint32_t* lpdwAPIVersion, win32::Windows::Win32::Devices::Tapi::LINEEXTENSIONID* lpExtensionID) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAPILowVersion);
        ORBIT_TRACK_PARAM(dwAPIHighVersion);
        ORBIT_TRACK_PARAM(lpdwAPIVersion);
        ORBIT_TRACK_PARAM(lpExtensionID);

        auto win32_impl_result = g_api_table.lineNegotiateAPIVersion(hLineApp, dwDeviceID, dwAPILowVersion, dwAPIHighVersion, lpdwAPIVersion, lpExtensionID);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineNegotiateExtVersion(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t dwAPIVersion, uint32_t dwExtLowVersion, uint32_t dwExtHighVersion, uint32_t* lpdwExtVersion) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(dwExtLowVersion);
        ORBIT_TRACK_PARAM(dwExtHighVersion);
        ORBIT_TRACK_PARAM(lpdwExtVersion);

        auto win32_impl_result = g_api_table.lineNegotiateExtVersion(hLineApp, dwDeviceID, dwAPIVersion, dwExtLowVersion, dwExtHighVersion, lpdwExtVersion);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineOpen(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t* lphLine, uint32_t dwAPIVersion, uint32_t dwExtVersion, size_t dwCallbackInstance, uint32_t dwPrivileges, uint32_t dwMediaModes, win32::Windows::Win32::Devices::Tapi::LINECALLPARAMS* lpCallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lphLine);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(dwExtVersion);
        ORBIT_TRACK_PARAM(dwCallbackInstance);
        ORBIT_TRACK_PARAM(dwPrivileges);
        ORBIT_TRACK_PARAM(dwMediaModes);
        ORBIT_TRACK_PARAM(lpCallParams);

        auto win32_impl_result = g_api_table.lineOpen(hLineApp, dwDeviceID, lphLine, dwAPIVersion, dwExtVersion, dwCallbackInstance, dwPrivileges, dwMediaModes, lpCallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineOpenA(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t* lphLine, uint32_t dwAPIVersion, uint32_t dwExtVersion, size_t dwCallbackInstance, uint32_t dwPrivileges, uint32_t dwMediaModes, win32::Windows::Win32::Devices::Tapi::LINECALLPARAMS* lpCallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lphLine);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(dwExtVersion);
        ORBIT_TRACK_PARAM(dwCallbackInstance);
        ORBIT_TRACK_PARAM(dwPrivileges);
        ORBIT_TRACK_PARAM(dwMediaModes);
        ORBIT_TRACK_PARAM(lpCallParams);

        auto win32_impl_result = g_api_table.lineOpenA(hLineApp, dwDeviceID, lphLine, dwAPIVersion, dwExtVersion, dwCallbackInstance, dwPrivileges, dwMediaModes, lpCallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineOpenW(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t* lphLine, uint32_t dwAPIVersion, uint32_t dwExtVersion, size_t dwCallbackInstance, uint32_t dwPrivileges, uint32_t dwMediaModes, win32::Windows::Win32::Devices::Tapi::LINECALLPARAMS* lpCallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lphLine);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(dwExtVersion);
        ORBIT_TRACK_PARAM(dwCallbackInstance);
        ORBIT_TRACK_PARAM(dwPrivileges);
        ORBIT_TRACK_PARAM(dwMediaModes);
        ORBIT_TRACK_PARAM(lpCallParams);

        auto win32_impl_result = g_api_table.lineOpenW(hLineApp, dwDeviceID, lphLine, dwAPIVersion, dwExtVersion, dwCallbackInstance, dwPrivileges, dwMediaModes, lpCallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_linePark(uint32_t hCall, uint32_t dwParkMode, win32::Windows::Win32::Foundation::PSTR lpszDirAddress, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpNonDirAddress) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwParkMode);
        ORBIT_TRACK_PARAM(lpszDirAddress);
        ORBIT_TRACK_PARAM(lpNonDirAddress);

        auto win32_impl_result = g_api_table.linePark(hCall, dwParkMode, lpszDirAddress, lpNonDirAddress);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineParkA(uint32_t hCall, uint32_t dwParkMode, win32::Windows::Win32::Foundation::PSTR lpszDirAddress, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpNonDirAddress) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwParkMode);
        ORBIT_TRACK_PARAM(lpszDirAddress);
        ORBIT_TRACK_PARAM(lpNonDirAddress);

        auto win32_impl_result = g_api_table.lineParkA(hCall, dwParkMode, lpszDirAddress, lpNonDirAddress);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineParkW(uint32_t hCall, uint32_t dwParkMode, win32::Windows::Win32::Foundation::PWSTR lpszDirAddress, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpNonDirAddress) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwParkMode);
        ORBIT_TRACK_PARAM(lpszDirAddress);
        ORBIT_TRACK_PARAM(lpNonDirAddress);

        auto win32_impl_result = g_api_table.lineParkW(hCall, dwParkMode, lpszDirAddress, lpNonDirAddress);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_linePickup(uint32_t hLine, uint32_t dwAddressID, uint32_t* lphCall, win32::Windows::Win32::Foundation::PSTR lpszDestAddress, win32::Windows::Win32::Foundation::PSTR lpszGroupID) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lphCall);
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(lpszGroupID);

        auto win32_impl_result = g_api_table.linePickup(hLine, dwAddressID, lphCall, lpszDestAddress, lpszGroupID);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_linePickupA(uint32_t hLine, uint32_t dwAddressID, uint32_t* lphCall, win32::Windows::Win32::Foundation::PSTR lpszDestAddress, win32::Windows::Win32::Foundation::PSTR lpszGroupID) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lphCall);
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(lpszGroupID);

        auto win32_impl_result = g_api_table.linePickupA(hLine, dwAddressID, lphCall, lpszDestAddress, lpszGroupID);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_linePickupW(uint32_t hLine, uint32_t dwAddressID, uint32_t* lphCall, win32::Windows::Win32::Foundation::PWSTR lpszDestAddress, win32::Windows::Win32::Foundation::PWSTR lpszGroupID) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lphCall);
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(lpszGroupID);

        auto win32_impl_result = g_api_table.linePickupW(hLine, dwAddressID, lphCall, lpszDestAddress, lpszGroupID);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_linePrepareAddToConference(uint32_t hConfCall, uint32_t* lphConsultCall, win32::Windows::Win32::Devices::Tapi::LINECALLPARAMS* lpCallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hConfCall);
        ORBIT_TRACK_PARAM(lphConsultCall);
        ORBIT_TRACK_PARAM(lpCallParams);

        auto win32_impl_result = g_api_table.linePrepareAddToConference(hConfCall, lphConsultCall, lpCallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_linePrepareAddToConferenceA(uint32_t hConfCall, uint32_t* lphConsultCall, win32::Windows::Win32::Devices::Tapi::LINECALLPARAMS* lpCallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hConfCall);
        ORBIT_TRACK_PARAM(lphConsultCall);
        ORBIT_TRACK_PARAM(lpCallParams);

        auto win32_impl_result = g_api_table.linePrepareAddToConferenceA(hConfCall, lphConsultCall, lpCallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_linePrepareAddToConferenceW(uint32_t hConfCall, uint32_t* lphConsultCall, win32::Windows::Win32::Devices::Tapi::LINECALLPARAMS* lpCallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hConfCall);
        ORBIT_TRACK_PARAM(lphConsultCall);
        ORBIT_TRACK_PARAM(lpCallParams);

        auto win32_impl_result = g_api_table.linePrepareAddToConferenceW(hConfCall, lphConsultCall, lpCallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineProxyMessage(uint32_t hLine, uint32_t hCall, uint32_t dwMsg, uint32_t dwParam1, uint32_t dwParam2, uint32_t dwParam3) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwMsg);
        ORBIT_TRACK_PARAM(dwParam1);
        ORBIT_TRACK_PARAM(dwParam2);
        ORBIT_TRACK_PARAM(dwParam3);

        auto win32_impl_result = g_api_table.lineProxyMessage(hLine, hCall, dwMsg, dwParam1, dwParam2, dwParam3);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineProxyResponse(uint32_t hLine, win32::Windows::Win32::Devices::Tapi::LINEPROXYREQUEST* lpProxyRequest, uint32_t dwResult) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lpProxyRequest);
        ORBIT_TRACK_PARAM(dwResult);

        auto win32_impl_result = g_api_table.lineProxyResponse(hLine, lpProxyRequest, dwResult);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineRedirect(uint32_t hCall, win32::Windows::Win32::Foundation::PSTR lpszDestAddress, uint32_t dwCountryCode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(dwCountryCode);

        auto win32_impl_result = g_api_table.lineRedirect(hCall, lpszDestAddress, dwCountryCode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineRedirectA(uint32_t hCall, win32::Windows::Win32::Foundation::PSTR lpszDestAddress, uint32_t dwCountryCode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(dwCountryCode);

        auto win32_impl_result = g_api_table.lineRedirectA(hCall, lpszDestAddress, dwCountryCode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineRedirectW(uint32_t hCall, win32::Windows::Win32::Foundation::PWSTR lpszDestAddress, uint32_t dwCountryCode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(dwCountryCode);

        auto win32_impl_result = g_api_table.lineRedirectW(hCall, lpszDestAddress, dwCountryCode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineRegisterRequestRecipient(uint32_t hLineApp, uint32_t dwRegistrationInstance, uint32_t dwRequestMode, uint32_t bEnable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwRegistrationInstance);
        ORBIT_TRACK_PARAM(dwRequestMode);
        ORBIT_TRACK_PARAM(bEnable);

        auto win32_impl_result = g_api_table.lineRegisterRequestRecipient(hLineApp, dwRegistrationInstance, dwRequestMode, bEnable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineReleaseUserUserInfo(uint32_t hCall) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);

        auto win32_impl_result = g_api_table.lineReleaseUserUserInfo(hCall);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineRemoveFromConference(uint32_t hCall) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);

        auto win32_impl_result = g_api_table.lineRemoveFromConference(hCall);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineRemoveProvider(uint32_t dwPermanentProviderID, win32::Windows::Win32::Foundation::HWND hwndOwner) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwPermanentProviderID);
        ORBIT_TRACK_PARAM(hwndOwner);

        auto win32_impl_result = g_api_table.lineRemoveProvider(dwPermanentProviderID, hwndOwner);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSecureCall(uint32_t hCall) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);

        auto win32_impl_result = g_api_table.lineSecureCall(hCall);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSendUserUserInfo(uint32_t hCall, win32::Windows::Win32::Foundation::PSTR lpsUserUserInfo, uint32_t dwSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpsUserUserInfo);
        ORBIT_TRACK_PARAM(dwSize);

        auto win32_impl_result = g_api_table.lineSendUserUserInfo(hCall, lpsUserUserInfo, dwSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetAgentActivity(uint32_t hLine, uint32_t dwAddressID, uint32_t dwActivityID) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(dwActivityID);

        auto win32_impl_result = g_api_table.lineSetAgentActivity(hLine, dwAddressID, dwActivityID);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetAgentGroup(uint32_t hLine, uint32_t dwAddressID, win32::Windows::Win32::Devices::Tapi::LINEAGENTGROUPLIST* lpAgentGroupList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lpAgentGroupList);

        auto win32_impl_result = g_api_table.lineSetAgentGroup(hLine, dwAddressID, lpAgentGroupList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetAgentMeasurementPeriod(uint32_t hLine, uint32_t hAgent, uint32_t dwMeasurementPeriod) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(hAgent);
        ORBIT_TRACK_PARAM(dwMeasurementPeriod);

        auto win32_impl_result = g_api_table.lineSetAgentMeasurementPeriod(hLine, hAgent, dwMeasurementPeriod);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetAgentSessionState(uint32_t hLine, uint32_t hAgentSession, uint32_t dwAgentSessionState, uint32_t dwNextAgentSessionState) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(hAgentSession);
        ORBIT_TRACK_PARAM(dwAgentSessionState);
        ORBIT_TRACK_PARAM(dwNextAgentSessionState);

        auto win32_impl_result = g_api_table.lineSetAgentSessionState(hLine, hAgentSession, dwAgentSessionState, dwNextAgentSessionState);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetAgentStateEx(uint32_t hLine, uint32_t hAgent, uint32_t dwAgentState, uint32_t dwNextAgentState) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(hAgent);
        ORBIT_TRACK_PARAM(dwAgentState);
        ORBIT_TRACK_PARAM(dwNextAgentState);

        auto win32_impl_result = g_api_table.lineSetAgentStateEx(hLine, hAgent, dwAgentState, dwNextAgentState);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetAgentState(uint32_t hLine, uint32_t dwAddressID, uint32_t dwAgentState, uint32_t dwNextAgentState) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(dwAgentState);
        ORBIT_TRACK_PARAM(dwNextAgentState);

        auto win32_impl_result = g_api_table.lineSetAgentState(hLine, dwAddressID, dwAgentState, dwNextAgentState);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetAppPriority(win32::Windows::Win32::Foundation::PSTR lpszAppFilename, uint32_t dwMediaMode, win32::Windows::Win32::Devices::Tapi::LINEEXTENSIONID* lpExtensionID, uint32_t dwRequestMode, win32::Windows::Win32::Foundation::PSTR lpszExtensionName, uint32_t dwPriority) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszAppFilename);
        ORBIT_TRACK_PARAM(dwMediaMode);
        ORBIT_TRACK_PARAM(lpExtensionID);
        ORBIT_TRACK_PARAM(dwRequestMode);
        ORBIT_TRACK_PARAM(lpszExtensionName);
        ORBIT_TRACK_PARAM(dwPriority);

        auto win32_impl_result = g_api_table.lineSetAppPriority(lpszAppFilename, dwMediaMode, lpExtensionID, dwRequestMode, lpszExtensionName, dwPriority);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetAppPriorityA(win32::Windows::Win32::Foundation::PSTR lpszAppFilename, uint32_t dwMediaMode, win32::Windows::Win32::Devices::Tapi::LINEEXTENSIONID* lpExtensionID, uint32_t dwRequestMode, win32::Windows::Win32::Foundation::PSTR lpszExtensionName, uint32_t dwPriority) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszAppFilename);
        ORBIT_TRACK_PARAM(dwMediaMode);
        ORBIT_TRACK_PARAM(lpExtensionID);
        ORBIT_TRACK_PARAM(dwRequestMode);
        ORBIT_TRACK_PARAM(lpszExtensionName);
        ORBIT_TRACK_PARAM(dwPriority);

        auto win32_impl_result = g_api_table.lineSetAppPriorityA(lpszAppFilename, dwMediaMode, lpExtensionID, dwRequestMode, lpszExtensionName, dwPriority);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetAppPriorityW(win32::Windows::Win32::Foundation::PWSTR lpszAppFilename, uint32_t dwMediaMode, win32::Windows::Win32::Devices::Tapi::LINEEXTENSIONID* lpExtensionID, uint32_t dwRequestMode, win32::Windows::Win32::Foundation::PWSTR lpszExtensionName, uint32_t dwPriority) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszAppFilename);
        ORBIT_TRACK_PARAM(dwMediaMode);
        ORBIT_TRACK_PARAM(lpExtensionID);
        ORBIT_TRACK_PARAM(dwRequestMode);
        ORBIT_TRACK_PARAM(lpszExtensionName);
        ORBIT_TRACK_PARAM(dwPriority);

        auto win32_impl_result = g_api_table.lineSetAppPriorityW(lpszAppFilename, dwMediaMode, lpExtensionID, dwRequestMode, lpszExtensionName, dwPriority);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetAppSpecific(uint32_t hCall, uint32_t dwAppSpecific) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwAppSpecific);

        auto win32_impl_result = g_api_table.lineSetAppSpecific(hCall, dwAppSpecific);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetCallData(uint32_t hCall, void* lpCallData, uint32_t dwSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpCallData);
        ORBIT_TRACK_PARAM(dwSize);

        auto win32_impl_result = g_api_table.lineSetCallData(hCall, lpCallData, dwSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetCallParams(uint32_t hCall, uint32_t dwBearerMode, uint32_t dwMinRate, uint32_t dwMaxRate, win32::Windows::Win32::Devices::Tapi::LINEDIALPARAMS* lpDialParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwBearerMode);
        ORBIT_TRACK_PARAM(dwMinRate);
        ORBIT_TRACK_PARAM(dwMaxRate);
        ORBIT_TRACK_PARAM(lpDialParams);

        auto win32_impl_result = g_api_table.lineSetCallParams(hCall, dwBearerMode, dwMinRate, dwMaxRate, lpDialParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetCallPrivilege(uint32_t hCall, uint32_t dwCallPrivilege) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwCallPrivilege);

        auto win32_impl_result = g_api_table.lineSetCallPrivilege(hCall, dwCallPrivilege);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetCallQualityOfService(uint32_t hCall, void* lpSendingFlowspec, uint32_t dwSendingFlowspecSize, void* lpReceivingFlowspec, uint32_t dwReceivingFlowspecSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lpSendingFlowspec);
        ORBIT_TRACK_PARAM(dwSendingFlowspecSize);
        ORBIT_TRACK_PARAM(lpReceivingFlowspec);
        ORBIT_TRACK_PARAM(dwReceivingFlowspecSize);

        auto win32_impl_result = g_api_table.lineSetCallQualityOfService(hCall, lpSendingFlowspec, dwSendingFlowspecSize, lpReceivingFlowspec, dwReceivingFlowspecSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetCallTreatment(uint32_t hCall, uint32_t dwTreatment) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwTreatment);

        auto win32_impl_result = g_api_table.lineSetCallTreatment(hCall, dwTreatment);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetCurrentLocation(uint32_t hLineApp, uint32_t dwLocation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwLocation);

        auto win32_impl_result = g_api_table.lineSetCurrentLocation(hLineApp, dwLocation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetDevConfig(uint32_t dwDeviceID, void* lpDeviceConfig, uint32_t dwSize, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lpDeviceConfig);
        ORBIT_TRACK_PARAM(dwSize);
        ORBIT_TRACK_PARAM(lpszDeviceClass);

        auto win32_impl_result = g_api_table.lineSetDevConfig(dwDeviceID, lpDeviceConfig, dwSize, lpszDeviceClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetDevConfigA(uint32_t dwDeviceID, void* lpDeviceConfig, uint32_t dwSize, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lpDeviceConfig);
        ORBIT_TRACK_PARAM(dwSize);
        ORBIT_TRACK_PARAM(lpszDeviceClass);

        auto win32_impl_result = g_api_table.lineSetDevConfigA(dwDeviceID, lpDeviceConfig, dwSize, lpszDeviceClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetDevConfigW(uint32_t dwDeviceID, void* lpDeviceConfig, uint32_t dwSize, win32::Windows::Win32::Foundation::PWSTR lpszDeviceClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lpDeviceConfig);
        ORBIT_TRACK_PARAM(dwSize);
        ORBIT_TRACK_PARAM(lpszDeviceClass);

        auto win32_impl_result = g_api_table.lineSetDevConfigW(dwDeviceID, lpDeviceConfig, dwSize, lpszDeviceClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetLineDevStatus(uint32_t hLine, uint32_t dwStatusToChange, uint32_t fStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwStatusToChange);
        ORBIT_TRACK_PARAM(fStatus);

        auto win32_impl_result = g_api_table.lineSetLineDevStatus(hLine, dwStatusToChange, fStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetMediaControl(uint32_t hLine, uint32_t dwAddressID, uint32_t hCall, uint32_t dwSelect, win32::Windows::Win32::Devices::Tapi::LINEMEDIACONTROLDIGIT* lpDigitList, uint32_t dwDigitNumEntries, win32::Windows::Win32::Devices::Tapi::LINEMEDIACONTROLMEDIA* lpMediaList, uint32_t dwMediaNumEntries, win32::Windows::Win32::Devices::Tapi::LINEMEDIACONTROLTONE* lpToneList, uint32_t dwToneNumEntries, win32::Windows::Win32::Devices::Tapi::LINEMEDIACONTROLCALLSTATE* lpCallStateList, uint32_t dwCallStateNumEntries) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwSelect);
        ORBIT_TRACK_PARAM(lpDigitList);
        ORBIT_TRACK_PARAM(dwDigitNumEntries);
        ORBIT_TRACK_PARAM(lpMediaList);
        ORBIT_TRACK_PARAM(dwMediaNumEntries);
        ORBIT_TRACK_PARAM(lpToneList);
        ORBIT_TRACK_PARAM(dwToneNumEntries);
        ORBIT_TRACK_PARAM(lpCallStateList);
        ORBIT_TRACK_PARAM(dwCallStateNumEntries);

        auto win32_impl_result = g_api_table.lineSetMediaControl(hLine, dwAddressID, hCall, dwSelect, lpDigitList, dwDigitNumEntries, lpMediaList, dwMediaNumEntries, lpToneList, dwToneNumEntries, lpCallStateList, dwCallStateNumEntries);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetMediaMode(uint32_t hCall, uint32_t dwMediaModes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwMediaModes);

        auto win32_impl_result = g_api_table.lineSetMediaMode(hCall, dwMediaModes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetQueueMeasurementPeriod(uint32_t hLine, uint32_t dwQueueID, uint32_t dwMeasurementPeriod) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwQueueID);
        ORBIT_TRACK_PARAM(dwMeasurementPeriod);

        auto win32_impl_result = g_api_table.lineSetQueueMeasurementPeriod(hLine, dwQueueID, dwMeasurementPeriod);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetNumRings(uint32_t hLine, uint32_t dwAddressID, uint32_t dwNumRings) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(dwNumRings);

        auto win32_impl_result = g_api_table.lineSetNumRings(hLine, dwAddressID, dwNumRings);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetStatusMessages(uint32_t hLine, uint32_t dwLineStates, uint32_t dwAddressStates) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwLineStates);
        ORBIT_TRACK_PARAM(dwAddressStates);

        auto win32_impl_result = g_api_table.lineSetStatusMessages(hLine, dwLineStates, dwAddressStates);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetTerminal(uint32_t hLine, uint32_t dwAddressID, uint32_t hCall, uint32_t dwSelect, uint32_t dwTerminalModes, uint32_t dwTerminalID, uint32_t bEnable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(dwSelect);
        ORBIT_TRACK_PARAM(dwTerminalModes);
        ORBIT_TRACK_PARAM(dwTerminalID);
        ORBIT_TRACK_PARAM(bEnable);

        auto win32_impl_result = g_api_table.lineSetTerminal(hLine, dwAddressID, hCall, dwSelect, dwTerminalModes, dwTerminalID, bEnable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetTollList(uint32_t hLineApp, uint32_t dwDeviceID, win32::Windows::Win32::Foundation::PSTR lpszAddressIn, uint32_t dwTollListOption) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lpszAddressIn);
        ORBIT_TRACK_PARAM(dwTollListOption);

        auto win32_impl_result = g_api_table.lineSetTollList(hLineApp, dwDeviceID, lpszAddressIn, dwTollListOption);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetTollListA(uint32_t hLineApp, uint32_t dwDeviceID, win32::Windows::Win32::Foundation::PSTR lpszAddressIn, uint32_t dwTollListOption) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lpszAddressIn);
        ORBIT_TRACK_PARAM(dwTollListOption);

        auto win32_impl_result = g_api_table.lineSetTollListA(hLineApp, dwDeviceID, lpszAddressIn, dwTollListOption);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetTollListW(uint32_t hLineApp, uint32_t dwDeviceID, win32::Windows::Win32::Foundation::PWSTR lpszAddressInW, uint32_t dwTollListOption) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lpszAddressInW);
        ORBIT_TRACK_PARAM(dwTollListOption);

        auto win32_impl_result = g_api_table.lineSetTollListW(hLineApp, dwDeviceID, lpszAddressInW, dwTollListOption);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetupConference(uint32_t hCall, uint32_t hLine, uint32_t* lphConfCall, uint32_t* lphConsultCall, uint32_t dwNumParties, win32::Windows::Win32::Devices::Tapi::LINECALLPARAMS* lpCallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lphConfCall);
        ORBIT_TRACK_PARAM(lphConsultCall);
        ORBIT_TRACK_PARAM(dwNumParties);
        ORBIT_TRACK_PARAM(lpCallParams);

        auto win32_impl_result = g_api_table.lineSetupConference(hCall, hLine, lphConfCall, lphConsultCall, dwNumParties, lpCallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetupConferenceA(uint32_t hCall, uint32_t hLine, uint32_t* lphConfCall, uint32_t* lphConsultCall, uint32_t dwNumParties, win32::Windows::Win32::Devices::Tapi::LINECALLPARAMS* lpCallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lphConfCall);
        ORBIT_TRACK_PARAM(lphConsultCall);
        ORBIT_TRACK_PARAM(dwNumParties);
        ORBIT_TRACK_PARAM(lpCallParams);

        auto win32_impl_result = g_api_table.lineSetupConferenceA(hCall, hLine, lphConfCall, lphConsultCall, dwNumParties, lpCallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetupConferenceW(uint32_t hCall, uint32_t hLine, uint32_t* lphConfCall, uint32_t* lphConsultCall, uint32_t dwNumParties, win32::Windows::Win32::Devices::Tapi::LINECALLPARAMS* lpCallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(lphConfCall);
        ORBIT_TRACK_PARAM(lphConsultCall);
        ORBIT_TRACK_PARAM(dwNumParties);
        ORBIT_TRACK_PARAM(lpCallParams);

        auto win32_impl_result = g_api_table.lineSetupConferenceW(hCall, hLine, lphConfCall, lphConsultCall, dwNumParties, lpCallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetupTransfer(uint32_t hCall, uint32_t* lphConsultCall, win32::Windows::Win32::Devices::Tapi::LINECALLPARAMS* lpCallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lphConsultCall);
        ORBIT_TRACK_PARAM(lpCallParams);

        auto win32_impl_result = g_api_table.lineSetupTransfer(hCall, lphConsultCall, lpCallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetupTransferA(uint32_t hCall, uint32_t* lphConsultCall, win32::Windows::Win32::Devices::Tapi::LINECALLPARAMS* lpCallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lphConsultCall);
        ORBIT_TRACK_PARAM(lpCallParams);

        auto win32_impl_result = g_api_table.lineSetupTransferA(hCall, lphConsultCall, lpCallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSetupTransferW(uint32_t hCall, uint32_t* lphConsultCall, win32::Windows::Win32::Devices::Tapi::LINECALLPARAMS* lpCallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);
        ORBIT_TRACK_PARAM(lphConsultCall);
        ORBIT_TRACK_PARAM(lpCallParams);

        auto win32_impl_result = g_api_table.lineSetupTransferW(hCall, lphConsultCall, lpCallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineShutdown(uint32_t hLineApp) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);

        auto win32_impl_result = g_api_table.lineShutdown(hLineApp);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineSwapHold(uint32_t hActiveCall, uint32_t hHeldCall) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hActiveCall);
        ORBIT_TRACK_PARAM(hHeldCall);

        auto win32_impl_result = g_api_table.lineSwapHold(hActiveCall, hHeldCall);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineTranslateAddress(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t dwAPIVersion, win32::Windows::Win32::Foundation::PSTR lpszAddressIn, uint32_t dwCard, uint32_t dwTranslateOptions, win32::Windows::Win32::Devices::Tapi::LINETRANSLATEOUTPUT* lpTranslateOutput) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(lpszAddressIn);
        ORBIT_TRACK_PARAM(dwCard);
        ORBIT_TRACK_PARAM(dwTranslateOptions);
        ORBIT_TRACK_PARAM(lpTranslateOutput);

        auto win32_impl_result = g_api_table.lineTranslateAddress(hLineApp, dwDeviceID, dwAPIVersion, lpszAddressIn, dwCard, dwTranslateOptions, lpTranslateOutput);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineTranslateAddressA(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t dwAPIVersion, win32::Windows::Win32::Foundation::PSTR lpszAddressIn, uint32_t dwCard, uint32_t dwTranslateOptions, win32::Windows::Win32::Devices::Tapi::LINETRANSLATEOUTPUT* lpTranslateOutput) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(lpszAddressIn);
        ORBIT_TRACK_PARAM(dwCard);
        ORBIT_TRACK_PARAM(dwTranslateOptions);
        ORBIT_TRACK_PARAM(lpTranslateOutput);

        auto win32_impl_result = g_api_table.lineTranslateAddressA(hLineApp, dwDeviceID, dwAPIVersion, lpszAddressIn, dwCard, dwTranslateOptions, lpTranslateOutput);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineTranslateAddressW(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t dwAPIVersion, win32::Windows::Win32::Foundation::PWSTR lpszAddressIn, uint32_t dwCard, uint32_t dwTranslateOptions, win32::Windows::Win32::Devices::Tapi::LINETRANSLATEOUTPUT* lpTranslateOutput) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(lpszAddressIn);
        ORBIT_TRACK_PARAM(dwCard);
        ORBIT_TRACK_PARAM(dwTranslateOptions);
        ORBIT_TRACK_PARAM(lpTranslateOutput);

        auto win32_impl_result = g_api_table.lineTranslateAddressW(hLineApp, dwDeviceID, dwAPIVersion, lpszAddressIn, dwCard, dwTranslateOptions, lpTranslateOutput);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineTranslateDialog(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t dwAPIVersion, win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::Foundation::PSTR lpszAddressIn) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpszAddressIn);

        auto win32_impl_result = g_api_table.lineTranslateDialog(hLineApp, dwDeviceID, dwAPIVersion, hwndOwner, lpszAddressIn);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineTranslateDialogA(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t dwAPIVersion, win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::Foundation::PSTR lpszAddressIn) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpszAddressIn);

        auto win32_impl_result = g_api_table.lineTranslateDialogA(hLineApp, dwDeviceID, dwAPIVersion, hwndOwner, lpszAddressIn);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineTranslateDialogW(uint32_t hLineApp, uint32_t dwDeviceID, uint32_t dwAPIVersion, win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::Foundation::PWSTR lpszAddressIn) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLineApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpszAddressIn);

        auto win32_impl_result = g_api_table.lineTranslateDialogW(hLineApp, dwDeviceID, dwAPIVersion, hwndOwner, lpszAddressIn);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineUncompleteCall(uint32_t hLine, uint32_t dwCompletionID) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwCompletionID);

        auto win32_impl_result = g_api_table.lineUncompleteCall(hLine, dwCompletionID);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineUnhold(uint32_t hCall) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCall);

        auto win32_impl_result = g_api_table.lineUnhold(hCall);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineUnpark(uint32_t hLine, uint32_t dwAddressID, uint32_t* lphCall, win32::Windows::Win32::Foundation::PSTR lpszDestAddress) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lphCall);
        ORBIT_TRACK_PARAM(lpszDestAddress);

        auto win32_impl_result = g_api_table.lineUnpark(hLine, dwAddressID, lphCall, lpszDestAddress);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineUnparkA(uint32_t hLine, uint32_t dwAddressID, uint32_t* lphCall, win32::Windows::Win32::Foundation::PSTR lpszDestAddress) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lphCall);
        ORBIT_TRACK_PARAM(lpszDestAddress);

        auto win32_impl_result = g_api_table.lineUnparkA(hLine, dwAddressID, lphCall, lpszDestAddress);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_lineUnparkW(uint32_t hLine, uint32_t dwAddressID, uint32_t* lphCall, win32::Windows::Win32::Foundation::PWSTR lpszDestAddress) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLine);
        ORBIT_TRACK_PARAM(dwAddressID);
        ORBIT_TRACK_PARAM(lphCall);
        ORBIT_TRACK_PARAM(lpszDestAddress);

        auto win32_impl_result = g_api_table.lineUnparkW(hLine, dwAddressID, lphCall, lpszDestAddress);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneClose(uint32_t hPhone) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);

        auto win32_impl_result = g_api_table.phoneClose(hPhone);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneConfigDialog(uint32_t dwDeviceID, win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpszDeviceClass);

        auto win32_impl_result = g_api_table.phoneConfigDialog(dwDeviceID, hwndOwner, lpszDeviceClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneConfigDialogA(uint32_t dwDeviceID, win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpszDeviceClass);

        auto win32_impl_result = g_api_table.phoneConfigDialogA(dwDeviceID, hwndOwner, lpszDeviceClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneConfigDialogW(uint32_t dwDeviceID, win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::Foundation::PWSTR lpszDeviceClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpszDeviceClass);

        auto win32_impl_result = g_api_table.phoneConfigDialogW(dwDeviceID, hwndOwner, lpszDeviceClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneDevSpecific(uint32_t hPhone, void* lpParams, uint32_t dwSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(lpParams);
        ORBIT_TRACK_PARAM(dwSize);

        auto win32_impl_result = g_api_table.phoneDevSpecific(hPhone, lpParams, dwSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetButtonInfo(uint32_t hPhone, uint32_t dwButtonLampID, win32::Windows::Win32::Devices::Tapi::PHONEBUTTONINFO* lpButtonInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(dwButtonLampID);
        ORBIT_TRACK_PARAM(lpButtonInfo);

        auto win32_impl_result = g_api_table.phoneGetButtonInfo(hPhone, dwButtonLampID, lpButtonInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetButtonInfoA(uint32_t hPhone, uint32_t dwButtonLampID, win32::Windows::Win32::Devices::Tapi::PHONEBUTTONINFO* lpButtonInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(dwButtonLampID);
        ORBIT_TRACK_PARAM(lpButtonInfo);

        auto win32_impl_result = g_api_table.phoneGetButtonInfoA(hPhone, dwButtonLampID, lpButtonInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetButtonInfoW(uint32_t hPhone, uint32_t dwButtonLampID, win32::Windows::Win32::Devices::Tapi::PHONEBUTTONINFO* lpButtonInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(dwButtonLampID);
        ORBIT_TRACK_PARAM(lpButtonInfo);

        auto win32_impl_result = g_api_table.phoneGetButtonInfoW(hPhone, dwButtonLampID, lpButtonInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetData(uint32_t hPhone, uint32_t dwDataID, void* lpData, uint32_t dwSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(dwDataID);
        ORBIT_TRACK_PARAM(lpData);
        ORBIT_TRACK_PARAM(dwSize);

        auto win32_impl_result = g_api_table.phoneGetData(hPhone, dwDataID, lpData, dwSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetDevCaps(uint32_t hPhoneApp, uint32_t dwDeviceID, uint32_t dwAPIVersion, uint32_t dwExtVersion, win32::Windows::Win32::Devices::Tapi::PHONECAPS* lpPhoneCaps) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhoneApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(dwExtVersion);
        ORBIT_TRACK_PARAM(lpPhoneCaps);

        auto win32_impl_result = g_api_table.phoneGetDevCaps(hPhoneApp, dwDeviceID, dwAPIVersion, dwExtVersion, lpPhoneCaps);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetDevCapsA(uint32_t hPhoneApp, uint32_t dwDeviceID, uint32_t dwAPIVersion, uint32_t dwExtVersion, win32::Windows::Win32::Devices::Tapi::PHONECAPS* lpPhoneCaps) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhoneApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(dwExtVersion);
        ORBIT_TRACK_PARAM(lpPhoneCaps);

        auto win32_impl_result = g_api_table.phoneGetDevCapsA(hPhoneApp, dwDeviceID, dwAPIVersion, dwExtVersion, lpPhoneCaps);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetDevCapsW(uint32_t hPhoneApp, uint32_t dwDeviceID, uint32_t dwAPIVersion, uint32_t dwExtVersion, win32::Windows::Win32::Devices::Tapi::PHONECAPS* lpPhoneCaps) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhoneApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(dwExtVersion);
        ORBIT_TRACK_PARAM(lpPhoneCaps);

        auto win32_impl_result = g_api_table.phoneGetDevCapsW(hPhoneApp, dwDeviceID, dwAPIVersion, dwExtVersion, lpPhoneCaps);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetDisplay(uint32_t hPhone, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpDisplay) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(lpDisplay);

        auto win32_impl_result = g_api_table.phoneGetDisplay(hPhone, lpDisplay);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetGain(uint32_t hPhone, uint32_t dwHookSwitchDev, uint32_t* lpdwGain) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(dwHookSwitchDev);
        ORBIT_TRACK_PARAM(lpdwGain);

        auto win32_impl_result = g_api_table.phoneGetGain(hPhone, dwHookSwitchDev, lpdwGain);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetHookSwitch(uint32_t hPhone, uint32_t* lpdwHookSwitchDevs) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(lpdwHookSwitchDevs);

        auto win32_impl_result = g_api_table.phoneGetHookSwitch(hPhone, lpdwHookSwitchDevs);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetIcon(uint32_t dwDeviceID, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass, intptr_t* lphIcon) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lpszDeviceClass);
        ORBIT_TRACK_PARAM(lphIcon);

        auto win32_impl_result = g_api_table.phoneGetIcon(dwDeviceID, lpszDeviceClass, lphIcon);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetIconA(uint32_t dwDeviceID, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass, intptr_t* lphIcon) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lpszDeviceClass);
        ORBIT_TRACK_PARAM(lphIcon);

        auto win32_impl_result = g_api_table.phoneGetIconA(dwDeviceID, lpszDeviceClass, lphIcon);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetIconW(uint32_t dwDeviceID, win32::Windows::Win32::Foundation::PWSTR lpszDeviceClass, intptr_t* lphIcon) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lpszDeviceClass);
        ORBIT_TRACK_PARAM(lphIcon);

        auto win32_impl_result = g_api_table.phoneGetIconW(dwDeviceID, lpszDeviceClass, lphIcon);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetID(uint32_t hPhone, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpDeviceID, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(lpDeviceID);
        ORBIT_TRACK_PARAM(lpszDeviceClass);

        auto win32_impl_result = g_api_table.phoneGetID(hPhone, lpDeviceID, lpszDeviceClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetIDA(uint32_t hPhone, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpDeviceID, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(lpDeviceID);
        ORBIT_TRACK_PARAM(lpszDeviceClass);

        auto win32_impl_result = g_api_table.phoneGetIDA(hPhone, lpDeviceID, lpszDeviceClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetIDW(uint32_t hPhone, win32::Windows::Win32::Devices::Tapi::VARSTRING* lpDeviceID, win32::Windows::Win32::Foundation::PWSTR lpszDeviceClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(lpDeviceID);
        ORBIT_TRACK_PARAM(lpszDeviceClass);

        auto win32_impl_result = g_api_table.phoneGetIDW(hPhone, lpDeviceID, lpszDeviceClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetLamp(uint32_t hPhone, uint32_t dwButtonLampID, uint32_t* lpdwLampMode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(dwButtonLampID);
        ORBIT_TRACK_PARAM(lpdwLampMode);

        auto win32_impl_result = g_api_table.phoneGetLamp(hPhone, dwButtonLampID, lpdwLampMode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetMessage(uint32_t hPhoneApp, win32::Windows::Win32::Devices::Tapi::PHONEMESSAGE* lpMessage, uint32_t dwTimeout) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhoneApp);
        ORBIT_TRACK_PARAM(lpMessage);
        ORBIT_TRACK_PARAM(dwTimeout);

        auto win32_impl_result = g_api_table.phoneGetMessage(hPhoneApp, lpMessage, dwTimeout);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetRing(uint32_t hPhone, uint32_t* lpdwRingMode, uint32_t* lpdwVolume) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(lpdwRingMode);
        ORBIT_TRACK_PARAM(lpdwVolume);

        auto win32_impl_result = g_api_table.phoneGetRing(hPhone, lpdwRingMode, lpdwVolume);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetStatus(uint32_t hPhone, win32::Windows::Win32::Devices::Tapi::PHONESTATUS* lpPhoneStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(lpPhoneStatus);

        auto win32_impl_result = g_api_table.phoneGetStatus(hPhone, lpPhoneStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetStatusA(uint32_t hPhone, win32::Windows::Win32::Devices::Tapi::PHONESTATUS* lpPhoneStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(lpPhoneStatus);

        auto win32_impl_result = g_api_table.phoneGetStatusA(hPhone, lpPhoneStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetStatusW(uint32_t hPhone, win32::Windows::Win32::Devices::Tapi::PHONESTATUS* lpPhoneStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(lpPhoneStatus);

        auto win32_impl_result = g_api_table.phoneGetStatusW(hPhone, lpPhoneStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetStatusMessages(uint32_t hPhone, uint32_t* lpdwPhoneStates, uint32_t* lpdwButtonModes, uint32_t* lpdwButtonStates) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(lpdwPhoneStates);
        ORBIT_TRACK_PARAM(lpdwButtonModes);
        ORBIT_TRACK_PARAM(lpdwButtonStates);

        auto win32_impl_result = g_api_table.phoneGetStatusMessages(hPhone, lpdwPhoneStates, lpdwButtonModes, lpdwButtonStates);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneGetVolume(uint32_t hPhone, uint32_t dwHookSwitchDev, uint32_t* lpdwVolume) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(dwHookSwitchDev);
        ORBIT_TRACK_PARAM(lpdwVolume);

        auto win32_impl_result = g_api_table.phoneGetVolume(hPhone, dwHookSwitchDev, lpdwVolume);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneInitialize(uint32_t* lphPhoneApp, win32::Windows::Win32::Foundation::HINSTANCE hInstance, win32::Windows::Win32::Devices::Tapi::PHONECALLBACK* lpfnCallback, win32::Windows::Win32::Foundation::PSTR lpszAppName, uint32_t* lpdwNumDevs) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lphPhoneApp);
        ORBIT_TRACK_PARAM(hInstance);
        ORBIT_TRACK_PARAM(lpfnCallback);
        ORBIT_TRACK_PARAM(lpszAppName);
        ORBIT_TRACK_PARAM(lpdwNumDevs);

        auto win32_impl_result = g_api_table.phoneInitialize(lphPhoneApp, hInstance, lpfnCallback, lpszAppName, lpdwNumDevs);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneInitializeExA(uint32_t* lphPhoneApp, win32::Windows::Win32::Foundation::HINSTANCE hInstance, win32::Windows::Win32::Devices::Tapi::PHONECALLBACK* lpfnCallback, win32::Windows::Win32::Foundation::PSTR lpszFriendlyAppName, uint32_t* lpdwNumDevs, uint32_t* lpdwAPIVersion, win32::Windows::Win32::Devices::Tapi::PHONEINITIALIZEEXPARAMS* lpPhoneInitializeExParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lphPhoneApp);
        ORBIT_TRACK_PARAM(hInstance);
        ORBIT_TRACK_PARAM(lpfnCallback);
        ORBIT_TRACK_PARAM(lpszFriendlyAppName);
        ORBIT_TRACK_PARAM(lpdwNumDevs);
        ORBIT_TRACK_PARAM(lpdwAPIVersion);
        ORBIT_TRACK_PARAM(lpPhoneInitializeExParams);

        auto win32_impl_result = g_api_table.phoneInitializeExA(lphPhoneApp, hInstance, lpfnCallback, lpszFriendlyAppName, lpdwNumDevs, lpdwAPIVersion, lpPhoneInitializeExParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneInitializeExW(uint32_t* lphPhoneApp, win32::Windows::Win32::Foundation::HINSTANCE hInstance, win32::Windows::Win32::Devices::Tapi::PHONECALLBACK* lpfnCallback, win32::Windows::Win32::Foundation::PWSTR lpszFriendlyAppName, uint32_t* lpdwNumDevs, uint32_t* lpdwAPIVersion, win32::Windows::Win32::Devices::Tapi::PHONEINITIALIZEEXPARAMS* lpPhoneInitializeExParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lphPhoneApp);
        ORBIT_TRACK_PARAM(hInstance);
        ORBIT_TRACK_PARAM(lpfnCallback);
        ORBIT_TRACK_PARAM(lpszFriendlyAppName);
        ORBIT_TRACK_PARAM(lpdwNumDevs);
        ORBIT_TRACK_PARAM(lpdwAPIVersion);
        ORBIT_TRACK_PARAM(lpPhoneInitializeExParams);

        auto win32_impl_result = g_api_table.phoneInitializeExW(lphPhoneApp, hInstance, lpfnCallback, lpszFriendlyAppName, lpdwNumDevs, lpdwAPIVersion, lpPhoneInitializeExParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneNegotiateAPIVersion(uint32_t hPhoneApp, uint32_t dwDeviceID, uint32_t dwAPILowVersion, uint32_t dwAPIHighVersion, uint32_t* lpdwAPIVersion, win32::Windows::Win32::Devices::Tapi::PHONEEXTENSIONID* lpExtensionID) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhoneApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAPILowVersion);
        ORBIT_TRACK_PARAM(dwAPIHighVersion);
        ORBIT_TRACK_PARAM(lpdwAPIVersion);
        ORBIT_TRACK_PARAM(lpExtensionID);

        auto win32_impl_result = g_api_table.phoneNegotiateAPIVersion(hPhoneApp, dwDeviceID, dwAPILowVersion, dwAPIHighVersion, lpdwAPIVersion, lpExtensionID);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneNegotiateExtVersion(uint32_t hPhoneApp, uint32_t dwDeviceID, uint32_t dwAPIVersion, uint32_t dwExtLowVersion, uint32_t dwExtHighVersion, uint32_t* lpdwExtVersion) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhoneApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(dwExtLowVersion);
        ORBIT_TRACK_PARAM(dwExtHighVersion);
        ORBIT_TRACK_PARAM(lpdwExtVersion);

        auto win32_impl_result = g_api_table.phoneNegotiateExtVersion(hPhoneApp, dwDeviceID, dwAPIVersion, dwExtLowVersion, dwExtHighVersion, lpdwExtVersion);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneOpen(uint32_t hPhoneApp, uint32_t dwDeviceID, uint32_t* lphPhone, uint32_t dwAPIVersion, uint32_t dwExtVersion, size_t dwCallbackInstance, uint32_t dwPrivilege) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhoneApp);
        ORBIT_TRACK_PARAM(dwDeviceID);
        ORBIT_TRACK_PARAM(lphPhone);
        ORBIT_TRACK_PARAM(dwAPIVersion);
        ORBIT_TRACK_PARAM(dwExtVersion);
        ORBIT_TRACK_PARAM(dwCallbackInstance);
        ORBIT_TRACK_PARAM(dwPrivilege);

        auto win32_impl_result = g_api_table.phoneOpen(hPhoneApp, dwDeviceID, lphPhone, dwAPIVersion, dwExtVersion, dwCallbackInstance, dwPrivilege);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneSetButtonInfo(uint32_t hPhone, uint32_t dwButtonLampID, win32::Windows::Win32::Devices::Tapi::PHONEBUTTONINFO* lpButtonInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(dwButtonLampID);
        ORBIT_TRACK_PARAM(lpButtonInfo);

        auto win32_impl_result = g_api_table.phoneSetButtonInfo(hPhone, dwButtonLampID, lpButtonInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneSetButtonInfoA(uint32_t hPhone, uint32_t dwButtonLampID, win32::Windows::Win32::Devices::Tapi::PHONEBUTTONINFO* lpButtonInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(dwButtonLampID);
        ORBIT_TRACK_PARAM(lpButtonInfo);

        auto win32_impl_result = g_api_table.phoneSetButtonInfoA(hPhone, dwButtonLampID, lpButtonInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneSetButtonInfoW(uint32_t hPhone, uint32_t dwButtonLampID, win32::Windows::Win32::Devices::Tapi::PHONEBUTTONINFO* lpButtonInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(dwButtonLampID);
        ORBIT_TRACK_PARAM(lpButtonInfo);

        auto win32_impl_result = g_api_table.phoneSetButtonInfoW(hPhone, dwButtonLampID, lpButtonInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneSetData(uint32_t hPhone, uint32_t dwDataID, void* lpData, uint32_t dwSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(dwDataID);
        ORBIT_TRACK_PARAM(lpData);
        ORBIT_TRACK_PARAM(dwSize);

        auto win32_impl_result = g_api_table.phoneSetData(hPhone, dwDataID, lpData, dwSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneSetDisplay(uint32_t hPhone, uint32_t dwRow, uint32_t dwColumn, win32::Windows::Win32::Foundation::PSTR lpsDisplay, uint32_t dwSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(dwRow);
        ORBIT_TRACK_PARAM(dwColumn);
        ORBIT_TRACK_PARAM(lpsDisplay);
        ORBIT_TRACK_PARAM(dwSize);

        auto win32_impl_result = g_api_table.phoneSetDisplay(hPhone, dwRow, dwColumn, lpsDisplay, dwSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneSetGain(uint32_t hPhone, uint32_t dwHookSwitchDev, uint32_t dwGain) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(dwHookSwitchDev);
        ORBIT_TRACK_PARAM(dwGain);

        auto win32_impl_result = g_api_table.phoneSetGain(hPhone, dwHookSwitchDev, dwGain);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneSetHookSwitch(uint32_t hPhone, uint32_t dwHookSwitchDevs, uint32_t dwHookSwitchMode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(dwHookSwitchDevs);
        ORBIT_TRACK_PARAM(dwHookSwitchMode);

        auto win32_impl_result = g_api_table.phoneSetHookSwitch(hPhone, dwHookSwitchDevs, dwHookSwitchMode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneSetLamp(uint32_t hPhone, uint32_t dwButtonLampID, uint32_t dwLampMode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(dwButtonLampID);
        ORBIT_TRACK_PARAM(dwLampMode);

        auto win32_impl_result = g_api_table.phoneSetLamp(hPhone, dwButtonLampID, dwLampMode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneSetRing(uint32_t hPhone, uint32_t dwRingMode, uint32_t dwVolume) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(dwRingMode);
        ORBIT_TRACK_PARAM(dwVolume);

        auto win32_impl_result = g_api_table.phoneSetRing(hPhone, dwRingMode, dwVolume);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneSetStatusMessages(uint32_t hPhone, uint32_t dwPhoneStates, uint32_t dwButtonModes, uint32_t dwButtonStates) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(dwPhoneStates);
        ORBIT_TRACK_PARAM(dwButtonModes);
        ORBIT_TRACK_PARAM(dwButtonStates);

        auto win32_impl_result = g_api_table.phoneSetStatusMessages(hPhone, dwPhoneStates, dwButtonModes, dwButtonStates);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneSetVolume(uint32_t hPhone, uint32_t dwHookSwitchDev, uint32_t dwVolume) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhone);
        ORBIT_TRACK_PARAM(dwHookSwitchDev);
        ORBIT_TRACK_PARAM(dwVolume);

        auto win32_impl_result = g_api_table.phoneSetVolume(hPhone, dwHookSwitchDev, dwVolume);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_phoneShutdown(uint32_t hPhoneApp) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hPhoneApp);

        auto win32_impl_result = g_api_table.phoneShutdown(hPhoneApp);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_tapiGetLocationInfo(win32::Windows::Win32::Foundation::PSTR lpszCountryCode, win32::Windows::Win32::Foundation::PSTR lpszCityCode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszCountryCode);
        ORBIT_TRACK_PARAM(lpszCityCode);

        auto win32_impl_result = g_api_table.tapiGetLocationInfo(lpszCountryCode, lpszCityCode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_tapiGetLocationInfoA(win32::Windows::Win32::Foundation::PSTR lpszCountryCode, win32::Windows::Win32::Foundation::PSTR lpszCityCode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszCountryCode);
        ORBIT_TRACK_PARAM(lpszCityCode);

        auto win32_impl_result = g_api_table.tapiGetLocationInfoA(lpszCountryCode, lpszCityCode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_tapiGetLocationInfoW(win32::Windows::Win32::Foundation::PWSTR lpszCountryCodeW, win32::Windows::Win32::Foundation::PWSTR lpszCityCodeW) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszCountryCodeW);
        ORBIT_TRACK_PARAM(lpszCityCodeW);

        auto win32_impl_result = g_api_table.tapiGetLocationInfoW(lpszCountryCodeW, lpszCityCodeW);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_tapiRequestDrop(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::WPARAM wRequestID) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(wRequestID);

        auto win32_impl_result = g_api_table.tapiRequestDrop(hwnd, wRequestID);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_tapiRequestMakeCall(win32::Windows::Win32::Foundation::PSTR lpszDestAddress, win32::Windows::Win32::Foundation::PSTR lpszAppName, win32::Windows::Win32::Foundation::PSTR lpszCalledParty, win32::Windows::Win32::Foundation::PSTR lpszComment) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(lpszAppName);
        ORBIT_TRACK_PARAM(lpszCalledParty);
        ORBIT_TRACK_PARAM(lpszComment);

        auto win32_impl_result = g_api_table.tapiRequestMakeCall(lpszDestAddress, lpszAppName, lpszCalledParty, lpszComment);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_tapiRequestMakeCallA(win32::Windows::Win32::Foundation::PSTR lpszDestAddress, win32::Windows::Win32::Foundation::PSTR lpszAppName, win32::Windows::Win32::Foundation::PSTR lpszCalledParty, win32::Windows::Win32::Foundation::PSTR lpszComment) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(lpszAppName);
        ORBIT_TRACK_PARAM(lpszCalledParty);
        ORBIT_TRACK_PARAM(lpszComment);

        auto win32_impl_result = g_api_table.tapiRequestMakeCallA(lpszDestAddress, lpszAppName, lpszCalledParty, lpszComment);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_tapiRequestMakeCallW(win32::Windows::Win32::Foundation::PWSTR lpszDestAddress, win32::Windows::Win32::Foundation::PWSTR lpszAppName, win32::Windows::Win32::Foundation::PWSTR lpszCalledParty, win32::Windows::Win32::Foundation::PWSTR lpszComment) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(lpszAppName);
        ORBIT_TRACK_PARAM(lpszCalledParty);
        ORBIT_TRACK_PARAM(lpszComment);

        auto win32_impl_result = g_api_table.tapiRequestMakeCallW(lpszDestAddress, lpszAppName, lpszCalledParty, lpszComment);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_tapiRequestMediaCall(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::WPARAM wRequestID, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass, win32::Windows::Win32::Foundation::PSTR lpDeviceID, uint32_t dwSize, uint32_t dwSecure, win32::Windows::Win32::Foundation::PSTR lpszDestAddress, win32::Windows::Win32::Foundation::PSTR lpszAppName, win32::Windows::Win32::Foundation::PSTR lpszCalledParty, win32::Windows::Win32::Foundation::PSTR lpszComment) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(wRequestID);
        ORBIT_TRACK_PARAM(lpszDeviceClass);
        ORBIT_TRACK_PARAM(lpDeviceID);
        ORBIT_TRACK_PARAM(dwSize);
        ORBIT_TRACK_PARAM(dwSecure);
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(lpszAppName);
        ORBIT_TRACK_PARAM(lpszCalledParty);
        ORBIT_TRACK_PARAM(lpszComment);

        auto win32_impl_result = g_api_table.tapiRequestMediaCall(hwnd, wRequestID, lpszDeviceClass, lpDeviceID, dwSize, dwSecure, lpszDestAddress, lpszAppName, lpszCalledParty, lpszComment);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_tapiRequestMediaCallA(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::WPARAM wRequestID, win32::Windows::Win32::Foundation::PSTR lpszDeviceClass, win32::Windows::Win32::Foundation::PSTR lpDeviceID, uint32_t dwSize, uint32_t dwSecure, win32::Windows::Win32::Foundation::PSTR lpszDestAddress, win32::Windows::Win32::Foundation::PSTR lpszAppName, win32::Windows::Win32::Foundation::PSTR lpszCalledParty, win32::Windows::Win32::Foundation::PSTR lpszComment) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(wRequestID);
        ORBIT_TRACK_PARAM(lpszDeviceClass);
        ORBIT_TRACK_PARAM(lpDeviceID);
        ORBIT_TRACK_PARAM(dwSize);
        ORBIT_TRACK_PARAM(dwSecure);
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(lpszAppName);
        ORBIT_TRACK_PARAM(lpszCalledParty);
        ORBIT_TRACK_PARAM(lpszComment);

        auto win32_impl_result = g_api_table.tapiRequestMediaCallA(hwnd, wRequestID, lpszDeviceClass, lpDeviceID, dwSize, dwSecure, lpszDestAddress, lpszAppName, lpszCalledParty, lpszComment);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_tapiRequestMediaCallW(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::WPARAM wRequestID, win32::Windows::Win32::Foundation::PWSTR lpszDeviceClass, win32::Windows::Win32::Foundation::PWSTR lpDeviceID, uint32_t dwSize, uint32_t dwSecure, win32::Windows::Win32::Foundation::PWSTR lpszDestAddress, win32::Windows::Win32::Foundation::PWSTR lpszAppName, win32::Windows::Win32::Foundation::PWSTR lpszCalledParty, win32::Windows::Win32::Foundation::PWSTR lpszComment) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(wRequestID);
        ORBIT_TRACK_PARAM(lpszDeviceClass);
        ORBIT_TRACK_PARAM(lpDeviceID);
        ORBIT_TRACK_PARAM(dwSize);
        ORBIT_TRACK_PARAM(dwSecure);
        ORBIT_TRACK_PARAM(lpszDestAddress);
        ORBIT_TRACK_PARAM(lpszAppName);
        ORBIT_TRACK_PARAM(lpszCalledParty);
        ORBIT_TRACK_PARAM(lpszComment);

        auto win32_impl_result = g_api_table.tapiRequestMediaCallW(hwnd, wRequestID, lpszDeviceClass, lpDeviceID, dwSize, dwSecure, lpszDestAddress, lpszAppName, lpszCalledParty, lpszComment);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_OpenTnefStream(void* lpvSupport, win32::Windows::Win32::System::Com::IStream* lpStream, int8_t* lpszStreamName, uint32_t ulFlags, win32::Windows::Win32::System::AddressBook::IMessage* lpMessage, uint16_t wKeyVal, win32::Windows::Win32::Devices::Tapi::ITnef** lppTNEF) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpvSupport);
        ORBIT_TRACK_PARAM(lpStream);
        ORBIT_TRACK_PARAM(lpszStreamName);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(lpMessage);
        ORBIT_TRACK_PARAM(wKeyVal);
        ORBIT_TRACK_PARAM(lppTNEF);

        auto win32_impl_result = g_api_table.OpenTnefStream(lpvSupport, lpStream, lpszStreamName, ulFlags, lpMessage, wKeyVal, lppTNEF);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_OpenTnefStreamEx(void* lpvSupport, win32::Windows::Win32::System::Com::IStream* lpStream, int8_t* lpszStreamName, uint32_t ulFlags, win32::Windows::Win32::System::AddressBook::IMessage* lpMessage, uint16_t wKeyVal, win32::Windows::Win32::System::AddressBook::IAddrBook* lpAdressBook, win32::Windows::Win32::Devices::Tapi::ITnef** lppTNEF) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpvSupport);
        ORBIT_TRACK_PARAM(lpStream);
        ORBIT_TRACK_PARAM(lpszStreamName);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(lpMessage);
        ORBIT_TRACK_PARAM(wKeyVal);
        ORBIT_TRACK_PARAM(lpAdressBook);
        ORBIT_TRACK_PARAM(lppTNEF);

        auto win32_impl_result = g_api_table.OpenTnefStreamEx(lpvSupport, lpStream, lpszStreamName, ulFlags, lpMessage, wKeyVal, lpAdressBook, lppTNEF);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetTnefStreamCodepage(win32::Windows::Win32::System::Com::IStream* lpStream, uint32_t* lpulCodepage, uint32_t* lpulSubCodepage) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpStream);
        ORBIT_TRACK_PARAM(lpulCodepage);
        ORBIT_TRACK_PARAM(lpulSubCodepage);

        auto win32_impl_result = g_api_table.GetTnefStreamCodepage(lpStream, lpulCodepage, lpulSubCodepage);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
