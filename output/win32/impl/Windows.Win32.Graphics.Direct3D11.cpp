// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Graphics_Direct3D11_2_H
#define WIN32_Windows_Win32_Graphics_Direct3D11_2_H
#include "win32/Windows.Win32.Graphics.Direct3D11.h"
#include "win32/impl/Windows.Win32.Graphics.Direct3D11.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::Graphics::Direct3D11
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3D11CreateDevice(win32::Windows::Win32::Graphics::Dxgi::IDXGIAdapter* pAdapter, win32::Windows::Win32::Graphics::Direct3D11::D3D_DRIVER_TYPE DriverType, win32::Windows::Win32::Foundation::HINSTANCE Software, win32::Windows::Win32::Graphics::Direct3D11::D3D11_CREATE_DEVICE_FLAG Flags, win32::Windows::Win32::Graphics::Direct3D11::D3D_FEATURE_LEVEL* pFeatureLevels, uint32_t FeatureLevels, uint32_t SDKVersion, win32::Windows::Win32::Graphics::Direct3D11::ID3D11Device** ppDevice, win32::Windows::Win32::Graphics::Direct3D11::D3D_FEATURE_LEVEL* pFeatureLevel, win32::Windows::Win32::Graphics::Direct3D11::ID3D11DeviceContext** ppImmediateContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAdapter);
        ORBIT_TRACK_PARAM(DriverType);
        ORBIT_TRACK_PARAM(Software);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(pFeatureLevels);
        ORBIT_TRACK_PARAM(FeatureLevels);
        ORBIT_TRACK_PARAM(SDKVersion);
        ORBIT_TRACK_PARAM(ppDevice);
        ORBIT_TRACK_PARAM(pFeatureLevel);
        ORBIT_TRACK_PARAM(ppImmediateContext);

        auto win32_impl_result = g_api_table.D3D11CreateDevice(pAdapter, DriverType, Software, Flags, pFeatureLevels, FeatureLevels, SDKVersion, ppDevice, pFeatureLevel, ppImmediateContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3D11CreateDeviceAndSwapChain(win32::Windows::Win32::Graphics::Dxgi::IDXGIAdapter* pAdapter, win32::Windows::Win32::Graphics::Direct3D11::D3D_DRIVER_TYPE DriverType, win32::Windows::Win32::Foundation::HINSTANCE Software, win32::Windows::Win32::Graphics::Direct3D11::D3D11_CREATE_DEVICE_FLAG Flags, win32::Windows::Win32::Graphics::Direct3D11::D3D_FEATURE_LEVEL* pFeatureLevels, uint32_t FeatureLevels, uint32_t SDKVersion, win32::Windows::Win32::Graphics::Dxgi::DXGI_SWAP_CHAIN_DESC* pSwapChainDesc, win32::Windows::Win32::Graphics::Dxgi::IDXGISwapChain** ppSwapChain, win32::Windows::Win32::Graphics::Direct3D11::ID3D11Device** ppDevice, win32::Windows::Win32::Graphics::Direct3D11::D3D_FEATURE_LEVEL* pFeatureLevel, win32::Windows::Win32::Graphics::Direct3D11::ID3D11DeviceContext** ppImmediateContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAdapter);
        ORBIT_TRACK_PARAM(DriverType);
        ORBIT_TRACK_PARAM(Software);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(pFeatureLevels);
        ORBIT_TRACK_PARAM(FeatureLevels);
        ORBIT_TRACK_PARAM(SDKVersion);
        ORBIT_TRACK_PARAM(pSwapChainDesc);
        ORBIT_TRACK_PARAM(ppSwapChain);
        ORBIT_TRACK_PARAM(ppDevice);
        ORBIT_TRACK_PARAM(pFeatureLevel);
        ORBIT_TRACK_PARAM(ppImmediateContext);

        auto win32_impl_result = g_api_table.D3D11CreateDeviceAndSwapChain(pAdapter, DriverType, Software, Flags, pFeatureLevels, FeatureLevels, SDKVersion, pSwapChainDesc, ppSwapChain, ppDevice, pFeatureLevel, ppImmediateContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3DDisassemble11Trace(void* pSrcData, size_t SrcDataSize, win32::Windows::Win32::Graphics::Direct3D11::ID3D11ShaderTrace* pTrace, uint32_t StartStep, uint32_t NumSteps, uint32_t Flags, win32::Windows::Win32::Graphics::Direct3D11::ID3DBlob** ppDisassembly) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSrcData);
        ORBIT_TRACK_PARAM(SrcDataSize);
        ORBIT_TRACK_PARAM(pTrace);
        ORBIT_TRACK_PARAM(StartStep);
        ORBIT_TRACK_PARAM(NumSteps);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(ppDisassembly);

        auto win32_impl_result = g_api_table.D3DDisassemble11Trace(pSrcData, SrcDataSize, pTrace, StartStep, NumSteps, Flags, ppDisassembly);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3DX11CreateScan(win32::Windows::Win32::Graphics::Direct3D11::ID3D11DeviceContext* pDeviceContext, uint32_t MaxElementScanSize, uint32_t MaxScanCount, win32::Windows::Win32::Graphics::Direct3D11::ID3DX11Scan** ppScan) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDeviceContext);
        ORBIT_TRACK_PARAM(MaxElementScanSize);
        ORBIT_TRACK_PARAM(MaxScanCount);
        ORBIT_TRACK_PARAM(ppScan);

        auto win32_impl_result = g_api_table.D3DX11CreateScan(pDeviceContext, MaxElementScanSize, MaxScanCount, ppScan);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3DX11CreateSegmentedScan(win32::Windows::Win32::Graphics::Direct3D11::ID3D11DeviceContext* pDeviceContext, uint32_t MaxElementScanSize, win32::Windows::Win32::Graphics::Direct3D11::ID3DX11SegmentedScan** ppScan) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDeviceContext);
        ORBIT_TRACK_PARAM(MaxElementScanSize);
        ORBIT_TRACK_PARAM(ppScan);

        auto win32_impl_result = g_api_table.D3DX11CreateSegmentedScan(pDeviceContext, MaxElementScanSize, ppScan);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3DX11CreateFFT(win32::Windows::Win32::Graphics::Direct3D11::ID3D11DeviceContext* pDeviceContext, win32::Windows::Win32::Graphics::Direct3D11::D3DX11_FFT_DESC* pDesc, uint32_t Flags, win32::Windows::Win32::Graphics::Direct3D11::D3DX11_FFT_BUFFER_INFO* pBufferInfo, win32::Windows::Win32::Graphics::Direct3D11::ID3DX11FFT** ppFFT) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDeviceContext);
        ORBIT_TRACK_PARAM(pDesc);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(pBufferInfo);
        ORBIT_TRACK_PARAM(ppFFT);

        auto win32_impl_result = g_api_table.D3DX11CreateFFT(pDeviceContext, pDesc, Flags, pBufferInfo, ppFFT);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3DX11CreateFFT1DReal(win32::Windows::Win32::Graphics::Direct3D11::ID3D11DeviceContext* pDeviceContext, uint32_t X, uint32_t Flags, win32::Windows::Win32::Graphics::Direct3D11::D3DX11_FFT_BUFFER_INFO* pBufferInfo, win32::Windows::Win32::Graphics::Direct3D11::ID3DX11FFT** ppFFT) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDeviceContext);
        ORBIT_TRACK_PARAM(X);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(pBufferInfo);
        ORBIT_TRACK_PARAM(ppFFT);

        auto win32_impl_result = g_api_table.D3DX11CreateFFT1DReal(pDeviceContext, X, Flags, pBufferInfo, ppFFT);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3DX11CreateFFT1DComplex(win32::Windows::Win32::Graphics::Direct3D11::ID3D11DeviceContext* pDeviceContext, uint32_t X, uint32_t Flags, win32::Windows::Win32::Graphics::Direct3D11::D3DX11_FFT_BUFFER_INFO* pBufferInfo, win32::Windows::Win32::Graphics::Direct3D11::ID3DX11FFT** ppFFT) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDeviceContext);
        ORBIT_TRACK_PARAM(X);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(pBufferInfo);
        ORBIT_TRACK_PARAM(ppFFT);

        auto win32_impl_result = g_api_table.D3DX11CreateFFT1DComplex(pDeviceContext, X, Flags, pBufferInfo, ppFFT);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3DX11CreateFFT2DReal(win32::Windows::Win32::Graphics::Direct3D11::ID3D11DeviceContext* pDeviceContext, uint32_t X, uint32_t Y, uint32_t Flags, win32::Windows::Win32::Graphics::Direct3D11::D3DX11_FFT_BUFFER_INFO* pBufferInfo, win32::Windows::Win32::Graphics::Direct3D11::ID3DX11FFT** ppFFT) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDeviceContext);
        ORBIT_TRACK_PARAM(X);
        ORBIT_TRACK_PARAM(Y);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(pBufferInfo);
        ORBIT_TRACK_PARAM(ppFFT);

        auto win32_impl_result = g_api_table.D3DX11CreateFFT2DReal(pDeviceContext, X, Y, Flags, pBufferInfo, ppFFT);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3DX11CreateFFT2DComplex(win32::Windows::Win32::Graphics::Direct3D11::ID3D11DeviceContext* pDeviceContext, uint32_t X, uint32_t Y, uint32_t Flags, win32::Windows::Win32::Graphics::Direct3D11::D3DX11_FFT_BUFFER_INFO* pBufferInfo, win32::Windows::Win32::Graphics::Direct3D11::ID3DX11FFT** ppFFT) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDeviceContext);
        ORBIT_TRACK_PARAM(X);
        ORBIT_TRACK_PARAM(Y);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(pBufferInfo);
        ORBIT_TRACK_PARAM(ppFFT);

        auto win32_impl_result = g_api_table.D3DX11CreateFFT2DComplex(pDeviceContext, X, Y, Flags, pBufferInfo, ppFFT);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3DX11CreateFFT3DReal(win32::Windows::Win32::Graphics::Direct3D11::ID3D11DeviceContext* pDeviceContext, uint32_t X, uint32_t Y, uint32_t Z, uint32_t Flags, win32::Windows::Win32::Graphics::Direct3D11::D3DX11_FFT_BUFFER_INFO* pBufferInfo, win32::Windows::Win32::Graphics::Direct3D11::ID3DX11FFT** ppFFT) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDeviceContext);
        ORBIT_TRACK_PARAM(X);
        ORBIT_TRACK_PARAM(Y);
        ORBIT_TRACK_PARAM(Z);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(pBufferInfo);
        ORBIT_TRACK_PARAM(ppFFT);

        auto win32_impl_result = g_api_table.D3DX11CreateFFT3DReal(pDeviceContext, X, Y, Z, Flags, pBufferInfo, ppFFT);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3DX11CreateFFT3DComplex(win32::Windows::Win32::Graphics::Direct3D11::ID3D11DeviceContext* pDeviceContext, uint32_t X, uint32_t Y, uint32_t Z, uint32_t Flags, win32::Windows::Win32::Graphics::Direct3D11::D3DX11_FFT_BUFFER_INFO* pBufferInfo, win32::Windows::Win32::Graphics::Direct3D11::ID3DX11FFT** ppFFT) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDeviceContext);
        ORBIT_TRACK_PARAM(X);
        ORBIT_TRACK_PARAM(Y);
        ORBIT_TRACK_PARAM(Z);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(pBufferInfo);
        ORBIT_TRACK_PARAM(ppFFT);

        auto win32_impl_result = g_api_table.D3DX11CreateFFT3DComplex(pDeviceContext, X, Y, Z, Flags, pBufferInfo, ppFFT);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
