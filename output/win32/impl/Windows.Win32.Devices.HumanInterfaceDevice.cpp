// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Devices_HumanInterfaceDevice_2_H
#define WIN32_Windows_Win32_Devices_HumanInterfaceDevice_2_H
#include "win32/Windows.Win32.Devices.HumanInterfaceDevice.h"
#include "win32/impl/Windows.Win32.Devices.HumanInterfaceDevice.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::Devices::HumanInterfaceDevice
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DirectInput8Create(win32::Windows::Win32::Foundation::HINSTANCE hinst, uint32_t dwVersion, ::win32::guid* riidltf, void** ppvOut, win32::Windows::Win32::System::Com::IUnknown* punkOuter) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hinst);
        ORBIT_TRACK_PARAM(dwVersion);
        ORBIT_TRACK_PARAM(riidltf);
        ORBIT_TRACK_PARAM(ppvOut);
        ORBIT_TRACK_PARAM(punkOuter);

        auto win32_impl_result = g_api_table.DirectInput8Create(hinst, dwVersion, riidltf, ppvOut, punkOuter);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_joyConfigChanged(uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.joyConfigChanged(dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_GetCaps(intptr_t PreparsedData, win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_CAPS* Capabilities) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PreparsedData);
        ORBIT_TRACK_PARAM(Capabilities);

        auto win32_impl_result = g_api_table.HidP_GetCaps(PreparsedData, Capabilities);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_GetLinkCollectionNodes(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_LINK_COLLECTION_NODE* LinkCollectionNodes, uint32_t* LinkCollectionNodesLength, intptr_t PreparsedData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LinkCollectionNodes);
        ORBIT_TRACK_PARAM(LinkCollectionNodesLength);
        ORBIT_TRACK_PARAM(PreparsedData);

        auto win32_impl_result = g_api_table.HidP_GetLinkCollectionNodes(LinkCollectionNodes, LinkCollectionNodesLength, PreparsedData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_GetSpecificButtonCaps(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t Usage, win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_BUTTON_CAPS* ButtonCaps, uint16_t* ButtonCapsLength, intptr_t PreparsedData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(UsagePage);
        ORBIT_TRACK_PARAM(LinkCollection);
        ORBIT_TRACK_PARAM(Usage);
        ORBIT_TRACK_PARAM(ButtonCaps);
        ORBIT_TRACK_PARAM(ButtonCapsLength);
        ORBIT_TRACK_PARAM(PreparsedData);

        auto win32_impl_result = g_api_table.HidP_GetSpecificButtonCaps(ReportType, UsagePage, LinkCollection, Usage, ButtonCaps, ButtonCapsLength, PreparsedData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_GetButtonCaps(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_BUTTON_CAPS* ButtonCaps, uint16_t* ButtonCapsLength, intptr_t PreparsedData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(ButtonCaps);
        ORBIT_TRACK_PARAM(ButtonCapsLength);
        ORBIT_TRACK_PARAM(PreparsedData);

        auto win32_impl_result = g_api_table.HidP_GetButtonCaps(ReportType, ButtonCaps, ButtonCapsLength, PreparsedData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_GetSpecificValueCaps(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t Usage, win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_VALUE_CAPS* ValueCaps, uint16_t* ValueCapsLength, intptr_t PreparsedData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(UsagePage);
        ORBIT_TRACK_PARAM(LinkCollection);
        ORBIT_TRACK_PARAM(Usage);
        ORBIT_TRACK_PARAM(ValueCaps);
        ORBIT_TRACK_PARAM(ValueCapsLength);
        ORBIT_TRACK_PARAM(PreparsedData);

        auto win32_impl_result = g_api_table.HidP_GetSpecificValueCaps(ReportType, UsagePage, LinkCollection, Usage, ValueCaps, ValueCapsLength, PreparsedData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_GetValueCaps(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_VALUE_CAPS* ValueCaps, uint16_t* ValueCapsLength, intptr_t PreparsedData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(ValueCaps);
        ORBIT_TRACK_PARAM(ValueCapsLength);
        ORBIT_TRACK_PARAM(PreparsedData);

        auto win32_impl_result = g_api_table.HidP_GetValueCaps(ReportType, ValueCaps, ValueCapsLength, PreparsedData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_GetExtendedAttributes(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, uint16_t DataIndex, intptr_t PreparsedData, win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_EXTENDED_ATTRIBUTES* Attributes, uint32_t* LengthAttributes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(DataIndex);
        ORBIT_TRACK_PARAM(PreparsedData);
        ORBIT_TRACK_PARAM(Attributes);
        ORBIT_TRACK_PARAM(LengthAttributes);

        auto win32_impl_result = g_api_table.HidP_GetExtendedAttributes(ReportType, DataIndex, PreparsedData, Attributes, LengthAttributes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_InitializeReportForID(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, uint8_t ReportID, intptr_t PreparsedData, win32::Windows::Win32::Foundation::PSTR Report, uint32_t ReportLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(ReportID);
        ORBIT_TRACK_PARAM(PreparsedData);
        ORBIT_TRACK_PARAM(Report);
        ORBIT_TRACK_PARAM(ReportLength);

        auto win32_impl_result = g_api_table.HidP_InitializeReportForID(ReportType, ReportID, PreparsedData, Report, ReportLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_SetData(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_DATA* DataList, uint32_t* DataLength, intptr_t PreparsedData, win32::Windows::Win32::Foundation::PSTR Report, uint32_t ReportLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(DataList);
        ORBIT_TRACK_PARAM(DataLength);
        ORBIT_TRACK_PARAM(PreparsedData);
        ORBIT_TRACK_PARAM(Report);
        ORBIT_TRACK_PARAM(ReportLength);

        auto win32_impl_result = g_api_table.HidP_SetData(ReportType, DataList, DataLength, PreparsedData, Report, ReportLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_GetData(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_DATA* DataList, uint32_t* DataLength, intptr_t PreparsedData, win32::Windows::Win32::Foundation::PSTR Report, uint32_t ReportLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(DataList);
        ORBIT_TRACK_PARAM(DataLength);
        ORBIT_TRACK_PARAM(PreparsedData);
        ORBIT_TRACK_PARAM(Report);
        ORBIT_TRACK_PARAM(ReportLength);

        auto win32_impl_result = g_api_table.HidP_GetData(ReportType, DataList, DataLength, PreparsedData, Report, ReportLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_HidP_MaxDataListLength(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, intptr_t PreparsedData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(PreparsedData);

        auto win32_impl_result = g_api_table.HidP_MaxDataListLength(ReportType, PreparsedData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_SetUsages(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t* UsageList, uint32_t* UsageLength, intptr_t PreparsedData, win32::Windows::Win32::Foundation::PSTR Report, uint32_t ReportLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(UsagePage);
        ORBIT_TRACK_PARAM(LinkCollection);
        ORBIT_TRACK_PARAM(UsageList);
        ORBIT_TRACK_PARAM(UsageLength);
        ORBIT_TRACK_PARAM(PreparsedData);
        ORBIT_TRACK_PARAM(Report);
        ORBIT_TRACK_PARAM(ReportLength);

        auto win32_impl_result = g_api_table.HidP_SetUsages(ReportType, UsagePage, LinkCollection, UsageList, UsageLength, PreparsedData, Report, ReportLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_UnsetUsages(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t* UsageList, uint32_t* UsageLength, intptr_t PreparsedData, win32::Windows::Win32::Foundation::PSTR Report, uint32_t ReportLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(UsagePage);
        ORBIT_TRACK_PARAM(LinkCollection);
        ORBIT_TRACK_PARAM(UsageList);
        ORBIT_TRACK_PARAM(UsageLength);
        ORBIT_TRACK_PARAM(PreparsedData);
        ORBIT_TRACK_PARAM(Report);
        ORBIT_TRACK_PARAM(ReportLength);

        auto win32_impl_result = g_api_table.HidP_UnsetUsages(ReportType, UsagePage, LinkCollection, UsageList, UsageLength, PreparsedData, Report, ReportLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_GetUsages(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t* UsageList, uint32_t* UsageLength, intptr_t PreparsedData, win32::Windows::Win32::Foundation::PSTR Report, uint32_t ReportLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(UsagePage);
        ORBIT_TRACK_PARAM(LinkCollection);
        ORBIT_TRACK_PARAM(UsageList);
        ORBIT_TRACK_PARAM(UsageLength);
        ORBIT_TRACK_PARAM(PreparsedData);
        ORBIT_TRACK_PARAM(Report);
        ORBIT_TRACK_PARAM(ReportLength);

        auto win32_impl_result = g_api_table.HidP_GetUsages(ReportType, UsagePage, LinkCollection, UsageList, UsageLength, PreparsedData, Report, ReportLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_GetUsagesEx(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, uint16_t LinkCollection, win32::Windows::Win32::Devices::HumanInterfaceDevice::USAGE_AND_PAGE* ButtonList, uint32_t* UsageLength, intptr_t PreparsedData, win32::Windows::Win32::Foundation::PSTR Report, uint32_t ReportLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(LinkCollection);
        ORBIT_TRACK_PARAM(ButtonList);
        ORBIT_TRACK_PARAM(UsageLength);
        ORBIT_TRACK_PARAM(PreparsedData);
        ORBIT_TRACK_PARAM(Report);
        ORBIT_TRACK_PARAM(ReportLength);

        auto win32_impl_result = g_api_table.HidP_GetUsagesEx(ReportType, LinkCollection, ButtonList, UsageLength, PreparsedData, Report, ReportLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_HidP_MaxUsageListLength(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, intptr_t PreparsedData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(UsagePage);
        ORBIT_TRACK_PARAM(PreparsedData);

        auto win32_impl_result = g_api_table.HidP_MaxUsageListLength(ReportType, UsagePage, PreparsedData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_SetUsageValue(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t Usage, uint32_t UsageValue, intptr_t PreparsedData, win32::Windows::Win32::Foundation::PSTR Report, uint32_t ReportLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(UsagePage);
        ORBIT_TRACK_PARAM(LinkCollection);
        ORBIT_TRACK_PARAM(Usage);
        ORBIT_TRACK_PARAM(UsageValue);
        ORBIT_TRACK_PARAM(PreparsedData);
        ORBIT_TRACK_PARAM(Report);
        ORBIT_TRACK_PARAM(ReportLength);

        auto win32_impl_result = g_api_table.HidP_SetUsageValue(ReportType, UsagePage, LinkCollection, Usage, UsageValue, PreparsedData, Report, ReportLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_SetScaledUsageValue(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t Usage, int32_t UsageValue, intptr_t PreparsedData, win32::Windows::Win32::Foundation::PSTR Report, uint32_t ReportLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(UsagePage);
        ORBIT_TRACK_PARAM(LinkCollection);
        ORBIT_TRACK_PARAM(Usage);
        ORBIT_TRACK_PARAM(UsageValue);
        ORBIT_TRACK_PARAM(PreparsedData);
        ORBIT_TRACK_PARAM(Report);
        ORBIT_TRACK_PARAM(ReportLength);

        auto win32_impl_result = g_api_table.HidP_SetScaledUsageValue(ReportType, UsagePage, LinkCollection, Usage, UsageValue, PreparsedData, Report, ReportLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_SetUsageValueArray(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t Usage, win32::Windows::Win32::Foundation::PSTR UsageValue, uint16_t UsageValueByteLength, intptr_t PreparsedData, win32::Windows::Win32::Foundation::PSTR Report, uint32_t ReportLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(UsagePage);
        ORBIT_TRACK_PARAM(LinkCollection);
        ORBIT_TRACK_PARAM(Usage);
        ORBIT_TRACK_PARAM(UsageValue);
        ORBIT_TRACK_PARAM(UsageValueByteLength);
        ORBIT_TRACK_PARAM(PreparsedData);
        ORBIT_TRACK_PARAM(Report);
        ORBIT_TRACK_PARAM(ReportLength);

        auto win32_impl_result = g_api_table.HidP_SetUsageValueArray(ReportType, UsagePage, LinkCollection, Usage, UsageValue, UsageValueByteLength, PreparsedData, Report, ReportLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_GetUsageValue(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t Usage, uint32_t* UsageValue, intptr_t PreparsedData, win32::Windows::Win32::Foundation::PSTR Report, uint32_t ReportLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(UsagePage);
        ORBIT_TRACK_PARAM(LinkCollection);
        ORBIT_TRACK_PARAM(Usage);
        ORBIT_TRACK_PARAM(UsageValue);
        ORBIT_TRACK_PARAM(PreparsedData);
        ORBIT_TRACK_PARAM(Report);
        ORBIT_TRACK_PARAM(ReportLength);

        auto win32_impl_result = g_api_table.HidP_GetUsageValue(ReportType, UsagePage, LinkCollection, Usage, UsageValue, PreparsedData, Report, ReportLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_GetScaledUsageValue(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t Usage, int32_t* UsageValue, intptr_t PreparsedData, win32::Windows::Win32::Foundation::PSTR Report, uint32_t ReportLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(UsagePage);
        ORBIT_TRACK_PARAM(LinkCollection);
        ORBIT_TRACK_PARAM(Usage);
        ORBIT_TRACK_PARAM(UsageValue);
        ORBIT_TRACK_PARAM(PreparsedData);
        ORBIT_TRACK_PARAM(Report);
        ORBIT_TRACK_PARAM(ReportLength);

        auto win32_impl_result = g_api_table.HidP_GetScaledUsageValue(ReportType, UsagePage, LinkCollection, Usage, UsageValue, PreparsedData, Report, ReportLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_GetUsageValueArray(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t Usage, win32::Windows::Win32::Foundation::PSTR UsageValue, uint16_t UsageValueByteLength, intptr_t PreparsedData, win32::Windows::Win32::Foundation::PSTR Report, uint32_t ReportLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(UsagePage);
        ORBIT_TRACK_PARAM(LinkCollection);
        ORBIT_TRACK_PARAM(Usage);
        ORBIT_TRACK_PARAM(UsageValue);
        ORBIT_TRACK_PARAM(UsageValueByteLength);
        ORBIT_TRACK_PARAM(PreparsedData);
        ORBIT_TRACK_PARAM(Report);
        ORBIT_TRACK_PARAM(ReportLength);

        auto win32_impl_result = g_api_table.HidP_GetUsageValueArray(ReportType, UsagePage, LinkCollection, Usage, UsageValue, UsageValueByteLength, PreparsedData, Report, ReportLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_UsageListDifference(uint16_t* PreviousUsageList, uint16_t* CurrentUsageList, uint16_t* BreakUsageList, uint16_t* MakeUsageList, uint32_t UsageListLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PreviousUsageList);
        ORBIT_TRACK_PARAM(CurrentUsageList);
        ORBIT_TRACK_PARAM(BreakUsageList);
        ORBIT_TRACK_PARAM(MakeUsageList);
        ORBIT_TRACK_PARAM(UsageListLength);

        auto win32_impl_result = g_api_table.HidP_UsageListDifference(PreviousUsageList, CurrentUsageList, BreakUsageList, MakeUsageList, UsageListLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_GetButtonArray(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t Usage, win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_BUTTON_ARRAY_DATA* ButtonData, uint16_t* ButtonDataLength, intptr_t PreparsedData, win32::Windows::Win32::Foundation::PSTR Report, uint32_t ReportLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(UsagePage);
        ORBIT_TRACK_PARAM(LinkCollection);
        ORBIT_TRACK_PARAM(Usage);
        ORBIT_TRACK_PARAM(ButtonData);
        ORBIT_TRACK_PARAM(ButtonDataLength);
        ORBIT_TRACK_PARAM(PreparsedData);
        ORBIT_TRACK_PARAM(Report);
        ORBIT_TRACK_PARAM(ReportLength);

        auto win32_impl_result = g_api_table.HidP_GetButtonArray(ReportType, UsagePage, LinkCollection, Usage, ButtonData, ButtonDataLength, PreparsedData, Report, ReportLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_SetButtonArray(win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t Usage, win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_BUTTON_ARRAY_DATA* ButtonData, uint16_t ButtonDataLength, intptr_t PreparsedData, win32::Windows::Win32::Foundation::PSTR Report, uint32_t ReportLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ReportType);
        ORBIT_TRACK_PARAM(UsagePage);
        ORBIT_TRACK_PARAM(LinkCollection);
        ORBIT_TRACK_PARAM(Usage);
        ORBIT_TRACK_PARAM(ButtonData);
        ORBIT_TRACK_PARAM(ButtonDataLength);
        ORBIT_TRACK_PARAM(PreparsedData);
        ORBIT_TRACK_PARAM(Report);
        ORBIT_TRACK_PARAM(ReportLength);

        auto win32_impl_result = g_api_table.HidP_SetButtonArray(ReportType, UsagePage, LinkCollection, Usage, ButtonData, ButtonDataLength, PreparsedData, Report, ReportLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_HidP_TranslateUsagesToI8042ScanCodes(uint16_t* ChangedUsageList, uint32_t UsageListLength, win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_KEYBOARD_DIRECTION KeyAction, win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDP_KEYBOARD_MODIFIER_STATE* ModifierState, win32::Windows::Win32::Devices::HumanInterfaceDevice::PHIDP_INSERT_SCANCODES* InsertCodesProcedure, void* InsertCodesContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ChangedUsageList);
        ORBIT_TRACK_PARAM(UsageListLength);
        ORBIT_TRACK_PARAM(KeyAction);
        ORBIT_TRACK_PARAM(ModifierState);
        ORBIT_TRACK_PARAM(InsertCodesProcedure);
        ORBIT_TRACK_PARAM(InsertCodesContext);

        auto win32_impl_result = g_api_table.HidP_TranslateUsagesToI8042ScanCodes(ChangedUsageList, UsageListLength, KeyAction, ModifierState, InsertCodesProcedure, InsertCodesContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_HidD_GetAttributes(win32::Windows::Win32::Foundation::HANDLE HidDeviceObject, win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDD_ATTRIBUTES* Attributes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HidDeviceObject);
        ORBIT_TRACK_PARAM(Attributes);

        auto win32_impl_result = g_api_table.HidD_GetAttributes(HidDeviceObject, Attributes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_HidD_GetHidGuid(::win32::guid* HidGuid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HidGuid);

        g_api_table.HidD_GetHidGuid(HidGuid);
        
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_HidD_GetPreparsedData(win32::Windows::Win32::Foundation::HANDLE HidDeviceObject, intptr_t* PreparsedData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HidDeviceObject);
        ORBIT_TRACK_PARAM(PreparsedData);

        auto win32_impl_result = g_api_table.HidD_GetPreparsedData(HidDeviceObject, PreparsedData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_HidD_FreePreparsedData(intptr_t PreparsedData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PreparsedData);

        auto win32_impl_result = g_api_table.HidD_FreePreparsedData(PreparsedData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_HidD_FlushQueue(win32::Windows::Win32::Foundation::HANDLE HidDeviceObject) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HidDeviceObject);

        auto win32_impl_result = g_api_table.HidD_FlushQueue(HidDeviceObject);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_HidD_GetConfiguration(win32::Windows::Win32::Foundation::HANDLE HidDeviceObject, win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDD_CONFIGURATION* Configuration, uint32_t ConfigurationLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HidDeviceObject);
        ORBIT_TRACK_PARAM(Configuration);
        ORBIT_TRACK_PARAM(ConfigurationLength);

        auto win32_impl_result = g_api_table.HidD_GetConfiguration(HidDeviceObject, Configuration, ConfigurationLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_HidD_SetConfiguration(win32::Windows::Win32::Foundation::HANDLE HidDeviceObject, win32::Windows::Win32::Devices::HumanInterfaceDevice::HIDD_CONFIGURATION* Configuration, uint32_t ConfigurationLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HidDeviceObject);
        ORBIT_TRACK_PARAM(Configuration);
        ORBIT_TRACK_PARAM(ConfigurationLength);

        auto win32_impl_result = g_api_table.HidD_SetConfiguration(HidDeviceObject, Configuration, ConfigurationLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_HidD_GetFeature(win32::Windows::Win32::Foundation::HANDLE HidDeviceObject, void* ReportBuffer, uint32_t ReportBufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HidDeviceObject);
        ORBIT_TRACK_PARAM(ReportBuffer);
        ORBIT_TRACK_PARAM(ReportBufferLength);

        auto win32_impl_result = g_api_table.HidD_GetFeature(HidDeviceObject, ReportBuffer, ReportBufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_HidD_SetFeature(win32::Windows::Win32::Foundation::HANDLE HidDeviceObject, void* ReportBuffer, uint32_t ReportBufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HidDeviceObject);
        ORBIT_TRACK_PARAM(ReportBuffer);
        ORBIT_TRACK_PARAM(ReportBufferLength);

        auto win32_impl_result = g_api_table.HidD_SetFeature(HidDeviceObject, ReportBuffer, ReportBufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_HidD_GetInputReport(win32::Windows::Win32::Foundation::HANDLE HidDeviceObject, void* ReportBuffer, uint32_t ReportBufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HidDeviceObject);
        ORBIT_TRACK_PARAM(ReportBuffer);
        ORBIT_TRACK_PARAM(ReportBufferLength);

        auto win32_impl_result = g_api_table.HidD_GetInputReport(HidDeviceObject, ReportBuffer, ReportBufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_HidD_SetOutputReport(win32::Windows::Win32::Foundation::HANDLE HidDeviceObject, void* ReportBuffer, uint32_t ReportBufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HidDeviceObject);
        ORBIT_TRACK_PARAM(ReportBuffer);
        ORBIT_TRACK_PARAM(ReportBufferLength);

        auto win32_impl_result = g_api_table.HidD_SetOutputReport(HidDeviceObject, ReportBuffer, ReportBufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_HidD_GetNumInputBuffers(win32::Windows::Win32::Foundation::HANDLE HidDeviceObject, uint32_t* NumberBuffers) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HidDeviceObject);
        ORBIT_TRACK_PARAM(NumberBuffers);

        auto win32_impl_result = g_api_table.HidD_GetNumInputBuffers(HidDeviceObject, NumberBuffers);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_HidD_SetNumInputBuffers(win32::Windows::Win32::Foundation::HANDLE HidDeviceObject, uint32_t NumberBuffers) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HidDeviceObject);
        ORBIT_TRACK_PARAM(NumberBuffers);

        auto win32_impl_result = g_api_table.HidD_SetNumInputBuffers(HidDeviceObject, NumberBuffers);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_HidD_GetPhysicalDescriptor(win32::Windows::Win32::Foundation::HANDLE HidDeviceObject, void* Buffer, uint32_t BufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HidDeviceObject);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLength);

        auto win32_impl_result = g_api_table.HidD_GetPhysicalDescriptor(HidDeviceObject, Buffer, BufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_HidD_GetManufacturerString(win32::Windows::Win32::Foundation::HANDLE HidDeviceObject, void* Buffer, uint32_t BufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HidDeviceObject);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLength);

        auto win32_impl_result = g_api_table.HidD_GetManufacturerString(HidDeviceObject, Buffer, BufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_HidD_GetProductString(win32::Windows::Win32::Foundation::HANDLE HidDeviceObject, void* Buffer, uint32_t BufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HidDeviceObject);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLength);

        auto win32_impl_result = g_api_table.HidD_GetProductString(HidDeviceObject, Buffer, BufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_HidD_GetIndexedString(win32::Windows::Win32::Foundation::HANDLE HidDeviceObject, uint32_t StringIndex, void* Buffer, uint32_t BufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HidDeviceObject);
        ORBIT_TRACK_PARAM(StringIndex);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLength);

        auto win32_impl_result = g_api_table.HidD_GetIndexedString(HidDeviceObject, StringIndex, Buffer, BufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_HidD_GetSerialNumberString(win32::Windows::Win32::Foundation::HANDLE HidDeviceObject, void* Buffer, uint32_t BufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HidDeviceObject);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLength);

        auto win32_impl_result = g_api_table.HidD_GetSerialNumberString(HidDeviceObject, Buffer, BufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_HidD_GetMsGenreDescriptor(win32::Windows::Win32::Foundation::HANDLE HidDeviceObject, void* Buffer, uint32_t BufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HidDeviceObject);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLength);

        auto win32_impl_result = g_api_table.HidD_GetMsGenreDescriptor(HidDeviceObject, Buffer, BufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
