// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_Search_2_H
#define WIN32_Windows_Win32_System_Search_2_H
#include "win32/Windows.Win32.System.Search.h"
#include "win32/impl/Windows.Win32.System.Search.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::System::Search
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    int16_t __stdcall ORBIT_IMPL_SQLAllocConnect(void* EnvironmentHandle, void** ConnectionHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(EnvironmentHandle);
        ORBIT_TRACK_PARAM(ConnectionHandle);

        auto win32_impl_result = g_api_table.SQLAllocConnect(EnvironmentHandle, ConnectionHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLAllocEnv(void** EnvironmentHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(EnvironmentHandle);

        auto win32_impl_result = g_api_table.SQLAllocEnv(EnvironmentHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLAllocHandle(int16_t HandleType, void* InputHandle, void** OutputHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HandleType);
        ORBIT_TRACK_PARAM(InputHandle);
        ORBIT_TRACK_PARAM(OutputHandle);

        auto win32_impl_result = g_api_table.SQLAllocHandle(HandleType, InputHandle, OutputHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLAllocStmt(void* ConnectionHandle, void** StatementHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ConnectionHandle);
        ORBIT_TRACK_PARAM(StatementHandle);

        auto win32_impl_result = g_api_table.SQLAllocStmt(ConnectionHandle, StatementHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLBindCol(void* StatementHandle, uint16_t ColumnNumber, int16_t TargetType, void* TargetValue, int64_t BufferLength, int64_t* StrLen_or_Ind) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(ColumnNumber);
        ORBIT_TRACK_PARAM(TargetType);
        ORBIT_TRACK_PARAM(TargetValue);
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(StrLen_or_Ind);

        auto win32_impl_result = g_api_table.SQLBindCol(StatementHandle, ColumnNumber, TargetType, TargetValue, BufferLength, StrLen_or_Ind);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLBindParam(void* StatementHandle, uint16_t ParameterNumber, int16_t ValueType, int16_t ParameterType, uint64_t LengthPrecision, int16_t ParameterScale, void* ParameterValue, int64_t* StrLen_or_Ind) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(ParameterNumber);
        ORBIT_TRACK_PARAM(ValueType);
        ORBIT_TRACK_PARAM(ParameterType);
        ORBIT_TRACK_PARAM(LengthPrecision);
        ORBIT_TRACK_PARAM(ParameterScale);
        ORBIT_TRACK_PARAM(ParameterValue);
        ORBIT_TRACK_PARAM(StrLen_or_Ind);

        auto win32_impl_result = g_api_table.SQLBindParam(StatementHandle, ParameterNumber, ValueType, ParameterType, LengthPrecision, ParameterScale, ParameterValue, StrLen_or_Ind);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLCancel(void* StatementHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);

        auto win32_impl_result = g_api_table.SQLCancel(StatementHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLCancelHandle(int16_t HandleType, void* InputHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HandleType);
        ORBIT_TRACK_PARAM(InputHandle);

        auto win32_impl_result = g_api_table.SQLCancelHandle(HandleType, InputHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLCloseCursor(void* StatementHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);

        auto win32_impl_result = g_api_table.SQLCloseCursor(StatementHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLColAttribute(void* StatementHandle, uint16_t ColumnNumber, uint16_t FieldIdentifier, void* CharacterAttribute, int16_t BufferLength, int16_t* StringLength, int64_t* NumericAttribute) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(ColumnNumber);
        ORBIT_TRACK_PARAM(FieldIdentifier);
        ORBIT_TRACK_PARAM(CharacterAttribute);
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(StringLength);
        ORBIT_TRACK_PARAM(NumericAttribute);

        auto win32_impl_result = g_api_table.SQLColAttribute(StatementHandle, ColumnNumber, FieldIdentifier, CharacterAttribute, BufferLength, StringLength, NumericAttribute);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLColumns(void* StatementHandle, uint8_t* CatalogName, int16_t NameLength1, uint8_t* SchemaName, int16_t NameLength2, uint8_t* TableName, int16_t NameLength3, uint8_t* ColumnName, int16_t NameLength4) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(CatalogName);
        ORBIT_TRACK_PARAM(NameLength1);
        ORBIT_TRACK_PARAM(SchemaName);
        ORBIT_TRACK_PARAM(NameLength2);
        ORBIT_TRACK_PARAM(TableName);
        ORBIT_TRACK_PARAM(NameLength3);
        ORBIT_TRACK_PARAM(ColumnName);
        ORBIT_TRACK_PARAM(NameLength4);

        auto win32_impl_result = g_api_table.SQLColumns(StatementHandle, CatalogName, NameLength1, SchemaName, NameLength2, TableName, NameLength3, ColumnName, NameLength4);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLCompleteAsync(int16_t HandleType, void* Handle, int16_t* AsyncRetCodePtr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HandleType);
        ORBIT_TRACK_PARAM(Handle);
        ORBIT_TRACK_PARAM(AsyncRetCodePtr);

        auto win32_impl_result = g_api_table.SQLCompleteAsync(HandleType, Handle, AsyncRetCodePtr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLConnect(void* ConnectionHandle, uint8_t* ServerName, int16_t NameLength1, uint8_t* UserName, int16_t NameLength2, uint8_t* Authentication, int16_t NameLength3) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ConnectionHandle);
        ORBIT_TRACK_PARAM(ServerName);
        ORBIT_TRACK_PARAM(NameLength1);
        ORBIT_TRACK_PARAM(UserName);
        ORBIT_TRACK_PARAM(NameLength2);
        ORBIT_TRACK_PARAM(Authentication);
        ORBIT_TRACK_PARAM(NameLength3);

        auto win32_impl_result = g_api_table.SQLConnect(ConnectionHandle, ServerName, NameLength1, UserName, NameLength2, Authentication, NameLength3);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLCopyDesc(void* SourceDescHandle, void* TargetDescHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SourceDescHandle);
        ORBIT_TRACK_PARAM(TargetDescHandle);

        auto win32_impl_result = g_api_table.SQLCopyDesc(SourceDescHandle, TargetDescHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLDataSources(void* EnvironmentHandle, uint16_t Direction, uint8_t* ServerName, int16_t BufferLength1, int16_t* NameLength1Ptr, uint8_t* Description, int16_t BufferLength2, int16_t* NameLength2Ptr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(EnvironmentHandle);
        ORBIT_TRACK_PARAM(Direction);
        ORBIT_TRACK_PARAM(ServerName);
        ORBIT_TRACK_PARAM(BufferLength1);
        ORBIT_TRACK_PARAM(NameLength1Ptr);
        ORBIT_TRACK_PARAM(Description);
        ORBIT_TRACK_PARAM(BufferLength2);
        ORBIT_TRACK_PARAM(NameLength2Ptr);

        auto win32_impl_result = g_api_table.SQLDataSources(EnvironmentHandle, Direction, ServerName, BufferLength1, NameLength1Ptr, Description, BufferLength2, NameLength2Ptr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLDescribeCol(void* StatementHandle, uint16_t ColumnNumber, uint8_t* ColumnName, int16_t BufferLength, int16_t* NameLength, int16_t* DataType, uint64_t* ColumnSize, int16_t* DecimalDigits, int16_t* Nullable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(ColumnNumber);
        ORBIT_TRACK_PARAM(ColumnName);
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(NameLength);
        ORBIT_TRACK_PARAM(DataType);
        ORBIT_TRACK_PARAM(ColumnSize);
        ORBIT_TRACK_PARAM(DecimalDigits);
        ORBIT_TRACK_PARAM(Nullable);

        auto win32_impl_result = g_api_table.SQLDescribeCol(StatementHandle, ColumnNumber, ColumnName, BufferLength, NameLength, DataType, ColumnSize, DecimalDigits, Nullable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLDisconnect(void* ConnectionHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ConnectionHandle);

        auto win32_impl_result = g_api_table.SQLDisconnect(ConnectionHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLEndTran(int16_t HandleType, void* Handle, int16_t CompletionType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HandleType);
        ORBIT_TRACK_PARAM(Handle);
        ORBIT_TRACK_PARAM(CompletionType);

        auto win32_impl_result = g_api_table.SQLEndTran(HandleType, Handle, CompletionType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLError(void* EnvironmentHandle, void* ConnectionHandle, void* StatementHandle, uint8_t* Sqlstate, int32_t* NativeError, uint8_t* MessageText, int16_t BufferLength, int16_t* TextLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(EnvironmentHandle);
        ORBIT_TRACK_PARAM(ConnectionHandle);
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(Sqlstate);
        ORBIT_TRACK_PARAM(NativeError);
        ORBIT_TRACK_PARAM(MessageText);
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(TextLength);

        auto win32_impl_result = g_api_table.SQLError(EnvironmentHandle, ConnectionHandle, StatementHandle, Sqlstate, NativeError, MessageText, BufferLength, TextLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLExecDirect(void* StatementHandle, uint8_t* StatementText, int32_t TextLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(StatementText);
        ORBIT_TRACK_PARAM(TextLength);

        auto win32_impl_result = g_api_table.SQLExecDirect(StatementHandle, StatementText, TextLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLExecute(void* StatementHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);

        auto win32_impl_result = g_api_table.SQLExecute(StatementHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLFetch(void* StatementHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);

        auto win32_impl_result = g_api_table.SQLFetch(StatementHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLFetchScroll(void* StatementHandle, int16_t FetchOrientation, int64_t FetchOffset) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(FetchOrientation);
        ORBIT_TRACK_PARAM(FetchOffset);

        auto win32_impl_result = g_api_table.SQLFetchScroll(StatementHandle, FetchOrientation, FetchOffset);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLFreeConnect(void* ConnectionHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ConnectionHandle);

        auto win32_impl_result = g_api_table.SQLFreeConnect(ConnectionHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLFreeEnv(void* EnvironmentHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(EnvironmentHandle);

        auto win32_impl_result = g_api_table.SQLFreeEnv(EnvironmentHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLFreeHandle(int16_t HandleType, void* Handle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HandleType);
        ORBIT_TRACK_PARAM(Handle);

        auto win32_impl_result = g_api_table.SQLFreeHandle(HandleType, Handle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLFreeStmt(void* StatementHandle, uint16_t Option) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(Option);

        auto win32_impl_result = g_api_table.SQLFreeStmt(StatementHandle, Option);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetConnectAttr(void* ConnectionHandle, int32_t Attribute, void* Value, int32_t BufferLength, int32_t* StringLengthPtr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ConnectionHandle);
        ORBIT_TRACK_PARAM(Attribute);
        ORBIT_TRACK_PARAM(Value);
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(StringLengthPtr);

        auto win32_impl_result = g_api_table.SQLGetConnectAttr(ConnectionHandle, Attribute, Value, BufferLength, StringLengthPtr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetConnectOption(void* ConnectionHandle, uint16_t Option, void* Value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ConnectionHandle);
        ORBIT_TRACK_PARAM(Option);
        ORBIT_TRACK_PARAM(Value);

        auto win32_impl_result = g_api_table.SQLGetConnectOption(ConnectionHandle, Option, Value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetCursorName(void* StatementHandle, uint8_t* CursorName, int16_t BufferLength, int16_t* NameLengthPtr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(CursorName);
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(NameLengthPtr);

        auto win32_impl_result = g_api_table.SQLGetCursorName(StatementHandle, CursorName, BufferLength, NameLengthPtr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetData(void* StatementHandle, uint16_t ColumnNumber, int16_t TargetType, void* TargetValue, int64_t BufferLength, int64_t* StrLen_or_IndPtr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(ColumnNumber);
        ORBIT_TRACK_PARAM(TargetType);
        ORBIT_TRACK_PARAM(TargetValue);
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(StrLen_or_IndPtr);

        auto win32_impl_result = g_api_table.SQLGetData(StatementHandle, ColumnNumber, TargetType, TargetValue, BufferLength, StrLen_or_IndPtr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetDescField(void* DescriptorHandle, int16_t RecNumber, int16_t FieldIdentifier, void* Value, int32_t BufferLength, int32_t* StringLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DescriptorHandle);
        ORBIT_TRACK_PARAM(RecNumber);
        ORBIT_TRACK_PARAM(FieldIdentifier);
        ORBIT_TRACK_PARAM(Value);
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(StringLength);

        auto win32_impl_result = g_api_table.SQLGetDescField(DescriptorHandle, RecNumber, FieldIdentifier, Value, BufferLength, StringLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetDescRec(void* DescriptorHandle, int16_t RecNumber, uint8_t* Name, int16_t BufferLength, int16_t* StringLengthPtr, int16_t* TypePtr, int16_t* SubTypePtr, int64_t* LengthPtr, int16_t* PrecisionPtr, int16_t* ScalePtr, int16_t* NullablePtr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DescriptorHandle);
        ORBIT_TRACK_PARAM(RecNumber);
        ORBIT_TRACK_PARAM(Name);
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(StringLengthPtr);
        ORBIT_TRACK_PARAM(TypePtr);
        ORBIT_TRACK_PARAM(SubTypePtr);
        ORBIT_TRACK_PARAM(LengthPtr);
        ORBIT_TRACK_PARAM(PrecisionPtr);
        ORBIT_TRACK_PARAM(ScalePtr);
        ORBIT_TRACK_PARAM(NullablePtr);

        auto win32_impl_result = g_api_table.SQLGetDescRec(DescriptorHandle, RecNumber, Name, BufferLength, StringLengthPtr, TypePtr, SubTypePtr, LengthPtr, PrecisionPtr, ScalePtr, NullablePtr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetDiagField(int16_t HandleType, void* Handle, int16_t RecNumber, int16_t DiagIdentifier, void* DiagInfo, int16_t BufferLength, int16_t* StringLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HandleType);
        ORBIT_TRACK_PARAM(Handle);
        ORBIT_TRACK_PARAM(RecNumber);
        ORBIT_TRACK_PARAM(DiagIdentifier);
        ORBIT_TRACK_PARAM(DiagInfo);
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(StringLength);

        auto win32_impl_result = g_api_table.SQLGetDiagField(HandleType, Handle, RecNumber, DiagIdentifier, DiagInfo, BufferLength, StringLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetDiagRec(int16_t HandleType, void* Handle, int16_t RecNumber, uint8_t* Sqlstate, int32_t* NativeError, uint8_t* MessageText, int16_t BufferLength, int16_t* TextLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HandleType);
        ORBIT_TRACK_PARAM(Handle);
        ORBIT_TRACK_PARAM(RecNumber);
        ORBIT_TRACK_PARAM(Sqlstate);
        ORBIT_TRACK_PARAM(NativeError);
        ORBIT_TRACK_PARAM(MessageText);
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(TextLength);

        auto win32_impl_result = g_api_table.SQLGetDiagRec(HandleType, Handle, RecNumber, Sqlstate, NativeError, MessageText, BufferLength, TextLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetEnvAttr(void* EnvironmentHandle, int32_t Attribute, void* Value, int32_t BufferLength, int32_t* StringLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(EnvironmentHandle);
        ORBIT_TRACK_PARAM(Attribute);
        ORBIT_TRACK_PARAM(Value);
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(StringLength);

        auto win32_impl_result = g_api_table.SQLGetEnvAttr(EnvironmentHandle, Attribute, Value, BufferLength, StringLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetFunctions(void* ConnectionHandle, uint16_t FunctionId, uint16_t* Supported) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ConnectionHandle);
        ORBIT_TRACK_PARAM(FunctionId);
        ORBIT_TRACK_PARAM(Supported);

        auto win32_impl_result = g_api_table.SQLGetFunctions(ConnectionHandle, FunctionId, Supported);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetInfo(void* ConnectionHandle, uint16_t InfoType, void* InfoValue, int16_t BufferLength, int16_t* StringLengthPtr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ConnectionHandle);
        ORBIT_TRACK_PARAM(InfoType);
        ORBIT_TRACK_PARAM(InfoValue);
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(StringLengthPtr);

        auto win32_impl_result = g_api_table.SQLGetInfo(ConnectionHandle, InfoType, InfoValue, BufferLength, StringLengthPtr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetStmtAttr(void* StatementHandle, int32_t Attribute, void* Value, int32_t BufferLength, int32_t* StringLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(Attribute);
        ORBIT_TRACK_PARAM(Value);
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(StringLength);

        auto win32_impl_result = g_api_table.SQLGetStmtAttr(StatementHandle, Attribute, Value, BufferLength, StringLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetStmtOption(void* StatementHandle, uint16_t Option, void* Value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(Option);
        ORBIT_TRACK_PARAM(Value);

        auto win32_impl_result = g_api_table.SQLGetStmtOption(StatementHandle, Option, Value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetTypeInfo(void* StatementHandle, int16_t DataType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(DataType);

        auto win32_impl_result = g_api_table.SQLGetTypeInfo(StatementHandle, DataType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLNumResultCols(void* StatementHandle, int16_t* ColumnCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(ColumnCount);

        auto win32_impl_result = g_api_table.SQLNumResultCols(StatementHandle, ColumnCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLParamData(void* StatementHandle, void** Value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(Value);

        auto win32_impl_result = g_api_table.SQLParamData(StatementHandle, Value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLPrepare(void* StatementHandle, uint8_t* StatementText, int32_t TextLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(StatementText);
        ORBIT_TRACK_PARAM(TextLength);

        auto win32_impl_result = g_api_table.SQLPrepare(StatementHandle, StatementText, TextLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLPutData(void* StatementHandle, void* Data, int64_t StrLen_or_Ind) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(Data);
        ORBIT_TRACK_PARAM(StrLen_or_Ind);

        auto win32_impl_result = g_api_table.SQLPutData(StatementHandle, Data, StrLen_or_Ind);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLRowCount(void* StatementHandle, int64_t* RowCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(RowCount);

        auto win32_impl_result = g_api_table.SQLRowCount(StatementHandle, RowCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetConnectAttr(void* ConnectionHandle, int32_t Attribute, void* Value, int32_t StringLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ConnectionHandle);
        ORBIT_TRACK_PARAM(Attribute);
        ORBIT_TRACK_PARAM(Value);
        ORBIT_TRACK_PARAM(StringLength);

        auto win32_impl_result = g_api_table.SQLSetConnectAttr(ConnectionHandle, Attribute, Value, StringLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetConnectOption(void* ConnectionHandle, uint16_t Option, uint64_t Value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ConnectionHandle);
        ORBIT_TRACK_PARAM(Option);
        ORBIT_TRACK_PARAM(Value);

        auto win32_impl_result = g_api_table.SQLSetConnectOption(ConnectionHandle, Option, Value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetCursorName(void* StatementHandle, uint8_t* CursorName, int16_t NameLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(CursorName);
        ORBIT_TRACK_PARAM(NameLength);

        auto win32_impl_result = g_api_table.SQLSetCursorName(StatementHandle, CursorName, NameLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetDescField(void* DescriptorHandle, int16_t RecNumber, int16_t FieldIdentifier, void* Value, int32_t BufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DescriptorHandle);
        ORBIT_TRACK_PARAM(RecNumber);
        ORBIT_TRACK_PARAM(FieldIdentifier);
        ORBIT_TRACK_PARAM(Value);
        ORBIT_TRACK_PARAM(BufferLength);

        auto win32_impl_result = g_api_table.SQLSetDescField(DescriptorHandle, RecNumber, FieldIdentifier, Value, BufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetDescRec(void* DescriptorHandle, int16_t RecNumber, int16_t Type, int16_t SubType, int64_t Length, int16_t Precision, int16_t Scale, void* Data, int64_t* StringLength, int64_t* Indicator) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DescriptorHandle);
        ORBIT_TRACK_PARAM(RecNumber);
        ORBIT_TRACK_PARAM(Type);
        ORBIT_TRACK_PARAM(SubType);
        ORBIT_TRACK_PARAM(Length);
        ORBIT_TRACK_PARAM(Precision);
        ORBIT_TRACK_PARAM(Scale);
        ORBIT_TRACK_PARAM(Data);
        ORBIT_TRACK_PARAM(StringLength);
        ORBIT_TRACK_PARAM(Indicator);

        auto win32_impl_result = g_api_table.SQLSetDescRec(DescriptorHandle, RecNumber, Type, SubType, Length, Precision, Scale, Data, StringLength, Indicator);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetEnvAttr(void* EnvironmentHandle, int32_t Attribute, void* Value, int32_t StringLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(EnvironmentHandle);
        ORBIT_TRACK_PARAM(Attribute);
        ORBIT_TRACK_PARAM(Value);
        ORBIT_TRACK_PARAM(StringLength);

        auto win32_impl_result = g_api_table.SQLSetEnvAttr(EnvironmentHandle, Attribute, Value, StringLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetParam(void* StatementHandle, uint16_t ParameterNumber, int16_t ValueType, int16_t ParameterType, uint64_t LengthPrecision, int16_t ParameterScale, void* ParameterValue, int64_t* StrLen_or_Ind) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(ParameterNumber);
        ORBIT_TRACK_PARAM(ValueType);
        ORBIT_TRACK_PARAM(ParameterType);
        ORBIT_TRACK_PARAM(LengthPrecision);
        ORBIT_TRACK_PARAM(ParameterScale);
        ORBIT_TRACK_PARAM(ParameterValue);
        ORBIT_TRACK_PARAM(StrLen_or_Ind);

        auto win32_impl_result = g_api_table.SQLSetParam(StatementHandle, ParameterNumber, ValueType, ParameterType, LengthPrecision, ParameterScale, ParameterValue, StrLen_or_Ind);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetStmtAttr(void* StatementHandle, int32_t Attribute, void* Value, int32_t StringLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(Attribute);
        ORBIT_TRACK_PARAM(Value);
        ORBIT_TRACK_PARAM(StringLength);

        auto win32_impl_result = g_api_table.SQLSetStmtAttr(StatementHandle, Attribute, Value, StringLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetStmtOption(void* StatementHandle, uint16_t Option, uint64_t Value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(Option);
        ORBIT_TRACK_PARAM(Value);

        auto win32_impl_result = g_api_table.SQLSetStmtOption(StatementHandle, Option, Value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSpecialColumns(void* StatementHandle, uint16_t IdentifierType, uint8_t* CatalogName, int16_t NameLength1, uint8_t* SchemaName, int16_t NameLength2, uint8_t* TableName, int16_t NameLength3, uint16_t Scope, uint16_t Nullable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(IdentifierType);
        ORBIT_TRACK_PARAM(CatalogName);
        ORBIT_TRACK_PARAM(NameLength1);
        ORBIT_TRACK_PARAM(SchemaName);
        ORBIT_TRACK_PARAM(NameLength2);
        ORBIT_TRACK_PARAM(TableName);
        ORBIT_TRACK_PARAM(NameLength3);
        ORBIT_TRACK_PARAM(Scope);
        ORBIT_TRACK_PARAM(Nullable);

        auto win32_impl_result = g_api_table.SQLSpecialColumns(StatementHandle, IdentifierType, CatalogName, NameLength1, SchemaName, NameLength2, TableName, NameLength3, Scope, Nullable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLStatistics(void* StatementHandle, uint8_t* CatalogName, int16_t NameLength1, uint8_t* SchemaName, int16_t NameLength2, uint8_t* TableName, int16_t NameLength3, uint16_t Unique, uint16_t Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(CatalogName);
        ORBIT_TRACK_PARAM(NameLength1);
        ORBIT_TRACK_PARAM(SchemaName);
        ORBIT_TRACK_PARAM(NameLength2);
        ORBIT_TRACK_PARAM(TableName);
        ORBIT_TRACK_PARAM(NameLength3);
        ORBIT_TRACK_PARAM(Unique);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SQLStatistics(StatementHandle, CatalogName, NameLength1, SchemaName, NameLength2, TableName, NameLength3, Unique, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLTables(void* StatementHandle, uint8_t* CatalogName, int16_t NameLength1, uint8_t* SchemaName, int16_t NameLength2, uint8_t* TableName, int16_t NameLength3, uint8_t* TableType, int16_t NameLength4) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(CatalogName);
        ORBIT_TRACK_PARAM(NameLength1);
        ORBIT_TRACK_PARAM(SchemaName);
        ORBIT_TRACK_PARAM(NameLength2);
        ORBIT_TRACK_PARAM(TableName);
        ORBIT_TRACK_PARAM(NameLength3);
        ORBIT_TRACK_PARAM(TableType);
        ORBIT_TRACK_PARAM(NameLength4);

        auto win32_impl_result = g_api_table.SQLTables(StatementHandle, CatalogName, NameLength1, SchemaName, NameLength2, TableName, NameLength3, TableType, NameLength4);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLTransact(void* EnvironmentHandle, void* ConnectionHandle, uint16_t CompletionType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(EnvironmentHandle);
        ORBIT_TRACK_PARAM(ConnectionHandle);
        ORBIT_TRACK_PARAM(CompletionType);

        auto win32_impl_result = g_api_table.SQLTransact(EnvironmentHandle, ConnectionHandle, CompletionType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_bcp_batch(void* param0) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);

        auto win32_impl_result = g_api_table.bcp_batch(param0);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_bcp_bind(void* param0, uint8_t* param1, int32_t param2, int32_t param3, uint8_t* param4, int32_t param5, int32_t param6, int32_t param7) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);
        ORBIT_TRACK_PARAM(param5);
        ORBIT_TRACK_PARAM(param6);
        ORBIT_TRACK_PARAM(param7);

        auto win32_impl_result = g_api_table.bcp_bind(param0, param1, param2, param3, param4, param5, param6, param7);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_bcp_colfmt(void* param0, int32_t param1, uint8_t param2, int32_t param3, int32_t param4, uint8_t* param5, int32_t param6, int32_t param7) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);
        ORBIT_TRACK_PARAM(param5);
        ORBIT_TRACK_PARAM(param6);
        ORBIT_TRACK_PARAM(param7);

        auto win32_impl_result = g_api_table.bcp_colfmt(param0, param1, param2, param3, param4, param5, param6, param7);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_bcp_collen(void* param0, int32_t param1, int32_t param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.bcp_collen(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_bcp_colptr(void* param0, uint8_t* param1, int32_t param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.bcp_colptr(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_bcp_columns(void* param0, int32_t param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.bcp_columns(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_bcp_control(void* param0, int32_t param1, void* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.bcp_control(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_bcp_done(void* param0) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);

        auto win32_impl_result = g_api_table.bcp_done(param0);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_bcp_exec(void* param0, int32_t* param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.bcp_exec(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_bcp_getcolfmt(void* param0, int32_t param1, int32_t param2, void* param3, int32_t param4, int32_t* param5) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);
        ORBIT_TRACK_PARAM(param5);

        auto win32_impl_result = g_api_table.bcp_getcolfmt(param0, param1, param2, param3, param4, param5);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_bcp_initA(void* param0, win32::Windows::Win32::Foundation::PSTR param1, win32::Windows::Win32::Foundation::PSTR param2, win32::Windows::Win32::Foundation::PSTR param3, int32_t param4) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);

        auto win32_impl_result = g_api_table.bcp_initA(param0, param1, param2, param3, param4);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_bcp_initW(void* param0, win32::Windows::Win32::Foundation::PWSTR param1, win32::Windows::Win32::Foundation::PWSTR param2, win32::Windows::Win32::Foundation::PWSTR param3, int32_t param4) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);

        auto win32_impl_result = g_api_table.bcp_initW(param0, param1, param2, param3, param4);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_bcp_moretext(void* param0, int32_t param1, uint8_t* param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.bcp_moretext(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_bcp_readfmtA(void* param0, win32::Windows::Win32::Foundation::PSTR param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.bcp_readfmtA(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_bcp_readfmtW(void* param0, win32::Windows::Win32::Foundation::PWSTR param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.bcp_readfmtW(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_bcp_sendrow(void* param0) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);

        auto win32_impl_result = g_api_table.bcp_sendrow(param0);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_bcp_setcolfmt(void* param0, int32_t param1, int32_t param2, void* param3, int32_t param4) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);
        ORBIT_TRACK_PARAM(param3);
        ORBIT_TRACK_PARAM(param4);

        auto win32_impl_result = g_api_table.bcp_setcolfmt(param0, param1, param2, param3, param4);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_bcp_writefmtA(void* param0, win32::Windows::Win32::Foundation::PSTR param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.bcp_writefmtA(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_bcp_writefmtW(void* param0, win32::Windows::Win32::Foundation::PWSTR param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.bcp_writefmtW(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::PSTR __stdcall ORBIT_IMPL_dbprtypeA(int32_t param0) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);

        auto win32_impl_result = g_api_table.dbprtypeA(param0);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::PWSTR __stdcall ORBIT_IMPL_dbprtypeW(int32_t param0) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);

        auto win32_impl_result = g_api_table.dbprtypeW(param0);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLLinkedServers(void* param0) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);

        auto win32_impl_result = g_api_table.SQLLinkedServers(param0);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLLinkedCatalogsA(void* param0, win32::Windows::Win32::Foundation::PSTR param1, int16_t param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.SQLLinkedCatalogsA(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLLinkedCatalogsW(void* param0, win32::Windows::Win32::Foundation::PWSTR param1, int16_t param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);
        ORBIT_TRACK_PARAM(param2);

        auto win32_impl_result = g_api_table.SQLLinkedCatalogsW(param0, param1, param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_SQLInitEnumServers(win32::Windows::Win32::Foundation::PWSTR pwchServerName, win32::Windows::Win32::Foundation::PWSTR pwchInstanceName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pwchServerName);
        ORBIT_TRACK_PARAM(pwchInstanceName);

        auto win32_impl_result = g_api_table.SQLInitEnumServers(pwchServerName, pwchInstanceName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetNextEnumeration(win32::Windows::Win32::Foundation::HANDLE hEnumHandle, uint8_t* prgEnumData, int32_t* piEnumLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hEnumHandle);
        ORBIT_TRACK_PARAM(prgEnumData);
        ORBIT_TRACK_PARAM(piEnumLength);

        auto win32_impl_result = g_api_table.SQLGetNextEnumeration(hEnumHandle, prgEnumData, piEnumLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLCloseEnumServers(win32::Windows::Win32::Foundation::HANDLE hEnumHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hEnumHandle);

        auto win32_impl_result = g_api_table.SQLCloseEnumServers(hEnumHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLDriverConnect(void* hdbc, intptr_t hwnd, uint8_t* szConnStrIn, int16_t cchConnStrIn, uint8_t* szConnStrOut, int16_t cchConnStrOutMax, int16_t* pcchConnStrOut, uint16_t fDriverCompletion) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(szConnStrIn);
        ORBIT_TRACK_PARAM(cchConnStrIn);
        ORBIT_TRACK_PARAM(szConnStrOut);
        ORBIT_TRACK_PARAM(cchConnStrOutMax);
        ORBIT_TRACK_PARAM(pcchConnStrOut);
        ORBIT_TRACK_PARAM(fDriverCompletion);

        auto win32_impl_result = g_api_table.SQLDriverConnect(hdbc, hwnd, szConnStrIn, cchConnStrIn, szConnStrOut, cchConnStrOutMax, pcchConnStrOut, fDriverCompletion);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLBrowseConnect(void* hdbc, uint8_t* szConnStrIn, int16_t cchConnStrIn, uint8_t* szConnStrOut, int16_t cchConnStrOutMax, int16_t* pcchConnStrOut) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(szConnStrIn);
        ORBIT_TRACK_PARAM(cchConnStrIn);
        ORBIT_TRACK_PARAM(szConnStrOut);
        ORBIT_TRACK_PARAM(cchConnStrOutMax);
        ORBIT_TRACK_PARAM(pcchConnStrOut);

        auto win32_impl_result = g_api_table.SQLBrowseConnect(hdbc, szConnStrIn, cchConnStrIn, szConnStrOut, cchConnStrOutMax, pcchConnStrOut);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLBulkOperations(void* StatementHandle, int16_t Operation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(Operation);

        auto win32_impl_result = g_api_table.SQLBulkOperations(StatementHandle, Operation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLColAttributes(void* hstmt, uint16_t icol, uint16_t fDescType, void* rgbDesc, int16_t cbDescMax, int16_t* pcbDesc, int64_t* pfDesc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(icol);
        ORBIT_TRACK_PARAM(fDescType);
        ORBIT_TRACK_PARAM(rgbDesc);
        ORBIT_TRACK_PARAM(cbDescMax);
        ORBIT_TRACK_PARAM(pcbDesc);
        ORBIT_TRACK_PARAM(pfDesc);

        auto win32_impl_result = g_api_table.SQLColAttributes(hstmt, icol, fDescType, rgbDesc, cbDescMax, pcbDesc, pfDesc);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLColumnPrivileges(void* hstmt, uint8_t* szCatalogName, int16_t cchCatalogName, uint8_t* szSchemaName, int16_t cchSchemaName, uint8_t* szTableName, int16_t cchTableName, uint8_t* szColumnName, int16_t cchColumnName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cchCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cchSchemaName);
        ORBIT_TRACK_PARAM(szTableName);
        ORBIT_TRACK_PARAM(cchTableName);
        ORBIT_TRACK_PARAM(szColumnName);
        ORBIT_TRACK_PARAM(cchColumnName);

        auto win32_impl_result = g_api_table.SQLColumnPrivileges(hstmt, szCatalogName, cchCatalogName, szSchemaName, cchSchemaName, szTableName, cchTableName, szColumnName, cchColumnName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLDescribeParam(void* hstmt, uint16_t ipar, int16_t* pfSqlType, uint64_t* pcbParamDef, int16_t* pibScale, int16_t* pfNullable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(ipar);
        ORBIT_TRACK_PARAM(pfSqlType);
        ORBIT_TRACK_PARAM(pcbParamDef);
        ORBIT_TRACK_PARAM(pibScale);
        ORBIT_TRACK_PARAM(pfNullable);

        auto win32_impl_result = g_api_table.SQLDescribeParam(hstmt, ipar, pfSqlType, pcbParamDef, pibScale, pfNullable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLExtendedFetch(void* hstmt, uint16_t fFetchType, int64_t irow, uint64_t* pcrow, uint16_t* rgfRowStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(fFetchType);
        ORBIT_TRACK_PARAM(irow);
        ORBIT_TRACK_PARAM(pcrow);
        ORBIT_TRACK_PARAM(rgfRowStatus);

        auto win32_impl_result = g_api_table.SQLExtendedFetch(hstmt, fFetchType, irow, pcrow, rgfRowStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLForeignKeys(void* hstmt, uint8_t* szPkCatalogName, int16_t cchPkCatalogName, uint8_t* szPkSchemaName, int16_t cchPkSchemaName, uint8_t* szPkTableName, int16_t cchPkTableName, uint8_t* szFkCatalogName, int16_t cchFkCatalogName, uint8_t* szFkSchemaName, int16_t cchFkSchemaName, uint8_t* szFkTableName, int16_t cchFkTableName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szPkCatalogName);
        ORBIT_TRACK_PARAM(cchPkCatalogName);
        ORBIT_TRACK_PARAM(szPkSchemaName);
        ORBIT_TRACK_PARAM(cchPkSchemaName);
        ORBIT_TRACK_PARAM(szPkTableName);
        ORBIT_TRACK_PARAM(cchPkTableName);
        ORBIT_TRACK_PARAM(szFkCatalogName);
        ORBIT_TRACK_PARAM(cchFkCatalogName);
        ORBIT_TRACK_PARAM(szFkSchemaName);
        ORBIT_TRACK_PARAM(cchFkSchemaName);
        ORBIT_TRACK_PARAM(szFkTableName);
        ORBIT_TRACK_PARAM(cchFkTableName);

        auto win32_impl_result = g_api_table.SQLForeignKeys(hstmt, szPkCatalogName, cchPkCatalogName, szPkSchemaName, cchPkSchemaName, szPkTableName, cchPkTableName, szFkCatalogName, cchFkCatalogName, szFkSchemaName, cchFkSchemaName, szFkTableName, cchFkTableName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLMoreResults(void* hstmt) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);

        auto win32_impl_result = g_api_table.SQLMoreResults(hstmt);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLNativeSql(void* hdbc, uint8_t* szSqlStrIn, int32_t cchSqlStrIn, uint8_t* szSqlStr, int32_t cchSqlStrMax, int32_t* pcbSqlStr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(szSqlStrIn);
        ORBIT_TRACK_PARAM(cchSqlStrIn);
        ORBIT_TRACK_PARAM(szSqlStr);
        ORBIT_TRACK_PARAM(cchSqlStrMax);
        ORBIT_TRACK_PARAM(pcbSqlStr);

        auto win32_impl_result = g_api_table.SQLNativeSql(hdbc, szSqlStrIn, cchSqlStrIn, szSqlStr, cchSqlStrMax, pcbSqlStr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLNumParams(void* hstmt, int16_t* pcpar) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(pcpar);

        auto win32_impl_result = g_api_table.SQLNumParams(hstmt, pcpar);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLParamOptions(void* hstmt, uint64_t crow, uint64_t* pirow) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(crow);
        ORBIT_TRACK_PARAM(pirow);

        auto win32_impl_result = g_api_table.SQLParamOptions(hstmt, crow, pirow);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLPrimaryKeys(void* hstmt, uint8_t* szCatalogName, int16_t cchCatalogName, uint8_t* szSchemaName, int16_t cchSchemaName, uint8_t* szTableName, int16_t cchTableName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cchCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cchSchemaName);
        ORBIT_TRACK_PARAM(szTableName);
        ORBIT_TRACK_PARAM(cchTableName);

        auto win32_impl_result = g_api_table.SQLPrimaryKeys(hstmt, szCatalogName, cchCatalogName, szSchemaName, cchSchemaName, szTableName, cchTableName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLProcedureColumns(void* hstmt, uint8_t* szCatalogName, int16_t cchCatalogName, uint8_t* szSchemaName, int16_t cchSchemaName, uint8_t* szProcName, int16_t cchProcName, uint8_t* szColumnName, int16_t cchColumnName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cchCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cchSchemaName);
        ORBIT_TRACK_PARAM(szProcName);
        ORBIT_TRACK_PARAM(cchProcName);
        ORBIT_TRACK_PARAM(szColumnName);
        ORBIT_TRACK_PARAM(cchColumnName);

        auto win32_impl_result = g_api_table.SQLProcedureColumns(hstmt, szCatalogName, cchCatalogName, szSchemaName, cchSchemaName, szProcName, cchProcName, szColumnName, cchColumnName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLProcedures(void* hstmt, uint8_t* szCatalogName, int16_t cchCatalogName, uint8_t* szSchemaName, int16_t cchSchemaName, uint8_t* szProcName, int16_t cchProcName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cchCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cchSchemaName);
        ORBIT_TRACK_PARAM(szProcName);
        ORBIT_TRACK_PARAM(cchProcName);

        auto win32_impl_result = g_api_table.SQLProcedures(hstmt, szCatalogName, cchCatalogName, szSchemaName, cchSchemaName, szProcName, cchProcName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetPos(void* hstmt, uint64_t irow, uint16_t fOption, uint16_t fLock) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(irow);
        ORBIT_TRACK_PARAM(fOption);
        ORBIT_TRACK_PARAM(fLock);

        auto win32_impl_result = g_api_table.SQLSetPos(hstmt, irow, fOption, fLock);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLTablePrivileges(void* hstmt, uint8_t* szCatalogName, int16_t cchCatalogName, uint8_t* szSchemaName, int16_t cchSchemaName, uint8_t* szTableName, int16_t cchTableName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cchCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cchSchemaName);
        ORBIT_TRACK_PARAM(szTableName);
        ORBIT_TRACK_PARAM(cchTableName);

        auto win32_impl_result = g_api_table.SQLTablePrivileges(hstmt, szCatalogName, cchCatalogName, szSchemaName, cchSchemaName, szTableName, cchTableName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLDrivers(void* henv, uint16_t fDirection, uint8_t* szDriverDesc, int16_t cchDriverDescMax, int16_t* pcchDriverDesc, uint8_t* szDriverAttributes, int16_t cchDrvrAttrMax, int16_t* pcchDrvrAttr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(henv);
        ORBIT_TRACK_PARAM(fDirection);
        ORBIT_TRACK_PARAM(szDriverDesc);
        ORBIT_TRACK_PARAM(cchDriverDescMax);
        ORBIT_TRACK_PARAM(pcchDriverDesc);
        ORBIT_TRACK_PARAM(szDriverAttributes);
        ORBIT_TRACK_PARAM(cchDrvrAttrMax);
        ORBIT_TRACK_PARAM(pcchDrvrAttr);

        auto win32_impl_result = g_api_table.SQLDrivers(henv, fDirection, szDriverDesc, cchDriverDescMax, pcchDriverDesc, szDriverAttributes, cchDrvrAttrMax, pcchDrvrAttr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLBindParameter(void* hstmt, uint16_t ipar, int16_t fParamType, int16_t fCType, int16_t fSqlType, uint64_t cbColDef, int16_t ibScale, void* rgbValue, int64_t cbValueMax, int64_t* pcbValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(ipar);
        ORBIT_TRACK_PARAM(fParamType);
        ORBIT_TRACK_PARAM(fCType);
        ORBIT_TRACK_PARAM(fSqlType);
        ORBIT_TRACK_PARAM(cbColDef);
        ORBIT_TRACK_PARAM(ibScale);
        ORBIT_TRACK_PARAM(rgbValue);
        ORBIT_TRACK_PARAM(cbValueMax);
        ORBIT_TRACK_PARAM(pcbValue);

        auto win32_impl_result = g_api_table.SQLBindParameter(hstmt, ipar, fParamType, fCType, fSqlType, cbColDef, ibScale, rgbValue, cbValueMax, pcbValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLAllocHandleStd(int16_t fHandleType, void* hInput, void** phOutput) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(fHandleType);
        ORBIT_TRACK_PARAM(hInput);
        ORBIT_TRACK_PARAM(phOutput);

        auto win32_impl_result = g_api_table.SQLAllocHandleStd(fHandleType, hInput, phOutput);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetScrollOptions(void* hstmt, uint16_t fConcurrency, int64_t crowKeyset, uint16_t crowRowset) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(fConcurrency);
        ORBIT_TRACK_PARAM(crowKeyset);
        ORBIT_TRACK_PARAM(crowRowset);

        auto win32_impl_result = g_api_table.SQLSetScrollOptions(hstmt, fConcurrency, crowKeyset, crowRowset);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ODBCSetTryWaitValue(uint32_t dwValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwValue);

        auto win32_impl_result = g_api_table.ODBCSetTryWaitValue(dwValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_ODBCGetTryWaitValue() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.ODBCGetTryWaitValue();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLColAttributeW(void* hstmt, uint16_t iCol, uint16_t iField, void* pCharAttr, int16_t cbDescMax, int16_t* pcbCharAttr, int64_t* pNumAttr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(iCol);
        ORBIT_TRACK_PARAM(iField);
        ORBIT_TRACK_PARAM(pCharAttr);
        ORBIT_TRACK_PARAM(cbDescMax);
        ORBIT_TRACK_PARAM(pcbCharAttr);
        ORBIT_TRACK_PARAM(pNumAttr);

        auto win32_impl_result = g_api_table.SQLColAttributeW(hstmt, iCol, iField, pCharAttr, cbDescMax, pcbCharAttr, pNumAttr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLColAttributesW(void* hstmt, uint16_t icol, uint16_t fDescType, void* rgbDesc, int16_t cbDescMax, int16_t* pcbDesc, int64_t* pfDesc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(icol);
        ORBIT_TRACK_PARAM(fDescType);
        ORBIT_TRACK_PARAM(rgbDesc);
        ORBIT_TRACK_PARAM(cbDescMax);
        ORBIT_TRACK_PARAM(pcbDesc);
        ORBIT_TRACK_PARAM(pfDesc);

        auto win32_impl_result = g_api_table.SQLColAttributesW(hstmt, icol, fDescType, rgbDesc, cbDescMax, pcbDesc, pfDesc);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLConnectW(void* hdbc, uint16_t* szDSN, int16_t cchDSN, uint16_t* szUID, int16_t cchUID, uint16_t* szAuthStr, int16_t cchAuthStr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(szDSN);
        ORBIT_TRACK_PARAM(cchDSN);
        ORBIT_TRACK_PARAM(szUID);
        ORBIT_TRACK_PARAM(cchUID);
        ORBIT_TRACK_PARAM(szAuthStr);
        ORBIT_TRACK_PARAM(cchAuthStr);

        auto win32_impl_result = g_api_table.SQLConnectW(hdbc, szDSN, cchDSN, szUID, cchUID, szAuthStr, cchAuthStr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLDescribeColW(void* hstmt, uint16_t icol, uint16_t* szColName, int16_t cchColNameMax, int16_t* pcchColName, int16_t* pfSqlType, uint64_t* pcbColDef, int16_t* pibScale, int16_t* pfNullable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(icol);
        ORBIT_TRACK_PARAM(szColName);
        ORBIT_TRACK_PARAM(cchColNameMax);
        ORBIT_TRACK_PARAM(pcchColName);
        ORBIT_TRACK_PARAM(pfSqlType);
        ORBIT_TRACK_PARAM(pcbColDef);
        ORBIT_TRACK_PARAM(pibScale);
        ORBIT_TRACK_PARAM(pfNullable);

        auto win32_impl_result = g_api_table.SQLDescribeColW(hstmt, icol, szColName, cchColNameMax, pcchColName, pfSqlType, pcbColDef, pibScale, pfNullable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLErrorW(void* henv, void* hdbc, void* hstmt, uint16_t* wszSqlState, int32_t* pfNativeError, uint16_t* wszErrorMsg, int16_t cchErrorMsgMax, int16_t* pcchErrorMsg) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(henv);
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(wszSqlState);
        ORBIT_TRACK_PARAM(pfNativeError);
        ORBIT_TRACK_PARAM(wszErrorMsg);
        ORBIT_TRACK_PARAM(cchErrorMsgMax);
        ORBIT_TRACK_PARAM(pcchErrorMsg);

        auto win32_impl_result = g_api_table.SQLErrorW(henv, hdbc, hstmt, wszSqlState, pfNativeError, wszErrorMsg, cchErrorMsgMax, pcchErrorMsg);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLExecDirectW(void* hstmt, uint16_t* szSqlStr, int32_t TextLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szSqlStr);
        ORBIT_TRACK_PARAM(TextLength);

        auto win32_impl_result = g_api_table.SQLExecDirectW(hstmt, szSqlStr, TextLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetConnectAttrW(void* hdbc, int32_t fAttribute, void* rgbValue, int32_t cbValueMax, int32_t* pcbValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(fAttribute);
        ORBIT_TRACK_PARAM(rgbValue);
        ORBIT_TRACK_PARAM(cbValueMax);
        ORBIT_TRACK_PARAM(pcbValue);

        auto win32_impl_result = g_api_table.SQLGetConnectAttrW(hdbc, fAttribute, rgbValue, cbValueMax, pcbValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetCursorNameW(void* hstmt, uint16_t* szCursor, int16_t cchCursorMax, int16_t* pcchCursor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCursor);
        ORBIT_TRACK_PARAM(cchCursorMax);
        ORBIT_TRACK_PARAM(pcchCursor);

        auto win32_impl_result = g_api_table.SQLGetCursorNameW(hstmt, szCursor, cchCursorMax, pcchCursor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetDescFieldW(void* DescriptorHandle, int16_t RecNumber, int16_t FieldIdentifier, void* Value, int32_t BufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DescriptorHandle);
        ORBIT_TRACK_PARAM(RecNumber);
        ORBIT_TRACK_PARAM(FieldIdentifier);
        ORBIT_TRACK_PARAM(Value);
        ORBIT_TRACK_PARAM(BufferLength);

        auto win32_impl_result = g_api_table.SQLSetDescFieldW(DescriptorHandle, RecNumber, FieldIdentifier, Value, BufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetDescFieldW(void* hdesc, int16_t iRecord, int16_t iField, void* rgbValue, int32_t cbBufferLength, int32_t* StringLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdesc);
        ORBIT_TRACK_PARAM(iRecord);
        ORBIT_TRACK_PARAM(iField);
        ORBIT_TRACK_PARAM(rgbValue);
        ORBIT_TRACK_PARAM(cbBufferLength);
        ORBIT_TRACK_PARAM(StringLength);

        auto win32_impl_result = g_api_table.SQLGetDescFieldW(hdesc, iRecord, iField, rgbValue, cbBufferLength, StringLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetDescRecW(void* hdesc, int16_t iRecord, uint16_t* szName, int16_t cchNameMax, int16_t* pcchName, int16_t* pfType, int16_t* pfSubType, int64_t* pLength, int16_t* pPrecision, int16_t* pScale, int16_t* pNullable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdesc);
        ORBIT_TRACK_PARAM(iRecord);
        ORBIT_TRACK_PARAM(szName);
        ORBIT_TRACK_PARAM(cchNameMax);
        ORBIT_TRACK_PARAM(pcchName);
        ORBIT_TRACK_PARAM(pfType);
        ORBIT_TRACK_PARAM(pfSubType);
        ORBIT_TRACK_PARAM(pLength);
        ORBIT_TRACK_PARAM(pPrecision);
        ORBIT_TRACK_PARAM(pScale);
        ORBIT_TRACK_PARAM(pNullable);

        auto win32_impl_result = g_api_table.SQLGetDescRecW(hdesc, iRecord, szName, cchNameMax, pcchName, pfType, pfSubType, pLength, pPrecision, pScale, pNullable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetDiagFieldW(int16_t fHandleType, void* handle, int16_t iRecord, int16_t fDiagField, void* rgbDiagInfo, int16_t cbBufferLength, int16_t* pcbStringLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(fHandleType);
        ORBIT_TRACK_PARAM(handle);
        ORBIT_TRACK_PARAM(iRecord);
        ORBIT_TRACK_PARAM(fDiagField);
        ORBIT_TRACK_PARAM(rgbDiagInfo);
        ORBIT_TRACK_PARAM(cbBufferLength);
        ORBIT_TRACK_PARAM(pcbStringLength);

        auto win32_impl_result = g_api_table.SQLGetDiagFieldW(fHandleType, handle, iRecord, fDiagField, rgbDiagInfo, cbBufferLength, pcbStringLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetDiagRecW(int16_t fHandleType, void* handle, int16_t iRecord, uint16_t* szSqlState, int32_t* pfNativeError, uint16_t* szErrorMsg, int16_t cchErrorMsgMax, int16_t* pcchErrorMsg) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(fHandleType);
        ORBIT_TRACK_PARAM(handle);
        ORBIT_TRACK_PARAM(iRecord);
        ORBIT_TRACK_PARAM(szSqlState);
        ORBIT_TRACK_PARAM(pfNativeError);
        ORBIT_TRACK_PARAM(szErrorMsg);
        ORBIT_TRACK_PARAM(cchErrorMsgMax);
        ORBIT_TRACK_PARAM(pcchErrorMsg);

        auto win32_impl_result = g_api_table.SQLGetDiagRecW(fHandleType, handle, iRecord, szSqlState, pfNativeError, szErrorMsg, cchErrorMsgMax, pcchErrorMsg);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLPrepareW(void* hstmt, uint16_t* szSqlStr, int32_t cchSqlStr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szSqlStr);
        ORBIT_TRACK_PARAM(cchSqlStr);

        auto win32_impl_result = g_api_table.SQLPrepareW(hstmt, szSqlStr, cchSqlStr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetConnectAttrW(void* hdbc, int32_t fAttribute, void* rgbValue, int32_t cbValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(fAttribute);
        ORBIT_TRACK_PARAM(rgbValue);
        ORBIT_TRACK_PARAM(cbValue);

        auto win32_impl_result = g_api_table.SQLSetConnectAttrW(hdbc, fAttribute, rgbValue, cbValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetCursorNameW(void* hstmt, uint16_t* szCursor, int16_t cchCursor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCursor);
        ORBIT_TRACK_PARAM(cchCursor);

        auto win32_impl_result = g_api_table.SQLSetCursorNameW(hstmt, szCursor, cchCursor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLColumnsW(void* hstmt, uint16_t* szCatalogName, int16_t cchCatalogName, uint16_t* szSchemaName, int16_t cchSchemaName, uint16_t* szTableName, int16_t cchTableName, uint16_t* szColumnName, int16_t cchColumnName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cchCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cchSchemaName);
        ORBIT_TRACK_PARAM(szTableName);
        ORBIT_TRACK_PARAM(cchTableName);
        ORBIT_TRACK_PARAM(szColumnName);
        ORBIT_TRACK_PARAM(cchColumnName);

        auto win32_impl_result = g_api_table.SQLColumnsW(hstmt, szCatalogName, cchCatalogName, szSchemaName, cchSchemaName, szTableName, cchTableName, szColumnName, cchColumnName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetConnectOptionW(void* hdbc, uint16_t fOption, void* pvParam) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(fOption);
        ORBIT_TRACK_PARAM(pvParam);

        auto win32_impl_result = g_api_table.SQLGetConnectOptionW(hdbc, fOption, pvParam);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetInfoW(void* hdbc, uint16_t fInfoType, void* rgbInfoValue, int16_t cbInfoValueMax, int16_t* pcbInfoValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(fInfoType);
        ORBIT_TRACK_PARAM(rgbInfoValue);
        ORBIT_TRACK_PARAM(cbInfoValueMax);
        ORBIT_TRACK_PARAM(pcbInfoValue);

        auto win32_impl_result = g_api_table.SQLGetInfoW(hdbc, fInfoType, rgbInfoValue, cbInfoValueMax, pcbInfoValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetTypeInfoW(void* StatementHandle, int16_t DataType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(DataType);

        auto win32_impl_result = g_api_table.SQLGetTypeInfoW(StatementHandle, DataType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetConnectOptionW(void* hdbc, uint16_t fOption, uint64_t vParam) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(fOption);
        ORBIT_TRACK_PARAM(vParam);

        auto win32_impl_result = g_api_table.SQLSetConnectOptionW(hdbc, fOption, vParam);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSpecialColumnsW(void* hstmt, uint16_t fColType, uint16_t* szCatalogName, int16_t cchCatalogName, uint16_t* szSchemaName, int16_t cchSchemaName, uint16_t* szTableName, int16_t cchTableName, uint16_t fScope, uint16_t fNullable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(fColType);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cchCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cchSchemaName);
        ORBIT_TRACK_PARAM(szTableName);
        ORBIT_TRACK_PARAM(cchTableName);
        ORBIT_TRACK_PARAM(fScope);
        ORBIT_TRACK_PARAM(fNullable);

        auto win32_impl_result = g_api_table.SQLSpecialColumnsW(hstmt, fColType, szCatalogName, cchCatalogName, szSchemaName, cchSchemaName, szTableName, cchTableName, fScope, fNullable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLStatisticsW(void* hstmt, uint16_t* szCatalogName, int16_t cchCatalogName, uint16_t* szSchemaName, int16_t cchSchemaName, uint16_t* szTableName, int16_t cchTableName, uint16_t fUnique, uint16_t fAccuracy) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cchCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cchSchemaName);
        ORBIT_TRACK_PARAM(szTableName);
        ORBIT_TRACK_PARAM(cchTableName);
        ORBIT_TRACK_PARAM(fUnique);
        ORBIT_TRACK_PARAM(fAccuracy);

        auto win32_impl_result = g_api_table.SQLStatisticsW(hstmt, szCatalogName, cchCatalogName, szSchemaName, cchSchemaName, szTableName, cchTableName, fUnique, fAccuracy);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLTablesW(void* hstmt, uint16_t* szCatalogName, int16_t cchCatalogName, uint16_t* szSchemaName, int16_t cchSchemaName, uint16_t* szTableName, int16_t cchTableName, uint16_t* szTableType, int16_t cchTableType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cchCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cchSchemaName);
        ORBIT_TRACK_PARAM(szTableName);
        ORBIT_TRACK_PARAM(cchTableName);
        ORBIT_TRACK_PARAM(szTableType);
        ORBIT_TRACK_PARAM(cchTableType);

        auto win32_impl_result = g_api_table.SQLTablesW(hstmt, szCatalogName, cchCatalogName, szSchemaName, cchSchemaName, szTableName, cchTableName, szTableType, cchTableType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLDataSourcesW(void* henv, uint16_t fDirection, uint16_t* szDSN, int16_t cchDSNMax, int16_t* pcchDSN, uint16_t* wszDescription, int16_t cchDescriptionMax, int16_t* pcchDescription) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(henv);
        ORBIT_TRACK_PARAM(fDirection);
        ORBIT_TRACK_PARAM(szDSN);
        ORBIT_TRACK_PARAM(cchDSNMax);
        ORBIT_TRACK_PARAM(pcchDSN);
        ORBIT_TRACK_PARAM(wszDescription);
        ORBIT_TRACK_PARAM(cchDescriptionMax);
        ORBIT_TRACK_PARAM(pcchDescription);

        auto win32_impl_result = g_api_table.SQLDataSourcesW(henv, fDirection, szDSN, cchDSNMax, pcchDSN, wszDescription, cchDescriptionMax, pcchDescription);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLDriverConnectW(void* hdbc, intptr_t hwnd, uint16_t* szConnStrIn, int16_t cchConnStrIn, uint16_t* szConnStrOut, int16_t cchConnStrOutMax, int16_t* pcchConnStrOut, uint16_t fDriverCompletion) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(szConnStrIn);
        ORBIT_TRACK_PARAM(cchConnStrIn);
        ORBIT_TRACK_PARAM(szConnStrOut);
        ORBIT_TRACK_PARAM(cchConnStrOutMax);
        ORBIT_TRACK_PARAM(pcchConnStrOut);
        ORBIT_TRACK_PARAM(fDriverCompletion);

        auto win32_impl_result = g_api_table.SQLDriverConnectW(hdbc, hwnd, szConnStrIn, cchConnStrIn, szConnStrOut, cchConnStrOutMax, pcchConnStrOut, fDriverCompletion);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLBrowseConnectW(void* hdbc, uint16_t* szConnStrIn, int16_t cchConnStrIn, uint16_t* szConnStrOut, int16_t cchConnStrOutMax, int16_t* pcchConnStrOut) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(szConnStrIn);
        ORBIT_TRACK_PARAM(cchConnStrIn);
        ORBIT_TRACK_PARAM(szConnStrOut);
        ORBIT_TRACK_PARAM(cchConnStrOutMax);
        ORBIT_TRACK_PARAM(pcchConnStrOut);

        auto win32_impl_result = g_api_table.SQLBrowseConnectW(hdbc, szConnStrIn, cchConnStrIn, szConnStrOut, cchConnStrOutMax, pcchConnStrOut);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLColumnPrivilegesW(void* hstmt, uint16_t* szCatalogName, int16_t cchCatalogName, uint16_t* szSchemaName, int16_t cchSchemaName, uint16_t* szTableName, int16_t cchTableName, uint16_t* szColumnName, int16_t cchColumnName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cchCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cchSchemaName);
        ORBIT_TRACK_PARAM(szTableName);
        ORBIT_TRACK_PARAM(cchTableName);
        ORBIT_TRACK_PARAM(szColumnName);
        ORBIT_TRACK_PARAM(cchColumnName);

        auto win32_impl_result = g_api_table.SQLColumnPrivilegesW(hstmt, szCatalogName, cchCatalogName, szSchemaName, cchSchemaName, szTableName, cchTableName, szColumnName, cchColumnName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetStmtAttrW(void* hstmt, int32_t fAttribute, void* rgbValue, int32_t cbValueMax, int32_t* pcbValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(fAttribute);
        ORBIT_TRACK_PARAM(rgbValue);
        ORBIT_TRACK_PARAM(cbValueMax);
        ORBIT_TRACK_PARAM(pcbValue);

        auto win32_impl_result = g_api_table.SQLGetStmtAttrW(hstmt, fAttribute, rgbValue, cbValueMax, pcbValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetStmtAttrW(void* hstmt, int32_t fAttribute, void* rgbValue, int32_t cbValueMax) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(fAttribute);
        ORBIT_TRACK_PARAM(rgbValue);
        ORBIT_TRACK_PARAM(cbValueMax);

        auto win32_impl_result = g_api_table.SQLSetStmtAttrW(hstmt, fAttribute, rgbValue, cbValueMax);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLForeignKeysW(void* hstmt, uint16_t* szPkCatalogName, int16_t cchPkCatalogName, uint16_t* szPkSchemaName, int16_t cchPkSchemaName, uint16_t* szPkTableName, int16_t cchPkTableName, uint16_t* szFkCatalogName, int16_t cchFkCatalogName, uint16_t* szFkSchemaName, int16_t cchFkSchemaName, uint16_t* szFkTableName, int16_t cchFkTableName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szPkCatalogName);
        ORBIT_TRACK_PARAM(cchPkCatalogName);
        ORBIT_TRACK_PARAM(szPkSchemaName);
        ORBIT_TRACK_PARAM(cchPkSchemaName);
        ORBIT_TRACK_PARAM(szPkTableName);
        ORBIT_TRACK_PARAM(cchPkTableName);
        ORBIT_TRACK_PARAM(szFkCatalogName);
        ORBIT_TRACK_PARAM(cchFkCatalogName);
        ORBIT_TRACK_PARAM(szFkSchemaName);
        ORBIT_TRACK_PARAM(cchFkSchemaName);
        ORBIT_TRACK_PARAM(szFkTableName);
        ORBIT_TRACK_PARAM(cchFkTableName);

        auto win32_impl_result = g_api_table.SQLForeignKeysW(hstmt, szPkCatalogName, cchPkCatalogName, szPkSchemaName, cchPkSchemaName, szPkTableName, cchPkTableName, szFkCatalogName, cchFkCatalogName, szFkSchemaName, cchFkSchemaName, szFkTableName, cchFkTableName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLNativeSqlW(void* hdbc, uint16_t* szSqlStrIn, int32_t cchSqlStrIn, uint16_t* szSqlStr, int32_t cchSqlStrMax, int32_t* pcchSqlStr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(szSqlStrIn);
        ORBIT_TRACK_PARAM(cchSqlStrIn);
        ORBIT_TRACK_PARAM(szSqlStr);
        ORBIT_TRACK_PARAM(cchSqlStrMax);
        ORBIT_TRACK_PARAM(pcchSqlStr);

        auto win32_impl_result = g_api_table.SQLNativeSqlW(hdbc, szSqlStrIn, cchSqlStrIn, szSqlStr, cchSqlStrMax, pcchSqlStr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLPrimaryKeysW(void* hstmt, uint16_t* szCatalogName, int16_t cchCatalogName, uint16_t* szSchemaName, int16_t cchSchemaName, uint16_t* szTableName, int16_t cchTableName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cchCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cchSchemaName);
        ORBIT_TRACK_PARAM(szTableName);
        ORBIT_TRACK_PARAM(cchTableName);

        auto win32_impl_result = g_api_table.SQLPrimaryKeysW(hstmt, szCatalogName, cchCatalogName, szSchemaName, cchSchemaName, szTableName, cchTableName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLProcedureColumnsW(void* hstmt, uint16_t* szCatalogName, int16_t cchCatalogName, uint16_t* szSchemaName, int16_t cchSchemaName, uint16_t* szProcName, int16_t cchProcName, uint16_t* szColumnName, int16_t cchColumnName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cchCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cchSchemaName);
        ORBIT_TRACK_PARAM(szProcName);
        ORBIT_TRACK_PARAM(cchProcName);
        ORBIT_TRACK_PARAM(szColumnName);
        ORBIT_TRACK_PARAM(cchColumnName);

        auto win32_impl_result = g_api_table.SQLProcedureColumnsW(hstmt, szCatalogName, cchCatalogName, szSchemaName, cchSchemaName, szProcName, cchProcName, szColumnName, cchColumnName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLProceduresW(void* hstmt, uint16_t* szCatalogName, int16_t cchCatalogName, uint16_t* szSchemaName, int16_t cchSchemaName, uint16_t* szProcName, int16_t cchProcName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cchCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cchSchemaName);
        ORBIT_TRACK_PARAM(szProcName);
        ORBIT_TRACK_PARAM(cchProcName);

        auto win32_impl_result = g_api_table.SQLProceduresW(hstmt, szCatalogName, cchCatalogName, szSchemaName, cchSchemaName, szProcName, cchProcName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLTablePrivilegesW(void* hstmt, uint16_t* szCatalogName, int16_t cchCatalogName, uint16_t* szSchemaName, int16_t cchSchemaName, uint16_t* szTableName, int16_t cchTableName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cchCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cchSchemaName);
        ORBIT_TRACK_PARAM(szTableName);
        ORBIT_TRACK_PARAM(cchTableName);

        auto win32_impl_result = g_api_table.SQLTablePrivilegesW(hstmt, szCatalogName, cchCatalogName, szSchemaName, cchSchemaName, szTableName, cchTableName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLDriversW(void* henv, uint16_t fDirection, uint16_t* szDriverDesc, int16_t cchDriverDescMax, int16_t* pcchDriverDesc, uint16_t* szDriverAttributes, int16_t cchDrvrAttrMax, int16_t* pcchDrvrAttr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(henv);
        ORBIT_TRACK_PARAM(fDirection);
        ORBIT_TRACK_PARAM(szDriverDesc);
        ORBIT_TRACK_PARAM(cchDriverDescMax);
        ORBIT_TRACK_PARAM(pcchDriverDesc);
        ORBIT_TRACK_PARAM(szDriverAttributes);
        ORBIT_TRACK_PARAM(cchDrvrAttrMax);
        ORBIT_TRACK_PARAM(pcchDrvrAttr);

        auto win32_impl_result = g_api_table.SQLDriversW(henv, fDirection, szDriverDesc, cchDriverDescMax, pcchDriverDesc, szDriverAttributes, cchDrvrAttrMax, pcchDrvrAttr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLColAttributeA(void* hstmt, int16_t iCol, int16_t iField, void* pCharAttr, int16_t cbCharAttrMax, int16_t* pcbCharAttr, int64_t* pNumAttr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(iCol);
        ORBIT_TRACK_PARAM(iField);
        ORBIT_TRACK_PARAM(pCharAttr);
        ORBIT_TRACK_PARAM(cbCharAttrMax);
        ORBIT_TRACK_PARAM(pcbCharAttr);
        ORBIT_TRACK_PARAM(pNumAttr);

        auto win32_impl_result = g_api_table.SQLColAttributeA(hstmt, iCol, iField, pCharAttr, cbCharAttrMax, pcbCharAttr, pNumAttr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLColAttributesA(void* hstmt, uint16_t icol, uint16_t fDescType, void* rgbDesc, int16_t cbDescMax, int16_t* pcbDesc, int64_t* pfDesc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(icol);
        ORBIT_TRACK_PARAM(fDescType);
        ORBIT_TRACK_PARAM(rgbDesc);
        ORBIT_TRACK_PARAM(cbDescMax);
        ORBIT_TRACK_PARAM(pcbDesc);
        ORBIT_TRACK_PARAM(pfDesc);

        auto win32_impl_result = g_api_table.SQLColAttributesA(hstmt, icol, fDescType, rgbDesc, cbDescMax, pcbDesc, pfDesc);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLConnectA(void* hdbc, uint8_t* szDSN, int16_t cbDSN, uint8_t* szUID, int16_t cbUID, uint8_t* szAuthStr, int16_t cbAuthStr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(szDSN);
        ORBIT_TRACK_PARAM(cbDSN);
        ORBIT_TRACK_PARAM(szUID);
        ORBIT_TRACK_PARAM(cbUID);
        ORBIT_TRACK_PARAM(szAuthStr);
        ORBIT_TRACK_PARAM(cbAuthStr);

        auto win32_impl_result = g_api_table.SQLConnectA(hdbc, szDSN, cbDSN, szUID, cbUID, szAuthStr, cbAuthStr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLDescribeColA(void* hstmt, uint16_t icol, uint8_t* szColName, int16_t cbColNameMax, int16_t* pcbColName, int16_t* pfSqlType, uint64_t* pcbColDef, int16_t* pibScale, int16_t* pfNullable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(icol);
        ORBIT_TRACK_PARAM(szColName);
        ORBIT_TRACK_PARAM(cbColNameMax);
        ORBIT_TRACK_PARAM(pcbColName);
        ORBIT_TRACK_PARAM(pfSqlType);
        ORBIT_TRACK_PARAM(pcbColDef);
        ORBIT_TRACK_PARAM(pibScale);
        ORBIT_TRACK_PARAM(pfNullable);

        auto win32_impl_result = g_api_table.SQLDescribeColA(hstmt, icol, szColName, cbColNameMax, pcbColName, pfSqlType, pcbColDef, pibScale, pfNullable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLErrorA(void* henv, void* hdbc, void* hstmt, uint8_t* szSqlState, int32_t* pfNativeError, uint8_t* szErrorMsg, int16_t cbErrorMsgMax, int16_t* pcbErrorMsg) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(henv);
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szSqlState);
        ORBIT_TRACK_PARAM(pfNativeError);
        ORBIT_TRACK_PARAM(szErrorMsg);
        ORBIT_TRACK_PARAM(cbErrorMsgMax);
        ORBIT_TRACK_PARAM(pcbErrorMsg);

        auto win32_impl_result = g_api_table.SQLErrorA(henv, hdbc, hstmt, szSqlState, pfNativeError, szErrorMsg, cbErrorMsgMax, pcbErrorMsg);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLExecDirectA(void* hstmt, uint8_t* szSqlStr, int32_t cbSqlStr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szSqlStr);
        ORBIT_TRACK_PARAM(cbSqlStr);

        auto win32_impl_result = g_api_table.SQLExecDirectA(hstmt, szSqlStr, cbSqlStr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetConnectAttrA(void* hdbc, int32_t fAttribute, void* rgbValue, int32_t cbValueMax, int32_t* pcbValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(fAttribute);
        ORBIT_TRACK_PARAM(rgbValue);
        ORBIT_TRACK_PARAM(cbValueMax);
        ORBIT_TRACK_PARAM(pcbValue);

        auto win32_impl_result = g_api_table.SQLGetConnectAttrA(hdbc, fAttribute, rgbValue, cbValueMax, pcbValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetCursorNameA(void* hstmt, uint8_t* szCursor, int16_t cbCursorMax, int16_t* pcbCursor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCursor);
        ORBIT_TRACK_PARAM(cbCursorMax);
        ORBIT_TRACK_PARAM(pcbCursor);

        auto win32_impl_result = g_api_table.SQLGetCursorNameA(hstmt, szCursor, cbCursorMax, pcbCursor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetDescFieldA(void* hdesc, int16_t iRecord, int16_t iField, void* rgbValue, int32_t cbBufferLength, int32_t* StringLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdesc);
        ORBIT_TRACK_PARAM(iRecord);
        ORBIT_TRACK_PARAM(iField);
        ORBIT_TRACK_PARAM(rgbValue);
        ORBIT_TRACK_PARAM(cbBufferLength);
        ORBIT_TRACK_PARAM(StringLength);

        auto win32_impl_result = g_api_table.SQLGetDescFieldA(hdesc, iRecord, iField, rgbValue, cbBufferLength, StringLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetDescRecA(void* hdesc, int16_t iRecord, uint8_t* szName, int16_t cbNameMax, int16_t* pcbName, int16_t* pfType, int16_t* pfSubType, int64_t* pLength, int16_t* pPrecision, int16_t* pScale, int16_t* pNullable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdesc);
        ORBIT_TRACK_PARAM(iRecord);
        ORBIT_TRACK_PARAM(szName);
        ORBIT_TRACK_PARAM(cbNameMax);
        ORBIT_TRACK_PARAM(pcbName);
        ORBIT_TRACK_PARAM(pfType);
        ORBIT_TRACK_PARAM(pfSubType);
        ORBIT_TRACK_PARAM(pLength);
        ORBIT_TRACK_PARAM(pPrecision);
        ORBIT_TRACK_PARAM(pScale);
        ORBIT_TRACK_PARAM(pNullable);

        auto win32_impl_result = g_api_table.SQLGetDescRecA(hdesc, iRecord, szName, cbNameMax, pcbName, pfType, pfSubType, pLength, pPrecision, pScale, pNullable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetDiagFieldA(int16_t fHandleType, void* handle, int16_t iRecord, int16_t fDiagField, void* rgbDiagInfo, int16_t cbDiagInfoMax, int16_t* pcbDiagInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(fHandleType);
        ORBIT_TRACK_PARAM(handle);
        ORBIT_TRACK_PARAM(iRecord);
        ORBIT_TRACK_PARAM(fDiagField);
        ORBIT_TRACK_PARAM(rgbDiagInfo);
        ORBIT_TRACK_PARAM(cbDiagInfoMax);
        ORBIT_TRACK_PARAM(pcbDiagInfo);

        auto win32_impl_result = g_api_table.SQLGetDiagFieldA(fHandleType, handle, iRecord, fDiagField, rgbDiagInfo, cbDiagInfoMax, pcbDiagInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetDiagRecA(int16_t fHandleType, void* handle, int16_t iRecord, uint8_t* szSqlState, int32_t* pfNativeError, uint8_t* szErrorMsg, int16_t cbErrorMsgMax, int16_t* pcbErrorMsg) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(fHandleType);
        ORBIT_TRACK_PARAM(handle);
        ORBIT_TRACK_PARAM(iRecord);
        ORBIT_TRACK_PARAM(szSqlState);
        ORBIT_TRACK_PARAM(pfNativeError);
        ORBIT_TRACK_PARAM(szErrorMsg);
        ORBIT_TRACK_PARAM(cbErrorMsgMax);
        ORBIT_TRACK_PARAM(pcbErrorMsg);

        auto win32_impl_result = g_api_table.SQLGetDiagRecA(fHandleType, handle, iRecord, szSqlState, pfNativeError, szErrorMsg, cbErrorMsgMax, pcbErrorMsg);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetStmtAttrA(void* hstmt, int32_t fAttribute, void* rgbValue, int32_t cbValueMax, int32_t* pcbValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(fAttribute);
        ORBIT_TRACK_PARAM(rgbValue);
        ORBIT_TRACK_PARAM(cbValueMax);
        ORBIT_TRACK_PARAM(pcbValue);

        auto win32_impl_result = g_api_table.SQLGetStmtAttrA(hstmt, fAttribute, rgbValue, cbValueMax, pcbValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetTypeInfoA(void* StatementHandle, int16_t DataType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(StatementHandle);
        ORBIT_TRACK_PARAM(DataType);

        auto win32_impl_result = g_api_table.SQLGetTypeInfoA(StatementHandle, DataType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLPrepareA(void* hstmt, uint8_t* szSqlStr, int32_t cbSqlStr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szSqlStr);
        ORBIT_TRACK_PARAM(cbSqlStr);

        auto win32_impl_result = g_api_table.SQLPrepareA(hstmt, szSqlStr, cbSqlStr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetConnectAttrA(void* hdbc, int32_t fAttribute, void* rgbValue, int32_t cbValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(fAttribute);
        ORBIT_TRACK_PARAM(rgbValue);
        ORBIT_TRACK_PARAM(cbValue);

        auto win32_impl_result = g_api_table.SQLSetConnectAttrA(hdbc, fAttribute, rgbValue, cbValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetCursorNameA(void* hstmt, uint8_t* szCursor, int16_t cbCursor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCursor);
        ORBIT_TRACK_PARAM(cbCursor);

        auto win32_impl_result = g_api_table.SQLSetCursorNameA(hstmt, szCursor, cbCursor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLColumnsA(void* hstmt, uint8_t* szCatalogName, int16_t cbCatalogName, uint8_t* szSchemaName, int16_t cbSchemaName, uint8_t* szTableName, int16_t cbTableName, uint8_t* szColumnName, int16_t cbColumnName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cbCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cbSchemaName);
        ORBIT_TRACK_PARAM(szTableName);
        ORBIT_TRACK_PARAM(cbTableName);
        ORBIT_TRACK_PARAM(szColumnName);
        ORBIT_TRACK_PARAM(cbColumnName);

        auto win32_impl_result = g_api_table.SQLColumnsA(hstmt, szCatalogName, cbCatalogName, szSchemaName, cbSchemaName, szTableName, cbTableName, szColumnName, cbColumnName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetConnectOptionA(void* hdbc, uint16_t fOption, void* pvParam) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(fOption);
        ORBIT_TRACK_PARAM(pvParam);

        auto win32_impl_result = g_api_table.SQLGetConnectOptionA(hdbc, fOption, pvParam);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLGetInfoA(void* hdbc, uint16_t fInfoType, void* rgbInfoValue, int16_t cbInfoValueMax, int16_t* pcbInfoValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(fInfoType);
        ORBIT_TRACK_PARAM(rgbInfoValue);
        ORBIT_TRACK_PARAM(cbInfoValueMax);
        ORBIT_TRACK_PARAM(pcbInfoValue);

        auto win32_impl_result = g_api_table.SQLGetInfoA(hdbc, fInfoType, rgbInfoValue, cbInfoValueMax, pcbInfoValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSetConnectOptionA(void* hdbc, uint16_t fOption, uint64_t vParam) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(fOption);
        ORBIT_TRACK_PARAM(vParam);

        auto win32_impl_result = g_api_table.SQLSetConnectOptionA(hdbc, fOption, vParam);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLSpecialColumnsA(void* hstmt, uint16_t fColType, uint8_t* szCatalogName, int16_t cbCatalogName, uint8_t* szSchemaName, int16_t cbSchemaName, uint8_t* szTableName, int16_t cbTableName, uint16_t fScope, uint16_t fNullable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(fColType);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cbCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cbSchemaName);
        ORBIT_TRACK_PARAM(szTableName);
        ORBIT_TRACK_PARAM(cbTableName);
        ORBIT_TRACK_PARAM(fScope);
        ORBIT_TRACK_PARAM(fNullable);

        auto win32_impl_result = g_api_table.SQLSpecialColumnsA(hstmt, fColType, szCatalogName, cbCatalogName, szSchemaName, cbSchemaName, szTableName, cbTableName, fScope, fNullable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLStatisticsA(void* hstmt, uint8_t* szCatalogName, int16_t cbCatalogName, uint8_t* szSchemaName, int16_t cbSchemaName, uint8_t* szTableName, int16_t cbTableName, uint16_t fUnique, uint16_t fAccuracy) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cbCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cbSchemaName);
        ORBIT_TRACK_PARAM(szTableName);
        ORBIT_TRACK_PARAM(cbTableName);
        ORBIT_TRACK_PARAM(fUnique);
        ORBIT_TRACK_PARAM(fAccuracy);

        auto win32_impl_result = g_api_table.SQLStatisticsA(hstmt, szCatalogName, cbCatalogName, szSchemaName, cbSchemaName, szTableName, cbTableName, fUnique, fAccuracy);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLTablesA(void* hstmt, uint8_t* szCatalogName, int16_t cbCatalogName, uint8_t* szSchemaName, int16_t cbSchemaName, uint8_t* szTableName, int16_t cbTableName, uint8_t* szTableType, int16_t cbTableType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cbCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cbSchemaName);
        ORBIT_TRACK_PARAM(szTableName);
        ORBIT_TRACK_PARAM(cbTableName);
        ORBIT_TRACK_PARAM(szTableType);
        ORBIT_TRACK_PARAM(cbTableType);

        auto win32_impl_result = g_api_table.SQLTablesA(hstmt, szCatalogName, cbCatalogName, szSchemaName, cbSchemaName, szTableName, cbTableName, szTableType, cbTableType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLDataSourcesA(void* henv, uint16_t fDirection, uint8_t* szDSN, int16_t cbDSNMax, int16_t* pcbDSN, uint8_t* szDescription, int16_t cbDescriptionMax, int16_t* pcbDescription) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(henv);
        ORBIT_TRACK_PARAM(fDirection);
        ORBIT_TRACK_PARAM(szDSN);
        ORBIT_TRACK_PARAM(cbDSNMax);
        ORBIT_TRACK_PARAM(pcbDSN);
        ORBIT_TRACK_PARAM(szDescription);
        ORBIT_TRACK_PARAM(cbDescriptionMax);
        ORBIT_TRACK_PARAM(pcbDescription);

        auto win32_impl_result = g_api_table.SQLDataSourcesA(henv, fDirection, szDSN, cbDSNMax, pcbDSN, szDescription, cbDescriptionMax, pcbDescription);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLDriverConnectA(void* hdbc, intptr_t hwnd, uint8_t* szConnStrIn, int16_t cbConnStrIn, uint8_t* szConnStrOut, int16_t cbConnStrOutMax, int16_t* pcbConnStrOut, uint16_t fDriverCompletion) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(szConnStrIn);
        ORBIT_TRACK_PARAM(cbConnStrIn);
        ORBIT_TRACK_PARAM(szConnStrOut);
        ORBIT_TRACK_PARAM(cbConnStrOutMax);
        ORBIT_TRACK_PARAM(pcbConnStrOut);
        ORBIT_TRACK_PARAM(fDriverCompletion);

        auto win32_impl_result = g_api_table.SQLDriverConnectA(hdbc, hwnd, szConnStrIn, cbConnStrIn, szConnStrOut, cbConnStrOutMax, pcbConnStrOut, fDriverCompletion);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLBrowseConnectA(void* hdbc, uint8_t* szConnStrIn, int16_t cbConnStrIn, uint8_t* szConnStrOut, int16_t cbConnStrOutMax, int16_t* pcbConnStrOut) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(szConnStrIn);
        ORBIT_TRACK_PARAM(cbConnStrIn);
        ORBIT_TRACK_PARAM(szConnStrOut);
        ORBIT_TRACK_PARAM(cbConnStrOutMax);
        ORBIT_TRACK_PARAM(pcbConnStrOut);

        auto win32_impl_result = g_api_table.SQLBrowseConnectA(hdbc, szConnStrIn, cbConnStrIn, szConnStrOut, cbConnStrOutMax, pcbConnStrOut);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLColumnPrivilegesA(void* hstmt, uint8_t* szCatalogName, int16_t cbCatalogName, uint8_t* szSchemaName, int16_t cbSchemaName, uint8_t* szTableName, int16_t cbTableName, uint8_t* szColumnName, int16_t cbColumnName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cbCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cbSchemaName);
        ORBIT_TRACK_PARAM(szTableName);
        ORBIT_TRACK_PARAM(cbTableName);
        ORBIT_TRACK_PARAM(szColumnName);
        ORBIT_TRACK_PARAM(cbColumnName);

        auto win32_impl_result = g_api_table.SQLColumnPrivilegesA(hstmt, szCatalogName, cbCatalogName, szSchemaName, cbSchemaName, szTableName, cbTableName, szColumnName, cbColumnName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLForeignKeysA(void* hstmt, uint8_t* szPkCatalogName, int16_t cbPkCatalogName, uint8_t* szPkSchemaName, int16_t cbPkSchemaName, uint8_t* szPkTableName, int16_t cbPkTableName, uint8_t* szFkCatalogName, int16_t cbFkCatalogName, uint8_t* szFkSchemaName, int16_t cbFkSchemaName, uint8_t* szFkTableName, int16_t cbFkTableName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szPkCatalogName);
        ORBIT_TRACK_PARAM(cbPkCatalogName);
        ORBIT_TRACK_PARAM(szPkSchemaName);
        ORBIT_TRACK_PARAM(cbPkSchemaName);
        ORBIT_TRACK_PARAM(szPkTableName);
        ORBIT_TRACK_PARAM(cbPkTableName);
        ORBIT_TRACK_PARAM(szFkCatalogName);
        ORBIT_TRACK_PARAM(cbFkCatalogName);
        ORBIT_TRACK_PARAM(szFkSchemaName);
        ORBIT_TRACK_PARAM(cbFkSchemaName);
        ORBIT_TRACK_PARAM(szFkTableName);
        ORBIT_TRACK_PARAM(cbFkTableName);

        auto win32_impl_result = g_api_table.SQLForeignKeysA(hstmt, szPkCatalogName, cbPkCatalogName, szPkSchemaName, cbPkSchemaName, szPkTableName, cbPkTableName, szFkCatalogName, cbFkCatalogName, szFkSchemaName, cbFkSchemaName, szFkTableName, cbFkTableName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLNativeSqlA(void* hdbc, uint8_t* szSqlStrIn, int32_t cbSqlStrIn, uint8_t* szSqlStr, int32_t cbSqlStrMax, int32_t* pcbSqlStr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdbc);
        ORBIT_TRACK_PARAM(szSqlStrIn);
        ORBIT_TRACK_PARAM(cbSqlStrIn);
        ORBIT_TRACK_PARAM(szSqlStr);
        ORBIT_TRACK_PARAM(cbSqlStrMax);
        ORBIT_TRACK_PARAM(pcbSqlStr);

        auto win32_impl_result = g_api_table.SQLNativeSqlA(hdbc, szSqlStrIn, cbSqlStrIn, szSqlStr, cbSqlStrMax, pcbSqlStr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLPrimaryKeysA(void* hstmt, uint8_t* szCatalogName, int16_t cbCatalogName, uint8_t* szSchemaName, int16_t cbSchemaName, uint8_t* szTableName, int16_t cbTableName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cbCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cbSchemaName);
        ORBIT_TRACK_PARAM(szTableName);
        ORBIT_TRACK_PARAM(cbTableName);

        auto win32_impl_result = g_api_table.SQLPrimaryKeysA(hstmt, szCatalogName, cbCatalogName, szSchemaName, cbSchemaName, szTableName, cbTableName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLProcedureColumnsA(void* hstmt, uint8_t* szCatalogName, int16_t cbCatalogName, uint8_t* szSchemaName, int16_t cbSchemaName, uint8_t* szProcName, int16_t cbProcName, uint8_t* szColumnName, int16_t cbColumnName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cbCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cbSchemaName);
        ORBIT_TRACK_PARAM(szProcName);
        ORBIT_TRACK_PARAM(cbProcName);
        ORBIT_TRACK_PARAM(szColumnName);
        ORBIT_TRACK_PARAM(cbColumnName);

        auto win32_impl_result = g_api_table.SQLProcedureColumnsA(hstmt, szCatalogName, cbCatalogName, szSchemaName, cbSchemaName, szProcName, cbProcName, szColumnName, cbColumnName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLProceduresA(void* hstmt, uint8_t* szCatalogName, int16_t cbCatalogName, uint8_t* szSchemaName, int16_t cbSchemaName, uint8_t* szProcName, int16_t cbProcName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cbCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cbSchemaName);
        ORBIT_TRACK_PARAM(szProcName);
        ORBIT_TRACK_PARAM(cbProcName);

        auto win32_impl_result = g_api_table.SQLProceduresA(hstmt, szCatalogName, cbCatalogName, szSchemaName, cbSchemaName, szProcName, cbProcName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLTablePrivilegesA(void* hstmt, uint8_t* szCatalogName, int16_t cbCatalogName, uint8_t* szSchemaName, int16_t cbSchemaName, uint8_t* szTableName, int16_t cbTableName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hstmt);
        ORBIT_TRACK_PARAM(szCatalogName);
        ORBIT_TRACK_PARAM(cbCatalogName);
        ORBIT_TRACK_PARAM(szSchemaName);
        ORBIT_TRACK_PARAM(cbSchemaName);
        ORBIT_TRACK_PARAM(szTableName);
        ORBIT_TRACK_PARAM(cbTableName);

        auto win32_impl_result = g_api_table.SQLTablePrivilegesA(hstmt, szCatalogName, cbCatalogName, szSchemaName, cbSchemaName, szTableName, cbTableName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int16_t __stdcall ORBIT_IMPL_SQLDriversA(void* henv, uint16_t fDirection, uint8_t* szDriverDesc, int16_t cbDriverDescMax, int16_t* pcbDriverDesc, uint8_t* szDriverAttributes, int16_t cbDrvrAttrMax, int16_t* pcbDrvrAttr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(henv);
        ORBIT_TRACK_PARAM(fDirection);
        ORBIT_TRACK_PARAM(szDriverDesc);
        ORBIT_TRACK_PARAM(cbDriverDescMax);
        ORBIT_TRACK_PARAM(pcbDriverDesc);
        ORBIT_TRACK_PARAM(szDriverAttributes);
        ORBIT_TRACK_PARAM(cbDrvrAttrMax);
        ORBIT_TRACK_PARAM(pcbDrvrAttr);

        auto win32_impl_result = g_api_table.SQLDriversA(henv, fDirection, szDriverDesc, cbDriverDescMax, pcbDriverDesc, szDriverAttributes, cbDrvrAttrMax, pcbDrvrAttr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
