// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Graphics_Printing_PrintTicket_2_H
#define WIN32_Windows_Win32_Graphics_Printing_PrintTicket_2_H
#include "win32/Windows.Win32.Graphics.Printing.PrintTicket.h"
#include "win32/impl/Windows.Win32.Graphics.Printing.PrintTicket.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::Graphics::Printing::PrintTicket
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_PTQuerySchemaVersionSupport(win32::Windows::Win32::Foundation::PWSTR pszPrinterName, uint32_t* pMaxVersion) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPrinterName);
        ORBIT_TRACK_PARAM(pMaxVersion);

        auto win32_impl_result = g_api_table.PTQuerySchemaVersionSupport(pszPrinterName, pMaxVersion);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_PTOpenProvider(win32::Windows::Win32::Foundation::PWSTR pszPrinterName, uint32_t dwVersion, win32::Windows::Win32::Storage::Xps::HPTPROVIDER* phProvider) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPrinterName);
        ORBIT_TRACK_PARAM(dwVersion);
        ORBIT_TRACK_PARAM(phProvider);

        auto win32_impl_result = g_api_table.PTOpenProvider(pszPrinterName, dwVersion, phProvider);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_PTOpenProviderEx(win32::Windows::Win32::Foundation::PWSTR pszPrinterName, uint32_t dwMaxVersion, uint32_t dwPrefVersion, win32::Windows::Win32::Storage::Xps::HPTPROVIDER* phProvider, uint32_t* pUsedVersion) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPrinterName);
        ORBIT_TRACK_PARAM(dwMaxVersion);
        ORBIT_TRACK_PARAM(dwPrefVersion);
        ORBIT_TRACK_PARAM(phProvider);
        ORBIT_TRACK_PARAM(pUsedVersion);

        auto win32_impl_result = g_api_table.PTOpenProviderEx(pszPrinterName, dwMaxVersion, dwPrefVersion, phProvider, pUsedVersion);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_PTCloseProvider(win32::Windows::Win32::Storage::Xps::HPTPROVIDER hProvider) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProvider);

        auto win32_impl_result = g_api_table.PTCloseProvider(hProvider);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_PTReleaseMemory(void* pBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pBuffer);

        auto win32_impl_result = g_api_table.PTReleaseMemory(pBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_PTGetPrintCapabilities(win32::Windows::Win32::Storage::Xps::HPTPROVIDER hProvider, win32::Windows::Win32::System::Com::IStream* pPrintTicket, win32::Windows::Win32::System::Com::IStream* pCapabilities, win32::Windows::Win32::Foundation::BSTR* pbstrErrorMessage) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProvider);
        ORBIT_TRACK_PARAM(pPrintTicket);
        ORBIT_TRACK_PARAM(pCapabilities);
        ORBIT_TRACK_PARAM(pbstrErrorMessage);

        auto win32_impl_result = g_api_table.PTGetPrintCapabilities(hProvider, pPrintTicket, pCapabilities, pbstrErrorMessage);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_PTGetPrintDeviceCapabilities(win32::Windows::Win32::Storage::Xps::HPTPROVIDER hProvider, win32::Windows::Win32::System::Com::IStream* pPrintTicket, win32::Windows::Win32::System::Com::IStream* pDeviceCapabilities, win32::Windows::Win32::Foundation::BSTR* pbstrErrorMessage) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProvider);
        ORBIT_TRACK_PARAM(pPrintTicket);
        ORBIT_TRACK_PARAM(pDeviceCapabilities);
        ORBIT_TRACK_PARAM(pbstrErrorMessage);

        auto win32_impl_result = g_api_table.PTGetPrintDeviceCapabilities(hProvider, pPrintTicket, pDeviceCapabilities, pbstrErrorMessage);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_PTGetPrintDeviceResources(win32::Windows::Win32::Storage::Xps::HPTPROVIDER hProvider, win32::Windows::Win32::Foundation::PWSTR pszLocaleName, win32::Windows::Win32::System::Com::IStream* pPrintTicket, win32::Windows::Win32::System::Com::IStream* pDeviceResources, win32::Windows::Win32::Foundation::BSTR* pbstrErrorMessage) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProvider);
        ORBIT_TRACK_PARAM(pszLocaleName);
        ORBIT_TRACK_PARAM(pPrintTicket);
        ORBIT_TRACK_PARAM(pDeviceResources);
        ORBIT_TRACK_PARAM(pbstrErrorMessage);

        auto win32_impl_result = g_api_table.PTGetPrintDeviceResources(hProvider, pszLocaleName, pPrintTicket, pDeviceResources, pbstrErrorMessage);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_PTMergeAndValidatePrintTicket(win32::Windows::Win32::Storage::Xps::HPTPROVIDER hProvider, win32::Windows::Win32::System::Com::IStream* pBaseTicket, win32::Windows::Win32::System::Com::IStream* pDeltaTicket, win32::Windows::Win32::Graphics::Printing::PrintTicket::EPrintTicketScope scope, win32::Windows::Win32::System::Com::IStream* pResultTicket, win32::Windows::Win32::Foundation::BSTR* pbstrErrorMessage) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProvider);
        ORBIT_TRACK_PARAM(pBaseTicket);
        ORBIT_TRACK_PARAM(pDeltaTicket);
        ORBIT_TRACK_PARAM(scope);
        ORBIT_TRACK_PARAM(pResultTicket);
        ORBIT_TRACK_PARAM(pbstrErrorMessage);

        auto win32_impl_result = g_api_table.PTMergeAndValidatePrintTicket(hProvider, pBaseTicket, pDeltaTicket, scope, pResultTicket, pbstrErrorMessage);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_PTConvertPrintTicketToDevMode(win32::Windows::Win32::Storage::Xps::HPTPROVIDER hProvider, win32::Windows::Win32::System::Com::IStream* pPrintTicket, win32::Windows::Win32::Graphics::Printing::PrintTicket::EDefaultDevmodeType baseDevmodeType, win32::Windows::Win32::Graphics::Printing::PrintTicket::EPrintTicketScope scope, uint32_t* pcbDevmode, win32::Windows::Win32::Graphics::Gdi::DEVMODEA** ppDevmode, win32::Windows::Win32::Foundation::BSTR* pbstrErrorMessage) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProvider);
        ORBIT_TRACK_PARAM(pPrintTicket);
        ORBIT_TRACK_PARAM(baseDevmodeType);
        ORBIT_TRACK_PARAM(scope);
        ORBIT_TRACK_PARAM(pcbDevmode);
        ORBIT_TRACK_PARAM(ppDevmode);
        ORBIT_TRACK_PARAM(pbstrErrorMessage);

        auto win32_impl_result = g_api_table.PTConvertPrintTicketToDevMode(hProvider, pPrintTicket, baseDevmodeType, scope, pcbDevmode, ppDevmode, pbstrErrorMessage);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_PTConvertDevModeToPrintTicket(win32::Windows::Win32::Storage::Xps::HPTPROVIDER hProvider, uint32_t cbDevmode, win32::Windows::Win32::Graphics::Gdi::DEVMODEA* pDevmode, win32::Windows::Win32::Graphics::Printing::PrintTicket::EPrintTicketScope scope, win32::Windows::Win32::System::Com::IStream* pPrintTicket) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProvider);
        ORBIT_TRACK_PARAM(cbDevmode);
        ORBIT_TRACK_PARAM(pDevmode);
        ORBIT_TRACK_PARAM(scope);
        ORBIT_TRACK_PARAM(pPrintTicket);

        auto win32_impl_result = g_api_table.PTConvertDevModeToPrintTicket(hProvider, cbDevmode, pDevmode, scope, pPrintTicket);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
