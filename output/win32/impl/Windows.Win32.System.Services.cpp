// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_Services_2_H
#define WIN32_Windows_Win32_System_Services_2_H
#include "win32/Windows.Win32.System.Services.h"
#include "win32/impl/Windows.Win32.System.Services.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::System::Services
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetServiceBits(win32::Windows::Win32::System::Services::SERVICE_STATUS_HANDLE hServiceStatus, uint32_t dwServiceBits, win32::Windows::Win32::Foundation::BOOL bSetBitsOn, win32::Windows::Win32::Foundation::BOOL bUpdateImmediately) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hServiceStatus);
        ORBIT_TRACK_PARAM(dwServiceBits);
        ORBIT_TRACK_PARAM(bSetBitsOn);
        ORBIT_TRACK_PARAM(bUpdateImmediately);

        auto win32_impl_result = g_api_table.SetServiceBits(hServiceStatus, dwServiceBits, bSetBitsOn, bUpdateImmediately);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ChangeServiceConfigA(win32::Windows::Win32::Security::SC_HANDLE hService, uint32_t dwServiceType, win32::Windows::Win32::System::Services::SERVICE_START_TYPE dwStartType, win32::Windows::Win32::System::Services::SERVICE_ERROR dwErrorControl, win32::Windows::Win32::Foundation::PSTR lpBinaryPathName, win32::Windows::Win32::Foundation::PSTR lpLoadOrderGroup, uint32_t* lpdwTagId, win32::Windows::Win32::Foundation::PSTR lpDependencies, win32::Windows::Win32::Foundation::PSTR lpServiceStartName, win32::Windows::Win32::Foundation::PSTR lpPassword, win32::Windows::Win32::Foundation::PSTR lpDisplayName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(dwServiceType);
        ORBIT_TRACK_PARAM(dwStartType);
        ORBIT_TRACK_PARAM(dwErrorControl);
        ORBIT_TRACK_PARAM(lpBinaryPathName);
        ORBIT_TRACK_PARAM(lpLoadOrderGroup);
        ORBIT_TRACK_PARAM(lpdwTagId);
        ORBIT_TRACK_PARAM(lpDependencies);
        ORBIT_TRACK_PARAM(lpServiceStartName);
        ORBIT_TRACK_PARAM(lpPassword);
        ORBIT_TRACK_PARAM(lpDisplayName);

        auto win32_impl_result = g_api_table.ChangeServiceConfigA(hService, dwServiceType, dwStartType, dwErrorControl, lpBinaryPathName, lpLoadOrderGroup, lpdwTagId, lpDependencies, lpServiceStartName, lpPassword, lpDisplayName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ChangeServiceConfigW(win32::Windows::Win32::Security::SC_HANDLE hService, uint32_t dwServiceType, win32::Windows::Win32::System::Services::SERVICE_START_TYPE dwStartType, win32::Windows::Win32::System::Services::SERVICE_ERROR dwErrorControl, win32::Windows::Win32::Foundation::PWSTR lpBinaryPathName, win32::Windows::Win32::Foundation::PWSTR lpLoadOrderGroup, uint32_t* lpdwTagId, win32::Windows::Win32::Foundation::PWSTR lpDependencies, win32::Windows::Win32::Foundation::PWSTR lpServiceStartName, win32::Windows::Win32::Foundation::PWSTR lpPassword, win32::Windows::Win32::Foundation::PWSTR lpDisplayName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(dwServiceType);
        ORBIT_TRACK_PARAM(dwStartType);
        ORBIT_TRACK_PARAM(dwErrorControl);
        ORBIT_TRACK_PARAM(lpBinaryPathName);
        ORBIT_TRACK_PARAM(lpLoadOrderGroup);
        ORBIT_TRACK_PARAM(lpdwTagId);
        ORBIT_TRACK_PARAM(lpDependencies);
        ORBIT_TRACK_PARAM(lpServiceStartName);
        ORBIT_TRACK_PARAM(lpPassword);
        ORBIT_TRACK_PARAM(lpDisplayName);

        auto win32_impl_result = g_api_table.ChangeServiceConfigW(hService, dwServiceType, dwStartType, dwErrorControl, lpBinaryPathName, lpLoadOrderGroup, lpdwTagId, lpDependencies, lpServiceStartName, lpPassword, lpDisplayName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ChangeServiceConfig2A(win32::Windows::Win32::Security::SC_HANDLE hService, win32::Windows::Win32::System::Services::SERVICE_CONFIG dwInfoLevel, void* lpInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(dwInfoLevel);
        ORBIT_TRACK_PARAM(lpInfo);

        auto win32_impl_result = g_api_table.ChangeServiceConfig2A(hService, dwInfoLevel, lpInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ChangeServiceConfig2W(win32::Windows::Win32::Security::SC_HANDLE hService, win32::Windows::Win32::System::Services::SERVICE_CONFIG dwInfoLevel, void* lpInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(dwInfoLevel);
        ORBIT_TRACK_PARAM(lpInfo);

        auto win32_impl_result = g_api_table.ChangeServiceConfig2W(hService, dwInfoLevel, lpInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CloseServiceHandle(win32::Windows::Win32::Security::SC_HANDLE hSCObject) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSCObject);

        auto win32_impl_result = g_api_table.CloseServiceHandle(hSCObject);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ControlService(win32::Windows::Win32::Security::SC_HANDLE hService, uint32_t dwControl, win32::Windows::Win32::System::Services::SERVICE_STATUS* lpServiceStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(dwControl);
        ORBIT_TRACK_PARAM(lpServiceStatus);

        auto win32_impl_result = g_api_table.ControlService(hService, dwControl, lpServiceStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::SC_HANDLE __stdcall ORBIT_IMPL_CreateServiceA(win32::Windows::Win32::Security::SC_HANDLE hSCManager, win32::Windows::Win32::Foundation::PSTR lpServiceName, win32::Windows::Win32::Foundation::PSTR lpDisplayName, uint32_t dwDesiredAccess, win32::Windows::Win32::System::Services::ENUM_SERVICE_TYPE dwServiceType, win32::Windows::Win32::System::Services::SERVICE_START_TYPE dwStartType, win32::Windows::Win32::System::Services::SERVICE_ERROR dwErrorControl, win32::Windows::Win32::Foundation::PSTR lpBinaryPathName, win32::Windows::Win32::Foundation::PSTR lpLoadOrderGroup, uint32_t* lpdwTagId, win32::Windows::Win32::Foundation::PSTR lpDependencies, win32::Windows::Win32::Foundation::PSTR lpServiceStartName, win32::Windows::Win32::Foundation::PSTR lpPassword) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSCManager);
        ORBIT_TRACK_PARAM(lpServiceName);
        ORBIT_TRACK_PARAM(lpDisplayName);
        ORBIT_TRACK_PARAM(dwDesiredAccess);
        ORBIT_TRACK_PARAM(dwServiceType);
        ORBIT_TRACK_PARAM(dwStartType);
        ORBIT_TRACK_PARAM(dwErrorControl);
        ORBIT_TRACK_PARAM(lpBinaryPathName);
        ORBIT_TRACK_PARAM(lpLoadOrderGroup);
        ORBIT_TRACK_PARAM(lpdwTagId);
        ORBIT_TRACK_PARAM(lpDependencies);
        ORBIT_TRACK_PARAM(lpServiceStartName);
        ORBIT_TRACK_PARAM(lpPassword);

        auto win32_impl_result = g_api_table.CreateServiceA(hSCManager, lpServiceName, lpDisplayName, dwDesiredAccess, dwServiceType, dwStartType, dwErrorControl, lpBinaryPathName, lpLoadOrderGroup, lpdwTagId, lpDependencies, lpServiceStartName, lpPassword);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::SC_HANDLE __stdcall ORBIT_IMPL_CreateServiceW(win32::Windows::Win32::Security::SC_HANDLE hSCManager, win32::Windows::Win32::Foundation::PWSTR lpServiceName, win32::Windows::Win32::Foundation::PWSTR lpDisplayName, uint32_t dwDesiredAccess, win32::Windows::Win32::System::Services::ENUM_SERVICE_TYPE dwServiceType, win32::Windows::Win32::System::Services::SERVICE_START_TYPE dwStartType, win32::Windows::Win32::System::Services::SERVICE_ERROR dwErrorControl, win32::Windows::Win32::Foundation::PWSTR lpBinaryPathName, win32::Windows::Win32::Foundation::PWSTR lpLoadOrderGroup, uint32_t* lpdwTagId, win32::Windows::Win32::Foundation::PWSTR lpDependencies, win32::Windows::Win32::Foundation::PWSTR lpServiceStartName, win32::Windows::Win32::Foundation::PWSTR lpPassword) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSCManager);
        ORBIT_TRACK_PARAM(lpServiceName);
        ORBIT_TRACK_PARAM(lpDisplayName);
        ORBIT_TRACK_PARAM(dwDesiredAccess);
        ORBIT_TRACK_PARAM(dwServiceType);
        ORBIT_TRACK_PARAM(dwStartType);
        ORBIT_TRACK_PARAM(dwErrorControl);
        ORBIT_TRACK_PARAM(lpBinaryPathName);
        ORBIT_TRACK_PARAM(lpLoadOrderGroup);
        ORBIT_TRACK_PARAM(lpdwTagId);
        ORBIT_TRACK_PARAM(lpDependencies);
        ORBIT_TRACK_PARAM(lpServiceStartName);
        ORBIT_TRACK_PARAM(lpPassword);

        auto win32_impl_result = g_api_table.CreateServiceW(hSCManager, lpServiceName, lpDisplayName, dwDesiredAccess, dwServiceType, dwStartType, dwErrorControl, lpBinaryPathName, lpLoadOrderGroup, lpdwTagId, lpDependencies, lpServiceStartName, lpPassword);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DeleteService(win32::Windows::Win32::Security::SC_HANDLE hService) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);

        auto win32_impl_result = g_api_table.DeleteService(hService);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EnumDependentServicesA(win32::Windows::Win32::Security::SC_HANDLE hService, win32::Windows::Win32::System::Services::ENUM_SERVICE_STATE dwServiceState, win32::Windows::Win32::System::Services::ENUM_SERVICE_STATUSA* lpServices, uint32_t cbBufSize, uint32_t* pcbBytesNeeded, uint32_t* lpServicesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(dwServiceState);
        ORBIT_TRACK_PARAM(lpServices);
        ORBIT_TRACK_PARAM(cbBufSize);
        ORBIT_TRACK_PARAM(pcbBytesNeeded);
        ORBIT_TRACK_PARAM(lpServicesReturned);

        auto win32_impl_result = g_api_table.EnumDependentServicesA(hService, dwServiceState, lpServices, cbBufSize, pcbBytesNeeded, lpServicesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EnumDependentServicesW(win32::Windows::Win32::Security::SC_HANDLE hService, win32::Windows::Win32::System::Services::ENUM_SERVICE_STATE dwServiceState, win32::Windows::Win32::System::Services::ENUM_SERVICE_STATUSW* lpServices, uint32_t cbBufSize, uint32_t* pcbBytesNeeded, uint32_t* lpServicesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(dwServiceState);
        ORBIT_TRACK_PARAM(lpServices);
        ORBIT_TRACK_PARAM(cbBufSize);
        ORBIT_TRACK_PARAM(pcbBytesNeeded);
        ORBIT_TRACK_PARAM(lpServicesReturned);

        auto win32_impl_result = g_api_table.EnumDependentServicesW(hService, dwServiceState, lpServices, cbBufSize, pcbBytesNeeded, lpServicesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EnumServicesStatusA(win32::Windows::Win32::Security::SC_HANDLE hSCManager, win32::Windows::Win32::System::Services::ENUM_SERVICE_TYPE dwServiceType, win32::Windows::Win32::System::Services::ENUM_SERVICE_STATE dwServiceState, win32::Windows::Win32::System::Services::ENUM_SERVICE_STATUSA* lpServices, uint32_t cbBufSize, uint32_t* pcbBytesNeeded, uint32_t* lpServicesReturned, uint32_t* lpResumeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSCManager);
        ORBIT_TRACK_PARAM(dwServiceType);
        ORBIT_TRACK_PARAM(dwServiceState);
        ORBIT_TRACK_PARAM(lpServices);
        ORBIT_TRACK_PARAM(cbBufSize);
        ORBIT_TRACK_PARAM(pcbBytesNeeded);
        ORBIT_TRACK_PARAM(lpServicesReturned);
        ORBIT_TRACK_PARAM(lpResumeHandle);

        auto win32_impl_result = g_api_table.EnumServicesStatusA(hSCManager, dwServiceType, dwServiceState, lpServices, cbBufSize, pcbBytesNeeded, lpServicesReturned, lpResumeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EnumServicesStatusW(win32::Windows::Win32::Security::SC_HANDLE hSCManager, win32::Windows::Win32::System::Services::ENUM_SERVICE_TYPE dwServiceType, win32::Windows::Win32::System::Services::ENUM_SERVICE_STATE dwServiceState, win32::Windows::Win32::System::Services::ENUM_SERVICE_STATUSW* lpServices, uint32_t cbBufSize, uint32_t* pcbBytesNeeded, uint32_t* lpServicesReturned, uint32_t* lpResumeHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSCManager);
        ORBIT_TRACK_PARAM(dwServiceType);
        ORBIT_TRACK_PARAM(dwServiceState);
        ORBIT_TRACK_PARAM(lpServices);
        ORBIT_TRACK_PARAM(cbBufSize);
        ORBIT_TRACK_PARAM(pcbBytesNeeded);
        ORBIT_TRACK_PARAM(lpServicesReturned);
        ORBIT_TRACK_PARAM(lpResumeHandle);

        auto win32_impl_result = g_api_table.EnumServicesStatusW(hSCManager, dwServiceType, dwServiceState, lpServices, cbBufSize, pcbBytesNeeded, lpServicesReturned, lpResumeHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EnumServicesStatusExA(win32::Windows::Win32::Security::SC_HANDLE hSCManager, win32::Windows::Win32::System::Services::SC_ENUM_TYPE InfoLevel, win32::Windows::Win32::System::Services::ENUM_SERVICE_TYPE dwServiceType, win32::Windows::Win32::System::Services::ENUM_SERVICE_STATE dwServiceState, uint8_t* lpServices, uint32_t cbBufSize, uint32_t* pcbBytesNeeded, uint32_t* lpServicesReturned, uint32_t* lpResumeHandle, win32::Windows::Win32::Foundation::PSTR pszGroupName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSCManager);
        ORBIT_TRACK_PARAM(InfoLevel);
        ORBIT_TRACK_PARAM(dwServiceType);
        ORBIT_TRACK_PARAM(dwServiceState);
        ORBIT_TRACK_PARAM(lpServices);
        ORBIT_TRACK_PARAM(cbBufSize);
        ORBIT_TRACK_PARAM(pcbBytesNeeded);
        ORBIT_TRACK_PARAM(lpServicesReturned);
        ORBIT_TRACK_PARAM(lpResumeHandle);
        ORBIT_TRACK_PARAM(pszGroupName);

        auto win32_impl_result = g_api_table.EnumServicesStatusExA(hSCManager, InfoLevel, dwServiceType, dwServiceState, lpServices, cbBufSize, pcbBytesNeeded, lpServicesReturned, lpResumeHandle, pszGroupName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EnumServicesStatusExW(win32::Windows::Win32::Security::SC_HANDLE hSCManager, win32::Windows::Win32::System::Services::SC_ENUM_TYPE InfoLevel, win32::Windows::Win32::System::Services::ENUM_SERVICE_TYPE dwServiceType, win32::Windows::Win32::System::Services::ENUM_SERVICE_STATE dwServiceState, uint8_t* lpServices, uint32_t cbBufSize, uint32_t* pcbBytesNeeded, uint32_t* lpServicesReturned, uint32_t* lpResumeHandle, win32::Windows::Win32::Foundation::PWSTR pszGroupName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSCManager);
        ORBIT_TRACK_PARAM(InfoLevel);
        ORBIT_TRACK_PARAM(dwServiceType);
        ORBIT_TRACK_PARAM(dwServiceState);
        ORBIT_TRACK_PARAM(lpServices);
        ORBIT_TRACK_PARAM(cbBufSize);
        ORBIT_TRACK_PARAM(pcbBytesNeeded);
        ORBIT_TRACK_PARAM(lpServicesReturned);
        ORBIT_TRACK_PARAM(lpResumeHandle);
        ORBIT_TRACK_PARAM(pszGroupName);

        auto win32_impl_result = g_api_table.EnumServicesStatusExW(hSCManager, InfoLevel, dwServiceType, dwServiceState, lpServices, cbBufSize, pcbBytesNeeded, lpServicesReturned, lpResumeHandle, pszGroupName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetServiceKeyNameA(win32::Windows::Win32::Security::SC_HANDLE hSCManager, win32::Windows::Win32::Foundation::PSTR lpDisplayName, win32::Windows::Win32::Foundation::PSTR lpServiceName, uint32_t* lpcchBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSCManager);
        ORBIT_TRACK_PARAM(lpDisplayName);
        ORBIT_TRACK_PARAM(lpServiceName);
        ORBIT_TRACK_PARAM(lpcchBuffer);

        auto win32_impl_result = g_api_table.GetServiceKeyNameA(hSCManager, lpDisplayName, lpServiceName, lpcchBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetServiceKeyNameW(win32::Windows::Win32::Security::SC_HANDLE hSCManager, win32::Windows::Win32::Foundation::PWSTR lpDisplayName, win32::Windows::Win32::Foundation::PWSTR lpServiceName, uint32_t* lpcchBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSCManager);
        ORBIT_TRACK_PARAM(lpDisplayName);
        ORBIT_TRACK_PARAM(lpServiceName);
        ORBIT_TRACK_PARAM(lpcchBuffer);

        auto win32_impl_result = g_api_table.GetServiceKeyNameW(hSCManager, lpDisplayName, lpServiceName, lpcchBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetServiceDisplayNameA(win32::Windows::Win32::Security::SC_HANDLE hSCManager, win32::Windows::Win32::Foundation::PSTR lpServiceName, win32::Windows::Win32::Foundation::PSTR lpDisplayName, uint32_t* lpcchBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSCManager);
        ORBIT_TRACK_PARAM(lpServiceName);
        ORBIT_TRACK_PARAM(lpDisplayName);
        ORBIT_TRACK_PARAM(lpcchBuffer);

        auto win32_impl_result = g_api_table.GetServiceDisplayNameA(hSCManager, lpServiceName, lpDisplayName, lpcchBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetServiceDisplayNameW(win32::Windows::Win32::Security::SC_HANDLE hSCManager, win32::Windows::Win32::Foundation::PWSTR lpServiceName, win32::Windows::Win32::Foundation::PWSTR lpDisplayName, uint32_t* lpcchBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSCManager);
        ORBIT_TRACK_PARAM(lpServiceName);
        ORBIT_TRACK_PARAM(lpDisplayName);
        ORBIT_TRACK_PARAM(lpcchBuffer);

        auto win32_impl_result = g_api_table.GetServiceDisplayNameW(hSCManager, lpServiceName, lpDisplayName, lpcchBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_LockServiceDatabase(win32::Windows::Win32::Security::SC_HANDLE hSCManager) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSCManager);

        auto win32_impl_result = g_api_table.LockServiceDatabase(hSCManager);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_NotifyBootConfigStatus(win32::Windows::Win32::Foundation::BOOL BootAcceptable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(BootAcceptable);

        auto win32_impl_result = g_api_table.NotifyBootConfigStatus(BootAcceptable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::SC_HANDLE __stdcall ORBIT_IMPL_OpenSCManagerA(win32::Windows::Win32::Foundation::PSTR lpMachineName, win32::Windows::Win32::Foundation::PSTR lpDatabaseName, uint32_t dwDesiredAccess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpMachineName);
        ORBIT_TRACK_PARAM(lpDatabaseName);
        ORBIT_TRACK_PARAM(dwDesiredAccess);

        auto win32_impl_result = g_api_table.OpenSCManagerA(lpMachineName, lpDatabaseName, dwDesiredAccess);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::SC_HANDLE __stdcall ORBIT_IMPL_OpenSCManagerW(win32::Windows::Win32::Foundation::PWSTR lpMachineName, win32::Windows::Win32::Foundation::PWSTR lpDatabaseName, uint32_t dwDesiredAccess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpMachineName);
        ORBIT_TRACK_PARAM(lpDatabaseName);
        ORBIT_TRACK_PARAM(dwDesiredAccess);

        auto win32_impl_result = g_api_table.OpenSCManagerW(lpMachineName, lpDatabaseName, dwDesiredAccess);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::SC_HANDLE __stdcall ORBIT_IMPL_OpenServiceA(win32::Windows::Win32::Security::SC_HANDLE hSCManager, win32::Windows::Win32::Foundation::PSTR lpServiceName, uint32_t dwDesiredAccess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSCManager);
        ORBIT_TRACK_PARAM(lpServiceName);
        ORBIT_TRACK_PARAM(dwDesiredAccess);

        auto win32_impl_result = g_api_table.OpenServiceA(hSCManager, lpServiceName, dwDesiredAccess);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::SC_HANDLE __stdcall ORBIT_IMPL_OpenServiceW(win32::Windows::Win32::Security::SC_HANDLE hSCManager, win32::Windows::Win32::Foundation::PWSTR lpServiceName, uint32_t dwDesiredAccess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSCManager);
        ORBIT_TRACK_PARAM(lpServiceName);
        ORBIT_TRACK_PARAM(dwDesiredAccess);

        auto win32_impl_result = g_api_table.OpenServiceW(hSCManager, lpServiceName, dwDesiredAccess);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryServiceConfigA(win32::Windows::Win32::Security::SC_HANDLE hService, win32::Windows::Win32::System::Services::QUERY_SERVICE_CONFIGA* lpServiceConfig, uint32_t cbBufSize, uint32_t* pcbBytesNeeded) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(lpServiceConfig);
        ORBIT_TRACK_PARAM(cbBufSize);
        ORBIT_TRACK_PARAM(pcbBytesNeeded);

        auto win32_impl_result = g_api_table.QueryServiceConfigA(hService, lpServiceConfig, cbBufSize, pcbBytesNeeded);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryServiceConfigW(win32::Windows::Win32::Security::SC_HANDLE hService, win32::Windows::Win32::System::Services::QUERY_SERVICE_CONFIGW* lpServiceConfig, uint32_t cbBufSize, uint32_t* pcbBytesNeeded) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(lpServiceConfig);
        ORBIT_TRACK_PARAM(cbBufSize);
        ORBIT_TRACK_PARAM(pcbBytesNeeded);

        auto win32_impl_result = g_api_table.QueryServiceConfigW(hService, lpServiceConfig, cbBufSize, pcbBytesNeeded);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryServiceConfig2A(win32::Windows::Win32::Security::SC_HANDLE hService, win32::Windows::Win32::System::Services::SERVICE_CONFIG dwInfoLevel, uint8_t* lpBuffer, uint32_t cbBufSize, uint32_t* pcbBytesNeeded) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(dwInfoLevel);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(cbBufSize);
        ORBIT_TRACK_PARAM(pcbBytesNeeded);

        auto win32_impl_result = g_api_table.QueryServiceConfig2A(hService, dwInfoLevel, lpBuffer, cbBufSize, pcbBytesNeeded);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryServiceConfig2W(win32::Windows::Win32::Security::SC_HANDLE hService, win32::Windows::Win32::System::Services::SERVICE_CONFIG dwInfoLevel, uint8_t* lpBuffer, uint32_t cbBufSize, uint32_t* pcbBytesNeeded) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(dwInfoLevel);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(cbBufSize);
        ORBIT_TRACK_PARAM(pcbBytesNeeded);

        auto win32_impl_result = g_api_table.QueryServiceConfig2W(hService, dwInfoLevel, lpBuffer, cbBufSize, pcbBytesNeeded);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryServiceLockStatusA(win32::Windows::Win32::Security::SC_HANDLE hSCManager, win32::Windows::Win32::System::Services::QUERY_SERVICE_LOCK_STATUSA* lpLockStatus, uint32_t cbBufSize, uint32_t* pcbBytesNeeded) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSCManager);
        ORBIT_TRACK_PARAM(lpLockStatus);
        ORBIT_TRACK_PARAM(cbBufSize);
        ORBIT_TRACK_PARAM(pcbBytesNeeded);

        auto win32_impl_result = g_api_table.QueryServiceLockStatusA(hSCManager, lpLockStatus, cbBufSize, pcbBytesNeeded);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryServiceLockStatusW(win32::Windows::Win32::Security::SC_HANDLE hSCManager, win32::Windows::Win32::System::Services::QUERY_SERVICE_LOCK_STATUSW* lpLockStatus, uint32_t cbBufSize, uint32_t* pcbBytesNeeded) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSCManager);
        ORBIT_TRACK_PARAM(lpLockStatus);
        ORBIT_TRACK_PARAM(cbBufSize);
        ORBIT_TRACK_PARAM(pcbBytesNeeded);

        auto win32_impl_result = g_api_table.QueryServiceLockStatusW(hSCManager, lpLockStatus, cbBufSize, pcbBytesNeeded);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryServiceObjectSecurity(win32::Windows::Win32::Security::SC_HANDLE hService, uint32_t dwSecurityInformation, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* lpSecurityDescriptor, uint32_t cbBufSize, uint32_t* pcbBytesNeeded) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(dwSecurityInformation);
        ORBIT_TRACK_PARAM(lpSecurityDescriptor);
        ORBIT_TRACK_PARAM(cbBufSize);
        ORBIT_TRACK_PARAM(pcbBytesNeeded);

        auto win32_impl_result = g_api_table.QueryServiceObjectSecurity(hService, dwSecurityInformation, lpSecurityDescriptor, cbBufSize, pcbBytesNeeded);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryServiceStatus(win32::Windows::Win32::Security::SC_HANDLE hService, win32::Windows::Win32::System::Services::SERVICE_STATUS* lpServiceStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(lpServiceStatus);

        auto win32_impl_result = g_api_table.QueryServiceStatus(hService, lpServiceStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryServiceStatusEx(win32::Windows::Win32::Security::SC_HANDLE hService, win32::Windows::Win32::System::Services::SC_STATUS_TYPE InfoLevel, uint8_t* lpBuffer, uint32_t cbBufSize, uint32_t* pcbBytesNeeded) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(InfoLevel);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(cbBufSize);
        ORBIT_TRACK_PARAM(pcbBytesNeeded);

        auto win32_impl_result = g_api_table.QueryServiceStatusEx(hService, InfoLevel, lpBuffer, cbBufSize, pcbBytesNeeded);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Services::SERVICE_STATUS_HANDLE __stdcall ORBIT_IMPL_RegisterServiceCtrlHandlerA(win32::Windows::Win32::Foundation::PSTR lpServiceName, win32::Windows::Win32::System::Services::LPHANDLER_FUNCTION* lpHandlerProc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpServiceName);
        ORBIT_TRACK_PARAM(lpHandlerProc);

        auto win32_impl_result = g_api_table.RegisterServiceCtrlHandlerA(lpServiceName, lpHandlerProc);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Services::SERVICE_STATUS_HANDLE __stdcall ORBIT_IMPL_RegisterServiceCtrlHandlerW(win32::Windows::Win32::Foundation::PWSTR lpServiceName, win32::Windows::Win32::System::Services::LPHANDLER_FUNCTION* lpHandlerProc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpServiceName);
        ORBIT_TRACK_PARAM(lpHandlerProc);

        auto win32_impl_result = g_api_table.RegisterServiceCtrlHandlerW(lpServiceName, lpHandlerProc);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Services::SERVICE_STATUS_HANDLE __stdcall ORBIT_IMPL_RegisterServiceCtrlHandlerExA(win32::Windows::Win32::Foundation::PSTR lpServiceName, win32::Windows::Win32::System::Services::LPHANDLER_FUNCTION_EX* lpHandlerProc, void* lpContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpServiceName);
        ORBIT_TRACK_PARAM(lpHandlerProc);
        ORBIT_TRACK_PARAM(lpContext);

        auto win32_impl_result = g_api_table.RegisterServiceCtrlHandlerExA(lpServiceName, lpHandlerProc, lpContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Services::SERVICE_STATUS_HANDLE __stdcall ORBIT_IMPL_RegisterServiceCtrlHandlerExW(win32::Windows::Win32::Foundation::PWSTR lpServiceName, win32::Windows::Win32::System::Services::LPHANDLER_FUNCTION_EX* lpHandlerProc, void* lpContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpServiceName);
        ORBIT_TRACK_PARAM(lpHandlerProc);
        ORBIT_TRACK_PARAM(lpContext);

        auto win32_impl_result = g_api_table.RegisterServiceCtrlHandlerExW(lpServiceName, lpHandlerProc, lpContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetServiceObjectSecurity(win32::Windows::Win32::Security::SC_HANDLE hService, win32::Windows::Win32::Security::OBJECT_SECURITY_INFORMATION dwSecurityInformation, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* lpSecurityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(dwSecurityInformation);
        ORBIT_TRACK_PARAM(lpSecurityDescriptor);

        auto win32_impl_result = g_api_table.SetServiceObjectSecurity(hService, dwSecurityInformation, lpSecurityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetServiceStatus(win32::Windows::Win32::System::Services::SERVICE_STATUS_HANDLE hServiceStatus, win32::Windows::Win32::System::Services::SERVICE_STATUS* lpServiceStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hServiceStatus);
        ORBIT_TRACK_PARAM(lpServiceStatus);

        auto win32_impl_result = g_api_table.SetServiceStatus(hServiceStatus, lpServiceStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_StartServiceCtrlDispatcherA(win32::Windows::Win32::System::Services::SERVICE_TABLE_ENTRYA* lpServiceStartTable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpServiceStartTable);

        auto win32_impl_result = g_api_table.StartServiceCtrlDispatcherA(lpServiceStartTable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_StartServiceCtrlDispatcherW(win32::Windows::Win32::System::Services::SERVICE_TABLE_ENTRYW* lpServiceStartTable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpServiceStartTable);

        auto win32_impl_result = g_api_table.StartServiceCtrlDispatcherW(lpServiceStartTable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_StartServiceA(win32::Windows::Win32::Security::SC_HANDLE hService, uint32_t dwNumServiceArgs, win32::Windows::Win32::Foundation::PSTR* lpServiceArgVectors) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(dwNumServiceArgs);
        ORBIT_TRACK_PARAM(lpServiceArgVectors);

        auto win32_impl_result = g_api_table.StartServiceA(hService, dwNumServiceArgs, lpServiceArgVectors);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_StartServiceW(win32::Windows::Win32::Security::SC_HANDLE hService, uint32_t dwNumServiceArgs, win32::Windows::Win32::Foundation::PWSTR* lpServiceArgVectors) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(dwNumServiceArgs);
        ORBIT_TRACK_PARAM(lpServiceArgVectors);

        auto win32_impl_result = g_api_table.StartServiceW(hService, dwNumServiceArgs, lpServiceArgVectors);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UnlockServiceDatabase(void* ScLock) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ScLock);

        auto win32_impl_result = g_api_table.UnlockServiceDatabase(ScLock);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NotifyServiceStatusChangeA(win32::Windows::Win32::Security::SC_HANDLE hService, win32::Windows::Win32::System::Services::SERVICE_NOTIFY dwNotifyMask, win32::Windows::Win32::System::Services::SERVICE_NOTIFY_2A* pNotifyBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(dwNotifyMask);
        ORBIT_TRACK_PARAM(pNotifyBuffer);

        auto win32_impl_result = g_api_table.NotifyServiceStatusChangeA(hService, dwNotifyMask, pNotifyBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NotifyServiceStatusChangeW(win32::Windows::Win32::Security::SC_HANDLE hService, win32::Windows::Win32::System::Services::SERVICE_NOTIFY dwNotifyMask, win32::Windows::Win32::System::Services::SERVICE_NOTIFY_2W* pNotifyBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(dwNotifyMask);
        ORBIT_TRACK_PARAM(pNotifyBuffer);

        auto win32_impl_result = g_api_table.NotifyServiceStatusChangeW(hService, dwNotifyMask, pNotifyBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ControlServiceExA(win32::Windows::Win32::Security::SC_HANDLE hService, uint32_t dwControl, uint32_t dwInfoLevel, void* pControlParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(dwControl);
        ORBIT_TRACK_PARAM(dwInfoLevel);
        ORBIT_TRACK_PARAM(pControlParams);

        auto win32_impl_result = g_api_table.ControlServiceExA(hService, dwControl, dwInfoLevel, pControlParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ControlServiceExW(win32::Windows::Win32::Security::SC_HANDLE hService, uint32_t dwControl, uint32_t dwInfoLevel, void* pControlParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(dwControl);
        ORBIT_TRACK_PARAM(dwInfoLevel);
        ORBIT_TRACK_PARAM(pControlParams);

        auto win32_impl_result = g_api_table.ControlServiceExW(hService, dwControl, dwInfoLevel, pControlParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryServiceDynamicInformation(win32::Windows::Win32::System::Services::SERVICE_STATUS_HANDLE hServiceStatus, uint32_t dwInfoLevel, void** ppDynamicInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hServiceStatus);
        ORBIT_TRACK_PARAM(dwInfoLevel);
        ORBIT_TRACK_PARAM(ppDynamicInfo);

        auto win32_impl_result = g_api_table.QueryServiceDynamicInformation(hServiceStatus, dwInfoLevel, ppDynamicInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WaitServiceState(win32::Windows::Win32::Security::SC_HANDLE hService, uint32_t dwNotify, uint32_t dwTimeout, win32::Windows::Win32::Foundation::HANDLE hCancelEvent) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hService);
        ORBIT_TRACK_PARAM(dwNotify);
        ORBIT_TRACK_PARAM(dwTimeout);
        ORBIT_TRACK_PARAM(hCancelEvent);

        auto win32_impl_result = g_api_table.WaitServiceState(hService, dwNotify, dwTimeout, hCancelEvent);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetServiceRegistryStateKey(win32::Windows::Win32::System::Services::SERVICE_STATUS_HANDLE ServiceStatusHandle, win32::Windows::Win32::System::Services::SERVICE_REGISTRY_STATE_TYPE StateType, uint32_t AccessMask, win32::Windows::Win32::System::Registry::HKEY* ServiceStateKey) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ServiceStatusHandle);
        ORBIT_TRACK_PARAM(StateType);
        ORBIT_TRACK_PARAM(AccessMask);
        ORBIT_TRACK_PARAM(ServiceStateKey);

        auto win32_impl_result = g_api_table.GetServiceRegistryStateKey(ServiceStatusHandle, StateType, AccessMask, ServiceStateKey);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetServiceDirectory(win32::Windows::Win32::System::Services::SERVICE_STATUS_HANDLE hServiceStatus, win32::Windows::Win32::System::Services::SERVICE_DIRECTORY_TYPE eDirectoryType, win32::Windows::Win32::Foundation::PWSTR lpPathBuffer, uint32_t cchPathBufferLength, uint32_t* lpcchRequiredBufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hServiceStatus);
        ORBIT_TRACK_PARAM(eDirectoryType);
        ORBIT_TRACK_PARAM(lpPathBuffer);
        ORBIT_TRACK_PARAM(cchPathBufferLength);
        ORBIT_TRACK_PARAM(lpcchRequiredBufferLength);

        auto win32_impl_result = g_api_table.GetServiceDirectory(hServiceStatus, eDirectoryType, lpPathBuffer, cchPathBufferLength, lpcchRequiredBufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetSharedServiceRegistryStateKey(win32::Windows::Win32::Security::SC_HANDLE ServiceHandle, win32::Windows::Win32::System::Services::SERVICE_SHARED_REGISTRY_STATE_TYPE StateType, uint32_t AccessMask, win32::Windows::Win32::System::Registry::HKEY* ServiceStateKey) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ServiceHandle);
        ORBIT_TRACK_PARAM(StateType);
        ORBIT_TRACK_PARAM(AccessMask);
        ORBIT_TRACK_PARAM(ServiceStateKey);

        auto win32_impl_result = g_api_table.GetSharedServiceRegistryStateKey(ServiceHandle, StateType, AccessMask, ServiceStateKey);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetSharedServiceDirectory(win32::Windows::Win32::Security::SC_HANDLE ServiceHandle, win32::Windows::Win32::System::Services::SERVICE_SHARED_DIRECTORY_TYPE DirectoryType, win32::Windows::Win32::Foundation::PWSTR PathBuffer, uint32_t PathBufferLength, uint32_t* RequiredBufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ServiceHandle);
        ORBIT_TRACK_PARAM(DirectoryType);
        ORBIT_TRACK_PARAM(PathBuffer);
        ORBIT_TRACK_PARAM(PathBufferLength);
        ORBIT_TRACK_PARAM(RequiredBufferLength);

        auto win32_impl_result = g_api_table.GetSharedServiceDirectory(ServiceHandle, DirectoryType, PathBuffer, PathBufferLength, RequiredBufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
