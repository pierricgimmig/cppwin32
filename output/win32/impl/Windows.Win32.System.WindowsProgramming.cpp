// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_WindowsProgramming_2_H
#define WIN32_Windows_Win32_System_WindowsProgramming_2_H
#include "win32/Windows.Win32.System.WindowsProgramming.h"
#include "win32/impl/Windows.Win32.System.WindowsProgramming.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::System::WindowsProgramming
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsApiSetImplemented(win32::Windows::Win32::Foundation::PSTR Contract) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Contract);

        auto win32_impl_result = g_api_table.IsApiSetImplemented(Contract);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryThreadCycleTime(win32::Windows::Win32::Foundation::HANDLE ThreadHandle, uint64_t* CycleTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ThreadHandle);
        ORBIT_TRACK_PARAM(CycleTime);

        auto win32_impl_result = g_api_table.QueryThreadCycleTime(ThreadHandle, CycleTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryProcessCycleTime(win32::Windows::Win32::Foundation::HANDLE ProcessHandle, uint64_t* CycleTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ProcessHandle);
        ORBIT_TRACK_PARAM(CycleTime);

        auto win32_impl_result = g_api_table.QueryProcessCycleTime(ProcessHandle, CycleTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryIdleProcessorCycleTime(uint32_t* BufferLength, uint64_t* ProcessorIdleCycleTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(ProcessorIdleCycleTime);

        auto win32_impl_result = g_api_table.QueryIdleProcessorCycleTime(BufferLength, ProcessorIdleCycleTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryIdleProcessorCycleTimeEx(uint16_t Group, uint32_t* BufferLength, uint64_t* ProcessorIdleCycleTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Group);
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(ProcessorIdleCycleTime);

        auto win32_impl_result = g_api_table.QueryIdleProcessorCycleTimeEx(Group, BufferLength, ProcessorIdleCycleTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_QueryInterruptTimePrecise(uint64_t* lpInterruptTimePrecise) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpInterruptTimePrecise);

        g_api_table.QueryInterruptTimePrecise(lpInterruptTimePrecise);
        
    }

    void __stdcall ORBIT_IMPL_QueryUnbiasedInterruptTimePrecise(uint64_t* lpUnbiasedInterruptTimePrecise) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpUnbiasedInterruptTimePrecise);

        g_api_table.QueryUnbiasedInterruptTimePrecise(lpUnbiasedInterruptTimePrecise);
        
    }

    void __stdcall ORBIT_IMPL_QueryInterruptTime(uint64_t* lpInterruptTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpInterruptTime);

        g_api_table.QueryInterruptTime(lpInterruptTime);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryUnbiasedInterruptTime(uint64_t* UnbiasedTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(UnbiasedTime);

        auto win32_impl_result = g_api_table.QueryUnbiasedInterruptTime(UnbiasedTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_QueryAuxiliaryCounterFrequency(uint64_t* lpAuxiliaryCounterFrequency) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAuxiliaryCounterFrequency);

        auto win32_impl_result = g_api_table.QueryAuxiliaryCounterFrequency(lpAuxiliaryCounterFrequency);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ConvertAuxiliaryCounterToPerformanceCounter(uint64_t ullAuxiliaryCounterValue, uint64_t* lpPerformanceCounterValue, uint64_t* lpConversionError) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ullAuxiliaryCounterValue);
        ORBIT_TRACK_PARAM(lpPerformanceCounterValue);
        ORBIT_TRACK_PARAM(lpConversionError);

        auto win32_impl_result = g_api_table.ConvertAuxiliaryCounterToPerformanceCounter(ullAuxiliaryCounterValue, lpPerformanceCounterValue, lpConversionError);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ConvertPerformanceCounterToAuxiliaryCounter(uint64_t ullPerformanceCounterValue, uint64_t* lpAuxiliaryCounterValue, uint64_t* lpConversionError) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ullPerformanceCounterValue);
        ORBIT_TRACK_PARAM(lpAuxiliaryCounterValue);
        ORBIT_TRACK_PARAM(lpConversionError);

        auto win32_impl_result = g_api_table.ConvertPerformanceCounterToAuxiliaryCounter(ullPerformanceCounterValue, lpAuxiliaryCounterValue, lpConversionError);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    size_t __stdcall ORBIT_IMPL_GlobalCompact(uint32_t dwMinFree) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwMinFree);

        auto win32_impl_result = g_api_table.GlobalCompact(dwMinFree);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_GlobalFix(intptr_t hMem) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMem);

        g_api_table.GlobalFix(hMem);
        
    }

    void __stdcall ORBIT_IMPL_GlobalUnfix(intptr_t hMem) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMem);

        g_api_table.GlobalUnfix(hMem);
        
    }

    void* __stdcall ORBIT_IMPL_GlobalWire(intptr_t hMem) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMem);

        auto win32_impl_result = g_api_table.GlobalWire(hMem);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GlobalUnWire(intptr_t hMem) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMem);

        auto win32_impl_result = g_api_table.GlobalUnWire(hMem);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    size_t __stdcall ORBIT_IMPL_LocalShrink(intptr_t hMem, uint32_t cbNewSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMem);
        ORBIT_TRACK_PARAM(cbNewSize);

        auto win32_impl_result = g_api_table.LocalShrink(hMem, cbNewSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    size_t __stdcall ORBIT_IMPL_LocalCompact(uint32_t uMinFree) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(uMinFree);

        auto win32_impl_result = g_api_table.LocalCompact(uMinFree);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetEnvironmentStringsA(win32::Windows::Win32::Foundation::PSTR NewEnvironment) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NewEnvironment);

        auto win32_impl_result = g_api_table.SetEnvironmentStringsA(NewEnvironment);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetHandleCount(uint32_t uNumber) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(uNumber);

        auto win32_impl_result = g_api_table.SetHandleCount(uNumber);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RequestDeviceWakeup(win32::Windows::Win32::Foundation::HANDLE hDevice) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDevice);

        auto win32_impl_result = g_api_table.RequestDeviceWakeup(hDevice);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CancelDeviceWakeupRequest(win32::Windows::Win32::Foundation::HANDLE hDevice) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDevice);

        auto win32_impl_result = g_api_table.CancelDeviceWakeupRequest(hDevice);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetMessageWaitingIndicator(win32::Windows::Win32::Foundation::HANDLE hMsgIndicator, uint32_t ulMsgCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMsgIndicator);
        ORBIT_TRACK_PARAM(ulMsgCount);

        auto win32_impl_result = g_api_table.SetMessageWaitingIndicator(hMsgIndicator, ulMsgCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_MulDiv(int32_t nNumber, int32_t nNumerator, int32_t nDenominator) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(nNumber);
        ORBIT_TRACK_PARAM(nNumerator);
        ORBIT_TRACK_PARAM(nDenominator);

        auto win32_impl_result = g_api_table.MulDiv(nNumber, nNumerator, nDenominator);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetSystemRegistryQuota(uint32_t* pdwQuotaAllowed, uint32_t* pdwQuotaUsed) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdwQuotaAllowed);
        ORBIT_TRACK_PARAM(pdwQuotaUsed);

        auto win32_impl_result = g_api_table.GetSystemRegistryQuota(pdwQuotaAllowed, pdwQuotaUsed);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_FileTimeToDosDateTime(win32::Windows::Win32::Foundation::FILETIME* lpFileTime, uint16_t* lpFatDate, uint16_t* lpFatTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpFileTime);
        ORBIT_TRACK_PARAM(lpFatDate);
        ORBIT_TRACK_PARAM(lpFatTime);

        auto win32_impl_result = g_api_table.FileTimeToDosDateTime(lpFileTime, lpFatDate, lpFatTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DosDateTimeToFileTime(uint16_t wFatDate, uint16_t wFatTime, win32::Windows::Win32::Foundation::FILETIME* lpFileTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(wFatDate);
        ORBIT_TRACK_PARAM(wFatTime);
        ORBIT_TRACK_PARAM(lpFileTime);

        auto win32_impl_result = g_api_table.DosDateTimeToFileTime(wFatDate, wFatTime, lpFileTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL__lopen(win32::Windows::Win32::Foundation::PSTR lpPathName, int32_t iReadWrite) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpPathName);
        ORBIT_TRACK_PARAM(iReadWrite);

        auto win32_impl_result = g_api_table._lopen(lpPathName, iReadWrite);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL__lcreat(win32::Windows::Win32::Foundation::PSTR lpPathName, int32_t iAttribute) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpPathName);
        ORBIT_TRACK_PARAM(iAttribute);

        auto win32_impl_result = g_api_table._lcreat(lpPathName, iAttribute);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL__lread(int32_t hFile, void* lpBuffer, uint32_t uBytes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hFile);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(uBytes);

        auto win32_impl_result = g_api_table._lread(hFile, lpBuffer, uBytes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL__lwrite(int32_t hFile, win32::Windows::Win32::Foundation::PSTR lpBuffer, uint32_t uBytes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hFile);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(uBytes);

        auto win32_impl_result = g_api_table._lwrite(hFile, lpBuffer, uBytes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL__hread(int32_t hFile, void* lpBuffer, int32_t lBytes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hFile);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(lBytes);

        auto win32_impl_result = g_api_table._hread(hFile, lpBuffer, lBytes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL__hwrite(int32_t hFile, win32::Windows::Win32::Foundation::PSTR lpBuffer, int32_t lBytes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hFile);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(lBytes);

        auto win32_impl_result = g_api_table._hwrite(hFile, lpBuffer, lBytes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL__lclose(int32_t hFile) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hFile);

        auto win32_impl_result = g_api_table._lclose(hFile);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL__llseek(int32_t hFile, int32_t lOffset, int32_t iOrigin) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hFile);
        ORBIT_TRACK_PARAM(lOffset);
        ORBIT_TRACK_PARAM(iOrigin);

        auto win32_impl_result = g_api_table._llseek(hFile, lOffset, iOrigin);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SignalObjectAndWait(win32::Windows::Win32::Foundation::HANDLE hObjectToSignal, win32::Windows::Win32::Foundation::HANDLE hObjectToWaitOn, uint32_t dwMilliseconds, win32::Windows::Win32::Foundation::BOOL bAlertable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hObjectToSignal);
        ORBIT_TRACK_PARAM(hObjectToWaitOn);
        ORBIT_TRACK_PARAM(dwMilliseconds);
        ORBIT_TRACK_PARAM(bAlertable);

        auto win32_impl_result = g_api_table.SignalObjectAndWait(hObjectToSignal, hObjectToWaitOn, dwMilliseconds, bAlertable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_OpenMutexA(uint32_t dwDesiredAccess, win32::Windows::Win32::Foundation::BOOL bInheritHandle, win32::Windows::Win32::Foundation::PSTR lpName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDesiredAccess);
        ORBIT_TRACK_PARAM(bInheritHandle);
        ORBIT_TRACK_PARAM(lpName);

        auto win32_impl_result = g_api_table.OpenMutexA(dwDesiredAccess, bInheritHandle, lpName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_OpenSemaphoreA(uint32_t dwDesiredAccess, win32::Windows::Win32::Foundation::BOOL bInheritHandle, win32::Windows::Win32::Foundation::PSTR lpName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDesiredAccess);
        ORBIT_TRACK_PARAM(bInheritHandle);
        ORBIT_TRACK_PARAM(lpName);

        auto win32_impl_result = g_api_table.OpenSemaphoreA(dwDesiredAccess, bInheritHandle, lpName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_CreateWaitableTimerA(win32::Windows::Win32::Security::SECURITY_ATTRIBUTES* lpTimerAttributes, win32::Windows::Win32::Foundation::BOOL bManualReset, win32::Windows::Win32::Foundation::PSTR lpTimerName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpTimerAttributes);
        ORBIT_TRACK_PARAM(bManualReset);
        ORBIT_TRACK_PARAM(lpTimerName);

        auto win32_impl_result = g_api_table.CreateWaitableTimerA(lpTimerAttributes, bManualReset, lpTimerName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_OpenWaitableTimerA(uint32_t dwDesiredAccess, win32::Windows::Win32::Foundation::BOOL bInheritHandle, win32::Windows::Win32::Foundation::PSTR lpTimerName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDesiredAccess);
        ORBIT_TRACK_PARAM(bInheritHandle);
        ORBIT_TRACK_PARAM(lpTimerName);

        auto win32_impl_result = g_api_table.OpenWaitableTimerA(dwDesiredAccess, bInheritHandle, lpTimerName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_CreateWaitableTimerExA(win32::Windows::Win32::Security::SECURITY_ATTRIBUTES* lpTimerAttributes, win32::Windows::Win32::Foundation::PSTR lpTimerName, uint32_t dwFlags, uint32_t dwDesiredAccess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpTimerAttributes);
        ORBIT_TRACK_PARAM(lpTimerName);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(dwDesiredAccess);

        auto win32_impl_result = g_api_table.CreateWaitableTimerExA(lpTimerAttributes, lpTimerName, dwFlags, dwDesiredAccess);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_GetStartupInfoA(win32::Windows::Win32::System::Threading::STARTUPINFOA* lpStartupInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpStartupInfo);

        g_api_table.GetStartupInfoA(lpStartupInfo);
        
    }

    uint32_t __stdcall ORBIT_IMPL_GetFirmwareEnvironmentVariableA(win32::Windows::Win32::Foundation::PSTR lpName, win32::Windows::Win32::Foundation::PSTR lpGuid, void* pBuffer, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(lpGuid);
        ORBIT_TRACK_PARAM(pBuffer);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.GetFirmwareEnvironmentVariableA(lpName, lpGuid, pBuffer, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetFirmwareEnvironmentVariableW(win32::Windows::Win32::Foundation::PWSTR lpName, win32::Windows::Win32::Foundation::PWSTR lpGuid, void* pBuffer, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(lpGuid);
        ORBIT_TRACK_PARAM(pBuffer);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.GetFirmwareEnvironmentVariableW(lpName, lpGuid, pBuffer, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetFirmwareEnvironmentVariableExA(win32::Windows::Win32::Foundation::PSTR lpName, win32::Windows::Win32::Foundation::PSTR lpGuid, void* pBuffer, uint32_t nSize, uint32_t* pdwAttribubutes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(lpGuid);
        ORBIT_TRACK_PARAM(pBuffer);
        ORBIT_TRACK_PARAM(nSize);
        ORBIT_TRACK_PARAM(pdwAttribubutes);

        auto win32_impl_result = g_api_table.GetFirmwareEnvironmentVariableExA(lpName, lpGuid, pBuffer, nSize, pdwAttribubutes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetFirmwareEnvironmentVariableExW(win32::Windows::Win32::Foundation::PWSTR lpName, win32::Windows::Win32::Foundation::PWSTR lpGuid, void* pBuffer, uint32_t nSize, uint32_t* pdwAttribubutes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(lpGuid);
        ORBIT_TRACK_PARAM(pBuffer);
        ORBIT_TRACK_PARAM(nSize);
        ORBIT_TRACK_PARAM(pdwAttribubutes);

        auto win32_impl_result = g_api_table.GetFirmwareEnvironmentVariableExW(lpName, lpGuid, pBuffer, nSize, pdwAttribubutes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetFirmwareEnvironmentVariableA(win32::Windows::Win32::Foundation::PSTR lpName, win32::Windows::Win32::Foundation::PSTR lpGuid, void* pValue, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(lpGuid);
        ORBIT_TRACK_PARAM(pValue);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.SetFirmwareEnvironmentVariableA(lpName, lpGuid, pValue, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetFirmwareEnvironmentVariableW(win32::Windows::Win32::Foundation::PWSTR lpName, win32::Windows::Win32::Foundation::PWSTR lpGuid, void* pValue, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(lpGuid);
        ORBIT_TRACK_PARAM(pValue);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.SetFirmwareEnvironmentVariableW(lpName, lpGuid, pValue, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetFirmwareEnvironmentVariableExA(win32::Windows::Win32::Foundation::PSTR lpName, win32::Windows::Win32::Foundation::PSTR lpGuid, void* pValue, uint32_t nSize, uint32_t dwAttributes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(lpGuid);
        ORBIT_TRACK_PARAM(pValue);
        ORBIT_TRACK_PARAM(nSize);
        ORBIT_TRACK_PARAM(dwAttributes);

        auto win32_impl_result = g_api_table.SetFirmwareEnvironmentVariableExA(lpName, lpGuid, pValue, nSize, dwAttributes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetFirmwareEnvironmentVariableExW(win32::Windows::Win32::Foundation::PWSTR lpName, win32::Windows::Win32::Foundation::PWSTR lpGuid, void* pValue, uint32_t nSize, uint32_t dwAttributes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(lpGuid);
        ORBIT_TRACK_PARAM(pValue);
        ORBIT_TRACK_PARAM(nSize);
        ORBIT_TRACK_PARAM(dwAttributes);

        auto win32_impl_result = g_api_table.SetFirmwareEnvironmentVariableExW(lpName, lpGuid, pValue, nSize, dwAttributes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsNativeVhdBoot(win32::Windows::Win32::Foundation::BOOL* NativeVhdBoot) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NativeVhdBoot);

        auto win32_impl_result = g_api_table.IsNativeVhdBoot(NativeVhdBoot);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetProfileIntA(win32::Windows::Win32::Foundation::PSTR lpAppName, win32::Windows::Win32::Foundation::PSTR lpKeyName, int32_t nDefault) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpKeyName);
        ORBIT_TRACK_PARAM(nDefault);

        auto win32_impl_result = g_api_table.GetProfileIntA(lpAppName, lpKeyName, nDefault);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetProfileIntW(win32::Windows::Win32::Foundation::PWSTR lpAppName, win32::Windows::Win32::Foundation::PWSTR lpKeyName, int32_t nDefault) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpKeyName);
        ORBIT_TRACK_PARAM(nDefault);

        auto win32_impl_result = g_api_table.GetProfileIntW(lpAppName, lpKeyName, nDefault);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetProfileStringA(win32::Windows::Win32::Foundation::PSTR lpAppName, win32::Windows::Win32::Foundation::PSTR lpKeyName, win32::Windows::Win32::Foundation::PSTR lpDefault, win32::Windows::Win32::Foundation::PSTR lpReturnedString, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpKeyName);
        ORBIT_TRACK_PARAM(lpDefault);
        ORBIT_TRACK_PARAM(lpReturnedString);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.GetProfileStringA(lpAppName, lpKeyName, lpDefault, lpReturnedString, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetProfileStringW(win32::Windows::Win32::Foundation::PWSTR lpAppName, win32::Windows::Win32::Foundation::PWSTR lpKeyName, win32::Windows::Win32::Foundation::PWSTR lpDefault, win32::Windows::Win32::Foundation::PWSTR lpReturnedString, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpKeyName);
        ORBIT_TRACK_PARAM(lpDefault);
        ORBIT_TRACK_PARAM(lpReturnedString);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.GetProfileStringW(lpAppName, lpKeyName, lpDefault, lpReturnedString, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WriteProfileStringA(win32::Windows::Win32::Foundation::PSTR lpAppName, win32::Windows::Win32::Foundation::PSTR lpKeyName, win32::Windows::Win32::Foundation::PSTR lpString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpKeyName);
        ORBIT_TRACK_PARAM(lpString);

        auto win32_impl_result = g_api_table.WriteProfileStringA(lpAppName, lpKeyName, lpString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WriteProfileStringW(win32::Windows::Win32::Foundation::PWSTR lpAppName, win32::Windows::Win32::Foundation::PWSTR lpKeyName, win32::Windows::Win32::Foundation::PWSTR lpString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpKeyName);
        ORBIT_TRACK_PARAM(lpString);

        auto win32_impl_result = g_api_table.WriteProfileStringW(lpAppName, lpKeyName, lpString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetProfileSectionA(win32::Windows::Win32::Foundation::PSTR lpAppName, win32::Windows::Win32::Foundation::PSTR lpReturnedString, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpReturnedString);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.GetProfileSectionA(lpAppName, lpReturnedString, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetProfileSectionW(win32::Windows::Win32::Foundation::PWSTR lpAppName, win32::Windows::Win32::Foundation::PWSTR lpReturnedString, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpReturnedString);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.GetProfileSectionW(lpAppName, lpReturnedString, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WriteProfileSectionA(win32::Windows::Win32::Foundation::PSTR lpAppName, win32::Windows::Win32::Foundation::PSTR lpString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpString);

        auto win32_impl_result = g_api_table.WriteProfileSectionA(lpAppName, lpString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WriteProfileSectionW(win32::Windows::Win32::Foundation::PWSTR lpAppName, win32::Windows::Win32::Foundation::PWSTR lpString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpString);

        auto win32_impl_result = g_api_table.WriteProfileSectionW(lpAppName, lpString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetPrivateProfileIntA(win32::Windows::Win32::Foundation::PSTR lpAppName, win32::Windows::Win32::Foundation::PSTR lpKeyName, int32_t nDefault, win32::Windows::Win32::Foundation::PSTR lpFileName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpKeyName);
        ORBIT_TRACK_PARAM(nDefault);
        ORBIT_TRACK_PARAM(lpFileName);

        auto win32_impl_result = g_api_table.GetPrivateProfileIntA(lpAppName, lpKeyName, nDefault, lpFileName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetPrivateProfileIntW(win32::Windows::Win32::Foundation::PWSTR lpAppName, win32::Windows::Win32::Foundation::PWSTR lpKeyName, int32_t nDefault, win32::Windows::Win32::Foundation::PWSTR lpFileName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpKeyName);
        ORBIT_TRACK_PARAM(nDefault);
        ORBIT_TRACK_PARAM(lpFileName);

        auto win32_impl_result = g_api_table.GetPrivateProfileIntW(lpAppName, lpKeyName, nDefault, lpFileName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetPrivateProfileStringA(win32::Windows::Win32::Foundation::PSTR lpAppName, win32::Windows::Win32::Foundation::PSTR lpKeyName, win32::Windows::Win32::Foundation::PSTR lpDefault, win32::Windows::Win32::Foundation::PSTR lpReturnedString, uint32_t nSize, win32::Windows::Win32::Foundation::PSTR lpFileName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpKeyName);
        ORBIT_TRACK_PARAM(lpDefault);
        ORBIT_TRACK_PARAM(lpReturnedString);
        ORBIT_TRACK_PARAM(nSize);
        ORBIT_TRACK_PARAM(lpFileName);

        auto win32_impl_result = g_api_table.GetPrivateProfileStringA(lpAppName, lpKeyName, lpDefault, lpReturnedString, nSize, lpFileName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetPrivateProfileStringW(win32::Windows::Win32::Foundation::PWSTR lpAppName, win32::Windows::Win32::Foundation::PWSTR lpKeyName, win32::Windows::Win32::Foundation::PWSTR lpDefault, win32::Windows::Win32::Foundation::PWSTR lpReturnedString, uint32_t nSize, win32::Windows::Win32::Foundation::PWSTR lpFileName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpKeyName);
        ORBIT_TRACK_PARAM(lpDefault);
        ORBIT_TRACK_PARAM(lpReturnedString);
        ORBIT_TRACK_PARAM(nSize);
        ORBIT_TRACK_PARAM(lpFileName);

        auto win32_impl_result = g_api_table.GetPrivateProfileStringW(lpAppName, lpKeyName, lpDefault, lpReturnedString, nSize, lpFileName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WritePrivateProfileStringA(win32::Windows::Win32::Foundation::PSTR lpAppName, win32::Windows::Win32::Foundation::PSTR lpKeyName, win32::Windows::Win32::Foundation::PSTR lpString, win32::Windows::Win32::Foundation::PSTR lpFileName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpKeyName);
        ORBIT_TRACK_PARAM(lpString);
        ORBIT_TRACK_PARAM(lpFileName);

        auto win32_impl_result = g_api_table.WritePrivateProfileStringA(lpAppName, lpKeyName, lpString, lpFileName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WritePrivateProfileStringW(win32::Windows::Win32::Foundation::PWSTR lpAppName, win32::Windows::Win32::Foundation::PWSTR lpKeyName, win32::Windows::Win32::Foundation::PWSTR lpString, win32::Windows::Win32::Foundation::PWSTR lpFileName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpKeyName);
        ORBIT_TRACK_PARAM(lpString);
        ORBIT_TRACK_PARAM(lpFileName);

        auto win32_impl_result = g_api_table.WritePrivateProfileStringW(lpAppName, lpKeyName, lpString, lpFileName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetPrivateProfileSectionA(win32::Windows::Win32::Foundation::PSTR lpAppName, win32::Windows::Win32::Foundation::PSTR lpReturnedString, uint32_t nSize, win32::Windows::Win32::Foundation::PSTR lpFileName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpReturnedString);
        ORBIT_TRACK_PARAM(nSize);
        ORBIT_TRACK_PARAM(lpFileName);

        auto win32_impl_result = g_api_table.GetPrivateProfileSectionA(lpAppName, lpReturnedString, nSize, lpFileName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetPrivateProfileSectionW(win32::Windows::Win32::Foundation::PWSTR lpAppName, win32::Windows::Win32::Foundation::PWSTR lpReturnedString, uint32_t nSize, win32::Windows::Win32::Foundation::PWSTR lpFileName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpReturnedString);
        ORBIT_TRACK_PARAM(nSize);
        ORBIT_TRACK_PARAM(lpFileName);

        auto win32_impl_result = g_api_table.GetPrivateProfileSectionW(lpAppName, lpReturnedString, nSize, lpFileName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WritePrivateProfileSectionA(win32::Windows::Win32::Foundation::PSTR lpAppName, win32::Windows::Win32::Foundation::PSTR lpString, win32::Windows::Win32::Foundation::PSTR lpFileName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpString);
        ORBIT_TRACK_PARAM(lpFileName);

        auto win32_impl_result = g_api_table.WritePrivateProfileSectionA(lpAppName, lpString, lpFileName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WritePrivateProfileSectionW(win32::Windows::Win32::Foundation::PWSTR lpAppName, win32::Windows::Win32::Foundation::PWSTR lpString, win32::Windows::Win32::Foundation::PWSTR lpFileName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAppName);
        ORBIT_TRACK_PARAM(lpString);
        ORBIT_TRACK_PARAM(lpFileName);

        auto win32_impl_result = g_api_table.WritePrivateProfileSectionW(lpAppName, lpString, lpFileName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetPrivateProfileSectionNamesA(win32::Windows::Win32::Foundation::PSTR lpszReturnBuffer, uint32_t nSize, win32::Windows::Win32::Foundation::PSTR lpFileName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszReturnBuffer);
        ORBIT_TRACK_PARAM(nSize);
        ORBIT_TRACK_PARAM(lpFileName);

        auto win32_impl_result = g_api_table.GetPrivateProfileSectionNamesA(lpszReturnBuffer, nSize, lpFileName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetPrivateProfileSectionNamesW(win32::Windows::Win32::Foundation::PWSTR lpszReturnBuffer, uint32_t nSize, win32::Windows::Win32::Foundation::PWSTR lpFileName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszReturnBuffer);
        ORBIT_TRACK_PARAM(nSize);
        ORBIT_TRACK_PARAM(lpFileName);

        auto win32_impl_result = g_api_table.GetPrivateProfileSectionNamesW(lpszReturnBuffer, nSize, lpFileName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPrivateProfileStructA(win32::Windows::Win32::Foundation::PSTR lpszSection, win32::Windows::Win32::Foundation::PSTR lpszKey, void* lpStruct, uint32_t uSizeStruct, win32::Windows::Win32::Foundation::PSTR szFile) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszSection);
        ORBIT_TRACK_PARAM(lpszKey);
        ORBIT_TRACK_PARAM(lpStruct);
        ORBIT_TRACK_PARAM(uSizeStruct);
        ORBIT_TRACK_PARAM(szFile);

        auto win32_impl_result = g_api_table.GetPrivateProfileStructA(lpszSection, lpszKey, lpStruct, uSizeStruct, szFile);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPrivateProfileStructW(win32::Windows::Win32::Foundation::PWSTR lpszSection, win32::Windows::Win32::Foundation::PWSTR lpszKey, void* lpStruct, uint32_t uSizeStruct, win32::Windows::Win32::Foundation::PWSTR szFile) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszSection);
        ORBIT_TRACK_PARAM(lpszKey);
        ORBIT_TRACK_PARAM(lpStruct);
        ORBIT_TRACK_PARAM(uSizeStruct);
        ORBIT_TRACK_PARAM(szFile);

        auto win32_impl_result = g_api_table.GetPrivateProfileStructW(lpszSection, lpszKey, lpStruct, uSizeStruct, szFile);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WritePrivateProfileStructA(win32::Windows::Win32::Foundation::PSTR lpszSection, win32::Windows::Win32::Foundation::PSTR lpszKey, void* lpStruct, uint32_t uSizeStruct, win32::Windows::Win32::Foundation::PSTR szFile) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszSection);
        ORBIT_TRACK_PARAM(lpszKey);
        ORBIT_TRACK_PARAM(lpStruct);
        ORBIT_TRACK_PARAM(uSizeStruct);
        ORBIT_TRACK_PARAM(szFile);

        auto win32_impl_result = g_api_table.WritePrivateProfileStructA(lpszSection, lpszKey, lpStruct, uSizeStruct, szFile);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WritePrivateProfileStructW(win32::Windows::Win32::Foundation::PWSTR lpszSection, win32::Windows::Win32::Foundation::PWSTR lpszKey, void* lpStruct, uint32_t uSizeStruct, win32::Windows::Win32::Foundation::PWSTR szFile) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszSection);
        ORBIT_TRACK_PARAM(lpszKey);
        ORBIT_TRACK_PARAM(lpStruct);
        ORBIT_TRACK_PARAM(uSizeStruct);
        ORBIT_TRACK_PARAM(szFile);

        auto win32_impl_result = g_api_table.WritePrivateProfileStructW(lpszSection, lpszKey, lpStruct, uSizeStruct, szFile);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsBadHugeReadPtr(void* lp, size_t ucb) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lp);
        ORBIT_TRACK_PARAM(ucb);

        auto win32_impl_result = g_api_table.IsBadHugeReadPtr(lp, ucb);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsBadHugeWritePtr(void* lp, size_t ucb) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lp);
        ORBIT_TRACK_PARAM(ucb);

        auto win32_impl_result = g_api_table.IsBadHugeWritePtr(lp, ucb);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetComputerNameA(win32::Windows::Win32::Foundation::PSTR lpBuffer, uint32_t* nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.GetComputerNameA(lpBuffer, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetComputerNameW(win32::Windows::Win32::Foundation::PWSTR lpBuffer, uint32_t* nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.GetComputerNameW(lpBuffer, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DnsHostnameToComputerNameA(win32::Windows::Win32::Foundation::PSTR Hostname, win32::Windows::Win32::Foundation::PSTR ComputerName, uint32_t* nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Hostname);
        ORBIT_TRACK_PARAM(ComputerName);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.DnsHostnameToComputerNameA(Hostname, ComputerName, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DnsHostnameToComputerNameW(win32::Windows::Win32::Foundation::PWSTR Hostname, win32::Windows::Win32::Foundation::PWSTR ComputerName, uint32_t* nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Hostname);
        ORBIT_TRACK_PARAM(ComputerName);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.DnsHostnameToComputerNameW(Hostname, ComputerName, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetUserNameA(win32::Windows::Win32::Foundation::PSTR lpBuffer, uint32_t* pcbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(pcbBuffer);

        auto win32_impl_result = g_api_table.GetUserNameA(lpBuffer, pcbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetUserNameW(win32::Windows::Win32::Foundation::PWSTR lpBuffer, uint32_t* pcbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(pcbBuffer);

        auto win32_impl_result = g_api_table.GetUserNameW(lpBuffer, pcbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsTokenUntrusted(win32::Windows::Win32::Foundation::HANDLE TokenHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TokenHandle);

        auto win32_impl_result = g_api_table.IsTokenUntrusted(TokenHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_SetTimerQueueTimer(win32::Windows::Win32::Foundation::HANDLE TimerQueue, win32::Windows::Win32::System::SystemServices::WAITORTIMERCALLBACK* Callback, void* Parameter, uint32_t DueTime, uint32_t Period, win32::Windows::Win32::Foundation::BOOL PreferIo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TimerQueue);
        ORBIT_TRACK_PARAM(Callback);
        ORBIT_TRACK_PARAM(Parameter);
        ORBIT_TRACK_PARAM(DueTime);
        ORBIT_TRACK_PARAM(Period);
        ORBIT_TRACK_PARAM(PreferIo);

        auto win32_impl_result = g_api_table.SetTimerQueueTimer(TimerQueue, Callback, Parameter, DueTime, Period, PreferIo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CancelTimerQueueTimer(win32::Windows::Win32::Foundation::HANDLE TimerQueue, win32::Windows::Win32::Foundation::HANDLE Timer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TimerQueue);
        ORBIT_TRACK_PARAM(Timer);

        auto win32_impl_result = g_api_table.CancelTimerQueueTimer(TimerQueue, Timer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetCurrentHwProfileA(win32::Windows::Win32::System::WindowsProgramming::HW_PROFILE_INFOA* lpHwProfileInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpHwProfileInfo);

        auto win32_impl_result = g_api_table.GetCurrentHwProfileA(lpHwProfileInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetCurrentHwProfileW(win32::Windows::Win32::System::WindowsProgramming::HW_PROFILE_INFOW* lpHwProfileInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpHwProfileInfo);

        auto win32_impl_result = g_api_table.GetCurrentHwProfileW(lpHwProfileInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CreateJobSet(uint32_t NumJob, win32::Windows::Win32::System::SystemServices::JOB_SET_ARRAY* UserJobSet, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NumJob);
        ORBIT_TRACK_PARAM(UserJobSet);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.CreateJobSet(NumJob, UserJobSet, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ReplacePartitionUnit(win32::Windows::Win32::Foundation::PWSTR TargetPartition, win32::Windows::Win32::Foundation::PWSTR SparePartition, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TargetPartition);
        ORBIT_TRACK_PARAM(SparePartition);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.ReplacePartitionUnit(TargetPartition, SparePartition, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_InitializeContext2(void* Buffer, uint32_t ContextFlags, win32::Windows::Win32::System::Diagnostics::Debug::CONTEXT** Context, uint32_t* ContextLength, uint64_t XStateCompactionMask) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(ContextFlags);
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(ContextLength);
        ORBIT_TRACK_PARAM(XStateCompactionMask);

        auto win32_impl_result = g_api_table.InitializeContext2(Buffer, ContextFlags, Context, ContextLength, XStateCompactionMask);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint64_t __stdcall ORBIT_IMPL_GetThreadEnabledXStateFeatures() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.GetThreadEnabledXStateFeatures();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EnableProcessOptionalXStateFeatures(uint64_t Features) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Features);

        auto win32_impl_result = g_api_table.EnableProcessOptionalXStateFeatures(Features);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RaiseCustomSystemEventTrigger(win32::Windows::Win32::System::SystemServices::CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG* CustomSystemEventTriggerConfig) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CustomSystemEventTriggerConfig);

        auto win32_impl_result = g_api_table.RaiseCustomSystemEventTrigger(CustomSystemEventTriggerConfig);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_uaw_lstrcmpW(uint16_t* String1, uint16_t* String2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(String1);
        ORBIT_TRACK_PARAM(String2);

        auto win32_impl_result = g_api_table.uaw_lstrcmpW(String1, String2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_uaw_lstrcmpiW(uint16_t* String1, uint16_t* String2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(String1);
        ORBIT_TRACK_PARAM(String2);

        auto win32_impl_result = g_api_table.uaw_lstrcmpiW(String1, String2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_uaw_lstrlenW(uint16_t* String) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(String);

        auto win32_impl_result = g_api_table.uaw_lstrlenW(String);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint16_t* __stdcall ORBIT_IMPL_uaw_wcschr(uint16_t* String, char Character) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(String);
        ORBIT_TRACK_PARAM(Character);

        auto win32_impl_result = g_api_table.uaw_wcschr(String, Character);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint16_t* __stdcall ORBIT_IMPL_uaw_wcscpy(uint16_t* Destination, uint16_t* Source) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Destination);
        ORBIT_TRACK_PARAM(Source);

        auto win32_impl_result = g_api_table.uaw_wcscpy(Destination, Source);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_uaw_wcsicmp(uint16_t* String1, uint16_t* String2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(String1);
        ORBIT_TRACK_PARAM(String2);

        auto win32_impl_result = g_api_table.uaw_wcsicmp(String1, String2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    size_t __stdcall ORBIT_IMPL_uaw_wcslen(uint16_t* String) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(String);

        auto win32_impl_result = g_api_table.uaw_wcslen(String);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint16_t* __stdcall ORBIT_IMPL_uaw_wcsrchr(uint16_t* String, char Character) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(String);
        ORBIT_TRACK_PARAM(Character);

        auto win32_impl_result = g_api_table.uaw_wcsrchr(String, Character);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NtClose(win32::Windows::Win32::Foundation::HANDLE Handle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Handle);

        auto win32_impl_result = g_api_table.NtClose(Handle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NtCreateFile(win32::Windows::Win32::Foundation::HANDLE* FileHandle, uint32_t DesiredAccess, win32::Windows::Win32::System::WindowsProgramming::OBJECT_ATTRIBUTES* ObjectAttributes, win32::Windows::Win32::System::WindowsProgramming::IO_STATUS_BLOCK* IoStatusBlock, win32::Windows::Win32::Foundation::LARGE_INTEGER* AllocationSize, uint32_t FileAttributes, win32::Windows::Win32::Storage::FileSystem::FILE_SHARE_MODE ShareAccess, win32::Windows::Win32::System::WindowsProgramming::NT_CREATE_FILE_DISPOSITION CreateDisposition, uint32_t CreateOptions, void* EaBuffer, uint32_t EaLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileHandle);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(ObjectAttributes);
        ORBIT_TRACK_PARAM(IoStatusBlock);
        ORBIT_TRACK_PARAM(AllocationSize);
        ORBIT_TRACK_PARAM(FileAttributes);
        ORBIT_TRACK_PARAM(ShareAccess);
        ORBIT_TRACK_PARAM(CreateDisposition);
        ORBIT_TRACK_PARAM(CreateOptions);
        ORBIT_TRACK_PARAM(EaBuffer);
        ORBIT_TRACK_PARAM(EaLength);

        auto win32_impl_result = g_api_table.NtCreateFile(FileHandle, DesiredAccess, ObjectAttributes, IoStatusBlock, AllocationSize, FileAttributes, ShareAccess, CreateDisposition, CreateOptions, EaBuffer, EaLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NtOpenFile(win32::Windows::Win32::Foundation::HANDLE* FileHandle, uint32_t DesiredAccess, win32::Windows::Win32::System::WindowsProgramming::OBJECT_ATTRIBUTES* ObjectAttributes, win32::Windows::Win32::System::WindowsProgramming::IO_STATUS_BLOCK* IoStatusBlock, uint32_t ShareAccess, uint32_t OpenOptions) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileHandle);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(ObjectAttributes);
        ORBIT_TRACK_PARAM(IoStatusBlock);
        ORBIT_TRACK_PARAM(ShareAccess);
        ORBIT_TRACK_PARAM(OpenOptions);

        auto win32_impl_result = g_api_table.NtOpenFile(FileHandle, DesiredAccess, ObjectAttributes, IoStatusBlock, ShareAccess, OpenOptions);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NtRenameKey(win32::Windows::Win32::Foundation::HANDLE KeyHandle, win32::Windows::Win32::Foundation::UNICODE_STRING* NewName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(KeyHandle);
        ORBIT_TRACK_PARAM(NewName);

        auto win32_impl_result = g_api_table.NtRenameKey(KeyHandle, NewName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NtNotifyChangeMultipleKeys(win32::Windows::Win32::Foundation::HANDLE MasterKeyHandle, uint32_t Count, win32::Windows::Win32::System::WindowsProgramming::OBJECT_ATTRIBUTES* SubordinateObjects, win32::Windows::Win32::Foundation::HANDLE Event, win32::Windows::Win32::System::WindowsProgramming::PIO_APC_ROUTINE* ApcRoutine, void* ApcContext, win32::Windows::Win32::System::WindowsProgramming::IO_STATUS_BLOCK* IoStatusBlock, uint32_t CompletionFilter, win32::Windows::Win32::Foundation::BOOLEAN WatchTree, void* Buffer, uint32_t BufferSize, win32::Windows::Win32::Foundation::BOOLEAN Asynchronous) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(MasterKeyHandle);
        ORBIT_TRACK_PARAM(Count);
        ORBIT_TRACK_PARAM(SubordinateObjects);
        ORBIT_TRACK_PARAM(Event);
        ORBIT_TRACK_PARAM(ApcRoutine);
        ORBIT_TRACK_PARAM(ApcContext);
        ORBIT_TRACK_PARAM(IoStatusBlock);
        ORBIT_TRACK_PARAM(CompletionFilter);
        ORBIT_TRACK_PARAM(WatchTree);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferSize);
        ORBIT_TRACK_PARAM(Asynchronous);

        auto win32_impl_result = g_api_table.NtNotifyChangeMultipleKeys(MasterKeyHandle, Count, SubordinateObjects, Event, ApcRoutine, ApcContext, IoStatusBlock, CompletionFilter, WatchTree, Buffer, BufferSize, Asynchronous);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NtQueryMultipleValueKey(win32::Windows::Win32::Foundation::HANDLE KeyHandle, win32::Windows::Win32::System::WindowsProgramming::KEY_VALUE_ENTRY* ValueEntries, uint32_t EntryCount, void* ValueBuffer, uint32_t* BufferLength, uint32_t* RequiredBufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(KeyHandle);
        ORBIT_TRACK_PARAM(ValueEntries);
        ORBIT_TRACK_PARAM(EntryCount);
        ORBIT_TRACK_PARAM(ValueBuffer);
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(RequiredBufferLength);

        auto win32_impl_result = g_api_table.NtQueryMultipleValueKey(KeyHandle, ValueEntries, EntryCount, ValueBuffer, BufferLength, RequiredBufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NtSetInformationKey(win32::Windows::Win32::Foundation::HANDLE KeyHandle, win32::Windows::Win32::System::WindowsProgramming::KEY_SET_INFORMATION_CLASS KeySetInformationClass, void* KeySetInformation, uint32_t KeySetInformationLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(KeyHandle);
        ORBIT_TRACK_PARAM(KeySetInformationClass);
        ORBIT_TRACK_PARAM(KeySetInformation);
        ORBIT_TRACK_PARAM(KeySetInformationLength);

        auto win32_impl_result = g_api_table.NtSetInformationKey(KeyHandle, KeySetInformationClass, KeySetInformation, KeySetInformationLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NtDeviceIoControlFile(win32::Windows::Win32::Foundation::HANDLE FileHandle, win32::Windows::Win32::Foundation::HANDLE Event, win32::Windows::Win32::System::WindowsProgramming::PIO_APC_ROUTINE* ApcRoutine, void* ApcContext, win32::Windows::Win32::System::WindowsProgramming::IO_STATUS_BLOCK* IoStatusBlock, uint32_t IoControlCode, void* InputBuffer, uint32_t InputBufferLength, void* OutputBuffer, uint32_t OutputBufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileHandle);
        ORBIT_TRACK_PARAM(Event);
        ORBIT_TRACK_PARAM(ApcRoutine);
        ORBIT_TRACK_PARAM(ApcContext);
        ORBIT_TRACK_PARAM(IoStatusBlock);
        ORBIT_TRACK_PARAM(IoControlCode);
        ORBIT_TRACK_PARAM(InputBuffer);
        ORBIT_TRACK_PARAM(InputBufferLength);
        ORBIT_TRACK_PARAM(OutputBuffer);
        ORBIT_TRACK_PARAM(OutputBufferLength);

        auto win32_impl_result = g_api_table.NtDeviceIoControlFile(FileHandle, Event, ApcRoutine, ApcContext, IoStatusBlock, IoControlCode, InputBuffer, InputBufferLength, OutputBuffer, OutputBufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NtWaitForSingleObject(win32::Windows::Win32::Foundation::HANDLE Handle, win32::Windows::Win32::Foundation::BOOLEAN Alertable, win32::Windows::Win32::Foundation::LARGE_INTEGER* Timeout) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Handle);
        ORBIT_TRACK_PARAM(Alertable);
        ORBIT_TRACK_PARAM(Timeout);

        auto win32_impl_result = g_api_table.NtWaitForSingleObject(Handle, Alertable, Timeout);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_RtlIsNameLegalDOS8Dot3(win32::Windows::Win32::Foundation::UNICODE_STRING* Name, win32::Windows::Win32::System::Kernel::STRING* OemName, win32::Windows::Win32::Foundation::BOOLEAN* NameContainsSpaces) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Name);
        ORBIT_TRACK_PARAM(OemName);
        ORBIT_TRACK_PARAM(NameContainsSpaces);

        auto win32_impl_result = g_api_table.RtlIsNameLegalDOS8Dot3(Name, OemName, NameContainsSpaces);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NtSetInformationThread(win32::Windows::Win32::Foundation::HANDLE ThreadHandle, win32::Windows::Win32::System::Threading::THREADINFOCLASS ThreadInformationClass, void* ThreadInformation, uint32_t ThreadInformationLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ThreadHandle);
        ORBIT_TRACK_PARAM(ThreadInformationClass);
        ORBIT_TRACK_PARAM(ThreadInformation);
        ORBIT_TRACK_PARAM(ThreadInformationLength);

        auto win32_impl_result = g_api_table.NtSetInformationThread(ThreadHandle, ThreadInformationClass, ThreadInformation, ThreadInformationLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NtQueryObject(win32::Windows::Win32::Foundation::HANDLE Handle, win32::Windows::Win32::System::WindowsProgramming::OBJECT_INFORMATION_CLASS ObjectInformationClass, void* ObjectInformation, uint32_t ObjectInformationLength, uint32_t* ReturnLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Handle);
        ORBIT_TRACK_PARAM(ObjectInformationClass);
        ORBIT_TRACK_PARAM(ObjectInformation);
        ORBIT_TRACK_PARAM(ObjectInformationLength);
        ORBIT_TRACK_PARAM(ReturnLength);

        auto win32_impl_result = g_api_table.NtQueryObject(Handle, ObjectInformationClass, ObjectInformation, ObjectInformationLength, ReturnLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NtQuerySystemInformation(win32::Windows::Win32::System::WindowsProgramming::SYSTEM_INFORMATION_CLASS SystemInformationClass, void* SystemInformation, uint32_t SystemInformationLength, uint32_t* ReturnLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SystemInformationClass);
        ORBIT_TRACK_PARAM(SystemInformation);
        ORBIT_TRACK_PARAM(SystemInformationLength);
        ORBIT_TRACK_PARAM(ReturnLength);

        auto win32_impl_result = g_api_table.NtQuerySystemInformation(SystemInformationClass, SystemInformation, SystemInformationLength, ReturnLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NtQuerySystemTime(win32::Windows::Win32::Foundation::LARGE_INTEGER* SystemTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SystemTime);

        auto win32_impl_result = g_api_table.NtQuerySystemTime(SystemTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_NtQueryTimerResolution(uint32_t* MaximumTime, uint32_t* MinimumTime, uint32_t* CurrentTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(MaximumTime);
        ORBIT_TRACK_PARAM(MinimumTime);
        ORBIT_TRACK_PARAM(CurrentTime);

        auto win32_impl_result = g_api_table.NtQueryTimerResolution(MaximumTime, MinimumTime, CurrentTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_RtlLocalTimeToSystemTime(win32::Windows::Win32::Foundation::LARGE_INTEGER* LocalTime, win32::Windows::Win32::Foundation::LARGE_INTEGER* SystemTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LocalTime);
        ORBIT_TRACK_PARAM(SystemTime);

        auto win32_impl_result = g_api_table.RtlLocalTimeToSystemTime(LocalTime, SystemTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_RtlTimeToSecondsSince1970(win32::Windows::Win32::Foundation::LARGE_INTEGER* Time, uint32_t* ElapsedSeconds) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Time);
        ORBIT_TRACK_PARAM(ElapsedSeconds);

        auto win32_impl_result = g_api_table.RtlTimeToSecondsSince1970(Time, ElapsedSeconds);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RtlFreeAnsiString(win32::Windows::Win32::System::Kernel::STRING* AnsiString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AnsiString);

        g_api_table.RtlFreeAnsiString(AnsiString);
        
    }

    void __stdcall ORBIT_IMPL_RtlFreeUnicodeString(win32::Windows::Win32::Foundation::UNICODE_STRING* UnicodeString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(UnicodeString);

        g_api_table.RtlFreeUnicodeString(UnicodeString);
        
    }

    void __stdcall ORBIT_IMPL_RtlFreeOemString(win32::Windows::Win32::System::Kernel::STRING* OemString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(OemString);

        g_api_table.RtlFreeOemString(OemString);
        
    }

    void __stdcall ORBIT_IMPL_RtlInitString(win32::Windows::Win32::System::Kernel::STRING* DestinationString, int8_t* SourceString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DestinationString);
        ORBIT_TRACK_PARAM(SourceString);

        g_api_table.RtlInitString(DestinationString, SourceString);
        
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_RtlInitStringEx(win32::Windows::Win32::System::Kernel::STRING* DestinationString, int8_t* SourceString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DestinationString);
        ORBIT_TRACK_PARAM(SourceString);

        auto win32_impl_result = g_api_table.RtlInitStringEx(DestinationString, SourceString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RtlInitAnsiString(win32::Windows::Win32::System::Kernel::STRING* DestinationString, int8_t* SourceString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DestinationString);
        ORBIT_TRACK_PARAM(SourceString);

        g_api_table.RtlInitAnsiString(DestinationString, SourceString);
        
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_RtlInitAnsiStringEx(win32::Windows::Win32::System::Kernel::STRING* DestinationString, int8_t* SourceString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DestinationString);
        ORBIT_TRACK_PARAM(SourceString);

        auto win32_impl_result = g_api_table.RtlInitAnsiStringEx(DestinationString, SourceString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RtlInitUnicodeString(win32::Windows::Win32::Foundation::UNICODE_STRING* DestinationString, win32::Windows::Win32::Foundation::PWSTR SourceString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DestinationString);
        ORBIT_TRACK_PARAM(SourceString);

        g_api_table.RtlInitUnicodeString(DestinationString, SourceString);
        
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_RtlAnsiStringToUnicodeString(win32::Windows::Win32::Foundation::UNICODE_STRING* DestinationString, win32::Windows::Win32::System::Kernel::STRING* SourceString, win32::Windows::Win32::Foundation::BOOLEAN AllocateDestinationString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DestinationString);
        ORBIT_TRACK_PARAM(SourceString);
        ORBIT_TRACK_PARAM(AllocateDestinationString);

        auto win32_impl_result = g_api_table.RtlAnsiStringToUnicodeString(DestinationString, SourceString, AllocateDestinationString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_RtlUnicodeStringToAnsiString(win32::Windows::Win32::System::Kernel::STRING* DestinationString, win32::Windows::Win32::Foundation::UNICODE_STRING* SourceString, win32::Windows::Win32::Foundation::BOOLEAN AllocateDestinationString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DestinationString);
        ORBIT_TRACK_PARAM(SourceString);
        ORBIT_TRACK_PARAM(AllocateDestinationString);

        auto win32_impl_result = g_api_table.RtlUnicodeStringToAnsiString(DestinationString, SourceString, AllocateDestinationString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_RtlUnicodeStringToOemString(win32::Windows::Win32::System::Kernel::STRING* DestinationString, win32::Windows::Win32::Foundation::UNICODE_STRING* SourceString, win32::Windows::Win32::Foundation::BOOLEAN AllocateDestinationString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DestinationString);
        ORBIT_TRACK_PARAM(SourceString);
        ORBIT_TRACK_PARAM(AllocateDestinationString);

        auto win32_impl_result = g_api_table.RtlUnicodeStringToOemString(DestinationString, SourceString, AllocateDestinationString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_RtlUnicodeToMultiByteSize(uint32_t* BytesInMultiByteString, win32::Windows::Win32::Foundation::PWSTR UnicodeString, uint32_t BytesInUnicodeString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(BytesInMultiByteString);
        ORBIT_TRACK_PARAM(UnicodeString);
        ORBIT_TRACK_PARAM(BytesInUnicodeString);

        auto win32_impl_result = g_api_table.RtlUnicodeToMultiByteSize(BytesInMultiByteString, UnicodeString, BytesInUnicodeString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_RtlCharToInteger(int8_t* String, uint32_t Base, uint32_t* Value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(String);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(Value);

        auto win32_impl_result = g_api_table.RtlCharToInteger(String, Base, Value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtlUniform(uint32_t* Seed) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Seed);

        auto win32_impl_result = g_api_table.RtlUniform(Seed);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::WindowsProgramming::FEATURE_ENABLED_STATE __stdcall ORBIT_IMPL_GetFeatureEnabledState(uint32_t featureId, win32::Windows::Win32::System::WindowsProgramming::FEATURE_CHANGE_TIME changeTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(featureId);
        ORBIT_TRACK_PARAM(changeTime);

        auto win32_impl_result = g_api_table.GetFeatureEnabledState(featureId, changeTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RecordFeatureUsage(uint32_t featureId, uint32_t kind, uint32_t addend, win32::Windows::Win32::Foundation::PSTR originName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(featureId);
        ORBIT_TRACK_PARAM(kind);
        ORBIT_TRACK_PARAM(addend);
        ORBIT_TRACK_PARAM(originName);

        g_api_table.RecordFeatureUsage(featureId, kind, addend, originName);
        
    }

    void __stdcall ORBIT_IMPL_RecordFeatureError(uint32_t featureId, win32::Windows::Win32::System::WindowsProgramming::FEATURE_ERROR* error) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(featureId);
        ORBIT_TRACK_PARAM(error);

        g_api_table.RecordFeatureError(featureId, error);
        
    }

    void __stdcall ORBIT_IMPL_SubscribeFeatureStateChangeNotification(win32::Windows::Win32::System::WindowsProgramming::FEATURE_STATE_CHANGE_SUBSCRIPTION* subscription, win32::Windows::Win32::System::WindowsProgramming::PFEATURE_STATE_CHANGE_CALLBACK* callback, void* context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(subscription);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);

        g_api_table.SubscribeFeatureStateChangeNotification(subscription, callback, context);
        
    }

    void __stdcall ORBIT_IMPL_UnsubscribeFeatureStateChangeNotification(win32::Windows::Win32::System::WindowsProgramming::FEATURE_STATE_CHANGE_SUBSCRIPTION subscription) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(subscription);

        g_api_table.UnsubscribeFeatureStateChangeNotification(subscription);
        
    }

    uint32_t __stdcall ORBIT_IMPL_GetFeatureVariant(uint32_t featureId, win32::Windows::Win32::System::WindowsProgramming::FEATURE_CHANGE_TIME changeTime, uint32_t* payloadId, win32::Windows::Win32::Foundation::BOOL* hasNotification) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(featureId);
        ORBIT_TRACK_PARAM(changeTime);
        ORBIT_TRACK_PARAM(payloadId);
        ORBIT_TRACK_PARAM(hasNotification);

        auto win32_impl_result = g_api_table.GetFeatureVariant(featureId, changeTime, payloadId, hasNotification);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Graphics::Gdi::HDC __stdcall ORBIT_IMPL_DCIOpenProvider() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.DCIOpenProvider();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_DCICloseProvider(win32::Windows::Win32::Graphics::Gdi::HDC hdc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdc);

        g_api_table.DCICloseProvider(hdc);
        
    }

    int32_t __stdcall ORBIT_IMPL_DCICreatePrimary(win32::Windows::Win32::Graphics::Gdi::HDC hdc, win32::Windows::Win32::System::WindowsProgramming::DCISURFACEINFO** lplpSurface) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdc);
        ORBIT_TRACK_PARAM(lplpSurface);

        auto win32_impl_result = g_api_table.DCICreatePrimary(hdc, lplpSurface);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DCICreateOffscreen(win32::Windows::Win32::Graphics::Gdi::HDC hdc, uint32_t dwCompression, uint32_t dwRedMask, uint32_t dwGreenMask, uint32_t dwBlueMask, uint32_t dwWidth, uint32_t dwHeight, uint32_t dwDCICaps, uint32_t dwBitCount, win32::Windows::Win32::System::WindowsProgramming::DCIOFFSCREEN** lplpSurface) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdc);
        ORBIT_TRACK_PARAM(dwCompression);
        ORBIT_TRACK_PARAM(dwRedMask);
        ORBIT_TRACK_PARAM(dwGreenMask);
        ORBIT_TRACK_PARAM(dwBlueMask);
        ORBIT_TRACK_PARAM(dwWidth);
        ORBIT_TRACK_PARAM(dwHeight);
        ORBIT_TRACK_PARAM(dwDCICaps);
        ORBIT_TRACK_PARAM(dwBitCount);
        ORBIT_TRACK_PARAM(lplpSurface);

        auto win32_impl_result = g_api_table.DCICreateOffscreen(hdc, dwCompression, dwRedMask, dwGreenMask, dwBlueMask, dwWidth, dwHeight, dwDCICaps, dwBitCount, lplpSurface);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DCICreateOverlay(win32::Windows::Win32::Graphics::Gdi::HDC hdc, void* lpOffscreenSurf, win32::Windows::Win32::System::WindowsProgramming::DCIOVERLAY** lplpSurface) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdc);
        ORBIT_TRACK_PARAM(lpOffscreenSurf);
        ORBIT_TRACK_PARAM(lplpSurface);

        auto win32_impl_result = g_api_table.DCICreateOverlay(hdc, lpOffscreenSurf, lplpSurface);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DCIEnum(win32::Windows::Win32::Graphics::Gdi::HDC hdc, win32::Windows::Win32::Foundation::RECT* lprDst, win32::Windows::Win32::Foundation::RECT* lprSrc, void* lpFnCallback, void* lpContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdc);
        ORBIT_TRACK_PARAM(lprDst);
        ORBIT_TRACK_PARAM(lprSrc);
        ORBIT_TRACK_PARAM(lpFnCallback);
        ORBIT_TRACK_PARAM(lpContext);

        auto win32_impl_result = g_api_table.DCIEnum(hdc, lprDst, lprSrc, lpFnCallback, lpContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DCISetSrcDestClip(win32::Windows::Win32::System::WindowsProgramming::DCIOFFSCREEN* pdci, win32::Windows::Win32::Foundation::RECT* srcrc, win32::Windows::Win32::Foundation::RECT* destrc, win32::Windows::Win32::Graphics::Gdi::RGNDATA* prd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdci);
        ORBIT_TRACK_PARAM(srcrc);
        ORBIT_TRACK_PARAM(destrc);
        ORBIT_TRACK_PARAM(prd);

        auto win32_impl_result = g_api_table.DCISetSrcDestClip(pdci, srcrc, destrc, prd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::WindowsProgramming::HWINWATCH __stdcall ORBIT_IMPL_WinWatchOpen(win32::Windows::Win32::Foundation::HWND hwnd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);

        auto win32_impl_result = g_api_table.WinWatchOpen(hwnd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_WinWatchClose(win32::Windows::Win32::System::WindowsProgramming::HWINWATCH hWW) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWW);

        g_api_table.WinWatchClose(hWW);
        
    }

    uint32_t __stdcall ORBIT_IMPL_WinWatchGetClipList(win32::Windows::Win32::System::WindowsProgramming::HWINWATCH hWW, win32::Windows::Win32::Foundation::RECT* prc, uint32_t size, win32::Windows::Win32::Graphics::Gdi::RGNDATA* prd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWW);
        ORBIT_TRACK_PARAM(prc);
        ORBIT_TRACK_PARAM(size);
        ORBIT_TRACK_PARAM(prd);

        auto win32_impl_result = g_api_table.WinWatchGetClipList(hWW, prc, size, prd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinWatchDidStatusChange(win32::Windows::Win32::System::WindowsProgramming::HWINWATCH hWW) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWW);

        auto win32_impl_result = g_api_table.WinWatchDidStatusChange(hWW);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetWindowRegionData(win32::Windows::Win32::Foundation::HWND hwnd, uint32_t size, win32::Windows::Win32::Graphics::Gdi::RGNDATA* prd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(size);
        ORBIT_TRACK_PARAM(prd);

        auto win32_impl_result = g_api_table.GetWindowRegionData(hwnd, size, prd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetDCRegionData(win32::Windows::Win32::Graphics::Gdi::HDC hdc, uint32_t size, win32::Windows::Win32::Graphics::Gdi::RGNDATA* prd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdc);
        ORBIT_TRACK_PARAM(size);
        ORBIT_TRACK_PARAM(prd);

        auto win32_impl_result = g_api_table.GetDCRegionData(hdc, size, prd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinWatchNotify(win32::Windows::Win32::System::WindowsProgramming::HWINWATCH hWW, win32::Windows::Win32::System::WindowsProgramming::WINWATCHNOTIFYPROC* NotifyCallback, win32::Windows::Win32::Foundation::LPARAM NotifyParam) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWW);
        ORBIT_TRACK_PARAM(NotifyCallback);
        ORBIT_TRACK_PARAM(NotifyParam);

        auto win32_impl_result = g_api_table.WinWatchNotify(hWW, NotifyCallback, NotifyParam);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_DCIEndAccess(win32::Windows::Win32::System::WindowsProgramming::DCISURFACEINFO* pdci) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdci);

        g_api_table.DCIEndAccess(pdci);
        
    }

    int32_t __stdcall ORBIT_IMPL_DCIBeginAccess(win32::Windows::Win32::System::WindowsProgramming::DCISURFACEINFO* pdci, int32_t x, int32_t y, int32_t dx, int32_t dy) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdci);
        ORBIT_TRACK_PARAM(x);
        ORBIT_TRACK_PARAM(y);
        ORBIT_TRACK_PARAM(dx);
        ORBIT_TRACK_PARAM(dy);

        auto win32_impl_result = g_api_table.DCIBeginAccess(pdci, x, y, dx, dy);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_DCIDestroy(win32::Windows::Win32::System::WindowsProgramming::DCISURFACEINFO* pdci) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdci);

        g_api_table.DCIDestroy(pdci);
        
    }

    int32_t __stdcall ORBIT_IMPL_DCIDraw(win32::Windows::Win32::System::WindowsProgramming::DCIOFFSCREEN* pdci) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdci);

        auto win32_impl_result = g_api_table.DCIDraw(pdci);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DCISetClipList(win32::Windows::Win32::System::WindowsProgramming::DCIOFFSCREEN* pdci, win32::Windows::Win32::Graphics::Gdi::RGNDATA* prd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdci);
        ORBIT_TRACK_PARAM(prd);

        auto win32_impl_result = g_api_table.DCISetClipList(pdci, prd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DCISetDestination(win32::Windows::Win32::System::WindowsProgramming::DCIOFFSCREEN* pdci, win32::Windows::Win32::Foundation::RECT* dst, win32::Windows::Win32::Foundation::RECT* src) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdci);
        ORBIT_TRACK_PARAM(dst);
        ORBIT_TRACK_PARAM(src);

        auto win32_impl_result = g_api_table.DCISetDestination(pdci, dst, src);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GdiEntry13() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.GdiEntry13();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RunSetupCommandA(win32::Windows::Win32::Foundation::HWND hWnd, win32::Windows::Win32::Foundation::PSTR szCmdName, win32::Windows::Win32::Foundation::PSTR szInfSection, win32::Windows::Win32::Foundation::PSTR szDir, win32::Windows::Win32::Foundation::PSTR lpszTitle, win32::Windows::Win32::Foundation::HANDLE* phEXE, uint32_t dwFlags, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWnd);
        ORBIT_TRACK_PARAM(szCmdName);
        ORBIT_TRACK_PARAM(szInfSection);
        ORBIT_TRACK_PARAM(szDir);
        ORBIT_TRACK_PARAM(lpszTitle);
        ORBIT_TRACK_PARAM(phEXE);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.RunSetupCommandA(hWnd, szCmdName, szInfSection, szDir, lpszTitle, phEXE, dwFlags, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RunSetupCommandW(win32::Windows::Win32::Foundation::HWND hWnd, win32::Windows::Win32::Foundation::PWSTR szCmdName, win32::Windows::Win32::Foundation::PWSTR szInfSection, win32::Windows::Win32::Foundation::PWSTR szDir, win32::Windows::Win32::Foundation::PWSTR lpszTitle, win32::Windows::Win32::Foundation::HANDLE* phEXE, uint32_t dwFlags, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWnd);
        ORBIT_TRACK_PARAM(szCmdName);
        ORBIT_TRACK_PARAM(szInfSection);
        ORBIT_TRACK_PARAM(szDir);
        ORBIT_TRACK_PARAM(lpszTitle);
        ORBIT_TRACK_PARAM(phEXE);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.RunSetupCommandW(hWnd, szCmdName, szInfSection, szDir, lpszTitle, phEXE, dwFlags, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NeedRebootInit() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.NeedRebootInit();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_NeedReboot(uint32_t dwRebootCheck) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwRebootCheck);

        auto win32_impl_result = g_api_table.NeedReboot(dwRebootCheck);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RebootCheckOnInstallA(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::PSTR pszINF, win32::Windows::Win32::Foundation::PSTR pszSec, uint32_t dwReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(pszINF);
        ORBIT_TRACK_PARAM(pszSec);
        ORBIT_TRACK_PARAM(dwReserved);

        auto win32_impl_result = g_api_table.RebootCheckOnInstallA(hwnd, pszINF, pszSec, dwReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RebootCheckOnInstallW(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::PWSTR pszINF, win32::Windows::Win32::Foundation::PWSTR pszSec, uint32_t dwReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(pszINF);
        ORBIT_TRACK_PARAM(pszSec);
        ORBIT_TRACK_PARAM(dwReserved);

        auto win32_impl_result = g_api_table.RebootCheckOnInstallW(hwnd, pszINF, pszSec, dwReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TranslateInfStringA(win32::Windows::Win32::Foundation::PSTR pszInfFilename, win32::Windows::Win32::Foundation::PSTR pszInstallSection, win32::Windows::Win32::Foundation::PSTR pszTranslateSection, win32::Windows::Win32::Foundation::PSTR pszTranslateKey, win32::Windows::Win32::Foundation::PSTR pszBuffer, uint32_t cchBuffer, uint32_t* pdwRequiredSize, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszInfFilename);
        ORBIT_TRACK_PARAM(pszInstallSection);
        ORBIT_TRACK_PARAM(pszTranslateSection);
        ORBIT_TRACK_PARAM(pszTranslateKey);
        ORBIT_TRACK_PARAM(pszBuffer);
        ORBIT_TRACK_PARAM(cchBuffer);
        ORBIT_TRACK_PARAM(pdwRequiredSize);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.TranslateInfStringA(pszInfFilename, pszInstallSection, pszTranslateSection, pszTranslateKey, pszBuffer, cchBuffer, pdwRequiredSize, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TranslateInfStringW(win32::Windows::Win32::Foundation::PWSTR pszInfFilename, win32::Windows::Win32::Foundation::PWSTR pszInstallSection, win32::Windows::Win32::Foundation::PWSTR pszTranslateSection, win32::Windows::Win32::Foundation::PWSTR pszTranslateKey, win32::Windows::Win32::Foundation::PWSTR pszBuffer, uint32_t cchBuffer, uint32_t* pdwRequiredSize, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszInfFilename);
        ORBIT_TRACK_PARAM(pszInstallSection);
        ORBIT_TRACK_PARAM(pszTranslateSection);
        ORBIT_TRACK_PARAM(pszTranslateKey);
        ORBIT_TRACK_PARAM(pszBuffer);
        ORBIT_TRACK_PARAM(cchBuffer);
        ORBIT_TRACK_PARAM(pdwRequiredSize);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.TranslateInfStringW(pszInfFilename, pszInstallSection, pszTranslateSection, pszTranslateKey, pszBuffer, cchBuffer, pdwRequiredSize, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RegInstallA(win32::Windows::Win32::Foundation::HINSTANCE hmod, win32::Windows::Win32::Foundation::PSTR pszSection, win32::Windows::Win32::System::WindowsProgramming::STRTABLEA* pstTable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hmod);
        ORBIT_TRACK_PARAM(pszSection);
        ORBIT_TRACK_PARAM(pstTable);

        auto win32_impl_result = g_api_table.RegInstallA(hmod, pszSection, pstTable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RegInstallW(win32::Windows::Win32::Foundation::HINSTANCE hmod, win32::Windows::Win32::Foundation::PWSTR pszSection, win32::Windows::Win32::System::WindowsProgramming::STRTABLEW* pstTable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hmod);
        ORBIT_TRACK_PARAM(pszSection);
        ORBIT_TRACK_PARAM(pstTable);

        auto win32_impl_result = g_api_table.RegInstallW(hmod, pszSection, pstTable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_LaunchINFSectionExW(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::HINSTANCE hInstance, win32::Windows::Win32::Foundation::PWSTR pszParms, int32_t nShow) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(hInstance);
        ORBIT_TRACK_PARAM(pszParms);
        ORBIT_TRACK_PARAM(nShow);

        auto win32_impl_result = g_api_table.LaunchINFSectionExW(hwnd, hInstance, pszParms, nShow);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ExecuteCabA(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::System::WindowsProgramming::CABINFOA* pCab, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(pCab);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.ExecuteCabA(hwnd, pCab, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ExecuteCabW(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::System::WindowsProgramming::CABINFOW* pCab, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(pCab);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.ExecuteCabW(hwnd, pCab, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_AdvInstallFileA(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::PSTR lpszSourceDir, win32::Windows::Win32::Foundation::PSTR lpszSourceFile, win32::Windows::Win32::Foundation::PSTR lpszDestDir, win32::Windows::Win32::Foundation::PSTR lpszDestFile, uint32_t dwFlags, uint32_t dwReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(lpszSourceDir);
        ORBIT_TRACK_PARAM(lpszSourceFile);
        ORBIT_TRACK_PARAM(lpszDestDir);
        ORBIT_TRACK_PARAM(lpszDestFile);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(dwReserved);

        auto win32_impl_result = g_api_table.AdvInstallFileA(hwnd, lpszSourceDir, lpszSourceFile, lpszDestDir, lpszDestFile, dwFlags, dwReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_AdvInstallFileW(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::PWSTR lpszSourceDir, win32::Windows::Win32::Foundation::PWSTR lpszSourceFile, win32::Windows::Win32::Foundation::PWSTR lpszDestDir, win32::Windows::Win32::Foundation::PWSTR lpszDestFile, uint32_t dwFlags, uint32_t dwReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(lpszSourceDir);
        ORBIT_TRACK_PARAM(lpszSourceFile);
        ORBIT_TRACK_PARAM(lpszDestDir);
        ORBIT_TRACK_PARAM(lpszDestFile);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(dwReserved);

        auto win32_impl_result = g_api_table.AdvInstallFileW(hwnd, lpszSourceDir, lpszSourceFile, lpszDestDir, lpszDestFile, dwFlags, dwReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RegSaveRestoreA(win32::Windows::Win32::Foundation::HWND hWnd, win32::Windows::Win32::Foundation::PSTR pszTitleString, win32::Windows::Win32::System::Registry::HKEY hkBckupKey, win32::Windows::Win32::Foundation::PSTR pcszRootKey, win32::Windows::Win32::Foundation::PSTR pcszSubKey, win32::Windows::Win32::Foundation::PSTR pcszValueName, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWnd);
        ORBIT_TRACK_PARAM(pszTitleString);
        ORBIT_TRACK_PARAM(hkBckupKey);
        ORBIT_TRACK_PARAM(pcszRootKey);
        ORBIT_TRACK_PARAM(pcszSubKey);
        ORBIT_TRACK_PARAM(pcszValueName);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.RegSaveRestoreA(hWnd, pszTitleString, hkBckupKey, pcszRootKey, pcszSubKey, pcszValueName, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RegSaveRestoreW(win32::Windows::Win32::Foundation::HWND hWnd, win32::Windows::Win32::Foundation::PWSTR pszTitleString, win32::Windows::Win32::System::Registry::HKEY hkBckupKey, win32::Windows::Win32::Foundation::PWSTR pcszRootKey, win32::Windows::Win32::Foundation::PWSTR pcszSubKey, win32::Windows::Win32::Foundation::PWSTR pcszValueName, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWnd);
        ORBIT_TRACK_PARAM(pszTitleString);
        ORBIT_TRACK_PARAM(hkBckupKey);
        ORBIT_TRACK_PARAM(pcszRootKey);
        ORBIT_TRACK_PARAM(pcszSubKey);
        ORBIT_TRACK_PARAM(pcszValueName);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.RegSaveRestoreW(hWnd, pszTitleString, hkBckupKey, pcszRootKey, pcszSubKey, pcszValueName, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RegSaveRestoreOnINFA(win32::Windows::Win32::Foundation::HWND hWnd, win32::Windows::Win32::Foundation::PSTR pszTitle, win32::Windows::Win32::Foundation::PSTR pszINF, win32::Windows::Win32::Foundation::PSTR pszSection, win32::Windows::Win32::System::Registry::HKEY hHKLMBackKey, win32::Windows::Win32::System::Registry::HKEY hHKCUBackKey, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWnd);
        ORBIT_TRACK_PARAM(pszTitle);
        ORBIT_TRACK_PARAM(pszINF);
        ORBIT_TRACK_PARAM(pszSection);
        ORBIT_TRACK_PARAM(hHKLMBackKey);
        ORBIT_TRACK_PARAM(hHKCUBackKey);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.RegSaveRestoreOnINFA(hWnd, pszTitle, pszINF, pszSection, hHKLMBackKey, hHKCUBackKey, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RegSaveRestoreOnINFW(win32::Windows::Win32::Foundation::HWND hWnd, win32::Windows::Win32::Foundation::PWSTR pszTitle, win32::Windows::Win32::Foundation::PWSTR pszINF, win32::Windows::Win32::Foundation::PWSTR pszSection, win32::Windows::Win32::System::Registry::HKEY hHKLMBackKey, win32::Windows::Win32::System::Registry::HKEY hHKCUBackKey, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWnd);
        ORBIT_TRACK_PARAM(pszTitle);
        ORBIT_TRACK_PARAM(pszINF);
        ORBIT_TRACK_PARAM(pszSection);
        ORBIT_TRACK_PARAM(hHKLMBackKey);
        ORBIT_TRACK_PARAM(hHKCUBackKey);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.RegSaveRestoreOnINFW(hWnd, pszTitle, pszINF, pszSection, hHKLMBackKey, hHKCUBackKey, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RegRestoreAllA(win32::Windows::Win32::Foundation::HWND hWnd, win32::Windows::Win32::Foundation::PSTR pszTitleString, win32::Windows::Win32::System::Registry::HKEY hkBckupKey) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWnd);
        ORBIT_TRACK_PARAM(pszTitleString);
        ORBIT_TRACK_PARAM(hkBckupKey);

        auto win32_impl_result = g_api_table.RegRestoreAllA(hWnd, pszTitleString, hkBckupKey);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RegRestoreAllW(win32::Windows::Win32::Foundation::HWND hWnd, win32::Windows::Win32::Foundation::PWSTR pszTitleString, win32::Windows::Win32::System::Registry::HKEY hkBckupKey) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWnd);
        ORBIT_TRACK_PARAM(pszTitleString);
        ORBIT_TRACK_PARAM(hkBckupKey);

        auto win32_impl_result = g_api_table.RegRestoreAllW(hWnd, pszTitleString, hkBckupKey);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_FileSaveRestoreW(win32::Windows::Win32::Foundation::HWND hDlg, win32::Windows::Win32::Foundation::PWSTR lpFileList, win32::Windows::Win32::Foundation::PWSTR lpDir, win32::Windows::Win32::Foundation::PWSTR lpBaseName, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDlg);
        ORBIT_TRACK_PARAM(lpFileList);
        ORBIT_TRACK_PARAM(lpDir);
        ORBIT_TRACK_PARAM(lpBaseName);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.FileSaveRestoreW(hDlg, lpFileList, lpDir, lpBaseName, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_FileSaveRestoreOnINFA(win32::Windows::Win32::Foundation::HWND hWnd, win32::Windows::Win32::Foundation::PSTR pszTitle, win32::Windows::Win32::Foundation::PSTR pszINF, win32::Windows::Win32::Foundation::PSTR pszSection, win32::Windows::Win32::Foundation::PSTR pszBackupDir, win32::Windows::Win32::Foundation::PSTR pszBaseBackupFile, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWnd);
        ORBIT_TRACK_PARAM(pszTitle);
        ORBIT_TRACK_PARAM(pszINF);
        ORBIT_TRACK_PARAM(pszSection);
        ORBIT_TRACK_PARAM(pszBackupDir);
        ORBIT_TRACK_PARAM(pszBaseBackupFile);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.FileSaveRestoreOnINFA(hWnd, pszTitle, pszINF, pszSection, pszBackupDir, pszBaseBackupFile, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_FileSaveRestoreOnINFW(win32::Windows::Win32::Foundation::HWND hWnd, win32::Windows::Win32::Foundation::PWSTR pszTitle, win32::Windows::Win32::Foundation::PWSTR pszINF, win32::Windows::Win32::Foundation::PWSTR pszSection, win32::Windows::Win32::Foundation::PWSTR pszBackupDir, win32::Windows::Win32::Foundation::PWSTR pszBaseBackupFile, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWnd);
        ORBIT_TRACK_PARAM(pszTitle);
        ORBIT_TRACK_PARAM(pszINF);
        ORBIT_TRACK_PARAM(pszSection);
        ORBIT_TRACK_PARAM(pszBackupDir);
        ORBIT_TRACK_PARAM(pszBaseBackupFile);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.FileSaveRestoreOnINFW(hWnd, pszTitle, pszINF, pszSection, pszBackupDir, pszBaseBackupFile, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_AddDelBackupEntryA(win32::Windows::Win32::Foundation::PSTR lpcszFileList, win32::Windows::Win32::Foundation::PSTR lpcszBackupDir, win32::Windows::Win32::Foundation::PSTR lpcszBaseName, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpcszFileList);
        ORBIT_TRACK_PARAM(lpcszBackupDir);
        ORBIT_TRACK_PARAM(lpcszBaseName);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.AddDelBackupEntryA(lpcszFileList, lpcszBackupDir, lpcszBaseName, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_AddDelBackupEntryW(win32::Windows::Win32::Foundation::PWSTR lpcszFileList, win32::Windows::Win32::Foundation::PWSTR lpcszBackupDir, win32::Windows::Win32::Foundation::PWSTR lpcszBaseName, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpcszFileList);
        ORBIT_TRACK_PARAM(lpcszBackupDir);
        ORBIT_TRACK_PARAM(lpcszBaseName);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.AddDelBackupEntryW(lpcszFileList, lpcszBackupDir, lpcszBaseName, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_FileSaveMarkNotExistA(win32::Windows::Win32::Foundation::PSTR lpFileList, win32::Windows::Win32::Foundation::PSTR lpDir, win32::Windows::Win32::Foundation::PSTR lpBaseName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpFileList);
        ORBIT_TRACK_PARAM(lpDir);
        ORBIT_TRACK_PARAM(lpBaseName);

        auto win32_impl_result = g_api_table.FileSaveMarkNotExistA(lpFileList, lpDir, lpBaseName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_FileSaveMarkNotExistW(win32::Windows::Win32::Foundation::PWSTR lpFileList, win32::Windows::Win32::Foundation::PWSTR lpDir, win32::Windows::Win32::Foundation::PWSTR lpBaseName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpFileList);
        ORBIT_TRACK_PARAM(lpDir);
        ORBIT_TRACK_PARAM(lpBaseName);

        auto win32_impl_result = g_api_table.FileSaveMarkNotExistW(lpFileList, lpDir, lpBaseName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetVersionFromFileA(win32::Windows::Win32::Foundation::PSTR lpszFilename, uint32_t* pdwMSVer, uint32_t* pdwLSVer, win32::Windows::Win32::Foundation::BOOL bVersion) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszFilename);
        ORBIT_TRACK_PARAM(pdwMSVer);
        ORBIT_TRACK_PARAM(pdwLSVer);
        ORBIT_TRACK_PARAM(bVersion);

        auto win32_impl_result = g_api_table.GetVersionFromFileA(lpszFilename, pdwMSVer, pdwLSVer, bVersion);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetVersionFromFileW(win32::Windows::Win32::Foundation::PWSTR lpszFilename, uint32_t* pdwMSVer, uint32_t* pdwLSVer, win32::Windows::Win32::Foundation::BOOL bVersion) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszFilename);
        ORBIT_TRACK_PARAM(pdwMSVer);
        ORBIT_TRACK_PARAM(pdwLSVer);
        ORBIT_TRACK_PARAM(bVersion);

        auto win32_impl_result = g_api_table.GetVersionFromFileW(lpszFilename, pdwMSVer, pdwLSVer, bVersion);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetVersionFromFileExA(win32::Windows::Win32::Foundation::PSTR lpszFilename, uint32_t* pdwMSVer, uint32_t* pdwLSVer, win32::Windows::Win32::Foundation::BOOL bVersion) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszFilename);
        ORBIT_TRACK_PARAM(pdwMSVer);
        ORBIT_TRACK_PARAM(pdwLSVer);
        ORBIT_TRACK_PARAM(bVersion);

        auto win32_impl_result = g_api_table.GetVersionFromFileExA(lpszFilename, pdwMSVer, pdwLSVer, bVersion);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetVersionFromFileExW(win32::Windows::Win32::Foundation::PWSTR lpszFilename, uint32_t* pdwMSVer, uint32_t* pdwLSVer, win32::Windows::Win32::Foundation::BOOL bVersion) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszFilename);
        ORBIT_TRACK_PARAM(pdwMSVer);
        ORBIT_TRACK_PARAM(pdwLSVer);
        ORBIT_TRACK_PARAM(bVersion);

        auto win32_impl_result = g_api_table.GetVersionFromFileExW(lpszFilename, pdwMSVer, pdwLSVer, bVersion);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsNTAdmin(uint32_t dwReserved, uint32_t* lpdwReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwReserved);
        ORBIT_TRACK_PARAM(lpdwReserved);

        auto win32_impl_result = g_api_table.IsNTAdmin(dwReserved, lpdwReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DelNodeA(win32::Windows::Win32::Foundation::PSTR pszFileOrDirName, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszFileOrDirName);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.DelNodeA(pszFileOrDirName, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DelNodeW(win32::Windows::Win32::Foundation::PWSTR pszFileOrDirName, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszFileOrDirName);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.DelNodeW(pszFileOrDirName, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DelNodeRunDLL32W(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::HINSTANCE hInstance, win32::Windows::Win32::Foundation::PWSTR pszParms, int32_t nShow) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(hInstance);
        ORBIT_TRACK_PARAM(pszParms);
        ORBIT_TRACK_PARAM(nShow);

        auto win32_impl_result = g_api_table.DelNodeRunDLL32W(hwnd, hInstance, pszParms, nShow);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_OpenINFEngineA(win32::Windows::Win32::Foundation::PSTR pszInfFilename, win32::Windows::Win32::Foundation::PSTR pszInstallSection, uint32_t dwFlags, void** phInf, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszInfFilename);
        ORBIT_TRACK_PARAM(pszInstallSection);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(phInf);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.OpenINFEngineA(pszInfFilename, pszInstallSection, dwFlags, phInf, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_OpenINFEngineW(win32::Windows::Win32::Foundation::PWSTR pszInfFilename, win32::Windows::Win32::Foundation::PWSTR pszInstallSection, uint32_t dwFlags, void** phInf, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszInfFilename);
        ORBIT_TRACK_PARAM(pszInstallSection);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(phInf);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.OpenINFEngineW(pszInfFilename, pszInstallSection, dwFlags, phInf, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TranslateInfStringExA(void* hInf, win32::Windows::Win32::Foundation::PSTR pszInfFilename, win32::Windows::Win32::Foundation::PSTR pszTranslateSection, win32::Windows::Win32::Foundation::PSTR pszTranslateKey, win32::Windows::Win32::Foundation::PSTR pszBuffer, uint32_t dwBufferSize, uint32_t* pdwRequiredSize, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hInf);
        ORBIT_TRACK_PARAM(pszInfFilename);
        ORBIT_TRACK_PARAM(pszTranslateSection);
        ORBIT_TRACK_PARAM(pszTranslateKey);
        ORBIT_TRACK_PARAM(pszBuffer);
        ORBIT_TRACK_PARAM(dwBufferSize);
        ORBIT_TRACK_PARAM(pdwRequiredSize);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.TranslateInfStringExA(hInf, pszInfFilename, pszTranslateSection, pszTranslateKey, pszBuffer, dwBufferSize, pdwRequiredSize, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TranslateInfStringExW(void* hInf, win32::Windows::Win32::Foundation::PWSTR pszInfFilename, win32::Windows::Win32::Foundation::PWSTR pszTranslateSection, win32::Windows::Win32::Foundation::PWSTR pszTranslateKey, win32::Windows::Win32::Foundation::PWSTR pszBuffer, uint32_t dwBufferSize, uint32_t* pdwRequiredSize, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hInf);
        ORBIT_TRACK_PARAM(pszInfFilename);
        ORBIT_TRACK_PARAM(pszTranslateSection);
        ORBIT_TRACK_PARAM(pszTranslateKey);
        ORBIT_TRACK_PARAM(pszBuffer);
        ORBIT_TRACK_PARAM(dwBufferSize);
        ORBIT_TRACK_PARAM(pdwRequiredSize);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.TranslateInfStringExW(hInf, pszInfFilename, pszTranslateSection, pszTranslateKey, pszBuffer, dwBufferSize, pdwRequiredSize, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CloseINFEngine(void* hInf) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hInf);

        auto win32_impl_result = g_api_table.CloseINFEngine(hInf);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ExtractFilesA(win32::Windows::Win32::Foundation::PSTR pszCabName, win32::Windows::Win32::Foundation::PSTR pszExpandDir, uint32_t dwFlags, win32::Windows::Win32::Foundation::PSTR pszFileList, void* lpReserved, uint32_t dwReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszCabName);
        ORBIT_TRACK_PARAM(pszExpandDir);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(pszFileList);
        ORBIT_TRACK_PARAM(lpReserved);
        ORBIT_TRACK_PARAM(dwReserved);

        auto win32_impl_result = g_api_table.ExtractFilesA(pszCabName, pszExpandDir, dwFlags, pszFileList, lpReserved, dwReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ExtractFilesW(win32::Windows::Win32::Foundation::PWSTR pszCabName, win32::Windows::Win32::Foundation::PWSTR pszExpandDir, uint32_t dwFlags, win32::Windows::Win32::Foundation::PWSTR pszFileList, void* lpReserved, uint32_t dwReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszCabName);
        ORBIT_TRACK_PARAM(pszExpandDir);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(pszFileList);
        ORBIT_TRACK_PARAM(lpReserved);
        ORBIT_TRACK_PARAM(dwReserved);

        auto win32_impl_result = g_api_table.ExtractFilesW(pszCabName, pszExpandDir, dwFlags, pszFileList, lpReserved, dwReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_LaunchINFSectionW(win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::Foundation::HINSTANCE hInstance, win32::Windows::Win32::Foundation::PWSTR pszParams, int32_t nShow) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(hInstance);
        ORBIT_TRACK_PARAM(pszParams);
        ORBIT_TRACK_PARAM(nShow);

        auto win32_impl_result = g_api_table.LaunchINFSectionW(hwndOwner, hInstance, pszParams, nShow);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UserInstStubWrapperA(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::HINSTANCE hInstance, win32::Windows::Win32::Foundation::PSTR pszParms, int32_t nShow) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(hInstance);
        ORBIT_TRACK_PARAM(pszParms);
        ORBIT_TRACK_PARAM(nShow);

        auto win32_impl_result = g_api_table.UserInstStubWrapperA(hwnd, hInstance, pszParms, nShow);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UserInstStubWrapperW(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::HINSTANCE hInstance, win32::Windows::Win32::Foundation::PWSTR pszParms, int32_t nShow) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(hInstance);
        ORBIT_TRACK_PARAM(pszParms);
        ORBIT_TRACK_PARAM(nShow);

        auto win32_impl_result = g_api_table.UserInstStubWrapperW(hwnd, hInstance, pszParms, nShow);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UserUnInstStubWrapperA(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::HINSTANCE hInstance, win32::Windows::Win32::Foundation::PSTR pszParms, int32_t nShow) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(hInstance);
        ORBIT_TRACK_PARAM(pszParms);
        ORBIT_TRACK_PARAM(nShow);

        auto win32_impl_result = g_api_table.UserUnInstStubWrapperA(hwnd, hInstance, pszParms, nShow);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UserUnInstStubWrapperW(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::HINSTANCE hInstance, win32::Windows::Win32::Foundation::PWSTR pszParms, int32_t nShow) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(hInstance);
        ORBIT_TRACK_PARAM(pszParms);
        ORBIT_TRACK_PARAM(nShow);

        auto win32_impl_result = g_api_table.UserUnInstStubWrapperW(hwnd, hInstance, pszParms, nShow);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SetPerUserSecValuesA(win32::Windows::Win32::System::WindowsProgramming::PERUSERSECTIONA* pPerUser) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pPerUser);

        auto win32_impl_result = g_api_table.SetPerUserSecValuesA(pPerUser);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SetPerUserSecValuesW(win32::Windows::Win32::System::WindowsProgramming::PERUSERSECTIONW* pPerUser) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pPerUser);

        auto win32_impl_result = g_api_table.SetPerUserSecValuesW(pPerUser);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::LRESULT __stdcall ORBIT_IMPL_SendIMEMessageExA(win32::Windows::Win32::Foundation::HWND param0, win32::Windows::Win32::Foundation::LPARAM param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.SendIMEMessageExA(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::LRESULT __stdcall ORBIT_IMPL_SendIMEMessageExW(win32::Windows::Win32::Foundation::HWND param0, win32::Windows::Win32::Foundation::LPARAM param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.SendIMEMessageExW(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IMPGetIMEA(win32::Windows::Win32::Foundation::HWND param0, win32::Windows::Win32::System::WindowsProgramming::IMEPROA* param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.IMPGetIMEA(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IMPGetIMEW(win32::Windows::Win32::Foundation::HWND param0, win32::Windows::Win32::System::WindowsProgramming::IMEPROW* param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.IMPGetIMEW(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IMPQueryIMEA(win32::Windows::Win32::System::WindowsProgramming::IMEPROA* param0) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);

        auto win32_impl_result = g_api_table.IMPQueryIMEA(param0);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IMPQueryIMEW(win32::Windows::Win32::System::WindowsProgramming::IMEPROW* param0) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);

        auto win32_impl_result = g_api_table.IMPQueryIMEW(param0);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IMPSetIMEA(win32::Windows::Win32::Foundation::HWND param0, win32::Windows::Win32::System::WindowsProgramming::IMEPROA* param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.IMPSetIMEA(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IMPSetIMEW(win32::Windows::Win32::Foundation::HWND param0, win32::Windows::Win32::System::WindowsProgramming::IMEPROW* param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.IMPSetIMEW(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WINNLSGetIMEHotkey(win32::Windows::Win32::Foundation::HWND param0) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);

        auto win32_impl_result = g_api_table.WINNLSGetIMEHotkey(param0);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WINNLSEnableIME(win32::Windows::Win32::Foundation::HWND param0, win32::Windows::Win32::Foundation::BOOL param1) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(param1);

        auto win32_impl_result = g_api_table.WINNLSEnableIME(param0, param1);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WINNLSGetEnableStatus(win32::Windows::Win32::Foundation::HWND param0) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);

        auto win32_impl_result = g_api_table.WINNLSGetEnableStatus(param0);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ApphelpCheckShellObject(::win32::guid* ObjectCLSID, win32::Windows::Win32::Foundation::BOOL bShimIfNecessary, uint64_t* pullFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ObjectCLSID);
        ORBIT_TRACK_PARAM(bShimIfNecessary);
        ORBIT_TRACK_PARAM(pullFlags);

        auto win32_impl_result = g_api_table.ApphelpCheckShellObject(ObjectCLSID, bShimIfNecessary, pullFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WldpGetLockdownPolicy(win32::Windows::Win32::System::WindowsProgramming::WLDP_HOST_INFORMATION* hostInformation, uint32_t* lockdownState, uint32_t lockdownFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hostInformation);
        ORBIT_TRACK_PARAM(lockdownState);
        ORBIT_TRACK_PARAM(lockdownFlags);

        auto win32_impl_result = g_api_table.WldpGetLockdownPolicy(hostInformation, lockdownState, lockdownFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WldpIsClassInApprovedList(::win32::guid* classID, win32::Windows::Win32::System::WindowsProgramming::WLDP_HOST_INFORMATION* hostInformation, win32::Windows::Win32::Foundation::BOOL* isApproved, uint32_t optionalFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(classID);
        ORBIT_TRACK_PARAM(hostInformation);
        ORBIT_TRACK_PARAM(isApproved);
        ORBIT_TRACK_PARAM(optionalFlags);

        auto win32_impl_result = g_api_table.WldpIsClassInApprovedList(classID, hostInformation, isApproved, optionalFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WldpSetDynamicCodeTrust(win32::Windows::Win32::Foundation::HANDLE fileHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(fileHandle);

        auto win32_impl_result = g_api_table.WldpSetDynamicCodeTrust(fileHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WldpIsDynamicCodePolicyEnabled(win32::Windows::Win32::Foundation::BOOL* isEnabled) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(isEnabled);

        auto win32_impl_result = g_api_table.WldpIsDynamicCodePolicyEnabled(isEnabled);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WldpQueryDynamicCodeTrust(win32::Windows::Win32::Foundation::HANDLE fileHandle, void* baseImage, uint32_t imageSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(fileHandle);
        ORBIT_TRACK_PARAM(baseImage);
        ORBIT_TRACK_PARAM(imageSize);

        auto win32_impl_result = g_api_table.WldpQueryDynamicCodeTrust(fileHandle, baseImage, imageSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WldpQueryDeviceSecurityInformation(win32::Windows::Win32::System::WindowsProgramming::WLDP_DEVICE_SECURITY_INFORMATION* information, uint32_t informationLength, uint32_t* returnLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(information);
        ORBIT_TRACK_PARAM(informationLength);
        ORBIT_TRACK_PARAM(returnLength);

        auto win32_impl_result = g_api_table.WldpQueryDeviceSecurityInformation(information, informationLength, returnLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
