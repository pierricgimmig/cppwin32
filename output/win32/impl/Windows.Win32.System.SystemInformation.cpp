// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_SystemInformation_2_H
#define WIN32_Windows_Win32_System_SystemInformation_2_H
#include "win32/Windows.Win32.System.SystemInformation.h"
#include "win32/impl/Windows.Win32.System.SystemInformation.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::System::SystemInformation
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GlobalMemoryStatusEx(win32::Windows::Win32::System::SystemInformation::MEMORYSTATUSEX* lpBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpBuffer);

        auto win32_impl_result = g_api_table.GlobalMemoryStatusEx(lpBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_GetSystemInfo(win32::Windows::Win32::System::SystemInformation::SYSTEM_INFO* lpSystemInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemInfo);

        g_api_table.GetSystemInfo(lpSystemInfo);
        
    }

    void __stdcall ORBIT_IMPL_GetSystemTime(win32::Windows::Win32::Foundation::SYSTEMTIME* lpSystemTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemTime);

        g_api_table.GetSystemTime(lpSystemTime);
        
    }

    void __stdcall ORBIT_IMPL_GetSystemTimeAsFileTime(win32::Windows::Win32::Foundation::FILETIME* lpSystemTimeAsFileTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemTimeAsFileTime);

        g_api_table.GetSystemTimeAsFileTime(lpSystemTimeAsFileTime);
        
    }

    void __stdcall ORBIT_IMPL_GetLocalTime(win32::Windows::Win32::Foundation::SYSTEMTIME* lpSystemTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemTime);

        g_api_table.GetLocalTime(lpSystemTime);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsUserCetAvailableInEnvironment(win32::Windows::Win32::System::SystemInformation::USER_CET_ENVIRONMENT UserCetEnvironment) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(UserCetEnvironment);

        auto win32_impl_result = g_api_table.IsUserCetAvailableInEnvironment(UserCetEnvironment);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetSystemLeapSecondInformation(win32::Windows::Win32::Foundation::BOOL* Enabled, uint32_t* Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Enabled);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.GetSystemLeapSecondInformation(Enabled, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetVersion() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.GetVersion();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetLocalTime(win32::Windows::Win32::Foundation::SYSTEMTIME* lpSystemTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemTime);

        auto win32_impl_result = g_api_table.SetLocalTime(lpSystemTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetTickCount() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.GetTickCount();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint64_t __stdcall ORBIT_IMPL_GetTickCount64() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.GetTickCount64();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetSystemTimeAdjustment(uint32_t* lpTimeAdjustment, uint32_t* lpTimeIncrement, win32::Windows::Win32::Foundation::BOOL* lpTimeAdjustmentDisabled) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpTimeAdjustment);
        ORBIT_TRACK_PARAM(lpTimeIncrement);
        ORBIT_TRACK_PARAM(lpTimeAdjustmentDisabled);

        auto win32_impl_result = g_api_table.GetSystemTimeAdjustment(lpTimeAdjustment, lpTimeIncrement, lpTimeAdjustmentDisabled);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetSystemTimeAdjustmentPrecise(uint64_t* lpTimeAdjustment, uint64_t* lpTimeIncrement, win32::Windows::Win32::Foundation::BOOL* lpTimeAdjustmentDisabled) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpTimeAdjustment);
        ORBIT_TRACK_PARAM(lpTimeIncrement);
        ORBIT_TRACK_PARAM(lpTimeAdjustmentDisabled);

        auto win32_impl_result = g_api_table.GetSystemTimeAdjustmentPrecise(lpTimeAdjustment, lpTimeIncrement, lpTimeAdjustmentDisabled);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetSystemDirectoryA(win32::Windows::Win32::Foundation::PSTR lpBuffer, uint32_t uSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(uSize);

        auto win32_impl_result = g_api_table.GetSystemDirectoryA(lpBuffer, uSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetSystemDirectoryW(win32::Windows::Win32::Foundation::PWSTR lpBuffer, uint32_t uSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(uSize);

        auto win32_impl_result = g_api_table.GetSystemDirectoryW(lpBuffer, uSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetWindowsDirectoryA(win32::Windows::Win32::Foundation::PSTR lpBuffer, uint32_t uSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(uSize);

        auto win32_impl_result = g_api_table.GetWindowsDirectoryA(lpBuffer, uSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetWindowsDirectoryW(win32::Windows::Win32::Foundation::PWSTR lpBuffer, uint32_t uSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(uSize);

        auto win32_impl_result = g_api_table.GetWindowsDirectoryW(lpBuffer, uSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetSystemWindowsDirectoryA(win32::Windows::Win32::Foundation::PSTR lpBuffer, uint32_t uSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(uSize);

        auto win32_impl_result = g_api_table.GetSystemWindowsDirectoryA(lpBuffer, uSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetSystemWindowsDirectoryW(win32::Windows::Win32::Foundation::PWSTR lpBuffer, uint32_t uSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(uSize);

        auto win32_impl_result = g_api_table.GetSystemWindowsDirectoryW(lpBuffer, uSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetComputerNameExA(win32::Windows::Win32::System::SystemInformation::COMPUTER_NAME_FORMAT NameType, win32::Windows::Win32::Foundation::PSTR lpBuffer, uint32_t* nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NameType);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.GetComputerNameExA(NameType, lpBuffer, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetComputerNameExW(win32::Windows::Win32::System::SystemInformation::COMPUTER_NAME_FORMAT NameType, win32::Windows::Win32::Foundation::PWSTR lpBuffer, uint32_t* nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NameType);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.GetComputerNameExW(NameType, lpBuffer, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetComputerNameExW(win32::Windows::Win32::System::SystemInformation::COMPUTER_NAME_FORMAT NameType, win32::Windows::Win32::Foundation::PWSTR lpBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NameType);
        ORBIT_TRACK_PARAM(lpBuffer);

        auto win32_impl_result = g_api_table.SetComputerNameExW(NameType, lpBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetSystemTime(win32::Windows::Win32::Foundation::SYSTEMTIME* lpSystemTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemTime);

        auto win32_impl_result = g_api_table.SetSystemTime(lpSystemTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetVersionExA(win32::Windows::Win32::System::SystemInformation::OSVERSIONINFOA* lpVersionInformation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpVersionInformation);

        auto win32_impl_result = g_api_table.GetVersionExA(lpVersionInformation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetVersionExW(win32::Windows::Win32::System::SystemInformation::OSVERSIONINFOW* lpVersionInformation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpVersionInformation);

        auto win32_impl_result = g_api_table.GetVersionExW(lpVersionInformation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetLogicalProcessorInformation(win32::Windows::Win32::System::SystemInformation::SYSTEM_LOGICAL_PROCESSOR_INFORMATION* Buffer, uint32_t* ReturnedLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(ReturnedLength);

        auto win32_impl_result = g_api_table.GetLogicalProcessorInformation(Buffer, ReturnedLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetLogicalProcessorInformationEx(win32::Windows::Win32::System::SystemInformation::LOGICAL_PROCESSOR_RELATIONSHIP RelationshipType, win32::Windows::Win32::System::SystemInformation::SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX* Buffer, uint32_t* ReturnedLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RelationshipType);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(ReturnedLength);

        auto win32_impl_result = g_api_table.GetLogicalProcessorInformationEx(RelationshipType, Buffer, ReturnedLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_GetNativeSystemInfo(win32::Windows::Win32::System::SystemInformation::SYSTEM_INFO* lpSystemInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemInfo);

        g_api_table.GetNativeSystemInfo(lpSystemInfo);
        
    }

    void __stdcall ORBIT_IMPL_GetSystemTimePreciseAsFileTime(win32::Windows::Win32::Foundation::FILETIME* lpSystemTimeAsFileTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemTimeAsFileTime);

        g_api_table.GetSystemTimePreciseAsFileTime(lpSystemTimeAsFileTime);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetProductInfo(uint32_t dwOSMajorVersion, uint32_t dwOSMinorVersion, uint32_t dwSpMajorVersion, uint32_t dwSpMinorVersion, win32::Windows::Win32::System::SystemInformation::OS_PRODUCT_TYPE* pdwReturnedProductType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwOSMajorVersion);
        ORBIT_TRACK_PARAM(dwOSMinorVersion);
        ORBIT_TRACK_PARAM(dwSpMajorVersion);
        ORBIT_TRACK_PARAM(dwSpMinorVersion);
        ORBIT_TRACK_PARAM(pdwReturnedProductType);

        auto win32_impl_result = g_api_table.GetProductInfo(dwOSMajorVersion, dwOSMinorVersion, dwSpMajorVersion, dwSpMinorVersion, pdwReturnedProductType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint64_t __stdcall ORBIT_IMPL_VerSetConditionMask(uint64_t ConditionMask, win32::Windows::Win32::System::SystemInformation::VER_FLAGS TypeMask, uint8_t Condition) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ConditionMask);
        ORBIT_TRACK_PARAM(TypeMask);
        ORBIT_TRACK_PARAM(Condition);

        auto win32_impl_result = g_api_table.VerSetConditionMask(ConditionMask, TypeMask, Condition);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetOsSafeBootMode(uint32_t* Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.GetOsSafeBootMode(Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_EnumSystemFirmwareTables(win32::Windows::Win32::System::SystemInformation::FIRMWARE_TABLE_PROVIDER FirmwareTableProviderSignature, win32::Windows::Win32::System::SystemInformation::FIRMWARE_TABLE_ID* pFirmwareTableEnumBuffer, uint32_t BufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FirmwareTableProviderSignature);
        ORBIT_TRACK_PARAM(pFirmwareTableEnumBuffer);
        ORBIT_TRACK_PARAM(BufferSize);

        auto win32_impl_result = g_api_table.EnumSystemFirmwareTables(FirmwareTableProviderSignature, pFirmwareTableEnumBuffer, BufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetSystemFirmwareTable(win32::Windows::Win32::System::SystemInformation::FIRMWARE_TABLE_PROVIDER FirmwareTableProviderSignature, win32::Windows::Win32::System::SystemInformation::FIRMWARE_TABLE_ID FirmwareTableID, void* pFirmwareTableBuffer, uint32_t BufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FirmwareTableProviderSignature);
        ORBIT_TRACK_PARAM(FirmwareTableID);
        ORBIT_TRACK_PARAM(pFirmwareTableBuffer);
        ORBIT_TRACK_PARAM(BufferSize);

        auto win32_impl_result = g_api_table.GetSystemFirmwareTable(FirmwareTableProviderSignature, FirmwareTableID, pFirmwareTableBuffer, BufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DnsHostnameToComputerNameExW(win32::Windows::Win32::Foundation::PWSTR Hostname, win32::Windows::Win32::Foundation::PWSTR ComputerName, uint32_t* nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Hostname);
        ORBIT_TRACK_PARAM(ComputerName);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.DnsHostnameToComputerNameExW(Hostname, ComputerName, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPhysicallyInstalledSystemMemory(uint64_t* TotalMemoryInKilobytes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TotalMemoryInKilobytes);

        auto win32_impl_result = g_api_table.GetPhysicallyInstalledSystemMemory(TotalMemoryInKilobytes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetComputerNameEx2W(win32::Windows::Win32::System::SystemInformation::COMPUTER_NAME_FORMAT NameType, uint32_t Flags, win32::Windows::Win32::Foundation::PWSTR lpBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NameType);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(lpBuffer);

        auto win32_impl_result = g_api_table.SetComputerNameEx2W(NameType, Flags, lpBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetSystemTimeAdjustment(uint32_t dwTimeAdjustment, win32::Windows::Win32::Foundation::BOOL bTimeAdjustmentDisabled) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwTimeAdjustment);
        ORBIT_TRACK_PARAM(bTimeAdjustmentDisabled);

        auto win32_impl_result = g_api_table.SetSystemTimeAdjustment(dwTimeAdjustment, bTimeAdjustmentDisabled);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetSystemTimeAdjustmentPrecise(uint64_t dwTimeAdjustment, win32::Windows::Win32::Foundation::BOOL bTimeAdjustmentDisabled) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwTimeAdjustment);
        ORBIT_TRACK_PARAM(bTimeAdjustmentDisabled);

        auto win32_impl_result = g_api_table.SetSystemTimeAdjustmentPrecise(dwTimeAdjustment, bTimeAdjustmentDisabled);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetProcessorSystemCycleTime(uint16_t Group, win32::Windows::Win32::System::SystemInformation::SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION* Buffer, uint32_t* ReturnedLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Group);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(ReturnedLength);

        auto win32_impl_result = g_api_table.GetProcessorSystemCycleTime(Group, Buffer, ReturnedLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetOsManufacturingMode(win32::Windows::Win32::Foundation::BOOL* pbEnabled) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pbEnabled);

        auto win32_impl_result = g_api_table.GetOsManufacturingMode(pbEnabled);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetIntegratedDisplaySize(double* sizeInInches) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(sizeInInches);

        auto win32_impl_result = g_api_table.GetIntegratedDisplaySize(sizeInInches);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetComputerNameA(win32::Windows::Win32::Foundation::PSTR lpComputerName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpComputerName);

        auto win32_impl_result = g_api_table.SetComputerNameA(lpComputerName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetComputerNameW(win32::Windows::Win32::Foundation::PWSTR lpComputerName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpComputerName);

        auto win32_impl_result = g_api_table.SetComputerNameW(lpComputerName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetComputerNameExA(win32::Windows::Win32::System::SystemInformation::COMPUTER_NAME_FORMAT NameType, win32::Windows::Win32::Foundation::PSTR lpBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NameType);
        ORBIT_TRACK_PARAM(lpBuffer);

        auto win32_impl_result = g_api_table.SetComputerNameExA(NameType, lpBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetSystemWow64DirectoryA(win32::Windows::Win32::Foundation::PSTR lpBuffer, uint32_t uSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(uSize);

        auto win32_impl_result = g_api_table.GetSystemWow64DirectoryA(lpBuffer, uSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetSystemWow64DirectoryW(win32::Windows::Win32::Foundation::PWSTR lpBuffer, uint32_t uSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(uSize);

        auto win32_impl_result = g_api_table.GetSystemWow64DirectoryW(lpBuffer, uSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetSystemWow64Directory2A(win32::Windows::Win32::Foundation::PSTR lpBuffer, uint32_t uSize, uint16_t ImageFileMachineType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(uSize);
        ORBIT_TRACK_PARAM(ImageFileMachineType);

        auto win32_impl_result = g_api_table.GetSystemWow64Directory2A(lpBuffer, uSize, ImageFileMachineType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetSystemWow64Directory2W(win32::Windows::Win32::Foundation::PWSTR lpBuffer, uint32_t uSize, uint16_t ImageFileMachineType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(uSize);
        ORBIT_TRACK_PARAM(ImageFileMachineType);

        auto win32_impl_result = g_api_table.GetSystemWow64Directory2W(lpBuffer, uSize, ImageFileMachineType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_IsWow64GuestMachineSupported(uint16_t WowGuestMachine, win32::Windows::Win32::Foundation::BOOL* MachineIsSupported) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(WowGuestMachine);
        ORBIT_TRACK_PARAM(MachineIsSupported);

        auto win32_impl_result = g_api_table.IsWow64GuestMachineSupported(WowGuestMachine, MachineIsSupported);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_GlobalMemoryStatus(win32::Windows::Win32::System::SystemInformation::MEMORYSTATUS* lpBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpBuffer);

        g_api_table.GlobalMemoryStatus(lpBuffer);
        
    }

    win32::Windows::Win32::System::SystemInformation::DEP_SYSTEM_POLICY_TYPE __stdcall ORBIT_IMPL_GetSystemDEPPolicy() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.GetSystemDEPPolicy();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetFirmwareType(win32::Windows::Win32::System::SystemInformation::FIRMWARE_TYPE* FirmwareType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FirmwareType);

        auto win32_impl_result = g_api_table.GetFirmwareType(FirmwareType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_VerifyVersionInfoA(win32::Windows::Win32::System::SystemInformation::OSVERSIONINFOEXA* lpVersionInformation, win32::Windows::Win32::System::SystemInformation::VER_FLAGS dwTypeMask, uint64_t dwlConditionMask) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpVersionInformation);
        ORBIT_TRACK_PARAM(dwTypeMask);
        ORBIT_TRACK_PARAM(dwlConditionMask);

        auto win32_impl_result = g_api_table.VerifyVersionInfoA(lpVersionInformation, dwTypeMask, dwlConditionMask);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_VerifyVersionInfoW(win32::Windows::Win32::System::SystemInformation::OSVERSIONINFOEXW* lpVersionInformation, win32::Windows::Win32::System::SystemInformation::VER_FLAGS dwTypeMask, uint64_t dwlConditionMask) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpVersionInformation);
        ORBIT_TRACK_PARAM(dwTypeMask);
        ORBIT_TRACK_PARAM(dwlConditionMask);

        auto win32_impl_result = g_api_table.VerifyVersionInfoW(lpVersionInformation, dwTypeMask, dwlConditionMask);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
