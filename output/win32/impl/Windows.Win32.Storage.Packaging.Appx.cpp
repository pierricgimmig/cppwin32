// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Storage_Packaging_Appx_2_H
#define WIN32_Windows_Win32_Storage_Packaging_Appx_2_H
#include "win32/Windows.Win32.Storage.Packaging.Appx.h"
#include "win32/impl/Windows.Win32.Storage.Packaging.Appx.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::Storage::Packaging::Appx
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    int32_t __stdcall ORBIT_IMPL_GetCurrentPackageId(uint32_t* bufferLength, uint8_t* buffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(bufferLength);
        ORBIT_TRACK_PARAM(buffer);

        auto win32_impl_result = g_api_table.GetCurrentPackageId(bufferLength, buffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetCurrentPackageFullName(uint32_t* packageFullNameLength, win32::Windows::Win32::Foundation::PWSTR packageFullName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFullNameLength);
        ORBIT_TRACK_PARAM(packageFullName);

        auto win32_impl_result = g_api_table.GetCurrentPackageFullName(packageFullNameLength, packageFullName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetCurrentPackageFamilyName(uint32_t* packageFamilyNameLength, win32::Windows::Win32::Foundation::PWSTR packageFamilyName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFamilyNameLength);
        ORBIT_TRACK_PARAM(packageFamilyName);

        auto win32_impl_result = g_api_table.GetCurrentPackageFamilyName(packageFamilyNameLength, packageFamilyName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetCurrentPackagePath(uint32_t* pathLength, win32::Windows::Win32::Foundation::PWSTR path) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pathLength);
        ORBIT_TRACK_PARAM(path);

        auto win32_impl_result = g_api_table.GetCurrentPackagePath(pathLength, path);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetPackageId(win32::Windows::Win32::Foundation::HANDLE hProcess, uint32_t* bufferLength, uint8_t* buffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(bufferLength);
        ORBIT_TRACK_PARAM(buffer);

        auto win32_impl_result = g_api_table.GetPackageId(hProcess, bufferLength, buffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetPackageFullName(win32::Windows::Win32::Foundation::HANDLE hProcess, uint32_t* packageFullNameLength, win32::Windows::Win32::Foundation::PWSTR packageFullName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(packageFullNameLength);
        ORBIT_TRACK_PARAM(packageFullName);

        auto win32_impl_result = g_api_table.GetPackageFullName(hProcess, packageFullNameLength, packageFullName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetPackageFullNameFromToken(win32::Windows::Win32::Foundation::HANDLE token, uint32_t* packageFullNameLength, win32::Windows::Win32::Foundation::PWSTR packageFullName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(token);
        ORBIT_TRACK_PARAM(packageFullNameLength);
        ORBIT_TRACK_PARAM(packageFullName);

        auto win32_impl_result = g_api_table.GetPackageFullNameFromToken(token, packageFullNameLength, packageFullName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetPackageFamilyName(win32::Windows::Win32::Foundation::HANDLE hProcess, uint32_t* packageFamilyNameLength, win32::Windows::Win32::Foundation::PWSTR packageFamilyName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(packageFamilyNameLength);
        ORBIT_TRACK_PARAM(packageFamilyName);

        auto win32_impl_result = g_api_table.GetPackageFamilyName(hProcess, packageFamilyNameLength, packageFamilyName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetPackageFamilyNameFromToken(win32::Windows::Win32::Foundation::HANDLE token, uint32_t* packageFamilyNameLength, win32::Windows::Win32::Foundation::PWSTR packageFamilyName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(token);
        ORBIT_TRACK_PARAM(packageFamilyNameLength);
        ORBIT_TRACK_PARAM(packageFamilyName);

        auto win32_impl_result = g_api_table.GetPackageFamilyNameFromToken(token, packageFamilyNameLength, packageFamilyName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetPackagePath(win32::Windows::Win32::Storage::Packaging::Appx::PACKAGE_ID* packageId, uint32_t reserved, uint32_t* pathLength, win32::Windows::Win32::Foundation::PWSTR path) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageId);
        ORBIT_TRACK_PARAM(reserved);
        ORBIT_TRACK_PARAM(pathLength);
        ORBIT_TRACK_PARAM(path);

        auto win32_impl_result = g_api_table.GetPackagePath(packageId, reserved, pathLength, path);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetPackagePathByFullName(win32::Windows::Win32::Foundation::PWSTR packageFullName, uint32_t* pathLength, win32::Windows::Win32::Foundation::PWSTR path) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFullName);
        ORBIT_TRACK_PARAM(pathLength);
        ORBIT_TRACK_PARAM(path);

        auto win32_impl_result = g_api_table.GetPackagePathByFullName(packageFullName, pathLength, path);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetStagedPackagePathByFullName(win32::Windows::Win32::Foundation::PWSTR packageFullName, uint32_t* pathLength, win32::Windows::Win32::Foundation::PWSTR path) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFullName);
        ORBIT_TRACK_PARAM(pathLength);
        ORBIT_TRACK_PARAM(path);

        auto win32_impl_result = g_api_table.GetStagedPackagePathByFullName(packageFullName, pathLength, path);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetPackagePathByFullName2(win32::Windows::Win32::Foundation::PWSTR packageFullName, win32::Windows::Win32::Storage::Packaging::Appx::PackagePathType packagePathType, uint32_t* pathLength, win32::Windows::Win32::Foundation::PWSTR path) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFullName);
        ORBIT_TRACK_PARAM(packagePathType);
        ORBIT_TRACK_PARAM(pathLength);
        ORBIT_TRACK_PARAM(path);

        auto win32_impl_result = g_api_table.GetPackagePathByFullName2(packageFullName, packagePathType, pathLength, path);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetStagedPackagePathByFullName2(win32::Windows::Win32::Foundation::PWSTR packageFullName, win32::Windows::Win32::Storage::Packaging::Appx::PackagePathType packagePathType, uint32_t* pathLength, win32::Windows::Win32::Foundation::PWSTR path) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFullName);
        ORBIT_TRACK_PARAM(packagePathType);
        ORBIT_TRACK_PARAM(pathLength);
        ORBIT_TRACK_PARAM(path);

        auto win32_impl_result = g_api_table.GetStagedPackagePathByFullName2(packageFullName, packagePathType, pathLength, path);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetCurrentPackageInfo2(uint32_t flags, win32::Windows::Win32::Storage::Packaging::Appx::PackagePathType packagePathType, uint32_t* bufferLength, uint8_t* buffer, uint32_t* count) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(packagePathType);
        ORBIT_TRACK_PARAM(bufferLength);
        ORBIT_TRACK_PARAM(buffer);
        ORBIT_TRACK_PARAM(count);

        auto win32_impl_result = g_api_table.GetCurrentPackageInfo2(flags, packagePathType, bufferLength, buffer, count);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetCurrentPackagePath2(win32::Windows::Win32::Storage::Packaging::Appx::PackagePathType packagePathType, uint32_t* pathLength, win32::Windows::Win32::Foundation::PWSTR path) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packagePathType);
        ORBIT_TRACK_PARAM(pathLength);
        ORBIT_TRACK_PARAM(path);

        auto win32_impl_result = g_api_table.GetCurrentPackagePath2(packagePathType, pathLength, path);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetCurrentApplicationUserModelId(uint32_t* applicationUserModelIdLength, win32::Windows::Win32::Foundation::PWSTR applicationUserModelId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(applicationUserModelIdLength);
        ORBIT_TRACK_PARAM(applicationUserModelId);

        auto win32_impl_result = g_api_table.GetCurrentApplicationUserModelId(applicationUserModelIdLength, applicationUserModelId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetApplicationUserModelId(win32::Windows::Win32::Foundation::HANDLE hProcess, uint32_t* applicationUserModelIdLength, win32::Windows::Win32::Foundation::PWSTR applicationUserModelId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(applicationUserModelIdLength);
        ORBIT_TRACK_PARAM(applicationUserModelId);

        auto win32_impl_result = g_api_table.GetApplicationUserModelId(hProcess, applicationUserModelIdLength, applicationUserModelId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetApplicationUserModelIdFromToken(win32::Windows::Win32::Foundation::HANDLE token, uint32_t* applicationUserModelIdLength, win32::Windows::Win32::Foundation::PWSTR applicationUserModelId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(token);
        ORBIT_TRACK_PARAM(applicationUserModelIdLength);
        ORBIT_TRACK_PARAM(applicationUserModelId);

        auto win32_impl_result = g_api_table.GetApplicationUserModelIdFromToken(token, applicationUserModelIdLength, applicationUserModelId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_VerifyPackageFullName(win32::Windows::Win32::Foundation::PWSTR packageFullName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFullName);

        auto win32_impl_result = g_api_table.VerifyPackageFullName(packageFullName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_VerifyPackageFamilyName(win32::Windows::Win32::Foundation::PWSTR packageFamilyName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFamilyName);

        auto win32_impl_result = g_api_table.VerifyPackageFamilyName(packageFamilyName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_VerifyPackageId(win32::Windows::Win32::Storage::Packaging::Appx::PACKAGE_ID* packageId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageId);

        auto win32_impl_result = g_api_table.VerifyPackageId(packageId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_VerifyApplicationUserModelId(win32::Windows::Win32::Foundation::PWSTR applicationUserModelId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(applicationUserModelId);

        auto win32_impl_result = g_api_table.VerifyApplicationUserModelId(applicationUserModelId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_VerifyPackageRelativeApplicationId(win32::Windows::Win32::Foundation::PWSTR packageRelativeApplicationId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageRelativeApplicationId);

        auto win32_impl_result = g_api_table.VerifyPackageRelativeApplicationId(packageRelativeApplicationId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PackageIdFromFullName(win32::Windows::Win32::Foundation::PWSTR packageFullName, uint32_t flags, uint32_t* bufferLength, uint8_t* buffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFullName);
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(bufferLength);
        ORBIT_TRACK_PARAM(buffer);

        auto win32_impl_result = g_api_table.PackageIdFromFullName(packageFullName, flags, bufferLength, buffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PackageFullNameFromId(win32::Windows::Win32::Storage::Packaging::Appx::PACKAGE_ID* packageId, uint32_t* packageFullNameLength, win32::Windows::Win32::Foundation::PWSTR packageFullName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageId);
        ORBIT_TRACK_PARAM(packageFullNameLength);
        ORBIT_TRACK_PARAM(packageFullName);

        auto win32_impl_result = g_api_table.PackageFullNameFromId(packageId, packageFullNameLength, packageFullName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PackageFamilyNameFromId(win32::Windows::Win32::Storage::Packaging::Appx::PACKAGE_ID* packageId, uint32_t* packageFamilyNameLength, win32::Windows::Win32::Foundation::PWSTR packageFamilyName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageId);
        ORBIT_TRACK_PARAM(packageFamilyNameLength);
        ORBIT_TRACK_PARAM(packageFamilyName);

        auto win32_impl_result = g_api_table.PackageFamilyNameFromId(packageId, packageFamilyNameLength, packageFamilyName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PackageFamilyNameFromFullName(win32::Windows::Win32::Foundation::PWSTR packageFullName, uint32_t* packageFamilyNameLength, win32::Windows::Win32::Foundation::PWSTR packageFamilyName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFullName);
        ORBIT_TRACK_PARAM(packageFamilyNameLength);
        ORBIT_TRACK_PARAM(packageFamilyName);

        auto win32_impl_result = g_api_table.PackageFamilyNameFromFullName(packageFullName, packageFamilyNameLength, packageFamilyName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PackageNameAndPublisherIdFromFamilyName(win32::Windows::Win32::Foundation::PWSTR packageFamilyName, uint32_t* packageNameLength, win32::Windows::Win32::Foundation::PWSTR packageName, uint32_t* packagePublisherIdLength, win32::Windows::Win32::Foundation::PWSTR packagePublisherId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFamilyName);
        ORBIT_TRACK_PARAM(packageNameLength);
        ORBIT_TRACK_PARAM(packageName);
        ORBIT_TRACK_PARAM(packagePublisherIdLength);
        ORBIT_TRACK_PARAM(packagePublisherId);

        auto win32_impl_result = g_api_table.PackageNameAndPublisherIdFromFamilyName(packageFamilyName, packageNameLength, packageName, packagePublisherIdLength, packagePublisherId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_FormatApplicationUserModelId(win32::Windows::Win32::Foundation::PWSTR packageFamilyName, win32::Windows::Win32::Foundation::PWSTR packageRelativeApplicationId, uint32_t* applicationUserModelIdLength, win32::Windows::Win32::Foundation::PWSTR applicationUserModelId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFamilyName);
        ORBIT_TRACK_PARAM(packageRelativeApplicationId);
        ORBIT_TRACK_PARAM(applicationUserModelIdLength);
        ORBIT_TRACK_PARAM(applicationUserModelId);

        auto win32_impl_result = g_api_table.FormatApplicationUserModelId(packageFamilyName, packageRelativeApplicationId, applicationUserModelIdLength, applicationUserModelId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_ParseApplicationUserModelId(win32::Windows::Win32::Foundation::PWSTR applicationUserModelId, uint32_t* packageFamilyNameLength, win32::Windows::Win32::Foundation::PWSTR packageFamilyName, uint32_t* packageRelativeApplicationIdLength, win32::Windows::Win32::Foundation::PWSTR packageRelativeApplicationId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(applicationUserModelId);
        ORBIT_TRACK_PARAM(packageFamilyNameLength);
        ORBIT_TRACK_PARAM(packageFamilyName);
        ORBIT_TRACK_PARAM(packageRelativeApplicationIdLength);
        ORBIT_TRACK_PARAM(packageRelativeApplicationId);

        auto win32_impl_result = g_api_table.ParseApplicationUserModelId(applicationUserModelId, packageFamilyNameLength, packageFamilyName, packageRelativeApplicationIdLength, packageRelativeApplicationId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetPackagesByPackageFamily(win32::Windows::Win32::Foundation::PWSTR packageFamilyName, uint32_t* count, win32::Windows::Win32::Foundation::PWSTR* packageFullNames, uint32_t* bufferLength, win32::Windows::Win32::Foundation::PWSTR buffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFamilyName);
        ORBIT_TRACK_PARAM(count);
        ORBIT_TRACK_PARAM(packageFullNames);
        ORBIT_TRACK_PARAM(bufferLength);
        ORBIT_TRACK_PARAM(buffer);

        auto win32_impl_result = g_api_table.GetPackagesByPackageFamily(packageFamilyName, count, packageFullNames, bufferLength, buffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_FindPackagesByPackageFamily(win32::Windows::Win32::Foundation::PWSTR packageFamilyName, uint32_t packageFilters, uint32_t* count, win32::Windows::Win32::Foundation::PWSTR* packageFullNames, uint32_t* bufferLength, win32::Windows::Win32::Foundation::PWSTR buffer, uint32_t* packageProperties) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFamilyName);
        ORBIT_TRACK_PARAM(packageFilters);
        ORBIT_TRACK_PARAM(count);
        ORBIT_TRACK_PARAM(packageFullNames);
        ORBIT_TRACK_PARAM(bufferLength);
        ORBIT_TRACK_PARAM(buffer);
        ORBIT_TRACK_PARAM(packageProperties);

        auto win32_impl_result = g_api_table.FindPackagesByPackageFamily(packageFamilyName, packageFilters, count, packageFullNames, bufferLength, buffer, packageProperties);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetStagedPackageOrigin(win32::Windows::Win32::Foundation::PWSTR packageFullName, win32::Windows::Win32::Storage::Packaging::Appx::PackageOrigin* origin) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFullName);
        ORBIT_TRACK_PARAM(origin);

        auto win32_impl_result = g_api_table.GetStagedPackageOrigin(packageFullName, origin);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetCurrentPackageInfo(uint32_t flags, uint32_t* bufferLength, uint8_t* buffer, uint32_t* count) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(bufferLength);
        ORBIT_TRACK_PARAM(buffer);
        ORBIT_TRACK_PARAM(count);

        auto win32_impl_result = g_api_table.GetCurrentPackageInfo(flags, bufferLength, buffer, count);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_OpenPackageInfoByFullName(win32::Windows::Win32::Foundation::PWSTR packageFullName, uint32_t reserved, win32::Windows::Win32::Storage::Packaging::Appx::_PACKAGE_INFO_REFERENCE** packageInfoReference) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFullName);
        ORBIT_TRACK_PARAM(reserved);
        ORBIT_TRACK_PARAM(packageInfoReference);

        auto win32_impl_result = g_api_table.OpenPackageInfoByFullName(packageFullName, reserved, packageInfoReference);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_OpenPackageInfoByFullNameForUser(win32::Windows::Win32::Foundation::PSID userSid, win32::Windows::Win32::Foundation::PWSTR packageFullName, uint32_t reserved, win32::Windows::Win32::Storage::Packaging::Appx::_PACKAGE_INFO_REFERENCE** packageInfoReference) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(userSid);
        ORBIT_TRACK_PARAM(packageFullName);
        ORBIT_TRACK_PARAM(reserved);
        ORBIT_TRACK_PARAM(packageInfoReference);

        auto win32_impl_result = g_api_table.OpenPackageInfoByFullNameForUser(userSid, packageFullName, reserved, packageInfoReference);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_ClosePackageInfo(win32::Windows::Win32::Storage::Packaging::Appx::_PACKAGE_INFO_REFERENCE* packageInfoReference) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageInfoReference);

        auto win32_impl_result = g_api_table.ClosePackageInfo(packageInfoReference);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetPackageInfo(win32::Windows::Win32::Storage::Packaging::Appx::_PACKAGE_INFO_REFERENCE* packageInfoReference, uint32_t flags, uint32_t* bufferLength, uint8_t* buffer, uint32_t* count) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageInfoReference);
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(bufferLength);
        ORBIT_TRACK_PARAM(buffer);
        ORBIT_TRACK_PARAM(count);

        auto win32_impl_result = g_api_table.GetPackageInfo(packageInfoReference, flags, bufferLength, buffer, count);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetPackageApplicationIds(win32::Windows::Win32::Storage::Packaging::Appx::_PACKAGE_INFO_REFERENCE* packageInfoReference, uint32_t* bufferLength, uint8_t* buffer, uint32_t* count) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageInfoReference);
        ORBIT_TRACK_PARAM(bufferLength);
        ORBIT_TRACK_PARAM(buffer);
        ORBIT_TRACK_PARAM(count);

        auto win32_impl_result = g_api_table.GetPackageApplicationIds(packageInfoReference, bufferLength, buffer, count);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetPackageInfo2(win32::Windows::Win32::Storage::Packaging::Appx::_PACKAGE_INFO_REFERENCE* packageInfoReference, uint32_t flags, win32::Windows::Win32::Storage::Packaging::Appx::PackagePathType packagePathType, uint32_t* bufferLength, uint8_t* buffer, uint32_t* count) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageInfoReference);
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(packagePathType);
        ORBIT_TRACK_PARAM(bufferLength);
        ORBIT_TRACK_PARAM(buffer);
        ORBIT_TRACK_PARAM(count);

        auto win32_impl_result = g_api_table.GetPackageInfo2(packageInfoReference, flags, packagePathType, bufferLength, buffer, count);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CheckIsMSIXPackage(win32::Windows::Win32::Foundation::PWSTR packageFullName, win32::Windows::Win32::Foundation::BOOL* isMSIXPackage) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFullName);
        ORBIT_TRACK_PARAM(isMSIXPackage);

        auto win32_impl_result = g_api_table.CheckIsMSIXPackage(packageFullName, isMSIXPackage);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TryCreatePackageDependency(win32::Windows::Win32::Foundation::PSID user, win32::Windows::Win32::Foundation::PWSTR packageFamilyName, win32::Windows::Win32::Storage::Packaging::Appx::PACKAGE_VERSION minVersion, win32::Windows::Win32::Storage::Packaging::Appx::PackageDependencyProcessorArchitectures packageDependencyProcessorArchitectures, win32::Windows::Win32::Storage::Packaging::Appx::PackageDependencyLifetimeKind lifetimeKind, win32::Windows::Win32::Foundation::PWSTR lifetimeArtifact, win32::Windows::Win32::Storage::Packaging::Appx::CreatePackageDependencyOptions options, win32::Windows::Win32::Foundation::PWSTR* packageDependencyId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(user);
        ORBIT_TRACK_PARAM(packageFamilyName);
        ORBIT_TRACK_PARAM(minVersion);
        ORBIT_TRACK_PARAM(packageDependencyProcessorArchitectures);
        ORBIT_TRACK_PARAM(lifetimeKind);
        ORBIT_TRACK_PARAM(lifetimeArtifact);
        ORBIT_TRACK_PARAM(options);
        ORBIT_TRACK_PARAM(packageDependencyId);

        auto win32_impl_result = g_api_table.TryCreatePackageDependency(user, packageFamilyName, minVersion, packageDependencyProcessorArchitectures, lifetimeKind, lifetimeArtifact, options, packageDependencyId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DeletePackageDependency(win32::Windows::Win32::Foundation::PWSTR packageDependencyId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageDependencyId);

        auto win32_impl_result = g_api_table.DeletePackageDependency(packageDependencyId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_AddPackageDependency(win32::Windows::Win32::Foundation::PWSTR packageDependencyId, int32_t rank, win32::Windows::Win32::Storage::Packaging::Appx::AddPackageDependencyOptions options, win32::Windows::Win32::Storage::Packaging::Appx::PACKAGEDEPENDENCY_CONTEXT__** packageDependencyContext, win32::Windows::Win32::Foundation::PWSTR* packageFullName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageDependencyId);
        ORBIT_TRACK_PARAM(rank);
        ORBIT_TRACK_PARAM(options);
        ORBIT_TRACK_PARAM(packageDependencyContext);
        ORBIT_TRACK_PARAM(packageFullName);

        auto win32_impl_result = g_api_table.AddPackageDependency(packageDependencyId, rank, options, packageDependencyContext, packageFullName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RemovePackageDependency(win32::Windows::Win32::Storage::Packaging::Appx::PACKAGEDEPENDENCY_CONTEXT__* packageDependencyContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageDependencyContext);

        auto win32_impl_result = g_api_table.RemovePackageDependency(packageDependencyContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetResolvedPackageFullNameForPackageDependency(win32::Windows::Win32::Foundation::PWSTR packageDependencyId, win32::Windows::Win32::Foundation::PWSTR* packageFullName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageDependencyId);
        ORBIT_TRACK_PARAM(packageFullName);

        auto win32_impl_result = g_api_table.GetResolvedPackageFullNameForPackageDependency(packageDependencyId, packageFullName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetIdForPackageDependencyContext(win32::Windows::Win32::Storage::Packaging::Appx::PACKAGEDEPENDENCY_CONTEXT__* packageDependencyContext, win32::Windows::Win32::Foundation::PWSTR* packageDependencyId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageDependencyContext);
        ORBIT_TRACK_PARAM(packageDependencyId);

        auto win32_impl_result = g_api_table.GetIdForPackageDependencyContext(packageDependencyContext, packageDependencyId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_AppPolicyGetLifecycleManagement(win32::Windows::Win32::Foundation::HANDLE processToken, win32::Windows::Win32::Storage::Packaging::Appx::AppPolicyLifecycleManagement* policy) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(processToken);
        ORBIT_TRACK_PARAM(policy);

        auto win32_impl_result = g_api_table.AppPolicyGetLifecycleManagement(processToken, policy);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_AppPolicyGetWindowingModel(win32::Windows::Win32::Foundation::HANDLE processToken, win32::Windows::Win32::Storage::Packaging::Appx::AppPolicyWindowingModel* policy) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(processToken);
        ORBIT_TRACK_PARAM(policy);

        auto win32_impl_result = g_api_table.AppPolicyGetWindowingModel(processToken, policy);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_AppPolicyGetMediaFoundationCodecLoading(win32::Windows::Win32::Foundation::HANDLE processToken, win32::Windows::Win32::Storage::Packaging::Appx::AppPolicyMediaFoundationCodecLoading* policy) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(processToken);
        ORBIT_TRACK_PARAM(policy);

        auto win32_impl_result = g_api_table.AppPolicyGetMediaFoundationCodecLoading(processToken, policy);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_AppPolicyGetClrCompat(win32::Windows::Win32::Foundation::HANDLE processToken, win32::Windows::Win32::Storage::Packaging::Appx::AppPolicyClrCompat* policy) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(processToken);
        ORBIT_TRACK_PARAM(policy);

        auto win32_impl_result = g_api_table.AppPolicyGetClrCompat(processToken, policy);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_AppPolicyGetThreadInitializationType(win32::Windows::Win32::Foundation::HANDLE processToken, win32::Windows::Win32::Storage::Packaging::Appx::AppPolicyThreadInitializationType* policy) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(processToken);
        ORBIT_TRACK_PARAM(policy);

        auto win32_impl_result = g_api_table.AppPolicyGetThreadInitializationType(processToken, policy);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_AppPolicyGetShowDeveloperDiagnostic(win32::Windows::Win32::Foundation::HANDLE processToken, win32::Windows::Win32::Storage::Packaging::Appx::AppPolicyShowDeveloperDiagnostic* policy) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(processToken);
        ORBIT_TRACK_PARAM(policy);

        auto win32_impl_result = g_api_table.AppPolicyGetShowDeveloperDiagnostic(processToken, policy);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_AppPolicyGetProcessTerminationMethod(win32::Windows::Win32::Foundation::HANDLE processToken, win32::Windows::Win32::Storage::Packaging::Appx::AppPolicyProcessTerminationMethod* policy) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(processToken);
        ORBIT_TRACK_PARAM(policy);

        auto win32_impl_result = g_api_table.AppPolicyGetProcessTerminationMethod(processToken, policy);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_AppPolicyGetCreateFileAccess(win32::Windows::Win32::Foundation::HANDLE processToken, win32::Windows::Win32::Storage::Packaging::Appx::AppPolicyCreateFileAccess* policy) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(processToken);
        ORBIT_TRACK_PARAM(policy);

        auto win32_impl_result = g_api_table.AppPolicyGetCreateFileAccess(processToken, policy);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreatePackageVirtualizationContext(win32::Windows::Win32::Foundation::PWSTR packageFamilyName, win32::Windows::Win32::Storage::Packaging::Appx::PACKAGE_VIRTUALIZATION_CONTEXT_HANDLE__** context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFamilyName);
        ORBIT_TRACK_PARAM(context);

        auto win32_impl_result = g_api_table.CreatePackageVirtualizationContext(packageFamilyName, context);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ActivatePackageVirtualizationContext(win32::Windows::Win32::Storage::Packaging::Appx::PACKAGE_VIRTUALIZATION_CONTEXT_HANDLE__* context, size_t* cookie) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(cookie);

        auto win32_impl_result = g_api_table.ActivatePackageVirtualizationContext(context, cookie);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_ReleasePackageVirtualizationContext(win32::Windows::Win32::Storage::Packaging::Appx::PACKAGE_VIRTUALIZATION_CONTEXT_HANDLE__* context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(context);

        g_api_table.ReleasePackageVirtualizationContext(context);
        
    }

    void __stdcall ORBIT_IMPL_DeactivatePackageVirtualizationContext(size_t cookie) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(cookie);

        g_api_table.DeactivatePackageVirtualizationContext(cookie);
        
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DuplicatePackageVirtualizationContext(win32::Windows::Win32::Storage::Packaging::Appx::PACKAGE_VIRTUALIZATION_CONTEXT_HANDLE__* sourceContext, win32::Windows::Win32::Storage::Packaging::Appx::PACKAGE_VIRTUALIZATION_CONTEXT_HANDLE__** destContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(sourceContext);
        ORBIT_TRACK_PARAM(destContext);

        auto win32_impl_result = g_api_table.DuplicatePackageVirtualizationContext(sourceContext, destContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Storage::Packaging::Appx::PACKAGE_VIRTUALIZATION_CONTEXT_HANDLE__* __stdcall ORBIT_IMPL_GetCurrentPackageVirtualizationContext() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.GetCurrentPackageVirtualizationContext();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetProcessesInVirtualizationContext(win32::Windows::Win32::Foundation::PWSTR packageFamilyName, uint32_t* count, win32::Windows::Win32::Foundation::HANDLE** processes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(packageFamilyName);
        ORBIT_TRACK_PARAM(count);
        ORBIT_TRACK_PARAM(processes);

        auto win32_impl_result = g_api_table.GetProcessesInVirtualizationContext(packageFamilyName, count, processes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
