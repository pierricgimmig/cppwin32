// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_NetworkManagement_Multicast_2_H
#define WIN32_Windows_Win32_NetworkManagement_Multicast_2_H
#include "win32/Windows.Win32.NetworkManagement.Multicast.h"
#include "win32/impl/Windows.Win32.NetworkManagement.Multicast.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::NetworkManagement::Multicast
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    uint32_t __stdcall ORBIT_IMPL_McastApiStartup(uint32_t* Version) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Version);

        auto win32_impl_result = g_api_table.McastApiStartup(Version);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_McastApiCleanup() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        g_api_table.McastApiCleanup();
        
    }

    uint32_t __stdcall ORBIT_IMPL_McastGenUID(win32::Windows::Win32::NetworkManagement::Multicast::MCAST_CLIENT_UID* pRequestID) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pRequestID);

        auto win32_impl_result = g_api_table.McastGenUID(pRequestID);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_McastEnumerateScopes(uint16_t AddrFamily, win32::Windows::Win32::Foundation::BOOL ReQuery, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_SCOPE_ENTRY* pScopeList, uint32_t* pScopeLen, uint32_t* pScopeCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AddrFamily);
        ORBIT_TRACK_PARAM(ReQuery);
        ORBIT_TRACK_PARAM(pScopeList);
        ORBIT_TRACK_PARAM(pScopeLen);
        ORBIT_TRACK_PARAM(pScopeCount);

        auto win32_impl_result = g_api_table.McastEnumerateScopes(AddrFamily, ReQuery, pScopeList, pScopeLen, pScopeCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_McastRequestAddress(uint16_t AddrFamily, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_CLIENT_UID* pRequestID, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_SCOPE_CTX* pScopeCtx, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_LEASE_REQUEST* pAddrRequest, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_LEASE_RESPONSE* pAddrResponse) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AddrFamily);
        ORBIT_TRACK_PARAM(pRequestID);
        ORBIT_TRACK_PARAM(pScopeCtx);
        ORBIT_TRACK_PARAM(pAddrRequest);
        ORBIT_TRACK_PARAM(pAddrResponse);

        auto win32_impl_result = g_api_table.McastRequestAddress(AddrFamily, pRequestID, pScopeCtx, pAddrRequest, pAddrResponse);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_McastRenewAddress(uint16_t AddrFamily, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_CLIENT_UID* pRequestID, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_LEASE_REQUEST* pRenewRequest, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_LEASE_RESPONSE* pRenewResponse) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AddrFamily);
        ORBIT_TRACK_PARAM(pRequestID);
        ORBIT_TRACK_PARAM(pRenewRequest);
        ORBIT_TRACK_PARAM(pRenewResponse);

        auto win32_impl_result = g_api_table.McastRenewAddress(AddrFamily, pRequestID, pRenewRequest, pRenewResponse);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_McastReleaseAddress(uint16_t AddrFamily, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_CLIENT_UID* pRequestID, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_LEASE_REQUEST* pReleaseRequest) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AddrFamily);
        ORBIT_TRACK_PARAM(pRequestID);
        ORBIT_TRACK_PARAM(pReleaseRequest);

        auto win32_impl_result = g_api_table.McastReleaseAddress(AddrFamily, pRequestID, pReleaseRequest);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
