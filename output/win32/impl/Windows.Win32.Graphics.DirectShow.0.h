// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Graphics_DirectShow_0_H
#define WIN32_Windows_Win32_Graphics_DirectShow_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct BOOL;
    struct HANDLE;
    struct HRESULT;
    struct PSTR;
    struct PWSTR;
}
WIN32_EXPORT namespace win32::Windows::Win32::Graphics::Direct3D9
{
    enum class D3DFORMAT : uint32_t;
    struct IDirect3DDevice9;
    struct IDirect3DSurface9;
}
WIN32_EXPORT namespace win32::Windows::Win32::Media::MediaFoundation
{
    struct DXVA2_ValueRange;
    struct DXVA2_VideoDesc;
    struct DXVA2_VideoProcessorCaps;
}
WIN32_EXPORT namespace win32::Windows::Win32::Graphics::DirectShow
{
#pragma region enums
    enum class ADVISE_TYPE : uint32_t
    {
        ADVISE_NONE = 0x0,
        ADVISE_CLIPPING = 0x1,
        ADVISE_PALETTE = 0x2,
        ADVISE_COLORKEY = 0x4,
        ADVISE_POSITION = 0x8,
        ADVISE_DISPLAY_CHANGE = 0x10,
    };
    enum class AMExtendedSeekingCapabilities : int32_t
    {
        AM_EXSEEK_CANSEEK = 1,
        AM_EXSEEK_CANSCAN = 2,
        AM_EXSEEK_MARKERSEEK = 4,
        AM_EXSEEK_SCANWITHOUTCLOCK = 8,
        AM_EXSEEK_NOSTANDARDREPAINT = 16,
        AM_EXSEEK_BUFFERING = 32,
        AM_EXSEEK_SENDS_VIDEOFRAMEREADY = 64,
    };
    enum class AMMSF_MMS_INIT_FLAGS : uint32_t
    {
        AMMSF_NOGRAPHTHREAD = 0x1,
    };
    enum class AMMSF_MS_FLAGS : uint32_t
    {
        AMMSF_ADDDEFAULTRENDERER = 0x1,
        AMMSF_CREATEPEER = 0x2,
        AMMSF_STOPIFNOSAMPLES = 0x4,
        AMMSF_NOSTALL = 0x8,
    };
    enum class AMMSF_RENDER_FLAGS : uint32_t
    {
        AMMSF_RENDERTYPEMASK = 0x3,
        AMMSF_RENDERTOEXISTING = 0x0,
        AMMSF_RENDERALLSTREAMS = 0x1,
        AMMSF_NORENDER = 0x2,
        AMMSF_NOCLOCK = 0x4,
        AMMSF_RUN = 0x8,
    };
    enum class AMOVERLAYFX : int32_t
    {
        AMOVERFX_NOFX = 0,
        AMOVERFX_MIRRORLEFTRIGHT = 2,
        AMOVERFX_MIRRORUPDOWN = 4,
        AMOVERFX_DEINTERLACE = 8,
    };
    enum class AMPROPERTY_PIN : int32_t
    {
        AMPROPERTY_PIN_CATEGORY = 0,
        AMPROPERTY_PIN_MEDIUM = 1,
    };
    enum class AMPlayListEventFlags : int32_t
    {
        AMPLAYLISTEVENT_RESUME = 0,
        AMPLAYLISTEVENT_BREAK = 1,
        AMPLAYLISTEVENT_NEXT = 2,
        AMPLAYLISTEVENT_MASK = 15,
        AMPLAYLISTEVENT_REFRESH = 16,
    };
    enum class AMPlayListFlags : int32_t
    {
        AMPLAYLIST_STARTINSCANMODE = 1,
        AMPLAYLIST_FORCEBANNER = 2,
    };
    enum class AMPlayListItemFlags : int32_t
    {
        AMPLAYLISTITEM_CANSKIP = 1,
        AMPLAYLISTITEM_CANBIND = 2,
    };
    enum class AMTVAudioEventType : int32_t
    {
        AMTVAUDIO_EVENT_CHANGED = 1,
    };
    enum class AMTunerEventType : int32_t
    {
        AMTUNER_EVENT_CHANGED = 1,
    };
    enum class AMTunerModeType : int32_t
    {
        AMTUNER_MODE_DEFAULT = 0,
        AMTUNER_MODE_TV = 1,
        AMTUNER_MODE_FM_RADIO = 2,
        AMTUNER_MODE_AM_RADIO = 4,
        AMTUNER_MODE_DSS = 8,
    };
    enum class AMTunerSignalStrength : int32_t
    {
        AMTUNER_HASNOSIGNALSTRENGTH = -1,
        AMTUNER_NOSIGNAL = 0,
        AMTUNER_SIGNALPRESENT = 1,
    };
    enum class AMTunerSubChannel : int32_t
    {
        AMTUNER_SUBCHAN_NO_TUNE = -2,
        AMTUNER_SUBCHAN_DEFAULT = -1,
    };
    enum class AMVP_MODE : int32_t
    {
        AMVP_MODE_WEAVE = 0,
        AMVP_MODE_BOBINTERLEAVED = 1,
        AMVP_MODE_BOBNONINTERLEAVED = 2,
        AMVP_MODE_SKIPEVEN = 3,
        AMVP_MODE_SKIPODD = 4,
    };
    enum class AMVP_SELECT_FORMAT_BY : int32_t
    {
        AMVP_DO_NOT_CARE = 0,
        AMVP_BEST_BANDWIDTH = 1,
        AMVP_INPUT_SAME_AS_OUTPUT = 2,
    };
    enum class AM_ASPECT_RATIO_MODE : int32_t
    {
        AM_ARMODE_STRETCHED = 0,
        AM_ARMODE_LETTER_BOX = 1,
        AM_ARMODE_CROP = 2,
        AM_ARMODE_STRETCHED_AS_PRIMARY = 3,
    };
    enum class AM_COPY_MACROVISION_LEVEL : int32_t
    {
        AM_MACROVISION_DISABLED = 0,
        AM_MACROVISION_LEVEL1 = 1,
        AM_MACROVISION_LEVEL2 = 2,
        AM_MACROVISION_LEVEL3 = 3,
    };
    enum class AM_DIGITAL_CP : int32_t
    {
        AM_DIGITAL_CP_OFF = 0,
        AM_DIGITAL_CP_ON = 1,
        AM_DIGITAL_CP_DVD_COMPLIANT = 2,
    };
    enum class AM_DVDCOPYSTATE : int32_t
    {
        AM_DVDCOPYSTATE_INITIALIZE = 0,
        AM_DVDCOPYSTATE_INITIALIZE_TITLE = 1,
        AM_DVDCOPYSTATE_AUTHENTICATION_NOT_REQUIRED = 2,
        AM_DVDCOPYSTATE_AUTHENTICATION_REQUIRED = 3,
        AM_DVDCOPYSTATE_DONE = 4,
    };
    enum class AM_DVD_GRAPH_FLAGS : int32_t
    {
        AM_DVD_HWDEC_PREFER = 1,
        AM_DVD_HWDEC_ONLY = 2,
        AM_DVD_SWDEC_PREFER = 4,
        AM_DVD_SWDEC_ONLY = 8,
        AM_DVD_NOVPE = 256,
        AM_DVD_DO_NOT_CLEAR = 512,
        AM_DVD_VMR9_ONLY = 2048,
        AM_DVD_EVR_ONLY = 4096,
        AM_DVD_EVR_QOS = 8192,
        AM_DVD_ADAPT_GRAPH = 16384,
        AM_DVD_MASK = 65535,
    };
    enum class AM_DVD_STREAM_FLAGS : int32_t
    {
        AM_DVD_STREAM_VIDEO = 1,
        AM_DVD_STREAM_AUDIO = 2,
        AM_DVD_STREAM_SUBPIC = 4,
    };
    enum class AM_FILESINK_FLAGS : int32_t
    {
        AM_FILE_OVERWRITE = 1,
    };
    enum class AM_FILTER_FLAGS : int32_t
    {
        AM_FILTER_FLAGS_REMOVABLE = 1,
    };
    enum class AM_GRAPH_CONFIG_RECONNECT_FLAGS : int32_t
    {
        AM_GRAPH_CONFIG_RECONNECT_DIRECTCONNECT = 1,
        AM_GRAPH_CONFIG_RECONNECT_CACHE_REMOVED_FILTERS = 2,
        AM_GRAPH_CONFIG_RECONNECT_USE_ONLY_CACHED_FILTERS = 4,
    };
    enum class AM_LINE21_CCLEVEL : int32_t
    {
        AM_L21_CCLEVEL_TC2 = 0,
    };
    enum class AM_LINE21_CCSERVICE : int32_t
    {
        AM_L21_CCSERVICE_None = 0,
        AM_L21_CCSERVICE_Caption1 = 1,
        AM_L21_CCSERVICE_Caption2 = 2,
        AM_L21_CCSERVICE_Text1 = 3,
        AM_L21_CCSERVICE_Text2 = 4,
        AM_L21_CCSERVICE_XDS = 5,
        AM_L21_CCSERVICE_DefChannel = 10,
        AM_L21_CCSERVICE_Invalid = 11,
    };
    enum class AM_LINE21_CCSTATE : int32_t
    {
        AM_L21_CCSTATE_Off = 0,
        AM_L21_CCSTATE_On = 1,
    };
    enum class AM_LINE21_CCSTYLE : int32_t
    {
        AM_L21_CCSTYLE_None = 0,
        AM_L21_CCSTYLE_PopOn = 1,
        AM_L21_CCSTYLE_PaintOn = 2,
        AM_L21_CCSTYLE_RollUp = 3,
    };
    enum class AM_LINE21_DRAWBGMODE : int32_t
    {
        AM_L21_DRAWBGMODE_Opaque = 0,
        AM_L21_DRAWBGMODE_Transparent = 1,
    };
    enum class AM_MEDIAEVENT_FLAGS : int32_t
    {
        AM_MEDIAEVENT_NONOTIFY = 1,
    };
    enum class AM_MPEG2Level : int32_t
    {
        AM_MPEG2Level_Low = 1,
        AM_MPEG2Level_Main = 2,
        AM_MPEG2Level_High1440 = 3,
        AM_MPEG2Level_High = 4,
    };
    enum class AM_MPEG2Profile : int32_t
    {
        AM_MPEG2Profile_Simple = 1,
        AM_MPEG2Profile_Main = 2,
        AM_MPEG2Profile_SNRScalable = 3,
        AM_MPEG2Profile_SpatiallyScalable = 4,
        AM_MPEG2Profile_High = 5,
    };
    enum class AM_PROPERTY_AC3 : int32_t
    {
        AM_PROPERTY_AC3_ERROR_CONCEALMENT = 1,
        AM_PROPERTY_AC3_ALTERNATE_AUDIO = 2,
        AM_PROPERTY_AC3_DOWNMIX = 3,
        AM_PROPERTY_AC3_BIT_STREAM_MODE = 4,
        AM_PROPERTY_AC3_DIALOGUE_LEVEL = 5,
        AM_PROPERTY_AC3_LANGUAGE_CODE = 6,
        AM_PROPERTY_AC3_ROOM_TYPE = 7,
    };
    enum class AM_PROPERTY_DVDCOPYPROT : int32_t
    {
        AM_PROPERTY_DVDCOPY_CHLG_KEY = 1,
        AM_PROPERTY_DVDCOPY_DVD_KEY1 = 2,
        AM_PROPERTY_DVDCOPY_DEC_KEY2 = 3,
        AM_PROPERTY_DVDCOPY_TITLE_KEY = 4,
        AM_PROPERTY_COPY_MACROVISION = 5,
        AM_PROPERTY_DVDCOPY_REGION = 6,
        AM_PROPERTY_DVDCOPY_SET_COPY_STATE = 7,
        AM_PROPERTY_COPY_ANALOG_COMPONENT = 8,
        AM_PROPERTY_COPY_DIGITAL_CP = 9,
        AM_PROPERTY_COPY_DVD_SRM = 10,
        AM_PROPERTY_DVDCOPY_SUPPORTS_NEW_KEYCOUNT = 11,
        AM_PROPERTY_DVDCOPY_DISC_KEY = 128,
    };
    enum class AM_PROPERTY_DVDKARAOKE : int32_t
    {
        AM_PROPERTY_DVDKARAOKE_ENABLE = 0,
        AM_PROPERTY_DVDKARAOKE_DATA = 1,
    };
    enum class AM_PROPERTY_DVDSUBPIC : int32_t
    {
        AM_PROPERTY_DVDSUBPIC_PALETTE = 0,
        AM_PROPERTY_DVDSUBPIC_HLI = 1,
        AM_PROPERTY_DVDSUBPIC_COMPOSIT_ON = 2,
    };
    enum class AM_PROPERTY_DVD_RATE_CHANGE : int32_t
    {
        AM_RATE_ChangeRate = 1,
        AM_RATE_FullDataRateMax = 2,
        AM_RATE_ReverseDecode = 3,
        AM_RATE_DecoderPosition = 4,
        AM_RATE_DecoderVersion = 5,
    };
    enum class AM_PROPERTY_FRAMESTEP : int32_t
    {
        AM_PROPERTY_FRAMESTEP_STEP = 1,
        AM_PROPERTY_FRAMESTEP_CANCEL = 2,
        AM_PROPERTY_FRAMESTEP_CANSTEP = 3,
        AM_PROPERTY_FRAMESTEP_CANSTEPMULTIPLE = 4,
    };
    enum class AM_PROPERTY_TS_RATE_CHANGE : int32_t
    {
        AM_RATE_SimpleRateChange = 1,
        AM_RATE_ExactRateChange = 2,
        AM_RATE_MaxFullDataRate = 3,
        AM_RATE_Step = 4,
        AM_RATE_UseRateVersion = 5,
        AM_RATE_QueryFullFrameRate = 6,
        AM_RATE_QueryLastRateSegPTS = 7,
        AM_RATE_CorrectTS = 8,
        AM_RATE_ReverseMaxFullDataRate = 9,
        AM_RATE_ResetOnTimeDisc = 10,
        AM_RATE_QueryMapping = 11,
    };
    enum class AM_SAMPLE_PROPERTY_FLAGS : int32_t
    {
        AM_SAMPLE_SPLICEPOINT = 1,
        AM_SAMPLE_PREROLL = 2,
        AM_SAMPLE_DATADISCONTINUITY = 4,
        AM_SAMPLE_TYPECHANGED = 8,
        AM_SAMPLE_TIMEVALID = 16,
        AM_SAMPLE_TIMEDISCONTINUITY = 64,
        AM_SAMPLE_FLUSH_ON_PAUSE = 128,
        AM_SAMPLE_STOPVALID = 256,
        AM_SAMPLE_ENDOFSTREAM = 512,
        AM_STREAM_MEDIA = 0,
        AM_STREAM_CONTROL = 1,
    };
    enum class AM_SEEKING_SEEKING_CAPABILITIES : int32_t
    {
        AM_SEEKING_CanSeekAbsolute = 1,
        AM_SEEKING_CanSeekForwards = 2,
        AM_SEEKING_CanSeekBackwards = 4,
        AM_SEEKING_CanGetCurrentPos = 8,
        AM_SEEKING_CanGetStopPos = 16,
        AM_SEEKING_CanGetDuration = 32,
        AM_SEEKING_CanPlayBackwards = 64,
        AM_SEEKING_CanDoSegments = 128,
        AM_SEEKING_Source = 256,
    };
    enum class AM_SEEKING_SeekingFlags : int32_t
    {
        AM_SEEKING_NoPositioning = 0,
        AM_SEEKING_AbsolutePositioning = 1,
        AM_SEEKING_RelativePositioning = 2,
        AM_SEEKING_IncrementalPositioning = 3,
        AM_SEEKING_PositioningBitsMask = 3,
        AM_SEEKING_SeekToKeyFrame = 4,
        AM_SEEKING_ReturnTime = 8,
        AM_SEEKING_Segment = 16,
        AM_SEEKING_NoFlush = 32,
    };
    enum class AM_STREAM_INFO_FLAGS : int32_t
    {
        AM_STREAM_INFO_START_DEFINED = 1,
        AM_STREAM_INFO_STOP_DEFINED = 2,
        AM_STREAM_INFO_DISCARDING = 4,
        AM_STREAM_INFO_STOP_SEND_EXTRA = 16,
    };
    enum class AM_WST_DRAWBGMODE : int32_t
    {
        AM_WST_DRAWBGMODE_Opaque = 0,
        AM_WST_DRAWBGMODE_Transparent = 1,
    };
    enum class AM_WST_LEVEL : int32_t
    {
        AM_WST_LEVEL_1_5 = 0,
    };
    enum class AM_WST_SERVICE : int32_t
    {
        AM_WST_SERVICE_None = 0,
        AM_WST_SERVICE_Text = 1,
        AM_WST_SERVICE_IDS = 2,
        AM_WST_SERVICE_Invalid = 3,
    };
    enum class AM_WST_STATE : int32_t
    {
        AM_WST_STATE_Off = 0,
        AM_WST_STATE_On = 1,
    };
    enum class AM_WST_STYLE : int32_t
    {
        AM_WST_STYLE_None = 0,
        AM_WST_STYLE_Invers = 1,
    };
    enum class ATSCComponentTypeFlags : int32_t
    {
        ATSCCT_AC3 = 1,
    };
    enum class AnalogVideoStandard : int32_t
    {
        AnalogVideo_None = 0,
        AnalogVideo_NTSC_M = 1,
        AnalogVideo_NTSC_M_J = 2,
        AnalogVideo_NTSC_433 = 4,
        AnalogVideo_PAL_B = 16,
        AnalogVideo_PAL_D = 32,
        AnalogVideo_PAL_G = 64,
        AnalogVideo_PAL_H = 128,
        AnalogVideo_PAL_I = 256,
        AnalogVideo_PAL_M = 512,
        AnalogVideo_PAL_N = 1024,
        AnalogVideo_PAL_60 = 2048,
        AnalogVideo_SECAM_B = 4096,
        AnalogVideo_SECAM_D = 8192,
        AnalogVideo_SECAM_G = 16384,
        AnalogVideo_SECAM_H = 32768,
        AnalogVideo_SECAM_K = 65536,
        AnalogVideo_SECAM_K1 = 131072,
        AnalogVideo_SECAM_L = 262144,
        AnalogVideo_SECAM_L1 = 524288,
        AnalogVideo_PAL_N_COMBO = 1048576,
        AnalogVideoMask_MCE_NTSC = 1052167,
        AnalogVideoMask_MCE_PAL = 496,
        AnalogVideoMask_MCE_SECAM = 1044480,
    };
    enum class ApplicationTypeType : int32_t
    {
        SCTE28_ConditionalAccess = 0,
        SCTE28_POD_Host_Binding_Information = 1,
        SCTE28_IPService = 2,
        SCTE28_NetworkInterface_SCTE55_2 = 3,
        SCTE28_NetworkInterface_SCTE55_1 = 4,
        SCTE28_CopyProtection = 5,
        SCTE28_Diagnostic = 6,
        SCTE28_Undesignated = 7,
        SCTE28_Reserved = 8,
    };
    enum class BDA_CHANGE_STATE : int32_t
    {
        BDA_CHANGES_COMPLETE = 0,
        BDA_CHANGES_PENDING = 1,
    };
    enum class BDA_CONDITIONALACCESS_MMICLOSEREASON : int32_t
    {
        CONDITIONALACCESS_UNSPECIFIED = 0,
        CONDITIONALACCESS_CLOSED_ITSELF = 1,
        CONDITIONALACCESS_TUNER_REQUESTED_CLOSE = 2,
        CONDITIONALACCESS_DIALOG_TIMEOUT = 3,
        CONDITIONALACCESS_DIALOG_FOCUS_CHANGE = 4,
        CONDITIONALACCESS_DIALOG_USER_DISMISSED = 5,
        CONDITIONALACCESS_DIALOG_USER_NOT_AVAILABLE = 6,
    };
    enum class BDA_CONDITIONALACCESS_REQUESTTYPE : int32_t
    {
        CONDITIONALACCESS_ACCESS_UNSPECIFIED = 0,
        CONDITIONALACCESS_ACCESS_NOT_POSSIBLE = 1,
        CONDITIONALACCESS_ACCESS_POSSIBLE = 2,
        CONDITIONALACCESS_ACCESS_POSSIBLE_NO_STREAMING_DISRUPTION = 3,
    };
    enum class BDA_CONDITIONALACCESS_SESSION_RESULT : int32_t
    {
        CONDITIONALACCESS_SUCCESSFULL = 0,
        CONDITIONALACCESS_ENDED_NOCHANGE = 1,
        CONDITIONALACCESS_ABORTED = 2,
    };
    enum class BDA_Channel : int32_t
    {
        BDA_UNDEFINED_CHANNEL = -1,
    };
    enum class BDA_Channel_Bandwidth : int32_t
    {
        BDA_CHAN_BANDWITH_NOT_SET = -1,
        BDA_CHAN_BANDWITH_NOT_DEFINED = 0,
    };
    enum class BDA_Comp_Flags : int32_t
    {
        BDACOMP_NOT_DEFINED = 0,
        BDACOMP_EXCLUDE_TS_FROM_TR = 1,
        BDACOMP_INCLUDE_LOCATOR_IN_TR = 2,
        BDACOMP_INCLUDE_COMPONENTS_IN_TR = 4,
    };
    enum class BDA_DISCOVERY_STATE : int32_t
    {
        BDA_DISCOVERY_UNSPECIFIED = 0,
        BDA_DISCOVERY_REQUIRED = 1,
        BDA_DISCOVERY_COMPLETE = 2,
    };
    enum class BDA_DigitalSignalStandard : int32_t
    {
        Bda_DigitalStandard_None = 0,
        Bda_DigitalStandard_DVB_T = 1,
        Bda_DigitalStandard_DVB_S = 2,
        Bda_DigitalStandard_DVB_C = 4,
        Bda_DigitalStandard_ATSC = 8,
        Bda_DigitalStandard_ISDB_T = 16,
        Bda_DigitalStandard_ISDB_S = 32,
        Bda_DigitalStandard_ISDB_C = 64,
    };
    enum class BDA_DrmPairingError : int32_t
    {
        BDA_DrmPairing_Succeeded = 0,
        BDA_DrmPairing_HardwareFailure = 1,
        BDA_DrmPairing_NeedRevocationData = 2,
        BDA_DrmPairing_NeedIndiv = 3,
        BDA_DrmPairing_Other = 4,
        BDA_DrmPairing_DrmInitFailed = 5,
        BDA_DrmPairing_DrmNotPaired = 6,
        BDA_DrmPairing_DrmRePairSoon = 7,
        BDA_DrmPairing_Aborted = 8,
        BDA_DrmPairing_NeedSDKUpdate = 9,
    };
    enum class BDA_EVENT_ID : int32_t
    {
        BDA_EVENT_SIGNAL_LOSS = 0,
        BDA_EVENT_SIGNAL_LOCK = 1,
        BDA_EVENT_DATA_START = 2,
        BDA_EVENT_DATA_STOP = 3,
        BDA_EVENT_CHANNEL_ACQUIRED = 4,
        BDA_EVENT_CHANNEL_LOST = 5,
        BDA_EVENT_CHANNEL_SOURCE_CHANGED = 6,
        BDA_EVENT_CHANNEL_ACTIVATED = 7,
        BDA_EVENT_CHANNEL_DEACTIVATED = 8,
        BDA_EVENT_SUBCHANNEL_ACQUIRED = 9,
        BDA_EVENT_SUBCHANNEL_LOST = 10,
        BDA_EVENT_SUBCHANNEL_SOURCE_CHANGED = 11,
        BDA_EVENT_SUBCHANNEL_ACTIVATED = 12,
        BDA_EVENT_SUBCHANNEL_DEACTIVATED = 13,
        BDA_EVENT_ACCESS_GRANTED = 14,
        BDA_EVENT_ACCESS_DENIED = 15,
        BDA_EVENT_OFFER_EXTENDED = 16,
        BDA_EVENT_PURCHASE_COMPLETED = 17,
        BDA_EVENT_SMART_CARD_INSERTED = 18,
        BDA_EVENT_SMART_CARD_REMOVED = 19,
    };
    enum class BDA_Frequency : int32_t
    {
        BDA_FREQUENCY_NOT_SET = -1,
        BDA_FREQUENCY_NOT_DEFINED = 0,
    };
    enum class BDA_Frequency_Multiplier : int32_t
    {
        BDA_FREQUENCY_MULTIPLIER_NOT_SET = -1,
        BDA_FREQUENCY_MULTIPLIER_NOT_DEFINED = 0,
    };
    enum class BDA_LockType : int32_t
    {
        Bda_LockType_None = 0,
        Bda_LockType_PLL = 1,
        Bda_LockType_DecoderDemod = 2,
        Bda_LockType_Complete = 128,
    };
    enum class BDA_MULTICAST_MODE : int32_t
    {
        BDA_PROMISCUOUS_MULTICAST = 0,
        BDA_FILTERED_MULTICAST = 1,
        BDA_NO_MULTICAST = 2,
    };
    enum class BDA_Range : int32_t
    {
        BDA_RANGE_NOT_SET = -1,
        BDA_RANGE_NOT_DEFINED = 0,
    };
    enum class BDA_SIGNAL_STATE : int32_t
    {
        BDA_SIGNAL_UNAVAILABLE = 0,
        BDA_SIGNAL_INACTIVE = 1,
        BDA_SIGNAL_ACTIVE = 2,
    };
    enum class BDA_SignalType : int32_t
    {
        Bda_SignalType_Unknown = 0,
        Bda_SignalType_Analog = 1,
        Bda_SignalType_Digital = 2,
    };
    enum class BfEnTvRat_Attributes_CAE_TV : int32_t
    {
        CAE_IsBlocked = 1,
        CAE_ValidAttrSubmask = 1,
    };
    enum class BfEnTvRat_Attributes_CAF_TV : int32_t
    {
        CAF_IsBlocked = 1,
        CAF_ValidAttrSubmask = 1,
    };
    enum class BfEnTvRat_Attributes_MPAA : int32_t
    {
        MPAA_IsBlocked = 1,
        MPAA_ValidAttrSubmask = 1,
    };
    enum class BfEnTvRat_Attributes_US_TV : int32_t
    {
        US_TV_IsBlocked = 1,
        US_TV_IsViolent = 2,
        US_TV_IsSexualSituation = 4,
        US_TV_IsAdultLanguage = 8,
        US_TV_IsSexuallySuggestiveDialog = 16,
        US_TV_ValidAttrSubmask = 31,
    };
    enum class BfEnTvRat_GenericAttributes : int32_t
    {
        BfAttrNone = 0,
        BfIsBlocked = 1,
        BfIsAttr_1 = 2,
        BfIsAttr_2 = 4,
        BfIsAttr_3 = 8,
        BfIsAttr_4 = 16,
        BfIsAttr_5 = 32,
        BfIsAttr_6 = 64,
        BfIsAttr_7 = 128,
        BfValidAttrSubmask = 255,
    };
    enum class BinaryConvolutionCodeRate : int32_t
    {
        BDA_BCC_RATE_NOT_SET = -1,
        BDA_BCC_RATE_NOT_DEFINED = 0,
        BDA_BCC_RATE_1_2 = 1,
        BDA_BCC_RATE_2_3 = 2,
        BDA_BCC_RATE_3_4 = 3,
        BDA_BCC_RATE_3_5 = 4,
        BDA_BCC_RATE_4_5 = 5,
        BDA_BCC_RATE_5_6 = 6,
        BDA_BCC_RATE_5_11 = 7,
        BDA_BCC_RATE_7_8 = 8,
        BDA_BCC_RATE_1_4 = 9,
        BDA_BCC_RATE_1_3 = 10,
        BDA_BCC_RATE_2_5 = 11,
        BDA_BCC_RATE_6_7 = 12,
        BDA_BCC_RATE_8_9 = 13,
        BDA_BCC_RATE_9_10 = 14,
        BDA_BCC_RATE_MAX = 15,
    };
    enum class COLORKEY_TYPE : int32_t
    {
        CK_NOCOLORKEY = 0,
        CK_INDEX = 1,
        CK_RGB = 2,
    };
    enum class COMPLETION_STATUS_FLAGS : int32_t
    {
        COMPSTAT_NOUPDATEOK = 1,
        COMPSTAT_WAIT = 2,
        COMPSTAT_ABORT = 4,
    };
    enum class COPPEventBlockReason : int32_t
    {
        COPP_Unknown = -1,
        COPP_BadDriver = 0,
        COPP_NoCardHDCPSupport = 1,
        COPP_NoMonitorHDCPSupport = 2,
        COPP_BadCertificate = 3,
        COPP_InvalidBusProtection = 4,
        COPP_AeroGlassOff = 5,
        COPP_RogueApp = 6,
        COPP_ForbiddenVideo = 7,
        COPP_Activate = 8,
        COPP_DigitalAudioUnprotected = 9,
    };
    enum class COPP_ACP_Protection_Level : int32_t
    {
        COPP_ACP_Level0 = 0,
        COPP_ACP_LevelMin = 0,
        COPP_ACP_Level1 = 1,
        COPP_ACP_Level2 = 2,
        COPP_ACP_Level3 = 3,
        COPP_ACP_LevelMax = 3,
        COPP_ACP_ForceDWORD = 2147483647,
    };
    enum class COPP_BusType : int32_t
    {
        COPP_BusType_Unknown = 0,
        COPP_BusType_PCI = 1,
        COPP_BusType_PCIX = 2,
        COPP_BusType_PCIExpress = 3,
        COPP_BusType_AGP = 4,
        COPP_BusType_Integrated = -2147483648,
        COPP_BusType_ForceDWORD = 2147483647,
    };
    enum class COPP_CGMSA_Protection_Level : int32_t
    {
        COPP_CGMSA_Disabled = 0,
        COPP_CGMSA_LevelMin = 0,
        COPP_CGMSA_CopyFreely = 1,
        COPP_CGMSA_CopyNoMore = 2,
        COPP_CGMSA_CopyOneGeneration = 3,
        COPP_CGMSA_CopyNever = 4,
        COPP_CGMSA_RedistributionControlRequired = 8,
        COPP_CGMSA_LevelMax = 12,
        COPP_CGMSA_ForceDWORD = 2147483647,
    };
    enum class COPP_ConnectorType : int32_t
    {
        COPP_ConnectorType_Unknown = -1,
        COPP_ConnectorType_VGA = 0,
        COPP_ConnectorType_SVideo = 1,
        COPP_ConnectorType_CompositeVideo = 2,
        COPP_ConnectorType_ComponentVideo = 3,
        COPP_ConnectorType_DVI = 4,
        COPP_ConnectorType_HDMI = 5,
        COPP_ConnectorType_LVDS = 6,
        COPP_ConnectorType_TMDS = 7,
        COPP_ConnectorType_D_JPN = 8,
        COPP_ConnectorType_Internal = -2147483648,
        COPP_ConnectorType_ForceDWORD = 2147483647,
    };
    enum class COPP_HDCP_Protection_Level : int32_t
    {
        COPP_HDCP_Level0 = 0,
        COPP_HDCP_LevelMin = 0,
        COPP_HDCP_Level1 = 1,
        COPP_HDCP_LevelMax = 1,
        COPP_HDCP_ForceDWORD = 2147483647,
    };
    enum class COPP_ImageAspectRatio_EN300294 : int32_t
    {
        COPP_AspectRatio_EN300294_FullFormat4by3 = 0,
        COPP_AspectRatio_EN300294_Box14by9Center = 1,
        COPP_AspectRatio_EN300294_Box14by9Top = 2,
        COPP_AspectRatio_EN300294_Box16by9Center = 3,
        COPP_AspectRatio_EN300294_Box16by9Top = 4,
        COPP_AspectRatio_EN300294_BoxGT16by9Center = 5,
        COPP_AspectRatio_EN300294_FullFormat4by3ProtectedCenter = 6,
        COPP_AspectRatio_EN300294_FullFormat16by9Anamorphic = 7,
        COPP_AspectRatio_ForceDWORD = 2147483647,
    };
    enum class COPP_StatusFlags : int32_t
    {
        COPP_StatusNormal = 0,
        COPP_LinkLost = 1,
        COPP_RenegotiationRequired = 2,
        COPP_StatusFlagsReserved = -4,
    };
    enum class COPP_StatusHDCPFlags : int32_t
    {
        COPP_HDCPRepeater = 1,
        COPP_HDCPFlagsReserved = -2,
    };
    enum class COPP_TVProtectionStandard : int32_t
    {
        COPP_ProtectionStandard_Unknown = -2147483648,
        COPP_ProtectionStandard_None = 0,
        COPP_ProtectionStandard_IEC61880_525i = 1,
        COPP_ProtectionStandard_IEC61880_2_525i = 2,
        COPP_ProtectionStandard_IEC62375_625p = 4,
        COPP_ProtectionStandard_EIA608B_525 = 8,
        COPP_ProtectionStandard_EN300294_625i = 16,
        COPP_ProtectionStandard_CEA805A_TypeA_525p = 32,
        COPP_ProtectionStandard_CEA805A_TypeA_750p = 64,
        COPP_ProtectionStandard_CEA805A_TypeA_1125i = 128,
        COPP_ProtectionStandard_CEA805A_TypeB_525p = 256,
        COPP_ProtectionStandard_CEA805A_TypeB_750p = 512,
        COPP_ProtectionStandard_CEA805A_TypeB_1125i = 1024,
        COPP_ProtectionStandard_ARIBTRB15_525i = 2048,
        COPP_ProtectionStandard_ARIBTRB15_525p = 4096,
        COPP_ProtectionStandard_ARIBTRB15_750p = 8192,
        COPP_ProtectionStandard_ARIBTRB15_1125i = 16384,
        COPP_ProtectionStandard_Mask = -2147450881,
        COPP_ProtectionStandard_Reserved = 2147450880,
    };
    enum class CPEventBitShift : int32_t
    {
        CPEVENT_BITSHIFT_RATINGS = 0,
        CPEVENT_BITSHIFT_COPP = 1,
        CPEVENT_BITSHIFT_LICENSE = 2,
        CPEVENT_BITSHIFT_ROLLBACK = 3,
        CPEVENT_BITSHIFT_SAC = 4,
        CPEVENT_BITSHIFT_DOWNRES = 5,
        CPEVENT_BITSHIFT_STUBLIB = 6,
        CPEVENT_BITSHIFT_UNTRUSTEDGRAPH = 7,
        CPEVENT_BITSHIFT_PENDING_CERTIFICATE = 8,
        CPEVENT_BITSHIFT_NO_PLAYREADY = 9,
    };
    enum class CPEvents : int32_t
    {
        CPEVENT_NONE = 0,
        CPEVENT_RATINGS = 1,
        CPEVENT_COPP = 2,
        CPEVENT_LICENSE = 3,
        CPEVENT_ROLLBACK = 4,
        CPEVENT_SAC = 5,
        CPEVENT_DOWNRES = 6,
        CPEVENT_STUBLIB = 7,
        CPEVENT_UNTRUSTEDGRAPH = 8,
        CPEVENT_PROTECTWINDOWED = 9,
    };
    enum class CPRecordingStatus : int32_t
    {
        RECORDING_STOPPED = 0,
        RECORDING_STARTED = 1,
    };
    enum class CRID_LOCATION : int32_t
    {
        CRID_LOCATION_IN_DESCRIPTOR = 0,
        CRID_LOCATION_IN_CIT = 1,
        CRID_LOCATION_DVB_RESERVED1 = 2,
        CRID_LOCATION_DVB_RESERVED2 = 3,
    };
    enum class CROSSBAR_DEFAULT_FLAGS : int32_t
    {
        DEF_MODE_PROFILE = 1,
        DEF_MODE_STREAMS = 2,
    };
    enum class CameraControlFlags : int32_t
    {
        CameraControl_Flags_Auto = 1,
        CameraControl_Flags_Manual = 2,
    };
    enum class CameraControlProperty : int32_t
    {
        CameraControl_Pan = 0,
        CameraControl_Tilt = 1,
        CameraControl_Roll = 2,
        CameraControl_Zoom = 3,
        CameraControl_Exposure = 4,
        CameraControl_Iris = 5,
        CameraControl_Focus = 6,
    };
    enum class ChannelChangeSpanningEvent_State : int32_t
    {
        ChannelChangeSpanningEvent_Start = 0,
        ChannelChangeSpanningEvent_End = 2,
    };
    enum class ChannelType : int32_t
    {
        ChannelTypeNone = 0,
        ChannelTypeOther = 1,
        ChannelTypeVideo = 2,
        ChannelTypeAudio = 4,
        ChannelTypeText = 8,
        ChannelTypeSubtitles = 16,
        ChannelTypeCaptions = 32,
        ChannelTypeSuperimpose = 64,
        ChannelTypeData = 128,
    };
    enum class ComponentCategory : int32_t
    {
        CategoryNotSet = -1,
        CategoryOther = 0,
        CategoryVideo = 1,
        CategoryAudio = 2,
        CategoryText = 3,
        CategorySubtitles = 4,
        CategoryCaptions = 5,
        CategorySuperimpose = 6,
        CategoryData = 7,
        CATEGORY_COUNT = 8,
    };
    enum class ComponentStatus : int32_t
    {
        StatusActive = 0,
        StatusInactive = 1,
        StatusUnavailable = 2,
    };
    enum class CompressionCaps : int32_t
    {
        CompressionCaps_CanQuality = 1,
        CompressionCaps_CanCrunch = 2,
        CompressionCaps_CanKeyFrame = 4,
        CompressionCaps_CanBFrame = 8,
        CompressionCaps_CanWindow = 16,
    };
    enum class DDSFF_FLAGS : uint32_t
    {
        DDSFF_PROGRESSIVERENDER = 0x1,
    };
    enum class DECIMATION_USAGE : int32_t
    {
        DECIMATION_LEGACY = 0,
        DECIMATION_USE_DECODER_ONLY = 1,
        DECIMATION_USE_VIDEOPORT_ONLY = 2,
        DECIMATION_USE_OVERLAY_ONLY = 3,
        DECIMATION_DEFAULT = 4,
    };
    enum class DESC_LINKAGE_TYPE : int32_t
    {
        DESC_LINKAGE_RESERVED0 = 0,
        DESC_LINKAGE_INFORMATION = 1,
        DESC_LINKAGE_EPG = 2,
        DESC_LINKAGE_CA_REPLACEMENT = 3,
        DESC_LINKAGE_COMPLETE_NET_BOUQUET_SI = 4,
        DESC_LINKAGE_REPLACEMENT = 5,
        DESC_LINKAGE_DATA = 6,
        DESC_LINKAGE_RESERVED1 = 7,
        DESC_LINKAGE_USER = 8,
        DESC_LINKAGE_RESERVED2 = 255,
    };
    enum class DISPID_TUNER : int32_t
    {
        DISPID_TUNER_TS_UNIQUENAME = 1,
        DISPID_TUNER_TS_FRIENDLYNAME = 2,
        DISPID_TUNER_TS_CLSID = 3,
        DISPID_TUNER_TS_NETWORKTYPE = 4,
        DISPID_TUNER_TS__NETWORKTYPE = 5,
        DISPID_TUNER_TS_CREATETUNEREQUEST = 6,
        DISPID_TUNER_TS_ENUMCATEGORYGUIDS = 7,
        DISPID_TUNER_TS_ENUMDEVICEMONIKERS = 8,
        DISPID_TUNER_TS_DEFAULTPREFERREDCOMPONENTTYPES = 9,
        DISPID_TUNER_TS_FREQMAP = 10,
        DISPID_TUNER_TS_DEFLOCATOR = 11,
        DISPID_TUNER_TS_CLONE = 12,
        DISPID_TUNER_TR_TUNINGSPACE = 1,
        DISPID_TUNER_TR_COMPONENTS = 2,
        DISPID_TUNER_TR_CLONE = 3,
        DISPID_TUNER_TR_LOCATOR = 4,
        DISPID_TUNER_CT_CATEGORY = 1,
        DISPID_TUNER_CT_MEDIAMAJORTYPE = 2,
        DISPID_TUNER_CT__MEDIAMAJORTYPE = 3,
        DISPID_TUNER_CT_MEDIASUBTYPE = 4,
        DISPID_TUNER_CT__MEDIASUBTYPE = 5,
        DISPID_TUNER_CT_MEDIAFORMATTYPE = 6,
        DISPID_TUNER_CT__MEDIAFORMATTYPE = 7,
        DISPID_TUNER_CT_MEDIATYPE = 8,
        DISPID_TUNER_CT_CLONE = 9,
        DISPID_TUNER_LCT_LANGID = 100,
        DISPID_TUNER_MP2CT_TYPE = 200,
        DISPID_TUNER_ATSCCT_FLAGS = 300,
        DISPID_TUNER_L_CARRFREQ = 1,
        DISPID_TUNER_L_INNERFECMETHOD = 2,
        DISPID_TUNER_L_INNERFECRATE = 3,
        DISPID_TUNER_L_OUTERFECMETHOD = 4,
        DISPID_TUNER_L_OUTERFECRATE = 5,
        DISPID_TUNER_L_MOD = 6,
        DISPID_TUNER_L_SYMRATE = 7,
        DISPID_TUNER_L_CLONE = 8,
        DISPID_TUNER_L_ATSC_PHYS_CHANNEL = 201,
        DISPID_TUNER_L_ATSC_TSID = 202,
        DISPID_TUNER_L_ATSC_MP2_PROGNO = 203,
        DISPID_TUNER_L_DVBT_BANDWIDTH = 301,
        DISPID_TUNER_L_DVBT_LPINNERFECMETHOD = 302,
        DISPID_TUNER_L_DVBT_LPINNERFECRATE = 303,
        DISPID_TUNER_L_DVBT_GUARDINTERVAL = 304,
        DISPID_TUNER_L_DVBT_HALPHA = 305,
        DISPID_TUNER_L_DVBT_TRANSMISSIONMODE = 306,
        DISPID_TUNER_L_DVBT_INUSE = 307,
        DISPID_TUNER_L_DVBT2_PHYSICALLAYERPIPEID = 351,
        DISPID_TUNER_L_DVBS_POLARISATION = 401,
        DISPID_TUNER_L_DVBS_WEST = 402,
        DISPID_TUNER_L_DVBS_ORBITAL = 403,
        DISPID_TUNER_L_DVBS_AZIMUTH = 404,
        DISPID_TUNER_L_DVBS_ELEVATION = 405,
        DISPID_TUNER_L_DVBS2_DISEQ_LNB_SOURCE = 406,
        DISPID_TUNER_TS_DVBS2_LOW_OSC_FREQ_OVERRIDE = 407,
        DISPID_TUNER_TS_DVBS2_HI_OSC_FREQ_OVERRIDE = 408,
        DISPID_TUNER_TS_DVBS2_LNB_SWITCH_FREQ_OVERRIDE = 409,
        DISPID_TUNER_TS_DVBS2_SPECTRAL_INVERSION_OVERRIDE = 410,
        DISPID_TUNER_L_DVBS2_ROLLOFF = 411,
        DISPID_TUNER_L_DVBS2_PILOT = 412,
        DISPID_TUNER_L_ANALOG_STANDARD = 601,
        DISPID_TUNER_L_DTV_O_MAJOR_CHANNEL = 701,
        DISPID_TUNER_C_TYPE = 1,
        DISPID_TUNER_C_STATUS = 2,
        DISPID_TUNER_C_LANGID = 3,
        DISPID_TUNER_C_DESCRIPTION = 4,
        DISPID_TUNER_C_CLONE = 5,
        DISPID_TUNER_C_MP2_PID = 101,
        DISPID_TUNER_C_MP2_PCRPID = 102,
        DISPID_TUNER_C_MP2_PROGNO = 103,
        DISPID_TUNER_C_ANALOG_AUDIO = 201,
        DISPID_TUNER_TS_DVB_SYSTEMTYPE = 101,
        DISPID_TUNER_TS_DVB2_NETWORK_ID = 102,
        DISPID_TUNER_TS_DVBS_LOW_OSC_FREQ = 1001,
        DISPID_TUNER_TS_DVBS_HI_OSC_FREQ = 1002,
        DISPID_TUNER_TS_DVBS_LNB_SWITCH_FREQ = 1003,
        DISPID_TUNER_TS_DVBS_INPUT_RANGE = 1004,
        DISPID_TUNER_TS_DVBS_SPECTRAL_INVERSION = 1005,
        DISPID_TUNER_TS_AR_MINFREQUENCY = 101,
        DISPID_TUNER_TS_AR_MAXFREQUENCY = 102,
        DISPID_TUNER_TS_AR_STEP = 103,
        DISPID_TUNER_TS_AR_COUNTRYCODE = 104,
        DISPID_TUNER_TS_AUX_COUNTRYCODE = 101,
        DISPID_TUNER_TS_ATV_MINCHANNEL = 101,
        DISPID_TUNER_TS_ATV_MAXCHANNEL = 102,
        DISPID_TUNER_TS_ATV_INPUTTYPE = 103,
        DISPID_TUNER_TS_ATV_COUNTRYCODE = 104,
        DISPID_TUNER_TS_ATSC_MINMINORCHANNEL = 201,
        DISPID_TUNER_TS_ATSC_MAXMINORCHANNEL = 202,
        DISPID_TUNER_TS_ATSC_MINPHYSCHANNEL = 203,
        DISPID_TUNER_TS_ATSC_MAXPHYSCHANNEL = 204,
        DISPID_TUNER_TS_DC_MINMAJORCHANNEL = 301,
        DISPID_TUNER_TS_DC_MAXMAJORCHANNEL = 302,
        DISPID_TUNER_TS_DC_MINSOURCEID = 303,
        DISPID_TUNER_TS_DC_MAXSOURCEID = 304,
        DISPID_CHTUNER_ATVAC_CHANNEL = 101,
        DISPID_CHTUNER_ATVDC_SYSTEM = 101,
        DISPID_CHTUNER_ATVDC_CONTENT = 102,
        DISPID_CHTUNER_CIDTR_CHANNELID = 101,
        DISPID_CHTUNER_CTR_CHANNEL = 101,
        DISPID_CHTUNER_ACTR_MINOR_CHANNEL = 201,
        DISPID_CHTUNER_DCTR_MAJOR_CHANNEL = 301,
        DISPID_CHTUNER_DCTR_SRCID = 302,
        DISPID_DVBTUNER_DVBC_ATTRIBUTESVALID = 101,
        DISPID_DVBTUNER_DVBC_PID = 102,
        DISPID_DVBTUNER_DVBC_TAG = 103,
        DISPID_DVBTUNER_DVBC_COMPONENTTYPE = 104,
        DISPID_DVBTUNER_ONID = 101,
        DISPID_DVBTUNER_TSID = 102,
        DISPID_DVBTUNER_SID = 103,
        DISPID_MP2TUNER_TSID = 101,
        DISPID_MP2TUNER_PROGNO = 102,
        DISPID_MP2TUNERFACTORY_CREATETUNEREQUEST = 1,
    };
    enum class DMO_ENUM_FLAGS : int32_t
    {
        DMO_ENUMF_INCLUDE_KEYED = 1,
    };
    enum class DMO_REGISTER_FLAGS : int32_t
    {
        DMO_REGISTERF_IS_KEYED = 1,
    };
    enum class DVBSystemType : int32_t
    {
        DVB_Cable = 0,
        DVB_Terrestrial = 1,
        DVB_Satellite = 2,
        ISDB_Terrestrial = 3,
        ISDB_Satellite = 4,
    };
    enum class DVB_STRCONV_MODE : int32_t
    {
        STRCONV_MODE_DVB = 0,
        STRCONV_MODE_DVB_EMPHASIS = 1,
        STRCONV_MODE_DVB_WITHOUT_EMPHASIS = 2,
        STRCONV_MODE_ISDB = 3,
    };
    enum class DVDFilterState : int32_t
    {
        dvdState_Undefined = -2,
        dvdState_Unitialized = -1,
        dvdState_Stopped = 0,
        dvdState_Paused = 1,
        dvdState_Running = 2,
    };
    enum class DVDMenuIDConstants : int32_t
    {
        dvdMenu_Title = 2,
        dvdMenu_Root = 3,
        dvdMenu_Subpicture = 4,
        dvdMenu_Audio = 5,
        dvdMenu_Angle = 6,
        dvdMenu_Chapter = 7,
    };
    enum class DVDSPExt : int32_t
    {
        dvdSPExt_NotSpecified = 0,
        dvdSPExt_Caption_Normal = 1,
        dvdSPExt_Caption_Big = 2,
        dvdSPExt_Caption_Children = 3,
        dvdSPExt_CC_Normal = 5,
        dvdSPExt_CC_Big = 6,
        dvdSPExt_CC_Children = 7,
        dvdSPExt_Forced = 9,
        dvdSPExt_DirectorComments_Normal = 13,
        dvdSPExt_DirectorComments_Big = 14,
        dvdSPExt_DirectorComments_Children = 15,
    };
    enum class DVDTextStringType : int32_t
    {
        dvdStruct_Volume = 1,
        dvdStruct_Title = 2,
        dvdStruct_ParentalID = 3,
        dvdStruct_PartOfTitle = 4,
        dvdStruct_Cell = 5,
        dvdStream_Audio = 16,
        dvdStream_Subpicture = 17,
        dvdStream_Angle = 18,
        dvdChannel_Audio = 32,
        dvdGeneral_Name = 48,
        dvdGeneral_Comments = 49,
        dvdTitle_Series = 56,
        dvdTitle_Movie = 57,
        dvdTitle_Video = 58,
        dvdTitle_Album = 59,
        dvdTitle_Song = 60,
        dvdTitle_Other = 63,
        dvdTitle_Sub_Series = 64,
        dvdTitle_Sub_Movie = 65,
        dvdTitle_Sub_Video = 66,
        dvdTitle_Sub_Album = 67,
        dvdTitle_Sub_Song = 68,
        dvdTitle_Sub_Other = 71,
        dvdTitle_Orig_Series = 72,
        dvdTitle_Orig_Movie = 73,
        dvdTitle_Orig_Video = 74,
        dvdTitle_Orig_Album = 75,
        dvdTitle_Orig_Song = 76,
        dvdTitle_Orig_Other = 79,
        dvdOther_Scene = 80,
        dvdOther_Cut = 81,
        dvdOther_Take = 82,
    };
    enum class DVD_AUDIO_APPMODE : int32_t
    {
        DVD_AudioMode_None = 0,
        DVD_AudioMode_Karaoke = 1,
        DVD_AudioMode_Surround = 2,
        DVD_AudioMode_Other = 3,
    };
    enum class DVD_AUDIO_FORMAT : int32_t
    {
        DVD_AudioFormat_AC3 = 0,
        DVD_AudioFormat_MPEG1 = 1,
        DVD_AudioFormat_MPEG1_DRC = 2,
        DVD_AudioFormat_MPEG2 = 3,
        DVD_AudioFormat_MPEG2_DRC = 4,
        DVD_AudioFormat_LPCM = 5,
        DVD_AudioFormat_DTS = 6,
        DVD_AudioFormat_SDDS = 7,
        DVD_AudioFormat_Other = 8,
    };
    enum class DVD_AUDIO_LANG_EXT : int32_t
    {
        DVD_AUD_EXT_NotSpecified = 0,
        DVD_AUD_EXT_Captions = 1,
        DVD_AUD_EXT_VisuallyImpaired = 2,
        DVD_AUD_EXT_DirectorComments1 = 3,
        DVD_AUD_EXT_DirectorComments2 = 4,
    };
    enum class DVD_CMD_FLAGS : int32_t
    {
        DVD_CMD_FLAG_None = 0,
        DVD_CMD_FLAG_Flush = 1,
        DVD_CMD_FLAG_SendEvents = 2,
        DVD_CMD_FLAG_Block = 4,
        DVD_CMD_FLAG_StartWhenRendered = 8,
        DVD_CMD_FLAG_EndAfterRendered = 16,
    };
    enum class DVD_DISC_SIDE : int32_t
    {
        DVD_SIDE_A = 1,
        DVD_SIDE_B = 2,
    };
    enum class DVD_DOMAIN : int32_t
    {
        DVD_DOMAIN_FirstPlay = 1,
        DVD_DOMAIN_VideoManagerMenu = 2,
        DVD_DOMAIN_VideoTitleSetMenu = 3,
        DVD_DOMAIN_Title = 4,
        DVD_DOMAIN_Stop = 5,
    };
    enum class DVD_ERROR : int32_t
    {
        DVD_ERROR_Unexpected = 1,
        DVD_ERROR_CopyProtectFail = 2,
        DVD_ERROR_InvalidDVD1_0Disc = 3,
        DVD_ERROR_InvalidDiscRegion = 4,
        DVD_ERROR_LowParentalLevel = 5,
        DVD_ERROR_MacrovisionFail = 6,
        DVD_ERROR_IncompatibleSystemAndDecoderRegions = 7,
        DVD_ERROR_IncompatibleDiscAndDecoderRegions = 8,
        DVD_ERROR_CopyProtectOutputFail = 9,
        DVD_ERROR_CopyProtectOutputNotSupported = 10,
    };
    enum class DVD_FRAMERATE : int32_t
    {
        DVD_FPS_25 = 1,
        DVD_FPS_30NonDrop = 3,
    };
    enum class DVD_KARAOKE_ASSIGNMENT : int32_t
    {
        DVD_Assignment_reserved0 = 0,
        DVD_Assignment_reserved1 = 1,
        DVD_Assignment_LR = 2,
        DVD_Assignment_LRM = 3,
        DVD_Assignment_LR1 = 4,
        DVD_Assignment_LRM1 = 5,
        DVD_Assignment_LR12 = 6,
        DVD_Assignment_LRM12 = 7,
    };
    enum class DVD_KARAOKE_CONTENTS : int32_t
    {
        DVD_Karaoke_GuideVocal1 = 1,
        DVD_Karaoke_GuideVocal2 = 2,
        DVD_Karaoke_GuideMelody1 = 4,
        DVD_Karaoke_GuideMelody2 = 8,
        DVD_Karaoke_GuideMelodyA = 16,
        DVD_Karaoke_GuideMelodyB = 32,
        DVD_Karaoke_SoundEffectA = 64,
        DVD_Karaoke_SoundEffectB = 128,
    };
    enum class DVD_KARAOKE_DOWNMIX : int32_t
    {
        DVD_Mix_0to0 = 1,
        DVD_Mix_1to0 = 2,
        DVD_Mix_2to0 = 4,
        DVD_Mix_3to0 = 8,
        DVD_Mix_4to0 = 16,
        DVD_Mix_Lto0 = 32,
        DVD_Mix_Rto0 = 64,
        DVD_Mix_0to1 = 256,
        DVD_Mix_1to1 = 512,
        DVD_Mix_2to1 = 1024,
        DVD_Mix_3to1 = 2048,
        DVD_Mix_4to1 = 4096,
        DVD_Mix_Lto1 = 8192,
        DVD_Mix_Rto1 = 16384,
    };
    enum class DVD_MENU_ID : int32_t
    {
        DVD_MENU_Title = 2,
        DVD_MENU_Root = 3,
        DVD_MENU_Subpicture = 4,
        DVD_MENU_Audio = 5,
        DVD_MENU_Angle = 6,
        DVD_MENU_Chapter = 7,
    };
    enum class DVD_NavCmdType : int32_t
    {
        DVD_NavCmdType_Pre = 1,
        DVD_NavCmdType_Post = 2,
        DVD_NavCmdType_Cell = 3,
        DVD_NavCmdType_Button = 4,
    };
    enum class DVD_OPTION_FLAG : int32_t
    {
        DVD_ResetOnStop = 1,
        DVD_NotifyParentalLevelChange = 2,
        DVD_HMSF_TimeCodeEvents = 3,
        DVD_AudioDuringFFwdRew = 4,
        DVD_EnableNonblockingAPIs = 5,
        DVD_CacheSizeInMB = 6,
        DVD_EnablePortableBookmarks = 7,
        DVD_EnableExtendedCopyProtectErrors = 8,
        DVD_NotifyPositionChange = 9,
        DVD_IncreaseOutputControl = 10,
        DVD_EnableStreaming = 11,
        DVD_EnableESOutput = 12,
        DVD_EnableTitleLength = 13,
        DVD_DisableStillThrottle = 14,
        DVD_EnableLoggingEvents = 15,
        DVD_MaxReadBurstInKB = 16,
        DVD_ReadBurstPeriodInMS = 17,
        DVD_RestartDisc = 18,
        DVD_EnableCC = 19,
    };
    enum class DVD_PARENTAL_LEVEL : int32_t
    {
        DVD_PARENTAL_LEVEL_8 = 32768,
        DVD_PARENTAL_LEVEL_7 = 16384,
        DVD_PARENTAL_LEVEL_6 = 8192,
        DVD_PARENTAL_LEVEL_5 = 4096,
        DVD_PARENTAL_LEVEL_4 = 2048,
        DVD_PARENTAL_LEVEL_3 = 1024,
        DVD_PARENTAL_LEVEL_2 = 512,
        DVD_PARENTAL_LEVEL_1 = 256,
    };
    enum class DVD_PB_STOPPED : int32_t
    {
        DVD_PB_STOPPED_Other = 0,
        DVD_PB_STOPPED_NoBranch = 1,
        DVD_PB_STOPPED_NoFirstPlayDomain = 2,
        DVD_PB_STOPPED_StopCommand = 3,
        DVD_PB_STOPPED_Reset = 4,
        DVD_PB_STOPPED_DiscEjected = 5,
        DVD_PB_STOPPED_IllegalNavCommand = 6,
        DVD_PB_STOPPED_PlayPeriodAutoStop = 7,
        DVD_PB_STOPPED_PlayChapterAutoStop = 8,
        DVD_PB_STOPPED_ParentalFailure = 9,
        DVD_PB_STOPPED_RegionFailure = 10,
        DVD_PB_STOPPED_MacrovisionFailure = 11,
        DVD_PB_STOPPED_DiscReadError = 12,
        DVD_PB_STOPPED_CopyProtectFailure = 13,
        DVD_PB_STOPPED_CopyProtectOutputFailure = 14,
        DVD_PB_STOPPED_CopyProtectOutputNotSupported = 15,
    };
    enum class DVD_PLAY_DIRECTION : int32_t
    {
        DVD_DIR_FORWARD = 0,
        DVD_DIR_BACKWARD = 1,
    };
    enum class DVD_PREFERRED_DISPLAY_MODE : int32_t
    {
        DISPLAY_CONTENT_DEFAULT = 0,
        DISPLAY_16x9 = 1,
        DISPLAY_4x3_PANSCAN_PREFERRED = 2,
        DISPLAY_4x3_LETTERBOX_PREFERRED = 3,
    };
    enum class DVD_RELATIVE_BUTTON : int32_t
    {
        DVD_Relative_Upper = 1,
        DVD_Relative_Lower = 2,
        DVD_Relative_Left = 3,
        DVD_Relative_Right = 4,
    };
    enum class DVD_SUBPICTURE_CODING : int32_t
    {
        DVD_SPCoding_RunLength = 0,
        DVD_SPCoding_Extended = 1,
        DVD_SPCoding_Other = 2,
    };
    enum class DVD_SUBPICTURE_LANG_EXT : int32_t
    {
        DVD_SP_EXT_NotSpecified = 0,
        DVD_SP_EXT_Caption_Normal = 1,
        DVD_SP_EXT_Caption_Big = 2,
        DVD_SP_EXT_Caption_Children = 3,
        DVD_SP_EXT_CC_Normal = 5,
        DVD_SP_EXT_CC_Big = 6,
        DVD_SP_EXT_CC_Children = 7,
        DVD_SP_EXT_Forced = 9,
        DVD_SP_EXT_DirectorComments_Normal = 13,
        DVD_SP_EXT_DirectorComments_Big = 14,
        DVD_SP_EXT_DirectorComments_Children = 15,
    };
    enum class DVD_SUBPICTURE_TYPE : int32_t
    {
        DVD_SPType_NotSpecified = 0,
        DVD_SPType_Language = 1,
        DVD_SPType_Other = 2,
    };
    enum class DVD_TIMECODE_FLAGS : int32_t
    {
        DVD_TC_FLAG_25fps = 1,
        DVD_TC_FLAG_30fps = 2,
        DVD_TC_FLAG_DropFrame = 4,
        DVD_TC_FLAG_Interpolated = 8,
    };
    enum class DVD_TITLE_APPMODE : int32_t
    {
        DVD_AppMode_Not_Specified = 0,
        DVD_AppMode_Karaoke = 1,
        DVD_AppMode_Other = 3,
    };
    enum class DVD_TextCharSet : int32_t
    {
        DVD_CharSet_Unicode = 0,
        DVD_CharSet_ISO646 = 1,
        DVD_CharSet_JIS_Roman_Kanji = 2,
        DVD_CharSet_ISO8859_1 = 3,
        DVD_CharSet_ShiftJIS_Kanji_Roman_Katakana = 4,
    };
    enum class DVD_TextStringType : int32_t
    {
        DVD_Struct_Volume = 1,
        DVD_Struct_Title = 2,
        DVD_Struct_ParentalID = 3,
        DVD_Struct_PartOfTitle = 4,
        DVD_Struct_Cell = 5,
        DVD_Stream_Audio = 16,
        DVD_Stream_Subpicture = 17,
        DVD_Stream_Angle = 18,
        DVD_Channel_Audio = 32,
        DVD_General_Name = 48,
        DVD_General_Comments = 49,
        DVD_Title_Series = 56,
        DVD_Title_Movie = 57,
        DVD_Title_Video = 58,
        DVD_Title_Album = 59,
        DVD_Title_Song = 60,
        DVD_Title_Other = 63,
        DVD_Title_Sub_Series = 64,
        DVD_Title_Sub_Movie = 65,
        DVD_Title_Sub_Video = 66,
        DVD_Title_Sub_Album = 67,
        DVD_Title_Sub_Song = 68,
        DVD_Title_Sub_Other = 71,
        DVD_Title_Orig_Series = 72,
        DVD_Title_Orig_Movie = 73,
        DVD_Title_Orig_Video = 74,
        DVD_Title_Orig_Album = 75,
        DVD_Title_Orig_Song = 76,
        DVD_Title_Orig_Other = 79,
        DVD_Other_Scene = 80,
        DVD_Other_Cut = 81,
        DVD_Other_Take = 82,
    };
    enum class DVD_VIDEO_COMPRESSION : int32_t
    {
        DVD_VideoCompression_Other = 0,
        DVD_VideoCompression_MPEG1 = 1,
        DVD_VideoCompression_MPEG2 = 2,
    };
    enum class DVD_WARNING : int32_t
    {
        DVD_WARNING_InvalidDVD1_0Disc = 1,
        DVD_WARNING_FormatNotSupported = 2,
        DVD_WARNING_IllegalNavCommand = 3,
        DVD_WARNING_Open = 4,
        DVD_WARNING_Seek = 5,
        DVD_WARNING_Read = 6,
    };
    enum class DXVA2_DestinationFlags : int32_t
    {
        DXVA2_DestinationFlag_Background_Changed = 1,
        DXVA2_DestinationFlag_TargetRect_Changed = 2,
        DXVA2_DestinationFlag_ColorData_Changed = 4,
        DXVA2_DestinationFlag_Alpha_Changed = 8,
        DXVA2_DestinationFlag_RFF = 65536,
        DXVA2_DestinationFlag_TFF = 131072,
        DXVA2_DestinationFlag_RFF_TFF_Present = 262144,
        DXVA2_DestinationFlagMask = -65521,
    };
    enum class DXVA2_SampleFlags : int32_t
    {
        DXVA2_SampleFlag_Palette_Changed = 1,
        DXVA2_SampleFlag_SrcRect_Changed = 2,
        DXVA2_SampleFlag_DstRect_Changed = 4,
        DXVA2_SampleFlag_ColorData_Changed = 8,
        DXVA2_SampleFlag_PlanarAlpha_Changed = 16,
        DXVA2_SampleFlag_RFF = 65536,
        DXVA2_SampleFlag_TFF = 131072,
        DXVA2_SampleFlag_RFF_TFF_Present = 262144,
        DXVA2_SampleFlagsMask = -65505,
    };
    enum class DisplaySizeList : int32_t
    {
        dslDefaultSize = 0,
        dslSourceSize = 0,
        dslHalfSourceSize = 1,
        dslDoubleSourceSize = 2,
        dslFullScreen = 3,
        dslHalfScreen = 4,
        dslQuarterScreen = 5,
        dslSixteenthScreen = 6,
    };
    enum class DownResEventParam : int32_t
    {
        DOWNRES_Always = 0,
        DOWNRES_InWindowOnly = 1,
        DOWNRES_Undefined = 2,
    };
    enum class EnTag_Mode : int32_t
    {
        EnTag_Remove = 0,
        EnTag_Once = 1,
        EnTag_Repeat = 2,
    };
    enum class EnTvRat_CAE_TV : int32_t
    {
        CAE_TV_Exempt = 0,
        CAE_TV_C = 1,
        CAE_TV_C8 = 2,
        CAE_TV_G = 3,
        CAE_TV_PG = 4,
        CAE_TV_14 = 5,
        CAE_TV_18 = 6,
        CAE_TV_Reserved = 7,
    };
    enum class EnTvRat_CAF_TV : int32_t
    {
        CAF_TV_Exempt = 0,
        CAF_TV_G = 1,
        CAF_TV_8 = 2,
        CAF_TV_13 = 3,
        CAF_TV_16 = 4,
        CAF_TV_18 = 5,
        CAF_TV_Reserved6 = 6,
        CAF_TV_Reserved = 7,
    };
    enum class EnTvRat_GenericLevel : int32_t
    {
        TvRat_0 = 0,
        TvRat_1 = 1,
        TvRat_2 = 2,
        TvRat_3 = 3,
        TvRat_4 = 4,
        TvRat_5 = 5,
        TvRat_6 = 6,
        TvRat_7 = 7,
        TvRat_8 = 8,
        TvRat_9 = 9,
        TvRat_10 = 10,
        TvRat_11 = 11,
        TvRat_12 = 12,
        TvRat_13 = 13,
        TvRat_14 = 14,
        TvRat_15 = 15,
        TvRat_16 = 16,
        TvRat_17 = 17,
        TvRat_18 = 18,
        TvRat_19 = 19,
        TvRat_20 = 20,
        TvRat_21 = 21,
        TvRat_kLevels = 22,
        TvRat_Unblock = -1,
        TvRat_LevelDontKnow = 255,
    };
    enum class EnTvRat_MPAA : int32_t
    {
        MPAA_NotApplicable = 0,
        MPAA_G = 1,
        MPAA_PG = 2,
        MPAA_PG13 = 3,
        MPAA_R = 4,
        MPAA_NC17 = 5,
        MPAA_X = 6,
        MPAA_NotRated = 7,
    };
    enum class EnTvRat_System : int32_t
    {
        MPAA = 0,
        US_TV = 1,
        Canadian_English = 2,
        Canadian_French = 3,
        Reserved4 = 4,
        System5 = 5,
        System6 = 6,
        Reserved7 = 7,
        PBDA = 8,
        AgeBased = 9,
        TvRat_kSystems = 10,
        TvRat_SystemDontKnow = 255,
    };
    enum class EnTvRat_US_TV : int32_t
    {
        US_TV_None = 0,
        US_TV_Y = 1,
        US_TV_Y7 = 2,
        US_TV_G = 3,
        US_TV_PG = 4,
        US_TV_14 = 5,
        US_TV_MA = 6,
        US_TV_None7 = 7,
    };
    enum class EncDecEvents : int32_t
    {
        ENCDEC_CPEVENT = 0,
        ENCDEC_RECORDING_STATUS = 1,
    };
    enum class EntitlementType : int32_t
    {
        Entitled = 0,
        NotEntitled = 1,
        TechnicalFailure = 2,
    };
    enum class FECMethod : int32_t
    {
        BDA_FEC_METHOD_NOT_SET = -1,
        BDA_FEC_METHOD_NOT_DEFINED = 0,
        BDA_FEC_VITERBI = 1,
        BDA_FEC_RS_204_188 = 2,
        BDA_FEC_LDPC = 3,
        BDA_FEC_BCH = 4,
        BDA_FEC_RS_147_130 = 5,
        BDA_FEC_MAX = 6,
    };
    enum class FILTER_STATE : int32_t
    {
        State_Stopped = 0,
        State_Paused = 1,
        State_Running = 2,
    };
    enum class FormatNotSupportedEvents : int32_t
    {
        FORMATNOTSUPPORTED_CLEAR = 0,
        FORMATNOTSUPPORTED_NOTSUPPORTED = 1,
    };
    enum class GuardInterval : int32_t
    {
        BDA_GUARD_NOT_SET = -1,
        BDA_GUARD_NOT_DEFINED = 0,
        BDA_GUARD_1_32 = 1,
        BDA_GUARD_1_16 = 2,
        BDA_GUARD_1_8 = 3,
        BDA_GUARD_1_4 = 4,
        BDA_GUARD_1_128 = 5,
        BDA_GUARD_19_128 = 6,
        BDA_GUARD_19_256 = 7,
        BDA_GUARD_MAX = 8,
    };
    enum class HierarchyAlpha : int32_t
    {
        BDA_HALPHA_NOT_SET = -1,
        BDA_HALPHA_NOT_DEFINED = 0,
        BDA_HALPHA_1 = 1,
        BDA_HALPHA_2 = 2,
        BDA_HALPHA_4 = 3,
        BDA_HALPHA_MAX = 4,
    };
    enum class IFILTERMAPPER_MERIT : int32_t
    {
        MERIT_PREFERRED = 8388608,
        MERIT_NORMAL = 6291456,
        MERIT_UNLIKELY = 4194304,
        MERIT_DO_NOT_USE = 2097152,
        MERIT_SW_COMPRESSOR = 1048576,
        MERIT_HW_COMPRESSOR = 1048656,
    };
    enum class ISDBCAS_REQUEST_ID : int32_t
    {
        ISDBCAS_REQUEST_ID_EMG = 56,
        ISDBCAS_REQUEST_ID_EMD = 58,
    };
    enum class InterleavingMode : int32_t
    {
        INTERLEAVE_NONE = 0,
        INTERLEAVE_CAPTURE = 1,
        INTERLEAVE_FULL = 2,
        INTERLEAVE_NONE_BUFFERED = 3,
    };
    enum class KSEVENT_BDA_EVENT_TYPE : int32_t
    {
        KSEVENT_BDA_EVENT_PENDINGEVENT = 0,
    };
    enum class KSEVENT_BDA_TUNER : int32_t
    {
        KSEVENT_BDA_TUNER_SCAN = 0,
    };
    enum class KSMETHOD_BDA_CAS_SERVICE : int32_t
    {
        KSMETHOD_BDA_CAS_CHECKENTITLEMENTTOKEN = 0,
        KSMETHOD_BDA_CAS_SETCAPTURETOKEN = 1,
        KSMETHOD_BDA_CAS_OPENBROADCASTMMI = 2,
        KSMETHOD_BDA_CAS_CLOSEMMIDIALOG = 3,
    };
    enum class KSMETHOD_BDA_CHANGE_SYNC : int32_t
    {
        KSMETHOD_BDA_START_CHANGES = 0,
        KSMETHOD_BDA_CHECK_CHANGES = 1,
        KSMETHOD_BDA_COMMIT_CHANGES = 2,
        KSMETHOD_BDA_GET_CHANGE_STATE = 3,
    };
    enum class KSMETHOD_BDA_DEBUG_SERVICE : int32_t
    {
        KSMETHOD_BDA_DEBUG_LEVEL = 0,
        KSMETHOD_BDA_DEBUG_DATA = 1,
    };
    enum class KSMETHOD_BDA_DEVICE_CONFIGURATION : int32_t
    {
        KSMETHOD_BDA_CREATE_PIN_FACTORY = 0,
        KSMETHOD_BDA_DELETE_PIN_FACTORY = 1,
        KSMETHOD_BDA_CREATE_TOPOLOGY = 2,
    };
    enum class KSMETHOD_BDA_DRM : int32_t
    {
        KSMETHOD_BDA_DRM_CURRENT = 0,
        KSMETHOD_BDA_DRM_DRMSTATUS = 1,
    };
    enum class KSMETHOD_BDA_EVENTING_SERVICE : int32_t
    {
        KSMETHOD_BDA_EVENT_DATA = 0,
        KSMETHOD_BDA_EVENT_COMPLETE = 1,
    };
    enum class KSMETHOD_BDA_GDDS_SERVICE : int32_t
    {
        KSMETHOD_BDA_GDDS_DATATYPE = 0,
        KSMETHOD_BDA_GDDS_DATA = 1,
        KSMETHOD_BDA_GDDS_TUNEXMLFROMIDX = 2,
        KSMETHOD_BDA_GDDS_GETSERVICES = 3,
        KSMETHOD_BDA_GDDS_SERVICEFROMTUNEXML = 4,
        KSMETHOD_BDA_GDDS_DATAUPDATE = 5,
    };
    enum class KSMETHOD_BDA_GPNV_SERVICE : int32_t
    {
        KSMETHOD_BDA_GPNV_GETVALUE = 0,
        KSMETHOD_BDA_GPNV_SETVALUE = 1,
        KSMETHOD_BDA_GPNV_NAMEFROMINDEX = 2,
        KSMETHOD_BDA_GPNV_GETVALUEUPDATENAME = 3,
    };
    enum class KSMETHOD_BDA_ISDB_CAS : int32_t
    {
        KSMETHOD_BDA_ISDBCAS_SETREQUEST = 0,
        KSMETHOD_BDA_ISDBCAS_RESPONSEDATA = 1,
    };
    enum class KSMETHOD_BDA_MUX_SERVICE : int32_t
    {
        KSMETHOD_BDA_MUX_GETPIDLIST = 0,
        KSMETHOD_BDA_MUX_SETPIDLIST = 1,
    };
    enum class KSMETHOD_BDA_SCAN_SERVICE : int32_t
    {
        KSMETHOD_BDA_SCAN_CAPABILTIES = 0,
        KSMETHOD_BDA_SCANNING_STATE = 1,
        KSMETHOD_BDA_SCAN_FILTER = 2,
        KSMETHOD_BDA_SCAN_START = 3,
        KSMETHOD_BDA_SCAN_RESUME = 4,
        KSMETHOD_BDA_SCAN_STOP = 5,
    };
    enum class KSMETHOD_BDA_TS_SELECTOR : int32_t
    {
        KSMETHOD_BDA_TS_SELECTOR_SETTSID = 0,
        KSMETHOD_BDA_TS_SELECTOR_GETTSINFORMATION = 1,
    };
    enum class KSMETHOD_BDA_TUNER_SERVICE : int32_t
    {
        KSMETHOD_BDA_TUNER_SETTUNER = 0,
        KSMETHOD_BDA_TUNER_GETTUNERSTATE = 1,
        KSMETHOD_BDA_TUNER_SIGNALNOISERATIO = 2,
    };
    enum class KSMETHOD_BDA_USERACTIVITY_SERVICE : int32_t
    {
        KSMETHOD_BDA_USERACTIVITY_USEREASON = 0,
        KSMETHOD_BDA_USERACTIVITY_INTERVAL = 1,
        KSMETHOD_BDA_USERACTIVITY_DETECTED = 2,
    };
    enum class KSMETHOD_BDA_WMDRM : int32_t
    {
        KSMETHOD_BDA_WMDRM_STATUS = 0,
        KSMETHOD_BDA_WMDRM_REVINFO = 1,
        KSMETHOD_BDA_WMDRM_CRL = 2,
        KSMETHOD_BDA_WMDRM_MESSAGE = 3,
        KSMETHOD_BDA_WMDRM_REISSUELICENSE = 4,
        KSMETHOD_BDA_WMDRM_RENEWLICENSE = 5,
        KSMETHOD_BDA_WMDRM_LICENSE = 6,
        KSMETHOD_BDA_WMDRM_KEYINFO = 7,
    };
    enum class KSMETHOD_BDA_WMDRM_TUNER : int32_t
    {
        KSMETHOD_BDA_WMDRMTUNER_CANCELCAPTURETOKEN = 0,
        KSMETHOD_BDA_WMDRMTUNER_SETPIDPROTECTION = 1,
        KSMETHOD_BDA_WMDRMTUNER_GETPIDPROTECTION = 2,
        KSMETHOD_BDA_WMDRMTUNER_SETSYNCVALUE = 3,
        KSMETHOD_BDA_WMDRMTUNER_STARTCODEPROFILE = 4,
        KSMETHOD_BDA_WMDRMTUNER_PURCHASE_ENTITLEMENT = 5,
    };
    enum class KSPROPERTY_BDA_AUTODEMODULATE : int32_t
    {
        KSPROPERTY_BDA_AUTODEMODULATE_START = 0,
        KSPROPERTY_BDA_AUTODEMODULATE_STOP = 1,
    };
    enum class KSPROPERTY_BDA_CA : int32_t
    {
        KSPROPERTY_BDA_ECM_MAP_STATUS = 0,
        KSPROPERTY_BDA_CA_MODULE_STATUS = 1,
        KSPROPERTY_BDA_CA_SMART_CARD_STATUS = 2,
        KSPROPERTY_BDA_CA_MODULE_UI = 3,
        KSPROPERTY_BDA_CA_SET_PROGRAM_PIDS = 4,
        KSPROPERTY_BDA_CA_REMOVE_PROGRAM = 5,
    };
    enum class KSPROPERTY_BDA_CA_EVENT : int32_t
    {
        KSEVENT_BDA_PROGRAM_FLOW_STATUS_CHANGED = 0,
        KSEVENT_BDA_CA_MODULE_STATUS_CHANGED = 1,
        KSEVENT_BDA_CA_SMART_CARD_STATUS_CHANGED = 2,
        KSEVENT_BDA_CA_MODULE_UI_REQUESTED = 3,
    };
    enum class KSPROPERTY_BDA_DIGITAL_DEMODULATOR : int32_t
    {
        KSPROPERTY_BDA_MODULATION_TYPE = 0,
        KSPROPERTY_BDA_INNER_FEC_TYPE = 1,
        KSPROPERTY_BDA_INNER_FEC_RATE = 2,
        KSPROPERTY_BDA_OUTER_FEC_TYPE = 3,
        KSPROPERTY_BDA_OUTER_FEC_RATE = 4,
        KSPROPERTY_BDA_SYMBOL_RATE = 5,
        KSPROPERTY_BDA_SPECTRAL_INVERSION = 6,
        KSPROPERTY_BDA_GUARD_INTERVAL = 7,
        KSPROPERTY_BDA_TRANSMISSION_MODE = 8,
        KSPROPERTY_BDA_ROLL_OFF = 9,
        KSPROPERTY_BDA_PILOT = 10,
        KSPROPERTY_BDA_SIGNALTIMEOUTS = 11,
        KSPROPERTY_BDA_PLP_NUMBER = 12,
    };
    enum class KSPROPERTY_BDA_DISEQC_COMMAND : int32_t
    {
        KSPROPERTY_BDA_DISEQC_ENABLE = 0,
        KSPROPERTY_BDA_DISEQC_LNB_SOURCE = 1,
        KSPROPERTY_BDA_DISEQC_USETONEBURST = 2,
        KSPROPERTY_BDA_DISEQC_REPEATS = 3,
        KSPROPERTY_BDA_DISEQC_SEND = 4,
        KSPROPERTY_BDA_DISEQC_RESPONSE = 5,
    };
    enum class KSPROPERTY_BDA_DISEQC_EVENT : int32_t
    {
        KSEVENT_BDA_DISEQC_DATA_RECEIVED = 0,
    };
    enum class KSPROPERTY_BDA_ETHERNET_FILTER : int32_t
    {
        KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_LIST_SIZE = 0,
        KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_LIST = 1,
        KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_MODE = 2,
    };
    enum class KSPROPERTY_BDA_FREQUENCY_FILTER : int32_t
    {
        KSPROPERTY_BDA_RF_TUNER_FREQUENCY = 0,
        KSPROPERTY_BDA_RF_TUNER_POLARITY = 1,
        KSPROPERTY_BDA_RF_TUNER_RANGE = 2,
        KSPROPERTY_BDA_RF_TUNER_TRANSPONDER = 3,
        KSPROPERTY_BDA_RF_TUNER_BANDWIDTH = 4,
        KSPROPERTY_BDA_RF_TUNER_FREQUENCY_MULTIPLIER = 5,
        KSPROPERTY_BDA_RF_TUNER_CAPS = 6,
        KSPROPERTY_BDA_RF_TUNER_SCAN_STATUS = 7,
        KSPROPERTY_BDA_RF_TUNER_STANDARD = 8,
        KSPROPERTY_BDA_RF_TUNER_STANDARD_MODE = 9,
    };
    enum class KSPROPERTY_BDA_IPv4_FILTER : int32_t
    {
        KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_LIST_SIZE = 0,
        KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_LIST = 1,
        KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_MODE = 2,
    };
    enum class KSPROPERTY_BDA_IPv6_FILTER : int32_t
    {
        KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_LIST_SIZE = 0,
        KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_LIST = 1,
        KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_MODE = 2,
    };
    enum class KSPROPERTY_BDA_LNB_INFO : int32_t
    {
        KSPROPERTY_BDA_LNB_LOF_LOW_BAND = 0,
        KSPROPERTY_BDA_LNB_LOF_HIGH_BAND = 1,
        KSPROPERTY_BDA_LNB_SWITCH_FREQUENCY = 2,
    };
    enum class KSPROPERTY_BDA_NULL_TRANSFORM : int32_t
    {
        KSPROPERTY_BDA_NULL_TRANSFORM_START = 0,
        KSPROPERTY_BDA_NULL_TRANSFORM_STOP = 1,
    };
    enum class KSPROPERTY_BDA_PIDFILTER : int32_t
    {
        KSPROPERTY_BDA_PIDFILTER_MAP_PIDS = 0,
        KSPROPERTY_BDA_PIDFILTER_UNMAP_PIDS = 1,
        KSPROPERTY_BDA_PIDFILTER_LIST_PIDS = 2,
    };
    enum class KSPROPERTY_BDA_PIN_CONTROL : int32_t
    {
        KSPROPERTY_BDA_PIN_ID = 0,
        KSPROPERTY_BDA_PIN_TYPE = 1,
    };
    enum class KSPROPERTY_BDA_PIN_EVENT : int32_t
    {
        KSEVENT_BDA_PIN_CONNECTED = 0,
        KSEVENT_BDA_PIN_DISCONNECTED = 1,
    };
    enum class KSPROPERTY_BDA_SIGNAL_STATS : int32_t
    {
        KSPROPERTY_BDA_SIGNAL_STRENGTH = 0,
        KSPROPERTY_BDA_SIGNAL_QUALITY = 1,
        KSPROPERTY_BDA_SIGNAL_PRESENT = 2,
        KSPROPERTY_BDA_SIGNAL_LOCKED = 3,
        KSPROPERTY_BDA_SAMPLE_TIME = 4,
        KSPROPERTY_BDA_SIGNAL_LOCK_CAPS = 5,
        KSPROPERTY_BDA_SIGNAL_LOCK_TYPE = 6,
    };
    enum class KSPROPERTY_BDA_TOPOLOGY : int32_t
    {
        KSPROPERTY_BDA_NODE_TYPES = 0,
        KSPROPERTY_BDA_PIN_TYPES = 1,
        KSPROPERTY_BDA_TEMPLATE_CONNECTIONS = 2,
        KSPROPERTY_BDA_NODE_METHODS = 3,
        KSPROPERTY_BDA_NODE_PROPERTIES = 4,
        KSPROPERTY_BDA_NODE_EVENTS = 5,
        KSPROPERTY_BDA_CONTROLLING_PIN_ID = 6,
        KSPROPERTY_BDA_NODE_DESCRIPTORS = 7,
    };
    enum class KSPROPERTY_BDA_VOID_TRANSFORM : int32_t
    {
        KSPROPERTY_BDA_VOID_TRANSFORM_START = 0,
        KSPROPERTY_BDA_VOID_TRANSFORM_STOP = 1,
    };
    enum class KSPROPERTY_IDS_BDA_TABLE : int32_t
    {
        KSPROPERTY_BDA_TABLE_SECTION = 0,
    };
    enum class KSPROPERTY_IPSINK : uint32_t
    {
        KSPROPERTY_IPSINK_MULTICASTLIST = 0x0,
        KSPROPERTY_IPSINK_ADAPTER_DESCRIPTION = 0x1,
        KSPROPERTY_IPSINK_ADAPTER_ADDRESS = 0x2,
    };
    enum class LNB_Source : int32_t
    {
        BDA_LNB_SOURCE_NOT_SET = -1,
        BDA_LNB_SOURCE_NOT_DEFINED = 0,
        BDA_LNB_SOURCE_A = 1,
        BDA_LNB_SOURCE_B = 2,
        BDA_LNB_SOURCE_C = 3,
        BDA_LNB_SOURCE_D = 4,
        BDA_LNB_SOURCE_MAX = 5,
    };
    enum class LicenseEventBlockReason : int32_t
    {
        LIC_BadLicense = 0,
        LIC_NeedIndiv = 1,
        LIC_Expired = 2,
        LIC_NeedActivation = 3,
        LIC_ExtenderBlocked = 4,
    };
    enum class LocationCodeSchemeType : int32_t
    {
        SCTE_18 = 0,
    };
    enum class MEDIA_SAMPLE_CONTENT : int32_t
    {
        MEDIA_TRANSPORT_PACKET = 0,
        MEDIA_ELEMENTARY_STREAM = 1,
        MEDIA_MPEG2_PSI = 2,
        MEDIA_TRANSPORT_PAYLOAD = 3,
    };
    enum class MMSSF_GET_INFORMATION_FLAGS : uint32_t
    {
        MMSSF_HASCLOCK = 0x1,
        MMSSF_SUPPORTSEEK = 0x2,
        MMSSF_ASYNCHRONOUS = 0x4,
    };
    enum class MPEG2StreamType : int32_t
    {
        BDA_UNITIALIZED_MPEG2STREAMTYPE = -1,
        Reserved1 = 0,
        ISO_IEC_11172_2_VIDEO = 1,
        ISO_IEC_13818_2_VIDEO = 2,
        ISO_IEC_11172_3_AUDIO = 3,
        ISO_IEC_13818_3_AUDIO = 4,
        ISO_IEC_13818_1_PRIVATE_SECTION = 5,
        ISO_IEC_13818_1_PES = 6,
        ISO_IEC_13522_MHEG = 7,
        ANNEX_A_DSM_CC = 8,
        ITU_T_REC_H_222_1 = 9,
        ISO_IEC_13818_6_TYPE_A = 10,
        ISO_IEC_13818_6_TYPE_B = 11,
        ISO_IEC_13818_6_TYPE_C = 12,
        ISO_IEC_13818_6_TYPE_D = 13,
        ISO_IEC_13818_1_AUXILIARY = 14,
        ISO_IEC_13818_7_AUDIO = 15,
        ISO_IEC_14496_2_VISUAL = 16,
        ISO_IEC_14496_3_AUDIO = 17,
        ISO_IEC_14496_1_IN_PES = 18,
        ISO_IEC_14496_1_IN_SECTION = 19,
        ISO_IEC_13818_6_DOWNLOAD = 20,
        METADATA_IN_PES = 21,
        METADATA_IN_SECTION = 22,
        METADATA_IN_DATA_CAROUSEL = 23,
        METADATA_IN_OBJECT_CAROUSEL = 24,
        METADATA_IN_DOWNLOAD_PROTOCOL = 25,
        IRPM_STREAMM = 26,
        ITU_T_H264 = 27,
        ISO_IEC_13818_1_RESERVED = 28,
        USER_PRIVATE = 16,
        HEVC_VIDEO_OR_TEMPORAL_VIDEO = 36,
        HEVC_TEMPORAL_VIDEO_SUBSET = 37,
        ISO_IEC_USER_PRIVATE = 128,
        DOLBY_AC3_AUDIO = 129,
        DOLBY_DIGITAL_PLUS_AUDIO_ATSC = 135,
    };
    enum class MPEG2VIDEOINFO_FLAGS : uint32_t
    {
        AMMPEG2_DoPanScan = 0x1,
        AMMPEG2_DVDLine21Field1 = 0x2,
        AMMPEG2_DVDLine21Field2 = 0x4,
        AMMPEG2_SourceIsLetterboxed = 0x8,
        AMMPEG2_FilmCameraMode = 0x10,
        AMMPEG2_LetterboxAnalogOut = 0x20,
        AMMPEG2_DSS_UserData = 0x40,
        AMMPEG2_DVB_UserData = 0x80,
        AMMPEG2_27MhzTimebase = 0x100,
        AMMPEG2_WidescreenAnalogOut = 0x200,
    };
    enum class MPEGLAYER3WAVEFORMAT_FLAGS : uint32_t
    {
        MPEGLAYER3_FLAG_PADDING_ISO = 0x0,
        MPEGLAYER3_FLAG_PADDING_ON = 0x1,
        MPEGLAYER3_FLAG_PADDING_OFF = 0x2,
    };
    enum class MPEG_CONTEXT_TYPE : int32_t
    {
        MPEG_CONTEXT_BCS_DEMUX = 0,
        MPEG_CONTEXT_WINSOCK = 1,
    };
    enum class MPEG_CURRENT_NEXT_BIT : int32_t
    {
        MPEG_SECTION_IS_NEXT = 0,
        MPEG_SECTION_IS_CURRENT = 1,
    };
    enum class MPEG_REQUEST_TYPE : int32_t
    {
        MPEG_RQST_UNKNOWN = 0,
        MPEG_RQST_GET_SECTION = 1,
        MPEG_RQST_GET_SECTION_ASYNC = 2,
        MPEG_RQST_GET_TABLE = 3,
        MPEG_RQST_GET_TABLE_ASYNC = 4,
        MPEG_RQST_GET_SECTIONS_STREAM = 5,
        MPEG_RQST_GET_PES_STREAM = 6,
        MPEG_RQST_GET_TS_STREAM = 7,
        MPEG_RQST_START_MPE_STREAM = 8,
    };
    enum class MP_CURVE_TYPE : int32_t
    {
        MP_CURVE_JUMP = 1,
        MP_CURVE_LINEAR = 2,
        MP_CURVE_SQUARE = 4,
        MP_CURVE_INVSQUARE = 8,
        MP_CURVE_SINE = 16,
    };
    enum class MP_TYPE : int32_t
    {
        MPT_INT = 0,
        MPT_FLOAT = 1,
        MPT_BOOL = 2,
        MPT_ENUM = 3,
        MPT_MAX = 4,
    };
    enum class MSVidCCService : int32_t
    {
        None = 0,
        Caption1 = 1,
        Caption2 = 2,
        Text1 = 3,
        Text2 = 4,
        XDS = 5,
    };
    enum class MSVidCtlButtonstate : int32_t
    {
        MSVIDCTL_LEFT_BUTTON = 1,
        MSVIDCTL_RIGHT_BUTTON = 2,
        MSVIDCTL_MIDDLE_BUTTON = 4,
        MSVIDCTL_X_BUTTON1 = 8,
        MSVIDCTL_X_BUTTON2 = 16,
        MSVIDCTL_SHIFT = 1,
        MSVIDCTL_CTRL = 2,
        MSVIDCTL_ALT = 4,
    };
    enum class MSVidCtlStateList : int32_t
    {
        STATE_UNBUILT = -1,
        STATE_STOP = 0,
        STATE_PAUSE = 1,
        STATE_PLAY = 2,
    };
    enum class MSVidSegmentType : int32_t
    {
        MSVidSEG_SOURCE = 0,
        MSVidSEG_XFORM = 1,
        MSVidSEG_DEST = 2,
    };
    enum class MSVidSinkStreams : int32_t
    {
        MSVidSink_Video = 1,
        MSVidSink_Audio = 2,
        MSVidSink_Other = 4,
    };
    enum class MSViddispidList : int32_t
    {
        dispidInputs = 0,
        dispidOutputs = 1,
        dispid_Inputs = 2,
        dispid_Outputs = 3,
        dispidVideoRenderers = 4,
        dispidAudioRenderers = 5,
        dispidFeatures = 6,
        dispidInput = 7,
        dispidOutput = 8,
        dispidVideoRenderer = 9,
        dispidAudioRenderer = 10,
        dispidSelectedFeatures = 11,
        dispidView = 12,
        dispidBuild = 13,
        dispidPause = 14,
        dispidRun = 15,
        dispidStop = 16,
        dispidDecompose = 17,
        dispidDisplaySize = 18,
        dispidMaintainAspectRatio = 19,
        dispidColorKey = 20,
        dispidStateChange = 21,
        dispidgetState = 22,
        dispidunbind = 23,
        dispidbind = 24,
        dispidDisableVideo = 25,
        dispidDisableAudio = 26,
        dispidViewNext = 27,
        dispidServiceP = 28,
    };
    enum class MUX_PID_TYPE : int32_t
    {
        PID_OTHER = -1,
        PID_ELEMENTARY_STREAM = 0,
        PID_MPEG2_SECTION_PSI_SI = 1,
    };
    enum class ModulationType : int32_t
    {
        BDA_MOD_NOT_SET = -1,
        BDA_MOD_NOT_DEFINED = 0,
        BDA_MOD_16QAM = 1,
        BDA_MOD_32QAM = 2,
        BDA_MOD_64QAM = 3,
        BDA_MOD_80QAM = 4,
        BDA_MOD_96QAM = 5,
        BDA_MOD_112QAM = 6,
        BDA_MOD_128QAM = 7,
        BDA_MOD_160QAM = 8,
        BDA_MOD_192QAM = 9,
        BDA_MOD_224QAM = 10,
        BDA_MOD_256QAM = 11,
        BDA_MOD_320QAM = 12,
        BDA_MOD_384QAM = 13,
        BDA_MOD_448QAM = 14,
        BDA_MOD_512QAM = 15,
        BDA_MOD_640QAM = 16,
        BDA_MOD_768QAM = 17,
        BDA_MOD_896QAM = 18,
        BDA_MOD_1024QAM = 19,
        BDA_MOD_QPSK = 20,
        BDA_MOD_BPSK = 21,
        BDA_MOD_OQPSK = 22,
        BDA_MOD_8VSB = 23,
        BDA_MOD_16VSB = 24,
        BDA_MOD_ANALOG_AMPLITUDE = 25,
        BDA_MOD_ANALOG_FREQUENCY = 26,
        BDA_MOD_8PSK = 27,
        BDA_MOD_RF = 28,
        BDA_MOD_16APSK = 29,
        BDA_MOD_32APSK = 30,
        BDA_MOD_NBC_QPSK = 31,
        BDA_MOD_NBC_8PSK = 32,
        BDA_MOD_DIRECTV = 33,
        BDA_MOD_ISDB_T_TMCC = 34,
        BDA_MOD_ISDB_S_TMCC = 35,
        BDA_MOD_MAX = 36,
    };
    enum class OA_BOOL : int32_t
    {
        OATRUE = -1,
        OAFALSE = 0,
    };
    enum class OUTPUT_STATE : uint32_t
    {
        Disabled = 0x0,
        ReadData = 0x1,
        RenderData = 0x2,
    };
    enum class PIN_DIRECTION : int32_t
    {
        PINDIR_INPUT = 0,
        PINDIR_OUTPUT = 1,
    };
    enum class PhysicalConnectorType : int32_t
    {
        PhysConn_Video_Tuner = 1,
        PhysConn_Video_Composite = 2,
        PhysConn_Video_SVideo = 3,
        PhysConn_Video_RGB = 4,
        PhysConn_Video_YRYBY = 5,
        PhysConn_Video_SerialDigital = 6,
        PhysConn_Video_ParallelDigital = 7,
        PhysConn_Video_SCSI = 8,
        PhysConn_Video_AUX = 9,
        PhysConn_Video_1394 = 10,
        PhysConn_Video_USB = 11,
        PhysConn_Video_VideoDecoder = 12,
        PhysConn_Video_VideoEncoder = 13,
        PhysConn_Video_SCART = 14,
        PhysConn_Video_Black = 15,
        PhysConn_Audio_Tuner = 4096,
        PhysConn_Audio_Line = 4097,
        PhysConn_Audio_Mic = 4098,
        PhysConn_Audio_AESDigital = 4099,
        PhysConn_Audio_SPDIFDigital = 4100,
        PhysConn_Audio_SCSI = 4101,
        PhysConn_Audio_AUX = 4102,
        PhysConn_Audio_1394 = 4103,
        PhysConn_Audio_USB = 4104,
        PhysConn_Audio_AudioDecoder = 4105,
    };
    enum class Pilot : int32_t
    {
        BDA_PILOT_NOT_SET = -1,
        BDA_PILOT_NOT_DEFINED = 0,
        BDA_PILOT_OFF = 1,
        BDA_PILOT_ON = 2,
        BDA_PILOT_MAX = 3,
    };
    enum class Polarisation : int32_t
    {
        BDA_POLARISATION_NOT_SET = -1,
        BDA_POLARISATION_NOT_DEFINED = 0,
        BDA_POLARISATION_LINEAR_H = 1,
        BDA_POLARISATION_LINEAR_V = 2,
        BDA_POLARISATION_CIRCULAR_L = 3,
        BDA_POLARISATION_CIRCULAR_R = 4,
        BDA_POLARISATION_MAX = 5,
    };
    enum class PositionModeList : int32_t
    {
        FrameMode = 0,
        TenthsSecondsMode = 1,
    };
    enum class ProtType : int32_t
    {
        PROT_COPY_FREE = 1,
        PROT_COPY_ONCE = 2,
        PROT_COPY_NEVER = 3,
        PROT_COPY_NEVER_REALLY = 4,
        PROT_COPY_NO_MORE = 5,
        PROT_COPY_FREE_CIT = 6,
        PROT_COPY_BF = 7,
        PROT_COPY_CN_RECORDING_STOP = 8,
        PROT_COPY_FREE_SECURE = 9,
        PROT_COPY_INVALID = 50,
    };
    enum class QualityMessageType : int32_t
    {
        Famine = 0,
        Flood = 1,
    };
    enum class RECORDING_TYPE : int32_t
    {
        RECORDING_TYPE_CONTENT = 0,
        RECORDING_TYPE_REFERENCE = 1,
    };
    enum class REG_PINFLAG : uint32_t
    {
        REG_PINFLAG_B_ZERO = 0x1,
        REG_PINFLAG_B_RENDERER = 0x2,
        REG_PINFLAG_B_MANY = 0x4,
        REG_PINFLAG_B_OUTPUT = 0x8,
    };
    enum class RecordingType : int32_t
    {
        CONTENT = 0,
        REFERENCE = 1,
    };
    enum class RevokedComponent : int32_t
    {
        REVOKED_COPP = 0,
        REVOKED_SAC = 1,
        REVOKED_APP_STUB = 2,
        REVOKED_SECURE_PIPELINE = 3,
        REVOKED_MAX_TYPES = 4,
    };
    enum class RollOff : int32_t
    {
        BDA_ROLL_OFF_NOT_SET = -1,
        BDA_ROLL_OFF_NOT_DEFINED = 0,
        BDA_ROLL_OFF_20 = 1,
        BDA_ROLL_OFF_25 = 2,
        BDA_ROLL_OFF_35 = 3,
        BDA_ROLL_OFF_MAX = 4,
    };
    enum class SNDDEV_ERR : int32_t
    {
        SNDDEV_ERROR_Open = 1,
        SNDDEV_ERROR_Close = 2,
        SNDDEV_ERROR_GetCaps = 3,
        SNDDEV_ERROR_PrepareHeader = 4,
        SNDDEV_ERROR_UnprepareHeader = 5,
        SNDDEV_ERROR_Reset = 6,
        SNDDEV_ERROR_Restart = 7,
        SNDDEV_ERROR_GetPosition = 8,
        SNDDEV_ERROR_Write = 9,
        SNDDEV_ERROR_Pause = 10,
        SNDDEV_ERROR_Stop = 11,
        SNDDEV_ERROR_Start = 12,
        SNDDEV_ERROR_AddBuffer = 13,
        SNDDEV_ERROR_Query = 14,
    };
    enum class SSUPDATE_TYPE : int32_t
    {
        SSUPDATE_ASYNC = 1,
        SSUPDATE_CONTINUOUS = 2,
    };
    enum class STREAMBUFFER_ATTR_DATATYPE : int32_t
    {
        STREAMBUFFER_TYPE_DWORD = 0,
        STREAMBUFFER_TYPE_STRING = 1,
        STREAMBUFFER_TYPE_BINARY = 2,
        STREAMBUFFER_TYPE_BOOL = 3,
        STREAMBUFFER_TYPE_QWORD = 4,
        STREAMBUFFER_TYPE_WORD = 5,
        STREAMBUFFER_TYPE_GUID = 6,
    };
    enum class STREAMIF_CONSTANTS : int32_t
    {
        MAX_NUMBER_OF_STREAMS = 16,
    };
    enum class STREAM_STATE : int32_t
    {
        STREAMSTATE_STOP = 0,
        STREAMSTATE_RUN = 1,
    };
    enum class STREAM_TYPE : int32_t
    {
        STREAMTYPE_READ = 0,
        STREAMTYPE_WRITE = 1,
        STREAMTYPE_TRANSFORM = 2,
    };
    enum class ScanModulationTypes : int32_t
    {
        BDA_SCAN_MOD_16QAM = 1,
        BDA_SCAN_MOD_32QAM = 2,
        BDA_SCAN_MOD_64QAM = 4,
        BDA_SCAN_MOD_80QAM = 8,
        BDA_SCAN_MOD_96QAM = 16,
        BDA_SCAN_MOD_112QAM = 32,
        BDA_SCAN_MOD_128QAM = 64,
        BDA_SCAN_MOD_160QAM = 128,
        BDA_SCAN_MOD_192QAM = 256,
        BDA_SCAN_MOD_224QAM = 512,
        BDA_SCAN_MOD_256QAM = 1024,
        BDA_SCAN_MOD_320QAM = 2048,
        BDA_SCAN_MOD_384QAM = 4096,
        BDA_SCAN_MOD_448QAM = 8192,
        BDA_SCAN_MOD_512QAM = 16384,
        BDA_SCAN_MOD_640QAM = 32768,
        BDA_SCAN_MOD_768QAM = 65536,
        BDA_SCAN_MOD_896QAM = 131072,
        BDA_SCAN_MOD_1024QAM = 262144,
        BDA_SCAN_MOD_QPSK = 524288,
        BDA_SCAN_MOD_BPSK = 1048576,
        BDA_SCAN_MOD_OQPSK = 2097152,
        BDA_SCAN_MOD_8VSB = 4194304,
        BDA_SCAN_MOD_16VSB = 8388608,
        BDA_SCAN_MOD_AM_RADIO = 16777216,
        BDA_SCAN_MOD_FM_RADIO = 33554432,
        BDA_SCAN_MOD_8PSK = 67108864,
        BDA_SCAN_MOD_RF = 134217728,
        ScanModulationTypesMask_MCE_DigitalCable = 11,
        ScanModulationTypesMask_MCE_TerrestrialATSC = 23,
        ScanModulationTypesMask_MCE_AnalogTv = 28,
        ScanModulationTypesMask_MCE_All_TV = -1,
        ScanModulationTypesMask_DVBC = 75,
        BDA_SCAN_MOD_16APSK = 268435456,
        BDA_SCAN_MOD_32APSK = 536870912,
    };
    enum class SegDispidList : int32_t
    {
        dispidName = 0,
        dispidStatus = 1,
        dispidDevImageSourceWidth = 2,
        dispidDevImageSourceHeight = 3,
        dispidDevCountryCode = 4,
        dispidDevOverScan = 5,
        dispidSegment = 6,
        dispidDevVolume = 7,
        dispidDevBalance = 8,
        dispidDevPower = 9,
        dispidTuneChan = 10,
        dispidDevVideoSubchannel = 11,
        dispidDevAudioSubchannel = 12,
        dispidChannelAvailable = 13,
        dispidDevVideoFrequency = 14,
        dispidDevAudioFrequency = 15,
        dispidCount = 16,
        dispidDevFileName = 17,
        dispidVisible = 18,
        dispidOwner = 19,
        dispidMessageDrain = 20,
        dispidViewable = 21,
        dispidDevView = 22,
        dispidKSCat = 23,
        dispidCLSID = 24,
        dispid_KSCat = 25,
        dispid_CLSID = 26,
        dispidTune = 27,
        dispidTS = 28,
        dispidDevSAP = 29,
        dispidClip = 30,
        dispidRequestedClipRect = 31,
        dispidClippedSourceRect = 32,
        dispidAvailableSourceRect = 33,
        dispidMediaPosition = 34,
        dispidDevRun = 35,
        dispidDevPause = 36,
        dispidDevStop = 37,
        dispidCCEnable = 38,
        dispidDevStep = 39,
        dispidDevCanStep = 40,
        dispidSourceSize = 41,
        dispid_playtitle = 42,
        dispid_playchapterintitle = 43,
        dispid_playchapter = 44,
        dispid_playchaptersautostop = 45,
        dispid_playattime = 46,
        dispid_playattimeintitle = 47,
        dispid_playperiodintitleautostop = 48,
        dispid_replaychapter = 49,
        dispid_playprevchapter = 50,
        dispid_playnextchapter = 51,
        dispid_playforwards = 52,
        dispid_playbackwards = 53,
        dispid_stilloff = 54,
        dispid_audiolanguage = 55,
        dispid_showmenu = 56,
        dispid_resume = 57,
        dispid_returnfromsubmenu = 58,
        dispid_buttonsavailable = 59,
        dispid_currentbutton = 60,
        dispid_SelectAndActivateButton = 61,
        dispid_ActivateButton = 62,
        dispid_SelectRightButton = 63,
        dispid_SelectLeftButton = 64,
        dispid_SelectLowerButton = 65,
        dispid_SelectUpperButton = 66,
        dispid_ActivateAtPosition = 67,
        dispid_SelectAtPosition = 68,
        dispid_ButtonAtPosition = 69,
        dispid_NumberOfChapters = 70,
        dispid_TotalTitleTime = 71,
        dispid_TitlesAvailable = 72,
        dispid_VolumesAvailable = 73,
        dispid_CurrentVolume = 74,
        dispid_CurrentDiscSide = 75,
        dispid_CurrentDomain = 76,
        dispid_CurrentChapter = 77,
        dispid_CurrentTitle = 78,
        dispid_CurrentTime = 79,
        dispid_FramesPerSecond = 80,
        dispid_DVDTimeCode2bstr = 81,
        dispid_DVDDirectory = 82,
        dispid_IsSubpictureStreamEnabled = 83,
        dispid_IsAudioStreamEnabled = 84,
        dispid_CurrentSubpictureStream = 85,
        dispid_SubpictureLanguage = 86,
        dispid_CurrentAudioStream = 87,
        dispid_AudioStreamsAvailable = 88,
        dispid_AnglesAvailable = 89,
        dispid_CurrentAngle = 90,
        dispid_CCActive = 91,
        dispid_CurrentCCService = 92,
        dispid_SubpictureStreamsAvailable = 93,
        dispid_SubpictureOn = 94,
        dispid_DVDUniqueID = 95,
        dispid_EnableResetOnStop = 96,
        dispid_AcceptParentalLevelChange = 97,
        dispid_NotifyParentalLevelChange = 98,
        dispid_SelectParentalCountry = 99,
        dispid_SelectParentalLevel = 100,
        dispid_TitleParentalLevels = 101,
        dispid_PlayerParentalCountry = 102,
        dispid_PlayerParentalLevel = 103,
        dispid_Eject = 104,
        dispid_UOPValid = 105,
        dispid_SPRM = 106,
        dispid_GPRM = 107,
        dispid_DVDTextStringType = 108,
        dispid_DVDTextString = 109,
        dispid_DVDTextNumberOfStrings = 110,
        dispid_DVDTextNumberOfLanguages = 111,
        dispid_DVDTextLanguageLCID = 112,
        dispid_RegionChange = 113,
        dispid_DVDAdm = 114,
        dispid_DeleteBookmark = 115,
        dispid_RestoreBookmark = 116,
        dispid_SaveBookmark = 117,
        dispid_SelectDefaultAudioLanguage = 118,
        dispid_SelectDefaultSubpictureLanguage = 119,
        dispid_PreferredSubpictureStream = 120,
        dispid_DefaultMenuLanguage = 121,
        dispid_DefaultSubpictureLanguage = 122,
        dispid_DefaultAudioLanguage = 123,
        dispid_DefaultSubpictureLanguageExt = 124,
        dispid_DefaultAudioLanguageExt = 125,
        dispid_LanguageFromLCID = 126,
        dispid_KaraokeAudioPresentationMode = 127,
        dispid_KaraokeChannelContent = 128,
        dispid_KaraokeChannelAssignment = 129,
        dispid_RestorePreferredSettings = 130,
        dispid_ButtonRect = 131,
        dispid_DVDScreenInMouseCoordinates = 132,
        dispid_CustomCompositorClass = 133,
        dispidCustomCompositorClass = 134,
        dispid_CustomCompositor = 135,
        dispidMixerBitmap = 136,
        dispid_MixerBitmap = 137,
        dispidMixerBitmapOpacity = 138,
        dispidMixerBitmapRect = 139,
        dispidSetupMixerBitmap = 140,
        dispidUsingOverlay = 141,
        dispidDisplayChange = 142,
        dispidRePaint = 143,
        dispid_IsEqualDevice = 144,
        dispidrate = 145,
        dispidposition = 146,
        dispidpositionmode = 147,
        dispidlength = 148,
        dispidChangePassword = 149,
        dispidSaveParentalLevel = 150,
        dispidSaveParentalCountry = 151,
        dispidConfirmPassword = 152,
        dispidGetParentalLevel = 153,
        dispidGetParentalCountry = 154,
        dispidDefaultAudioLCID = 155,
        dispidDefaultSubpictureLCID = 156,
        dispidDefaultMenuLCID = 157,
        dispidBookmarkOnStop = 158,
        dispidMaxVidRect = 159,
        dispidMinVidRect = 160,
        dispidCapture = 161,
        dispid_DecimateInput = 162,
        dispidAlloctor = 163,
        dispid_Allocator = 164,
        dispidAllocPresentID = 165,
        dispidSetAllocator = 166,
        dispid_SetAllocator = 167,
        dispidStreamBufferSinkName = 168,
        dispidStreamBufferSourceName = 169,
        dispidStreamBufferContentRecording = 170,
        dispidStreamBufferReferenceRecording = 171,
        dispidstarttime = 172,
        dispidstoptime = 173,
        dispidrecordingstopped = 174,
        dispidrecordingstarted = 175,
        dispidNameSetLock = 176,
        dispidrecordingtype = 177,
        dispidstart = 178,
        dispidRecordingAttribute = 179,
        dispid_RecordingAttribute = 180,
        dispidSBEConfigure = 181,
        dispid_CurrentRatings = 182,
        dispid_MaxRatingsLevel = 183,
        dispid_audioencoderint = 184,
        dispid_videoencoderint = 185,
        dispidService = 186,
        dispid_BlockUnrated = 187,
        dispid_UnratedDelay = 188,
        dispid_SuppressEffects = 189,
        dispidsbesource = 190,
        dispidSetSinkFilter = 191,
        dispid_SinkStreams = 192,
        dispidTVFormats = 193,
        dispidModes = 194,
        dispidAuxInputs = 195,
        dispidTeleTextFilter = 196,
        dispid_channelchangeint = 197,
        dispidUnlockProfile = 198,
        dispid_AddFilter = 199,
        dispidSetMinSeek = 200,
        dispidRateEx = 201,
        dispidaudiocounter = 202,
        dispidvideocounter = 203,
        dispidcccounter = 204,
        dispidwstcounter = 205,
        dispid_audiocounter = 206,
        dispid_videocounter = 207,
        dispid_cccounter = 208,
        dispid_wstcounter = 209,
        dispidaudioanalysis = 210,
        dispidvideoanalysis = 211,
        dispiddataanalysis = 212,
        dispidaudio_analysis = 213,
        dispidvideo_analysis = 214,
        dispiddata_analysis = 215,
        dispid_resetFilterList = 216,
        dispidDevicePath = 217,
        dispid_SourceFilter = 218,
        dispid__SourceFilter = 219,
        dispidUserEvent = 220,
        dispid_Bookmark = 221,
        LastReservedDeviceDispid = 16383,
    };
    enum class SegEventidList : int32_t
    {
        eventidStateChange = 0,
        eventidOnTuneChanged = 1,
        eventidEndOfMedia = 2,
        eventidDVDNotify = 3,
        eventidPlayForwards = 4,
        eventidPlayBackwards = 5,
        eventidShowMenu = 6,
        eventidResume = 7,
        eventidSelectOrActivateButton = 8,
        eventidStillOff = 9,
        eventidPauseOn = 10,
        eventidChangeCurrentAudioStream = 11,
        eventidChangeCurrentSubpictureStream = 12,
        eventidChangeCurrentAngle = 13,
        eventidPlayAtTimeInTitle = 14,
        eventidPlayAtTime = 15,
        eventidPlayChapterInTitle = 16,
        eventidPlayChapter = 17,
        eventidReplayChapter = 18,
        eventidPlayNextChapter = 19,
        eventidStop = 20,
        eventidReturnFromSubmenu = 21,
        eventidPlayTitle = 22,
        eventidPlayPrevChapter = 23,
        eventidChangeKaraokePresMode = 24,
        eventidChangeVideoPresMode = 25,
        eventidOverlayUnavailable = 26,
        eventidSinkCertificateFailure = 27,
        eventidSinkCertificateSuccess = 28,
        eventidSourceCertificateFailure = 29,
        eventidSourceCertificateSuccess = 30,
        eventidRatingsBlocked = 31,
        eventidRatingsUnlocked = 32,
        eventidRatingsChanged = 33,
        eventidWriteFailure = 34,
        eventidTimeHole = 35,
        eventidStaleDataRead = 36,
        eventidContentBecomingStale = 37,
        eventidStaleFileDeleted = 38,
        eventidEncryptionOn = 39,
        eventidEncryptionOff = 40,
        eventidRateChange = 41,
        eventidLicenseChange = 42,
        eventidCOPPBlocked = 43,
        eventidCOPPUnblocked = 44,
        dispidlicenseerrorcode = 45,
        eventidBroadcastEvent = 46,
        eventidBroadcastEventEx = 47,
        eventidContentPrimarilyAudio = 48,
        dispidAVDecAudioDualMonoEvent = 49,
        dispidAVAudioSampleRateEvent = 50,
        dispidAVAudioChannelConfigEvent = 51,
        dispidAVAudioChannelCountEvent = 52,
        dispidAVDecCommonMeanBitRateEvent = 53,
        dispidAVDDSurroundModeEvent = 54,
        dispidAVDecCommonInputFormatEvent = 55,
        dispidAVDecCommonOutputFormatEvent = 56,
        eventidWriteFailureClear = 57,
        LastReservedDeviceEvent = 16383,
    };
    enum class SignalAndServiceStatusSpanningEvent_State : int32_t
    {
        SignalAndServiceStatusSpanningEvent_None = -1,
        SignalAndServiceStatusSpanningEvent_Clear = 0,
        SignalAndServiceStatusSpanningEvent_NoTVSignal = 1,
        SignalAndServiceStatusSpanningEvent_ServiceOffAir = 2,
        SignalAndServiceStatusSpanningEvent_WeakTVSignal = 3,
        SignalAndServiceStatusSpanningEvent_NoSubscription = 4,
        SignalAndServiceStatusSpanningEvent_AllAVScrambled = 5,
    };
    enum class SmartCardAssociationType : int32_t
    {
        NotAssociated = 0,
        Associated = 1,
        AssociationUnknown = 2,
    };
    enum class SmartCardStatusType : int32_t
    {
        CardInserted = 0,
        CardRemoved = 1,
        CardError = 2,
        CardDataChanged = 3,
        CardFirmwareUpgrade = 4,
    };
    enum class SourceSizeList : int32_t
    {
        sslFullSize = 0,
        sslClipByOverScan = 1,
        sslClipByClipRect = 2,
    };
    enum class SpectralInversion : int32_t
    {
        BDA_SPECTRAL_INVERSION_NOT_SET = -1,
        BDA_SPECTRAL_INVERSION_NOT_DEFINED = 0,
        BDA_SPECTRAL_INVERSION_AUTOMATIC = 1,
        BDA_SPECTRAL_INVERSION_NORMAL = 2,
        BDA_SPECTRAL_INVERSION_INVERTED = 3,
        BDA_SPECTRAL_INVERSION_MAX = 4,
    };
    enum class TVAudioMode : int32_t
    {
        AMTVAUDIO_MODE_MONO = 1,
        AMTVAUDIO_MODE_STEREO = 2,
        AMTVAUDIO_MODE_LANG_A = 16,
        AMTVAUDIO_MODE_LANG_B = 32,
        AMTVAUDIO_MODE_LANG_C = 64,
        AMTVAUDIO_PRESET_STEREO = 512,
        AMTVAUDIO_PRESET_LANG_A = 4096,
        AMTVAUDIO_PRESET_LANG_B = 8192,
        AMTVAUDIO_PRESET_LANG_C = 16384,
    };
    enum class TransmissionMode : int32_t
    {
        BDA_XMIT_MODE_NOT_SET = -1,
        BDA_XMIT_MODE_NOT_DEFINED = 0,
        BDA_XMIT_MODE_2K = 1,
        BDA_XMIT_MODE_8K = 2,
        BDA_XMIT_MODE_4K = 3,
        BDA_XMIT_MODE_2K_INTERLEAVED = 4,
        BDA_XMIT_MODE_4K_INTERLEAVED = 5,
        BDA_XMIT_MODE_1K = 6,
        BDA_XMIT_MODE_16K = 7,
        BDA_XMIT_MODE_32K = 8,
        BDA_XMIT_MODE_MAX = 9,
    };
    enum class TunerInputType : int32_t
    {
        TunerInputCable = 0,
        TunerInputAntenna = 1,
    };
    enum class UICloseReasonType : int32_t
    {
        NotReady = 0,
        UserClosed = 1,
        SystemClosed = 2,
        DeviceClosed = 3,
        ErrorClosed = 4,
    };
    enum class VALID_UOP_FLAG : int32_t
    {
        UOP_FLAG_Play_Title_Or_AtTime = 1,
        UOP_FLAG_Play_Chapter = 2,
        UOP_FLAG_Play_Title = 4,
        UOP_FLAG_Stop = 8,
        UOP_FLAG_ReturnFromSubMenu = 16,
        UOP_FLAG_Play_Chapter_Or_AtTime = 32,
        UOP_FLAG_PlayPrev_Or_Replay_Chapter = 64,
        UOP_FLAG_PlayNext_Chapter = 128,
        UOP_FLAG_Play_Forwards = 256,
        UOP_FLAG_Play_Backwards = 512,
        UOP_FLAG_ShowMenu_Title = 1024,
        UOP_FLAG_ShowMenu_Root = 2048,
        UOP_FLAG_ShowMenu_SubPic = 4096,
        UOP_FLAG_ShowMenu_Audio = 8192,
        UOP_FLAG_ShowMenu_Angle = 16384,
        UOP_FLAG_ShowMenu_Chapter = 32768,
        UOP_FLAG_Resume = 65536,
        UOP_FLAG_Select_Or_Activate_Button = 131072,
        UOP_FLAG_Still_Off = 262144,
        UOP_FLAG_Pause_On = 524288,
        UOP_FLAG_Select_Audio_Stream = 1048576,
        UOP_FLAG_Select_SubPic_Stream = 2097152,
        UOP_FLAG_Select_Angle = 4194304,
        UOP_FLAG_Select_Karaoke_Audio_Presentation_Mode = 8388608,
        UOP_FLAG_Select_Video_Mode_Preference = 16777216,
    };
    enum class VA_COLOR_PRIMARIES : int32_t
    {
        VA_PRIMARIES_ITU_R_BT_709 = 1,
        VA_PRIMARIES_UNSPECIFIED = 2,
        VA_PRIMARIES_ITU_R_BT_470_SYSTEM_M = 4,
        VA_PRIMARIES_ITU_R_BT_470_SYSTEM_B_G = 5,
        VA_PRIMARIES_SMPTE_170M = 6,
        VA_PRIMARIES_SMPTE_240M = 7,
        VA_PRIMARIES_H264_GENERIC_FILM = 8,
    };
    enum class VA_MATRIX_COEFFICIENTS : int32_t
    {
        VA_MATRIX_COEFF_H264_RGB = 0,
        VA_MATRIX_COEFF_ITU_R_BT_709 = 1,
        VA_MATRIX_COEFF_UNSPECIFIED = 2,
        VA_MATRIX_COEFF_FCC = 4,
        VA_MATRIX_COEFF_ITU_R_BT_470_SYSTEM_B_G = 5,
        VA_MATRIX_COEFF_SMPTE_170M = 6,
        VA_MATRIX_COEFF_SMPTE_240M = 7,
        VA_MATRIX_COEFF_H264_YCgCo = 8,
    };
    enum class VA_TRANSFER_CHARACTERISTICS : int32_t
    {
        VA_TRANSFER_CHARACTERISTICS_ITU_R_BT_709 = 1,
        VA_TRANSFER_CHARACTERISTICS_UNSPECIFIED = 2,
        VA_TRANSFER_CHARACTERISTICS_ITU_R_BT_470_SYSTEM_M = 4,
        VA_TRANSFER_CHARACTERISTICS_ITU_R_BT_470_SYSTEM_B_G = 5,
        VA_TRANSFER_CHARACTERISTICS_SMPTE_170M = 6,
        VA_TRANSFER_CHARACTERISTICS_SMPTE_240M = 7,
        VA_TRANSFER_CHARACTERISTICS_LINEAR = 8,
        VA_TRANSFER_CHARACTERISTICS_H264_LOG_100_TO_1 = 9,
        VA_TRANSFER_CHARACTERISTICS_H264_LOG_316_TO_1 = 10,
    };
    enum class VA_VIDEO_FORMAT : int32_t
    {
        VA_VIDEO_COMPONENT = 0,
        VA_VIDEO_PAL = 1,
        VA_VIDEO_NTSC = 2,
        VA_VIDEO_SECAM = 3,
        VA_VIDEO_MAC = 4,
        VA_VIDEO_UNSPECIFIED = 5,
    };
    enum class VIDEOENCODER_BITRATE_MODE : int32_t
    {
        ConstantBitRate = 0,
        VariableBitRateAverage = 1,
        VariableBitRatePeak = 2,
    };
    enum class VMR9AlphaBitmapFlags : int32_t
    {
        VMR9AlphaBitmap_Disable = 1,
        VMR9AlphaBitmap_hDC = 2,
        VMR9AlphaBitmap_EntireDDS = 4,
        VMR9AlphaBitmap_SrcColorKey = 8,
        VMR9AlphaBitmap_SrcRect = 16,
        VMR9AlphaBitmap_FilterMode = 32,
    };
    enum class VMR9AspectRatioMode : int32_t
    {
        VMR9ARMode_None = 0,
        VMR9ARMode_LetterBox = 1,
    };
    enum class VMR9DeinterlacePrefs : int32_t
    {
        DeinterlacePref9_NextBest = 1,
        DeinterlacePref9_BOB = 2,
        DeinterlacePref9_Weave = 4,
        DeinterlacePref9_Mask = 7,
    };
    enum class VMR9DeinterlaceTech : int32_t
    {
        DeinterlaceTech9_Unknown = 0,
        DeinterlaceTech9_BOBLineReplicate = 1,
        DeinterlaceTech9_BOBVerticalStretch = 2,
        DeinterlaceTech9_MedianFiltering = 4,
        DeinterlaceTech9_EdgeFiltering = 16,
        DeinterlaceTech9_FieldAdaptive = 32,
        DeinterlaceTech9_PixelAdaptive = 64,
        DeinterlaceTech9_MotionVectorSteered = 128,
    };
    enum class VMR9MixerPrefs : int32_t
    {
        MixerPref9_NoDecimation = 1,
        MixerPref9_DecimateOutput = 2,
        MixerPref9_ARAdjustXorY = 4,
        MixerPref9_NonSquareMixing = 8,
        MixerPref9_DecimateMask = 15,
        MixerPref9_BiLinearFiltering = 16,
        MixerPref9_PointFiltering = 32,
        MixerPref9_AnisotropicFiltering = 64,
        MixerPref9_PyramidalQuadFiltering = 128,
        MixerPref9_GaussianQuadFiltering = 256,
        MixerPref9_FilteringReserved = 3584,
        MixerPref9_FilteringMask = 4080,
        MixerPref9_RenderTargetRGB = 4096,
        MixerPref9_RenderTargetYUV = 8192,
        MixerPref9_RenderTargetReserved = 1032192,
        MixerPref9_RenderTargetMask = 1044480,
        MixerPref9_DynamicSwitchToBOB = 1048576,
        MixerPref9_DynamicDecimateBy2 = 2097152,
        MixerPref9_DynamicReserved = 12582912,
        MixerPref9_DynamicMask = 15728640,
    };
    enum class VMR9Mode : int32_t
    {
        VMR9Mode_Windowed = 1,
        VMR9Mode_Windowless = 2,
        VMR9Mode_Renderless = 4,
        VMR9Mode_Mask = 7,
    };
    enum class VMR9PresentationFlags : int32_t
    {
        VMR9Sample_SyncPoint = 1,
        VMR9Sample_Preroll = 2,
        VMR9Sample_Discontinuity = 4,
        VMR9Sample_TimeValid = 8,
        VMR9Sample_SrcDstRectsValid = 16,
    };
    enum class VMR9ProcAmpControlFlags : int32_t
    {
        ProcAmpControl9_Brightness = 1,
        ProcAmpControl9_Contrast = 2,
        ProcAmpControl9_Hue = 4,
        ProcAmpControl9_Saturation = 8,
        ProcAmpControl9_Mask = 15,
    };
    enum class VMR9RenderPrefs : int32_t
    {
        RenderPrefs9_DoNotRenderBorder = 1,
        RenderPrefs9_Mask = 1,
    };
    enum class VMR9SurfaceAllocationFlags : int32_t
    {
        VMR9AllocFlag_3DRenderTarget = 1,
        VMR9AllocFlag_DXVATarget = 2,
        VMR9AllocFlag_TextureSurface = 4,
        VMR9AllocFlag_OffscreenSurface = 8,
        VMR9AllocFlag_RGBDynamicSwitch = 16,
        VMR9AllocFlag_UsageReserved = 224,
        VMR9AllocFlag_UsageMask = 255,
    };
    enum class VMR9_SampleFormat : int32_t
    {
        VMR9_SampleReserved = 1,
        VMR9_SampleProgressiveFrame = 2,
        VMR9_SampleFieldInterleavedEvenFirst = 3,
        VMR9_SampleFieldInterleavedOddFirst = 4,
        VMR9_SampleFieldSingleEven = 5,
        VMR9_SampleFieldSingleOdd = 6,
    };
    enum class VMRDeinterlacePrefs : int32_t
    {
        DeinterlacePref_NextBest = 1,
        DeinterlacePref_BOB = 2,
        DeinterlacePref_Weave = 4,
        DeinterlacePref_Mask = 7,
    };
    enum class VMRDeinterlaceTech : int32_t
    {
        DeinterlaceTech_Unknown = 0,
        DeinterlaceTech_BOBLineReplicate = 1,
        DeinterlaceTech_BOBVerticalStretch = 2,
        DeinterlaceTech_MedianFiltering = 4,
        DeinterlaceTech_EdgeFiltering = 16,
        DeinterlaceTech_FieldAdaptive = 32,
        DeinterlaceTech_PixelAdaptive = 64,
        DeinterlaceTech_MotionVectorSteered = 128,
    };
    enum class VMRMixerPrefs : int32_t
    {
        MixerPref_NoDecimation = 1,
        MixerPref_DecimateOutput = 2,
        MixerPref_ARAdjustXorY = 4,
        MixerPref_DecimationReserved = 8,
        MixerPref_DecimateMask = 15,
        MixerPref_BiLinearFiltering = 16,
        MixerPref_PointFiltering = 32,
        MixerPref_FilteringMask = 240,
        MixerPref_RenderTargetRGB = 256,
        MixerPref_RenderTargetYUV = 4096,
        MixerPref_RenderTargetYUV420 = 512,
        MixerPref_RenderTargetYUV422 = 1024,
        MixerPref_RenderTargetYUV444 = 2048,
        MixerPref_RenderTargetReserved = 57344,
        MixerPref_RenderTargetMask = 65280,
        MixerPref_DynamicSwitchToBOB = 65536,
        MixerPref_DynamicDecimateBy2 = 131072,
        MixerPref_DynamicReserved = 786432,
        MixerPref_DynamicMask = 983040,
    };
    enum class VMRMode : int32_t
    {
        VMRMode_Windowed = 1,
        VMRMode_Windowless = 2,
        VMRMode_Renderless = 4,
        VMRMode_Mask = 7,
    };
    enum class VMRPresentationFlags : int32_t
    {
        VMRSample_SyncPoint = 1,
        VMRSample_Preroll = 2,
        VMRSample_Discontinuity = 4,
        VMRSample_TimeValid = 8,
        VMRSample_SrcDstRectsValid = 16,
    };
    enum class VMRRenderPrefs : int32_t
    {
        RenderPrefs_RestrictToInitialMonitor = 0,
        RenderPrefs_ForceOffscreen = 1,
        RenderPrefs_ForceOverlays = 2,
        RenderPrefs_AllowOverlays = 0,
        RenderPrefs_AllowOffscreen = 0,
        RenderPrefs_DoNotRenderColorKeyAndBorder = 8,
        RenderPrefs_Reserved = 16,
        RenderPrefs_PreferAGPMemWhenMixing = 32,
        RenderPrefs_Mask = 63,
    };
    enum class VMRSurfaceAllocationFlags : int32_t
    {
        AMAP_PIXELFORMAT_VALID = 1,
        AMAP_3D_TARGET = 2,
        AMAP_ALLOW_SYSMEM = 4,
        AMAP_FORCE_SYSMEM = 8,
        AMAP_DIRECTED_FLIP = 16,
        AMAP_DXVA_TARGET = 32,
    };
    enum class VMR_ASPECT_RATIO_MODE : int32_t
    {
        VMR_ARMODE_NONE = 0,
        VMR_ARMODE_LETTER_BOX = 1,
    };
    enum class VfwCaptureDialogs : int32_t
    {
        VfwCaptureDialog_Source = 1,
        VfwCaptureDialog_Format = 2,
        VfwCaptureDialog_Display = 4,
    };
    enum class VfwCompressDialogs : int32_t
    {
        VfwCompressDialog_Config = 1,
        VfwCompressDialog_About = 2,
        VfwCompressDialog_QueryConfig = 4,
        VfwCompressDialog_QueryAbout = 8,
    };
    enum class VideoControlFlags : int32_t
    {
        VideoControlFlag_FlipHorizontal = 1,
        VideoControlFlag_FlipVertical = 2,
        VideoControlFlag_ExternalTriggerEnable = 4,
        VideoControlFlag_Trigger = 8,
    };
    enum class VideoCopyProtectionType : int32_t
    {
        VideoCopyProtectionMacrovisionBasic = 0,
        VideoCopyProtectionMacrovisionCBI = 1,
    };
    enum class VideoProcAmpFlags : int32_t
    {
        VideoProcAmp_Flags_Auto = 1,
        VideoProcAmp_Flags_Manual = 2,
    };
    enum class VideoProcAmpProperty : int32_t
    {
        VideoProcAmp_Brightness = 0,
        VideoProcAmp_Contrast = 1,
        VideoProcAmp_Hue = 2,
        VideoProcAmp_Saturation = 3,
        VideoProcAmp_Sharpness = 4,
        VideoProcAmp_Gamma = 5,
        VideoProcAmp_ColorEnable = 6,
        VideoProcAmp_WhiteBalance = 7,
        VideoProcAmp_BacklightCompensation = 8,
        VideoProcAmp_Gain = 9,
    };
    enum class _AMRESCTL_RESERVEFLAGS : int32_t
    {
        AMRESCTL_RESERVEFLAGS_RESERVE = 0,
        AMRESCTL_RESERVEFLAGS_UNRESERVE = 1,
    };
    enum class _AMSTREAMSELECTENABLEFLAGS : int32_t
    {
        AMSTREAMSELECTENABLE_ENABLE = 1,
        AMSTREAMSELECTENABLE_ENABLEALL = 2,
    };
    enum class _AMSTREAMSELECTINFOFLAGS : int32_t
    {
        AMSTREAMSELECTINFO_ENABLED = 1,
        AMSTREAMSELECTINFO_EXCLUSIVE = 2,
    };
    enum class _AM_AUDIO_RENDERER_STAT_PARAM : int32_t
    {
        AM_AUDREND_STAT_PARAM_BREAK_COUNT = 1,
        AM_AUDREND_STAT_PARAM_SLAVE_MODE = 2,
        AM_AUDREND_STAT_PARAM_SILENCE_DUR = 3,
        AM_AUDREND_STAT_PARAM_LAST_BUFFER_DUR = 4,
        AM_AUDREND_STAT_PARAM_DISCONTINUITIES = 5,
        AM_AUDREND_STAT_PARAM_SLAVE_RATE = 6,
        AM_AUDREND_STAT_PARAM_SLAVE_DROPWRITE_DUR = 7,
        AM_AUDREND_STAT_PARAM_SLAVE_HIGHLOWERROR = 8,
        AM_AUDREND_STAT_PARAM_SLAVE_LASTHIGHLOWERROR = 9,
        AM_AUDREND_STAT_PARAM_SLAVE_ACCUMERROR = 10,
        AM_AUDREND_STAT_PARAM_BUFFERFULLNESS = 11,
        AM_AUDREND_STAT_PARAM_JITTER = 12,
    };
    enum class _AM_FILTER_MISC_FLAGS : int32_t
    {
        AM_FILTER_MISC_FLAGS_IS_RENDERER = 1,
        AM_FILTER_MISC_FLAGS_IS_SOURCE = 2,
    };
    enum class _AM_INTF_SEARCH_FLAGS : int32_t
    {
        AM_INTF_SEARCH_INPUT_PIN = 1,
        AM_INTF_SEARCH_OUTPUT_PIN = 2,
        AM_INTF_SEARCH_FILTER = 4,
    };
    enum class _AM_OVERLAY_NOTIFY_FLAGS : int32_t
    {
        AM_OVERLAY_NOTIFY_VISIBLE_CHANGE = 1,
        AM_OVERLAY_NOTIFY_SOURCE_CHANGE = 2,
        AM_OVERLAY_NOTIFY_DEST_CHANGE = 4,
    };
    enum class _AM_PIN_FLOW_CONTROL_BLOCK_FLAGS : int32_t
    {
        AM_PIN_FLOW_CONTROL_BLOCK = 1,
    };
    enum class _AM_PUSHSOURCE_FLAGS : int32_t
    {
        AM_PUSHSOURCECAPS_INTERNAL_RM = 1,
        AM_PUSHSOURCECAPS_NOT_LIVE = 2,
        AM_PUSHSOURCECAPS_PRIVATE_CLOCK = 4,
        AM_PUSHSOURCEREQS_USE_STREAM_CLOCK = 65536,
        AM_PUSHSOURCEREQS_USE_CLOCK_CHAIN = 131072,
    };
    enum class _AM_RENSDEREXFLAGS : int32_t
    {
        AM_RENDEREX_RENDERTOEXISTINGRENDERERS = 1,
    };
    enum class _DVDECODERRESOLUTION : int32_t
    {
        DVDECODERRESOLUTION_720x480 = 1000,
        DVDECODERRESOLUTION_360x240 = 1001,
        DVDECODERRESOLUTION_180x120 = 1002,
        DVDECODERRESOLUTION_88x60 = 1003,
    };
    enum class _DVENCODERFORMAT : int32_t
    {
        DVENCODERFORMAT_DVSD = 2007,
        DVENCODERFORMAT_DVHD = 2008,
        DVENCODERFORMAT_DVSL = 2009,
    };
    enum class _DVENCODERRESOLUTION : int32_t
    {
        DVENCODERRESOLUTION_720x480 = 2012,
        DVENCODERRESOLUTION_360x240 = 2013,
        DVENCODERRESOLUTION_180x120 = 2014,
        DVENCODERRESOLUTION_88x60 = 2015,
    };
    enum class _DVENCODERVIDEOFORMAT : int32_t
    {
        DVENCODERVIDEOFORMAT_NTSC = 2000,
        DVENCODERVIDEOFORMAT_PAL = 2001,
    };
    enum class _DVRESOLUTION : int32_t
    {
        DVRESOLUTION_FULL = 1000,
        DVRESOLUTION_HALF = 1001,
        DVRESOLUTION_QUARTER = 1002,
        DVRESOLUTION_DC = 1003,
    };
    enum class _REM_FILTER_FLAGS : int32_t
    {
        REMFILTERF_LEAVECONNECTED = 1,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct ALLOCATOR_PROPERTIES;
    struct AMCOPPCommand;
    struct AMCOPPSignature;
    struct AMCOPPStatusInput;
    struct AMCOPPStatusOutput;
    struct AMVABUFFERINFO;
    struct AMVABeginFrameInfo;
    struct AMVACompBufferInfo;
    struct AMVAEndFrameInfo;
    struct AMVAInternalMemInfo;
    struct AMVAUncompBufferInfo;
    struct AMVAUncompDataInfo;
    struct AMVPDATAINFO;
    struct AMVPDIMINFO;
    struct AMVPSIZE;
    struct AM_AC3_ALTERNATE_AUDIO;
    struct AM_AC3_BIT_STREAM_MODE;
    struct AM_AC3_DIALOGUE_LEVEL;
    struct AM_AC3_DOWNMIX;
    struct AM_AC3_ERROR_CONCEALMENT;
    struct AM_AC3_ROOM_TYPE;
    struct AM_COLCON;
    struct AM_COPY_MACROVISION;
    struct AM_DVDCOPY_BUSKEY;
    struct AM_DVDCOPY_CHLGKEY;
    struct AM_DVDCOPY_DISCKEY;
    struct AM_DVDCOPY_SET_COPY_STATE;
    struct AM_DVDCOPY_TITLEKEY;
    struct AM_DVD_ChangeRate;
    struct AM_DVD_RENDERSTATUS;
    struct AM_DVD_YUV;
    struct AM_DvdKaraokeData;
    struct AM_ExactRateChange;
    struct AM_FRAMESTEP_STEP;
    struct AM_MEDIA_TYPE;
    struct AM_MPEGSTREAMTYPE;
    struct AM_MPEGSYSTEMTYPE;
    struct AM_PROPERTY_SPHLI;
    struct AM_PROPERTY_SPPAL;
    struct AM_QueryRate;
    struct AM_SAMPLE2_PROPERTIES;
    struct AM_STREAM_INFO;
    struct AM_SimpleRateChange;
    struct AM_WST_PAGE;
    struct ANALOGVIDEOINFO;
    struct ANALOG_AUXIN_NETWORK_TYPE;
    struct ANALOG_FM_NETWORK_TYPE;
    struct ANALOG_TV_NETWORK_TYPE;
    struct ATSCChannelTuneRequest;
    struct ATSCComponentType;
    struct ATSCLocator;
    struct ATSCTuningSpace;
    struct ATSC_FILTER_OPTIONS;
    struct ATSC_TERRESTRIAL_TV_NETWORK_TYPE;
    struct AUDIO_STREAM_CONFIG_CAPS;
    struct AVIEXTHEADER;
    struct AVIFIELDINDEX;
    struct AVIINDEXENTRY;
    struct AVIMAINHEADER;
    struct AVIMETAINDEX;
    struct AVIOLDINDEX;
    struct AVIPALCHANGE;
    struct AVISTDINDEX;
    struct AVISTDINDEX_ENTRY;
    struct AVISTREAMHEADER;
    struct AVISUPERINDEX;
    struct AVIStreamHeader;
    struct AVITCDLINDEX_ENTRY;
    struct AVITIMECODEINDEX;
    struct AVITIMEDINDEX_ENTRY;
    struct AnalogAudioComponentType;
    struct AnalogLocator;
    struct AnalogRadioTuningSpace;
    struct AnalogTVTuningSpace;
    struct AuxInTuningSpace;
    struct BDANETWORKTYPE_ATSC;
    struct BDANODE_DESCRIPTOR;
    struct BDA_BUFFER;
    struct BDA_CAS_CHECK_ENTITLEMENTTOKEN;
    struct BDA_CAS_CLOSEMMIDATA;
    struct BDA_CAS_CLOSE_MMIDIALOG;
    struct BDA_CAS_OPENMMIDATA;
    struct BDA_CAS_REQUESTTUNERDATA;
    struct BDA_CA_MODULE_UI;
    struct BDA_DEBUG_DATA;
    struct BDA_DEBUG_DATA_AVAILABLE;
    struct BDA_DEBUG_DATA_TYPE_STRING;
    struct BDA_DISEQC_RESPONSE;
    struct BDA_DISEQC_SEND;
    struct BDA_DRM_DRMSTATUS;
    struct BDA_DVBT2_L1_SIGNALLING_DATA;
    struct BDA_ETHERNET_ADDRESS;
    struct BDA_ETHERNET_ADDRESS_LIST;
    struct BDA_EVENT_DATA;
    struct BDA_GDDS_DATA;
    struct BDA_GDDS_DATATYPE;
    struct BDA_IPv4_ADDRESS;
    struct BDA_IPv4_ADDRESS_LIST;
    struct BDA_IPv6_ADDRESS;
    struct BDA_IPv6_ADDRESS_LIST;
    struct BDA_ISDBCAS_EMG_REQ;
    struct BDA_ISDBCAS_REQUESTHEADER;
    struct BDA_ISDBCAS_RESPONSEDATA;
    struct BDA_MUX_PIDLISTITEM;
    struct BDA_PID_MAP;
    struct BDA_PID_UNMAP;
    struct BDA_PROGRAM_PID_LIST;
    struct BDA_RATING_PINRESET;
    struct BDA_SCAN_CAPABILTIES;
    struct BDA_SCAN_START;
    struct BDA_SCAN_STATE;
    struct BDA_SIGNAL_TIMEOUTS;
    struct BDA_STRING;
    struct BDA_TABLE_SECTION;
    struct BDA_TEMPLATE_CONNECTION;
    struct BDA_TEMPLATE_PIN_JOINT;
    struct BDA_TRANSPORT_INFO;
    struct BDA_TS_SELECTORINFO;
    struct BDA_TS_SELECTORINFO_ISDBS_EXT;
    struct BDA_TUNER_DIAGNOSTICS;
    struct BDA_TUNER_TUNERSTATE;
    struct BDA_USERACTIVITY_INTERVAL;
    struct BDA_WMDRMTUNER_PIDPROTECTION;
    struct BDA_WMDRMTUNER_PURCHASEENTITLEMENT;
    struct BDA_WMDRM_KEYINFOLIST;
    struct BDA_WMDRM_RENEWLICENSE;
    struct BDA_WMDRM_STATUS;
    struct BSKYB_TERRESTRIAL_TV_NETWORK_TYPE;
    struct BadSampleInfo;
    struct BroadcastEventService;
    struct CAPTURE_STREAMTIME;
    struct COLORKEY;
    struct CXDSData;
    struct ChannelChangeInfo;
    struct ChannelIDTuneRequest;
    struct ChannelIDTuningSpace;
    struct ChannelInfo;
    struct ChannelTuneRequest;
    struct ChannelTypeInfo;
    struct Component;
    struct ComponentType;
    struct ComponentTypes;
    struct Components;
    struct CreatePropBagOnRegKey;
    struct DIGITAL_CABLE_NETWORK_TYPE;
    struct DIRECT_TV_SATELLITE_TV_NETWORK_TYPE;
    struct DMO_MEDIA_TYPE;
    struct DMO_OUTPUT_DATA_BUFFER;
    struct DMO_PARTIAL_MEDIATYPE;
    struct DSHOW_STREAM_DESC;
    struct DSMCC_ELEMENT;
    struct DSMCC_FILTER_OPTIONS;
    struct DSMCC_SECTION;
    struct DTFilter;
    struct DVBCLocator;
    struct DVBSLocator;
    struct DVBSTuningSpace;
    struct DVBScramblingControlSpanningEvent;
    struct DVBTLocator;
    struct DVBTLocator2;
    struct DVBTuneRequest;
    struct DVBTuningSpace;
    struct DVB_CABLE_TV_NETWORK_TYPE;
    struct DVB_EIT_FILTER_OPTIONS;
    struct DVB_SATELLITE_TV_NETWORK_TYPE;
    struct DVB_TERRESTRIAL_TV_NETWORK_TYPE;
    struct DVD_ATR;
    struct DVD_AudioAttributes;
    struct DVD_DECODER_CAPS;
    struct DVD_HMSF_TIMECODE;
    struct DVD_KaraokeAttributes;
    struct DVD_MUA_Coeff;
    struct DVD_MUA_MixingInfo;
    struct DVD_MenuAttributes;
    struct DVD_MultichannelAudioAttributes;
    struct DVD_PLAYBACK_LOCATION;
    struct DVD_PLAYBACK_LOCATION2;
    struct DVD_REGION;
    struct DVD_SubpictureAttributes;
    struct DVD_TIMECODE;
    struct DVD_TitleAttributes;
    struct DVD_VideoAttributes;
    struct DVINFO;
    struct DVR_STREAM_DESC;
    struct DXVA2SW_CALLBACKS;
    struct DXVA2TraceVideoProcessBltData;
    struct DXVA2Trace_DecodeDevBeginFrameData;
    struct DXVA2Trace_DecodeDevCreatedData;
    struct DXVA2Trace_DecodeDevGetBufferData;
    struct DXVA2Trace_DecodeDeviceData;
    struct DXVA2Trace_VideoProcessDevCreatedData;
    struct DXVA2Trace_VideoProcessDeviceData;
    struct DXVA2_VIDEOPROCESSBLT;
    struct DXVA2_VIDEOSAMPLE;
    struct DXVA_COPPSetProtectionLevelCmdData;
    struct DXVA_COPPSetSignalingCmdData;
    struct DXVA_COPPStatusData;
    struct DXVA_COPPStatusDisplayData;
    struct DXVA_COPPStatusHDCPKeyData;
    struct DXVA_COPPStatusSignalingCmdData;
    struct DigitalCableLocator;
    struct DigitalCableTuneRequest;
    struct DigitalCableTuningSpace;
    struct DigitalLocator;
    struct DualMonoInfo;
    struct DvbParentalRatingDescriptor;
    struct DvbParentalRatingParam;
    struct EALocationCodeType;
    struct ECHOSTAR_SATELLITE_TV_NETWORK_TYPE;
    struct ESEventFactory;
    struct ESEventService;
    struct ETFilter;
    struct EVENTID_ARIBcontentSpanningEvent;
    struct EVENTID_AudioDescriptorSpanningEvent;
    struct EVENTID_AudioTypeSpanningEvent;
    struct EVENTID_BDAConditionalAccessTAG;
    struct EVENTID_BDAEventingServicePendingEvent;
    struct EVENTID_BDA_CASBroadcastMMI;
    struct EVENTID_BDA_CASCloseMMI;
    struct EVENTID_BDA_CASOpenMMI;
    struct EVENTID_BDA_CASReleaseTuner;
    struct EVENTID_BDA_CASRequestTuner;
    struct EVENTID_BDA_DiseqCResponseAvailable;
    struct EVENTID_BDA_EncoderSignalLock;
    struct EVENTID_BDA_FdcStatus;
    struct EVENTID_BDA_FdcTableSection;
    struct EVENTID_BDA_GPNVValueUpdate;
    struct EVENTID_BDA_GuideDataAvailable;
    struct EVENTID_BDA_GuideDataError;
    struct EVENTID_BDA_GuideServiceInformationUpdated;
    struct EVENTID_BDA_IsdbCASResponse;
    struct EVENTID_BDA_LbigsCloseConnectionHandle;
    struct EVENTID_BDA_LbigsOpenConnection;
    struct EVENTID_BDA_LbigsSendData;
    struct EVENTID_BDA_RatingPinReset;
    struct EVENTID_BDA_TransprtStreamSelectorInfo;
    struct EVENTID_BDA_TunerNoSignal;
    struct EVENTID_BDA_TunerSignalLock;
    struct EVENTID_BDA_UpdateDrmStatus;
    struct EVENTID_BDA_UpdateScanState;
    struct EVENTID_CADenialCountChanged;
    struct EVENTID_CASFailureSpanningEvent;
    struct EVENTID_CSDescriptorSpanningEvent;
    struct EVENTID_CandidatePostTuneData;
    struct EVENTID_CardStatusChanged;
    struct EVENTID_ChannelChangeSpanningEvent;
    struct EVENTID_ChannelInfoSpanningEvent;
    struct EVENTID_ChannelTypeSpanningEvent;
    struct EVENTID_CtxADescriptorSpanningEvent;
    struct EVENTID_DFNWithNoActualAVData;
    struct EVENTID_DRMParingStatusChanged;
    struct EVENTID_DRMParingStepComplete;
    struct EVENTID_DVBScramblingControlSpanningEvent;
    struct EVENTID_DualMonoSpanningEvent;
    struct EVENTID_DvbParentalRatingDescriptor;
    struct EVENTID_EASMessageReceived;
    struct EVENTID_EmmMessageSpanningEvent;
    struct EVENTID_EntitlementChanged;
    struct EVENTID_LanguageSpanningEvent;
    struct EVENTID_MMIMessage;
    struct EVENTID_NewSignalAcquired;
    struct EVENTID_PBDAParentalControlEvent;
    struct EVENTID_PIDListSpanningEvent;
    struct EVENTID_PSITable;
    struct EVENTID_RRTSpanningEvent;
    struct EVENTID_STBChannelNumber;
    struct EVENTID_ServiceTerminated;
    struct EVENTID_SignalAndServiceStatusSpanningEvent;
    struct EVENTID_SignalStatusChanged;
    struct EVENTID_StreamIDSpanningEvent;
    struct EVENTID_StreamTypeSpanningEvent;
    struct EVENTID_SubtitleSpanningEvent;
    struct EVENTID_TeletextSpanningEvent;
    struct EVENTID_TuneFailureEvent;
    struct EVENTID_TuneFailureSpanningEvent;
    struct EVENTID_TuningChanged;
    struct EVENTID_TuningChanging;
    struct EVENTTYPE_CASDescrambleFailureEvent;
    struct EvalRat;
    struct FILTER_INFO;
    struct FilgraphManager;
    struct HEAACWAVEFORMAT;
    struct HEAACWAVEINFO;
    struct ISDBSLocator;
    struct ISDB_CABLE_TV_NETWORK_TYPE;
    struct ISDB_SATELLITE_TV_NETWORK_TYPE;
    struct ISDB_S_NETWORK_TYPE;
    struct ISDB_TERRESTRIAL_TV_NETWORK_TYPE;
    struct ISDB_T_NETWORK_TYPE;
    struct KSCATEGORY_BDA_IP_SINK;
    struct KSCATEGORY_BDA_NETWORK_EPG;
    struct KSCATEGORY_BDA_NETWORK_PROVIDER;
    struct KSCATEGORY_BDA_NETWORK_TUNER;
    struct KSCATEGORY_BDA_RECEIVER_COMPONENT;
    struct KSCATEGORY_BDA_TRANSPORT_INFORMATION;
    struct KSDATAFORMAT_SPECIFIER_BDA_IP;
    struct KSDATAFORMAT_SPECIFIER_BDA_TRANSPORT;
    struct KSDATAFORMAT_SUBTYPE_ATSC_SI;
    struct KSDATAFORMAT_SUBTYPE_BDA_IP;
    struct KSDATAFORMAT_SUBTYPE_BDA_IP_CONTROL;
    struct KSDATAFORMAT_SUBTYPE_BDA_MPEG2_TRANSPORT;
    struct KSDATAFORMAT_SUBTYPE_BDA_OPENCABLE_OOB_PSIP;
    struct KSDATAFORMAT_SUBTYPE_BDA_OPENCABLE_PSIP;
    struct KSDATAFORMAT_SUBTYPE_DVB_SI;
    struct KSDATAFORMAT_SUBTYPE_ISDB_SI;
    struct KSDATAFORMAT_SUBTYPE_PBDA_TRANSPORT_RAW;
    struct KSDATAFORMAT_TYPE_BDA_ANTENNA;
    struct KSDATAFORMAT_TYPE_BDA_IF_SIGNAL;
    struct KSDATAFORMAT_TYPE_BDA_IP;
    struct KSDATAFORMAT_TYPE_BDA_IP_CONTROL;
    struct KSDATAFORMAT_TYPE_MPE;
    struct KSDATAFORMAT_TYPE_MPEG2_SECTIONS;
    struct KSEVENTDATA_BDA_RF_TUNER_SCAN_S;
    struct KSEVENTSETID_BdaCAEvent;
    struct KSEVENTSETID_BdaDiseqCEvent;
    struct KSEVENTSETID_BdaEvent;
    struct KSEVENTSETID_BdaPinEvent;
    struct KSEVENTSETID_BdaTunerEvent;
    struct KSMETHODSETID_BdaChangeSync;
    struct KSMETHODSETID_BdaConditionalAccessService;
    struct KSMETHODSETID_BdaDebug;
    struct KSMETHODSETID_BdaDeviceConfiguration;
    struct KSMETHODSETID_BdaDrmService;
    struct KSMETHODSETID_BdaEventing;
    struct KSMETHODSETID_BdaGuideDataDeliveryService;
    struct KSMETHODSETID_BdaIsdbConditionalAccess;
    struct KSMETHODSETID_BdaMux;
    struct KSMETHODSETID_BdaNameValue;
    struct KSMETHODSETID_BdaNameValueA;
    struct KSMETHODSETID_BdaScanning;
    struct KSMETHODSETID_BdaTSSelector;
    struct KSMETHODSETID_BdaTuner;
    struct KSMETHODSETID_BdaUserActivity;
    struct KSMETHODSETID_BdaWmdrmSession;
    struct KSMETHODSETID_BdaWmdrmTuner;
    struct KSM_BDA_BUFFER;
    struct KSM_BDA_CAS_CAPTURETOKEN;
    struct KSM_BDA_CAS_CLOSEMMIDIALOG;
    struct KSM_BDA_CAS_ENTITLEMENTTOKEN;
    struct KSM_BDA_CAS_OPENBROADCASTMMI;
    struct KSM_BDA_DEBUG_LEVEL;
    struct KSM_BDA_DRM_SETDRM;
    struct KSM_BDA_EVENT_COMPLETE;
    struct KSM_BDA_GDDS_SERVICEFROMTUNEXML;
    struct KSM_BDA_GDDS_TUNEXMLFROMIDX;
    struct KSM_BDA_GPNV_GETVALUE;
    struct KSM_BDA_GPNV_NAMEINDEX;
    struct KSM_BDA_GPNV_SETVALUE;
    struct KSM_BDA_ISDBCAS_REQUEST;
    struct KSM_BDA_PIN;
    struct KSM_BDA_PIN_PAIR;
    struct KSM_BDA_SCAN_CAPABILTIES;
    struct KSM_BDA_SCAN_FILTER;
    struct KSM_BDA_SCAN_START;
    struct KSM_BDA_TS_SELECTOR_SETTSID;
    struct KSM_BDA_TUNER_TUNEREQUEST;
    struct KSM_BDA_USERACTIVITY_USEREASON;
    struct KSM_BDA_WMDRMTUNER_GETPIDPROTECTION;
    struct KSM_BDA_WMDRMTUNER_PURCHASEENTITLEMENT;
    struct KSM_BDA_WMDRMTUNER_SETPIDPROTECTION;
    struct KSM_BDA_WMDRMTUNER_SYNCVALUE;
    struct KSM_BDA_WMDRM_LICENSE;
    struct KSM_BDA_WMDRM_RENEWLICENSE;
    struct KSNODE_BDA_8PSK_DEMODULATOR;
    struct KSNODE_BDA_8VSB_DEMODULATOR;
    struct KSNODE_BDA_ANALOG_DEMODULATOR;
    struct KSNODE_BDA_COFDM_DEMODULATOR;
    struct KSNODE_BDA_COMMON_CA_POD;
    struct KSNODE_BDA_DRI_DRM;
    struct KSNODE_BDA_IP_SINK;
    struct KSNODE_BDA_ISDB_S_DEMODULATOR;
    struct KSNODE_BDA_ISDB_T_DEMODULATOR;
    struct KSNODE_BDA_OPENCABLE_POD;
    struct KSNODE_BDA_PBDA_CAS;
    struct KSNODE_BDA_PBDA_DRM;
    struct KSNODE_BDA_PBDA_ISDBCAS;
    struct KSNODE_BDA_PBDA_MUX;
    struct KSNODE_BDA_PBDA_TUNER;
    struct KSNODE_BDA_PID_FILTER;
    struct KSNODE_BDA_QAM_DEMODULATOR;
    struct KSNODE_BDA_QPSK_DEMODULATOR;
    struct KSNODE_BDA_RF_TUNER;
    struct KSNODE_BDA_TS_SELECTOR;
    struct KSNODE_BDA_VIDEO_ENCODER;
    struct KSPROPERTY_BDA_RF_TUNER_CAPS_S;
    struct KSPROPERTY_BDA_RF_TUNER_SCAN_STATUS_S;
    struct KSPROPERTY_BDA_RF_TUNER_STANDARD_MODE_S;
    struct KSPROPERTY_BDA_RF_TUNER_STANDARD_S;
    struct KSPROPSETID_BdaAutodemodulate;
    struct KSPROPSETID_BdaCA;
    struct KSPROPSETID_BdaDigitalDemodulator;
    struct KSPROPSETID_BdaDiseqCommand;
    struct KSPROPSETID_BdaEthernetFilter;
    struct KSPROPSETID_BdaFrequencyFilter;
    struct KSPROPSETID_BdaIPv4Filter;
    struct KSPROPSETID_BdaIPv6Filter;
    struct KSPROPSETID_BdaLNBInfo;
    struct KSPROPSETID_BdaNullTransform;
    struct KSPROPSETID_BdaPIDFilter;
    struct KSPROPSETID_BdaPinControl;
    struct KSPROPSETID_BdaSignalStats;
    struct KSPROPSETID_BdaTableSection;
    struct KSPROPSETID_BdaTopology;
    struct KSPROPSETID_BdaVoidTransform;
    struct KSP_BDA_NODE_PIN;
    struct KSP_NODE_ESPID;
    struct KS_BDA_FRAME_INFO;
    struct KS_DATARANGE_BDA_ANTENNA;
    struct KS_DATARANGE_BDA_TRANSPORT;
    struct LONG_SECTION;
    struct LanguageComponentType;
    struct LanguageInfo;
    struct Locator;
    struct MPEG1VIDEOINFO;
    struct MPEG1WAVEFORMAT;
    struct MPEG2Component;
    struct MPEG2ComponentType;
    struct MPEG2TuneRequest;
    struct MPEG2TuneRequestFactory;
    struct MPEG2VIDEOINFO;
    struct MPEG2_FILTER;
    struct MPEG2_FILTER2;
    struct MPEG2_TRANSPORT_STRIDE;
    struct MPEGLAYER3WAVEFORMAT;
    struct MPEG_BCS_DEMUX;
    struct MPEG_CONTEXT;
    struct MPEG_DATE;
    struct MPEG_DATE_AND_TIME;
    struct MPEG_HEADER_BITS;
    struct MPEG_HEADER_BITS_MIDL;
    struct MPEG_HEADER_VERSION_BITS;
    struct MPEG_HEADER_VERSION_BITS_MIDL;
    struct MPEG_PACKET_LIST;
    struct MPEG_RQST_PACKET;
    struct MPEG_SERVICE_REQUEST;
    struct MPEG_SERVICE_RESPONSE;
    struct MPEG_STREAM_BUFFER;
    struct MPEG_STREAM_FILTER;
    struct MPEG_TIME;
    struct MPEG_WINSOCK;
    struct MPE_ELEMENT;
    struct MP_ENVELOPE_SEGMENT;
    struct MP_PARAMINFO;
    struct MSEventBinder;
    struct MSVidAnalogCaptureToCCA;
    struct MSVidAnalogCaptureToDataServices;
    struct MSVidAnalogCaptureToOverlayMixer;
    struct MSVidAnalogCaptureToStreamBufferSink;
    struct MSVidAnalogCaptureToXDS;
    struct MSVidAnalogTVToEncoder;
    struct MSVidAnalogTunerDevice;
    struct MSVidAudioRenderer;
    struct MSVidAudioRendererDevices;
    struct MSVidBDATunerDevice;
    struct MSVidCCA;
    struct MSVidCCAToStreamBufferSink;
    struct MSVidCCToAR;
    struct MSVidCCToVMR;
    struct MSVidClosedCaptioning;
    struct MSVidClosedCaptioningSI;
    struct MSVidCtl;
    struct MSVidDataServices;
    struct MSVidDataServicesToStreamBufferSink;
    struct MSVidDataServicesToXDS;
    struct MSVidDevice;
    struct MSVidDevice2;
    struct MSVidDigitalCaptureToCCA;
    struct MSVidDigitalCaptureToITV;
    struct MSVidDigitalCaptureToStreamBufferSink;
    struct MSVidEVR;
    struct MSVidEncoder;
    struct MSVidEncoderToStreamBufferSink;
    struct MSVidFeature;
    struct MSVidFeatures;
    struct MSVidFilePlaybackDevice;
    struct MSVidFilePlaybackToAudioRenderer;
    struct MSVidFilePlaybackToVideoRenderer;
    struct MSVidGenericComposite;
    struct MSVidGenericSink;
    struct MSVidITVCapture;
    struct MSVidITVPlayback;
    struct MSVidITVToStreamBufferSink;
    struct MSVidInputDevice;
    struct MSVidInputDevices;
    struct MSVidMPEG2DecoderToClosedCaptioning;
    struct MSVidOutput;
    struct MSVidOutputDevices;
    struct MSVidRect;
    struct MSVidSBESourceToCC;
    struct MSVidSBESourceToGenericSink;
    struct MSVidSBESourceToITV;
    struct MSVidStreamBufferRecordingControl;
    struct MSVidStreamBufferSink;
    struct MSVidStreamBufferSource;
    struct MSVidStreamBufferSourceToVideoRenderer;
    struct MSVidStreamBufferV2Source;
    struct MSVidVMR9;
    struct MSVidVideoInputDevice;
    struct MSVidVideoPlaybackDevice;
    struct MSVidVideoRenderer;
    struct MSVidVideoRendererDevices;
    struct MSVidWebDVD;
    struct MSVidWebDVDAdm;
    struct MSVidWebDVDToAudioRenderer;
    struct MSVidWebDVDToVideoRenderer;
    struct MSVidXDS;
    struct MainAVIHeader;
    struct Mpeg2Data;
    struct Mpeg2DataLib;
    struct Mpeg2Stream;
    struct Mpeg2TableSampleHdr;
    struct NORMALIZEDRECT;
    struct PBDAParentalControl;
    struct PBDA_ALWAYS_TUNE_IN_MUX;
    struct PBDA_TAG_ATTRIBUTE;
    struct PIC_SEQ_SAMPLE;
    struct PIDListSpanningEvent;
    struct PID_BITS;
    struct PID_BITS_MIDL;
    struct PID_MAP;
    struct PINNAME_BDA_ANALOG_AUDIO;
    struct PINNAME_BDA_ANALOG_VIDEO;
    struct PINNAME_BDA_FM_RADIO;
    struct PINNAME_BDA_IF_PIN;
    struct PINNAME_BDA_OPENCABLE_PSIP_PIN;
    struct PINNAME_BDA_TRANSPORT;
    struct PINNAME_IPSINK_INPUT;
    struct PINNAME_MPE;
    struct PIN_INFO;
    struct PersistTuneXmlUtility;
    struct ProgramElement;
    struct Quality;
    struct RATING_ATTRIBUTE;
    struct RATING_INFO;
    struct RATING_SYSTEM;
    struct REGFILTER;
    struct REGFILTER2;
    struct REGFILTERPINS;
    struct REGFILTERPINS2;
    struct REGPINMEDIUM;
    struct REGPINTYPES;
    struct RIFFCHUNK;
    struct RIFFLIST;
    struct SAMPLE_LIVE_STREAM_TIME;
    struct SAMPLE_SEQ_OFFSET;
    struct SBE2_STREAM_DESC;
    struct SBE_PIN_DATA;
    struct SECTION;
    struct STREAMBUFFER_ATTRIBUTE;
    struct STREAM_ID_MAP;
    struct SectionList;
    struct SmartCardApplication;
    struct SpanningEventDescriptor;
    struct SpanningEventEmmMessage;
    struct SystemTuningSpaces;
    struct TID_EXTENSION;
    struct TIFLoad;
    struct TIMECODEDATA;
    struct TRANSPORT_PROPERTIES;
    struct TRUECOLORINFO;
    struct TuneRequest;
    struct TunerMarshaler;
    struct TuningSpace;
    struct UDCR_TAG;
    struct VA_OPTIONAL_VIDEO_PROPERTIES;
    struct VFW_FILTERLIST;
    struct VIDEOINFO;
    struct VIDEOINFOHEADER;
    struct VIDEOINFOHEADER2;
    struct VIDEO_STREAM_CONFIG_CAPS;
    struct VMR9AllocationInfo;
    struct VMR9AlphaBitmap;
    struct VMR9DeinterlaceCaps;
    struct VMR9Frequency;
    struct VMR9MonitorInfo;
    struct VMR9NormalizedRect;
    struct VMR9PresentationInfo;
    struct VMR9ProcAmpControl;
    struct VMR9ProcAmpControlRange;
    struct VMR9VideoDesc;
    struct VMR9VideoStreamInfo;
    struct VMRALLOCATIONINFO;
    struct VMRALPHABITMAP;
    struct VMRDeinterlaceCaps;
    struct VMRFrequency;
    struct VMRGUID;
    struct VMRMONITORINFO;
    struct VMRPRESENTATIONINFO;
    struct VMRVIDEOSTREAMINFO;
    struct VMRVideoDesc;
    struct WMDRMProtectionInfo;
    struct XDSCodec;
    struct XDSToRat;
    struct _avitcdlindex;
    struct _avitimedindex;
    struct IAMAnalogVideoDecoder;
    struct IAMAnalogVideoEncoder;
    struct IAMAsyncReaderTimestampScaling;
    struct IAMAudioInputMixer;
    struct IAMAudioRendererStats;
    struct IAMBufferNegotiation;
    struct IAMCameraControl;
    struct IAMCertifiedOutputProtection;
    struct IAMChannelInfo;
    struct IAMClockAdjust;
    struct IAMClockSlave;
    struct IAMCollection;
    struct IAMCopyCaptureFileProgress;
    struct IAMCrossbar;
    struct IAMDecoderCaps;
    struct IAMDevMemoryAllocator;
    struct IAMDevMemoryControl;
    struct IAMDeviceRemoval;
    struct IAMDirectSound;
    struct IAMDroppedFrames;
    struct IAMExtDevice;
    struct IAMExtTransport;
    struct IAMExtendedErrorInfo;
    struct IAMExtendedSeeking;
    struct IAMFilterGraphCallback;
    struct IAMFilterMiscFlags;
    struct IAMGraphBuilderCallback;
    struct IAMGraphStreams;
    struct IAMLatency;
    struct IAMLine21Decoder;
    struct IAMMediaContent;
    struct IAMMediaContent2;
    struct IAMMediaStream;
    struct IAMMediaTypeSample;
    struct IAMMediaTypeStream;
    struct IAMMultiMediaStream;
    struct IAMNetShowConfig;
    struct IAMNetShowExProps;
    struct IAMNetShowPreroll;
    struct IAMNetworkStatus;
    struct IAMOpenProgress;
    struct IAMOverlayFX;
    struct IAMParse;
    struct IAMPhysicalPinInfo;
    struct IAMPlayList;
    struct IAMPlayListItem;
    struct IAMPluginControl;
    struct IAMPushSource;
    struct IAMRebuild;
    struct IAMResourceControl;
    struct IAMStats;
    struct IAMStreamConfig;
    struct IAMStreamControl;
    struct IAMStreamSelect;
    struct IAMTVAudio;
    struct IAMTVAudioNotification;
    struct IAMTVTuner;
    struct IAMTimecodeDisplay;
    struct IAMTimecodeGenerator;
    struct IAMTimecodeReader;
    struct IAMTuner;
    struct IAMTunerNotification;
    struct IAMVfwCaptureDialogs;
    struct IAMVfwCompressDialogs;
    struct IAMVideoAccelerator;
    struct IAMVideoAcceleratorNotify;
    struct IAMVideoCompression;
    struct IAMVideoControl;
    struct IAMVideoDecimationProperties;
    struct IAMVideoProcAmp;
    struct IAMWstDecoder;
    struct IAMovieSetup;
    struct IATSCChannelTuneRequest;
    struct IATSCComponentType;
    struct IATSCLocator;
    struct IATSCLocator2;
    struct IATSCTuningSpace;
    struct IATSC_EIT;
    struct IATSC_ETT;
    struct IATSC_MGT;
    struct IATSC_STT;
    struct IATSC_VCT;
    struct IAnalogAudioComponentType;
    struct IAnalogLocator;
    struct IAnalogRadioTuningSpace;
    struct IAnalogRadioTuningSpace2;
    struct IAnalogTVTuningSpace;
    struct IAsyncReader;
    struct IAtscContentAdvisoryDescriptor;
    struct IAtscPsipParser;
    struct IAttributeGet;
    struct IAttributeSet;
    struct IAudioData;
    struct IAudioMediaStream;
    struct IAudioStreamSample;
    struct IAuxInTuningSpace;
    struct IAuxInTuningSpace2;
    struct IBDAComparable;
    struct IBDACreateTuneRequestEx;
    struct IBDA_AUX;
    struct IBDA_AutoDemodulate;
    struct IBDA_AutoDemodulateEx;
    struct IBDA_ConditionalAccess;
    struct IBDA_ConditionalAccessEx;
    struct IBDA_DRIDRMService;
    struct IBDA_DRIWMDRMSession;
    struct IBDA_DRM;
    struct IBDA_DRMService;
    struct IBDA_DeviceControl;
    struct IBDA_DiagnosticProperties;
    struct IBDA_DigitalDemodulator;
    struct IBDA_DigitalDemodulator2;
    struct IBDA_DigitalDemodulator3;
    struct IBDA_DiseqCommand;
    struct IBDA_EasMessage;
    struct IBDA_Encoder;
    struct IBDA_EthernetFilter;
    struct IBDA_EventingService;
    struct IBDA_FDC;
    struct IBDA_FrequencyFilter;
    struct IBDA_GuideDataDeliveryService;
    struct IBDA_IPSinkControl;
    struct IBDA_IPSinkInfo;
    struct IBDA_IPV4Filter;
    struct IBDA_IPV6Filter;
    struct IBDA_ISDBConditionalAccess;
    struct IBDA_LNBInfo;
    struct IBDA_MUX;
    struct IBDA_NameValueService;
    struct IBDA_NetworkProvider;
    struct IBDA_NullTransform;
    struct IBDA_PinControl;
    struct IBDA_SignalProperties;
    struct IBDA_SignalStatistics;
    struct IBDA_TIF_REGISTRATION;
    struct IBDA_Topology;
    struct IBDA_TransportStreamInfo;
    struct IBDA_TransportStreamSelector;
    struct IBDA_UserActivityService;
    struct IBDA_VoidTransform;
    struct IBDA_WMDRMSession;
    struct IBDA_WMDRMTuner;
    struct IBPCSatelliteTuner;
    struct IBaseFilter;
    struct IBaseVideoMixer;
    struct IBasicAudio;
    struct IBasicVideo;
    struct IBasicVideo2;
    struct IBroadcastEvent;
    struct IBroadcastEventEx;
    struct IBufferingTime;
    struct ICAT;
    struct ICCSubStreamFiltering;
    struct ICameraControl;
    struct ICaptionServiceDescriptor;
    struct ICaptureGraphBuilder;
    struct ICaptureGraphBuilder2;
    struct IChannelIDTuneRequest;
    struct IChannelTuneRequest;
    struct IComponent;
    struct IComponentType;
    struct IComponentTypes;
    struct IComponents;
    struct IComponentsOld;
    struct IConfigAsfWriter;
    struct IConfigAsfWriter2;
    struct IConfigAviMux;
    struct IConfigInterleaving;
    struct ICreateDevEnum;
    struct ICreatePropBagOnRegKey;
    struct IDDrawExclModeVideo;
    struct IDDrawExclModeVideoCallback;
    struct IDMOQualityControl;
    struct IDMOVideoOutputOptimizations;
    struct IDMOWrapperFilter;
    struct IDShowPlugin;
    struct IDTFilter;
    struct IDTFilter2;
    struct IDTFilter3;
    struct IDTFilterConfig;
    struct IDTFilterEvents;
    struct IDTFilterLicenseRenewal;
    struct IDVBCLocator;
    struct IDVBSLocator;
    struct IDVBSLocator2;
    struct IDVBSTuningSpace;
    struct IDVBTLocator;
    struct IDVBTLocator2;
    struct IDVBTuneRequest;
    struct IDVBTuningSpace;
    struct IDVBTuningSpace2;
    struct IDVB_BAT;
    struct IDVB_DIT;
    struct IDVB_EIT;
    struct IDVB_EIT2;
    struct IDVB_NIT;
    struct IDVB_RST;
    struct IDVB_SDT;
    struct IDVB_SIT;
    struct IDVB_ST;
    struct IDVB_TDT;
    struct IDVB_TOT;
    struct IDVEnc;
    struct IDVRGB219;
    struct IDVSplitter;
    struct IDecimateVideoImage;
    struct IDeferredCommand;
    struct IDigitalCableLocator;
    struct IDigitalCableTuneRequest;
    struct IDigitalCableTuningSpace;
    struct IDigitalLocator;
    struct IDirectDrawMediaSample;
    struct IDirectDrawMediaSampleAllocator;
    struct IDirectDrawMediaStream;
    struct IDirectDrawStreamSample;
    struct IDirectDrawVideo;
    struct IDistributorNotify;
    struct IDrawVideoImage;
    struct IDvbCableDeliverySystemDescriptor;
    struct IDvbComponentDescriptor;
    struct IDvbContentDescriptor;
    struct IDvbContentIdentifierDescriptor;
    struct IDvbDataBroadcastDescriptor;
    struct IDvbDataBroadcastIDDescriptor;
    struct IDvbDefaultAuthorityDescriptor;
    struct IDvbExtendedEventDescriptor;
    struct IDvbFrequencyListDescriptor;
    struct IDvbHDSimulcastLogicalChannelDescriptor;
    struct IDvbLinkageDescriptor;
    struct IDvbLogicalChannel2Descriptor;
    struct IDvbLogicalChannelDescriptor;
    struct IDvbLogicalChannelDescriptor2;
    struct IDvbMultilingualServiceNameDescriptor;
    struct IDvbNetworkNameDescriptor;
    struct IDvbParentalRatingDescriptor;
    struct IDvbPrivateDataSpecifierDescriptor;
    struct IDvbSatelliteDeliverySystemDescriptor;
    struct IDvbServiceAttributeDescriptor;
    struct IDvbServiceDescriptor;
    struct IDvbServiceDescriptor2;
    struct IDvbServiceListDescriptor;
    struct IDvbShortEventDescriptor;
    struct IDvbSiParser;
    struct IDvbSiParser2;
    struct IDvbSubtitlingDescriptor;
    struct IDvbTeletextDescriptor;
    struct IDvbTerrestrial2DeliverySystemDescriptor;
    struct IDvbTerrestrialDeliverySystemDescriptor;
    struct IDvdCmd;
    struct IDvdControl;
    struct IDvdControl2;
    struct IDvdGraphBuilder;
    struct IDvdInfo;
    struct IDvdInfo2;
    struct IDvdState;
    struct IESCloseMmiEvent;
    struct IESEvent;
    struct IESEventFactory;
    struct IESEventService;
    struct IESEventServiceConfiguration;
    struct IESEvents;
    struct IESFileExpiryDateEvent;
    struct IESIsdbCasResponseEvent;
    struct IESLicenseRenewalResultEvent;
    struct IESOpenMmiEvent;
    struct IESRequestTunerEvent;
    struct IESValueUpdatedEvent;
    struct IETFilter;
    struct IETFilterConfig;
    struct IETFilterEvents;
    struct IEncoderAPI;
    struct IEnumComponentTypes;
    struct IEnumComponents;
    struct IEnumDMO;
    struct IEnumFilters;
    struct IEnumGuideDataProperties;
    struct IEnumMSVidGraphSegment;
    struct IEnumMediaTypes;
    struct IEnumPIDMap;
    struct IEnumPins;
    struct IEnumRegFilters;
    struct IEnumStreamBufferRecordingAttrib;
    struct IEnumStreamIdMap;
    struct IEnumTuneRequests;
    struct IEnumTuningSpaces;
    struct IEvalRat;
    struct IFileSinkFilter;
    struct IFileSinkFilter2;
    struct IFileSourceFilter;
    struct IFilterChain;
    struct IFilterGraph;
    struct IFilterGraph2;
    struct IFilterGraph3;
    struct IFilterInfo;
    struct IFilterMapper;
    struct IFilterMapper2;
    struct IFilterMapper3;
    struct IFrequencyMap;
    struct IFullScreenVideo;
    struct IFullScreenVideoEx;
    struct IGenericDescriptor;
    struct IGenericDescriptor2;
    struct IGetCapabilitiesKey;
    struct IGpnvsCommonBase;
    struct IGraphBuilder;
    struct IGraphConfig;
    struct IGraphConfigCallback;
    struct IGraphVersion;
    struct IGuideData;
    struct IGuideDataEvent;
    struct IGuideDataLoader;
    struct IGuideDataProperty;
    struct IIPDVDec;
    struct IISDBSLocator;
    struct IISDB_BIT;
    struct IISDB_CDT;
    struct IISDB_EMM;
    struct IISDB_LDT;
    struct IISDB_NBIT;
    struct IISDB_SDT;
    struct IISDB_SDTT;
    struct IIsdbAudioComponentDescriptor;
    struct IIsdbCAContractInformationDescriptor;
    struct IIsdbCADescriptor;
    struct IIsdbCAServiceDescriptor;
    struct IIsdbComponentGroupDescriptor;
    struct IIsdbDataContentDescriptor;
    struct IIsdbDigitalCopyControlDescriptor;
    struct IIsdbDownloadContentDescriptor;
    struct IIsdbEmergencyInformationDescriptor;
    struct IIsdbEventGroupDescriptor;
    struct IIsdbHierarchicalTransmissionDescriptor;
    struct IIsdbLogoTransmissionDescriptor;
    struct IIsdbSIParameterDescriptor;
    struct IIsdbSeriesDescriptor;
    struct IIsdbSiParser2;
    struct IIsdbTSInformationDescriptor;
    struct IIsdbTerrestrialDeliverySystemDescriptor;
    struct IKsNodeControl;
    struct IKsTopologyInfo;
    struct ILanguageComponentType;
    struct ILocator;
    struct IMPEG2Component;
    struct IMPEG2ComponentType;
    struct IMPEG2PIDMap;
    struct IMPEG2StreamIdMap;
    struct IMPEG2TuneRequest;
    struct IMPEG2TuneRequestFactory;
    struct IMPEG2TuneRequestSupport;
    struct IMPEG2_TIF_CONTROL;
    struct IMSEventBinder;
    struct IMSVidAnalogTuner;
    struct IMSVidAnalogTuner2;
    struct IMSVidAnalogTunerEvent;
    struct IMSVidAudioRenderer;
    struct IMSVidAudioRendererDevices;
    struct IMSVidAudioRendererEvent;
    struct IMSVidAudioRendererEvent2;
    struct IMSVidClosedCaptioning;
    struct IMSVidClosedCaptioning2;
    struct IMSVidClosedCaptioning3;
    struct IMSVidCompositionSegment;
    struct IMSVidCtl;
    struct IMSVidDataServices;
    struct IMSVidDataServicesEvent;
    struct IMSVidDevice;
    struct IMSVidDevice2;
    struct IMSVidDeviceEvent;
    struct IMSVidEVR;
    struct IMSVidEVREvent;
    struct IMSVidEncoder;
    struct IMSVidFeature;
    struct IMSVidFeatureEvent;
    struct IMSVidFeatures;
    struct IMSVidFilePlayback;
    struct IMSVidFilePlayback2;
    struct IMSVidFilePlaybackEvent;
    struct IMSVidGenericSink;
    struct IMSVidGenericSink2;
    struct IMSVidGraphSegment;
    struct IMSVidGraphSegmentContainer;
    struct IMSVidGraphSegmentUserInput;
    struct IMSVidInputDevice;
    struct IMSVidInputDeviceEvent;
    struct IMSVidInputDevices;
    struct IMSVidOutputDevice;
    struct IMSVidOutputDeviceEvent;
    struct IMSVidOutputDevices;
    struct IMSVidPlayback;
    struct IMSVidPlaybackEvent;
    struct IMSVidRect;
    struct IMSVidStreamBufferRecordingControl;
    struct IMSVidStreamBufferSink;
    struct IMSVidStreamBufferSink2;
    struct IMSVidStreamBufferSink3;
    struct IMSVidStreamBufferSinkEvent;
    struct IMSVidStreamBufferSinkEvent2;
    struct IMSVidStreamBufferSinkEvent3;
    struct IMSVidStreamBufferSinkEvent4;
    struct IMSVidStreamBufferSource;
    struct IMSVidStreamBufferSource2;
    struct IMSVidStreamBufferSourceEvent;
    struct IMSVidStreamBufferSourceEvent2;
    struct IMSVidStreamBufferSourceEvent3;
    struct IMSVidStreamBufferV2SourceEvent;
    struct IMSVidTuner;
    struct IMSVidTunerEvent;
    struct IMSVidVMR9;
    struct IMSVidVRGraphSegment;
    struct IMSVidVideoInputDevice;
    struct IMSVidVideoRenderer;
    struct IMSVidVideoRenderer2;
    struct IMSVidVideoRendererDevices;
    struct IMSVidVideoRendererEvent;
    struct IMSVidVideoRendererEvent2;
    struct IMSVidWebDVD;
    struct IMSVidWebDVD2;
    struct IMSVidWebDVDAdm;
    struct IMSVidWebDVDEvent;
    struct IMSVidXDS;
    struct IMSVidXDSEvent;
    struct IMceBurnerControl;
    struct IMediaBuffer;
    struct IMediaControl;
    struct IMediaEvent;
    struct IMediaEventEx;
    struct IMediaEventSink;
    struct IMediaFilter;
    struct IMediaObject;
    struct IMediaObjectInPlace;
    struct IMediaParamInfo;
    struct IMediaParams;
    struct IMediaPosition;
    struct IMediaPropertyBag;
    struct IMediaSample;
    struct IMediaSample2;
    struct IMediaSample2Config;
    struct IMediaSeeking;
    struct IMediaStream;
    struct IMediaStreamFilter;
    struct IMediaTypeInfo;
    struct IMemAllocator;
    struct IMemAllocatorCallbackTemp;
    struct IMemAllocatorNotifyCallbackTemp;
    struct IMemInputPin;
    struct IMemoryData;
    struct IMixerOCX;
    struct IMixerOCXNotify;
    struct IMixerPinConfig;
    struct IMixerPinConfig2;
    struct IMpeg2Data;
    struct IMpeg2Demultiplexer;
    struct IMpeg2Stream;
    struct IMpeg2TableFilter;
    struct IMpegAudioDecoder;
    struct IMultiMediaStream;
    struct IOverlay;
    struct IOverlayNotify;
    struct IOverlayNotify2;
    struct IPAT;
    struct IPBDAAttributesDescriptor;
    struct IPBDAEntitlementDescriptor;
    struct IPBDASiParser;
    struct IPBDA_EIT;
    struct IPBDA_Services;
    struct IPMT;
    struct IPSITables;
    struct IPTFilterLicenseRenewal;
    struct IPersistMediaPropertyBag;
    struct IPersistTuneXml;
    struct IPersistTuneXmlUtility;
    struct IPersistTuneXmlUtility2;
    struct IPin;
    struct IPinConnection;
    struct IPinFlowControl;
    struct IPinInfo;
    struct IQualProp;
    struct IQualityControl;
    struct IQueueCommand;
    struct IReferenceClock;
    struct IReferenceClock2;
    struct IReferenceClockTimerControl;
    struct IRegFilterInfo;
    struct IRegisterServiceProvider;
    struct IRegisterTuner;
    struct IResourceConsumer;
    struct IResourceManager;
    struct ISBE2Crossbar;
    struct ISBE2EnumStream;
    struct ISBE2FileScan;
    struct ISBE2GlobalEvent;
    struct ISBE2GlobalEvent2;
    struct ISBE2MediaTypeProfile;
    struct ISBE2SpanningEvent;
    struct ISBE2StreamMap;
    struct ISCTE_EAS;
    struct ISIInbandEPG;
    struct ISIInbandEPGEvent;
    struct IScanningTuner;
    struct IScanningTunerEx;
    struct ISectionList;
    struct ISeekingPassThru;
    struct ISelector;
    struct IServiceLocationDescriptor;
    struct ISpecifyParticularPages;
    struct IStreamBufferConfigure;
    struct IStreamBufferConfigure2;
    struct IStreamBufferConfigure3;
    struct IStreamBufferDataCounters;
    struct IStreamBufferInitialize;
    struct IStreamBufferMediaSeeking;
    struct IStreamBufferMediaSeeking2;
    struct IStreamBufferRecComp;
    struct IStreamBufferRecordControl;
    struct IStreamBufferRecordingAttribute;
    struct IStreamBufferSink;
    struct IStreamBufferSink2;
    struct IStreamBufferSink3;
    struct IStreamBufferSource;
    struct IStreamBuilder;
    struct IStreamSample;
    struct ITSDT;
    struct ITuneRequest;
    struct ITuneRequestInfo;
    struct ITuneRequestInfoEx;
    struct ITuner;
    struct ITunerCap;
    struct ITunerCapEx;
    struct ITuningSpace;
    struct ITuningSpaceContainer;
    struct ITuningSpaces;
    struct IVMRAspectRatioControl;
    struct IVMRAspectRatioControl9;
    struct IVMRDeinterlaceControl;
    struct IVMRDeinterlaceControl9;
    struct IVMRFilterConfig;
    struct IVMRFilterConfig9;
    struct IVMRImageCompositor;
    struct IVMRImageCompositor9;
    struct IVMRImagePresenter;
    struct IVMRImagePresenter9;
    struct IVMRImagePresenterConfig;
    struct IVMRImagePresenterConfig9;
    struct IVMRImagePresenterExclModeConfig;
    struct IVMRMixerBitmap;
    struct IVMRMixerBitmap9;
    struct IVMRMixerControl;
    struct IVMRMixerControl9;
    struct IVMRMonitorConfig;
    struct IVMRMonitorConfig9;
    struct IVMRSurface;
    struct IVMRSurface9;
    struct IVMRSurfaceAllocator;
    struct IVMRSurfaceAllocator9;
    struct IVMRSurfaceAllocatorEx9;
    struct IVMRSurfaceAllocatorNotify;
    struct IVMRSurfaceAllocatorNotify9;
    struct IVMRVideoStreamControl;
    struct IVMRVideoStreamControl9;
    struct IVMRWindowlessControl;
    struct IVMRWindowlessControl9;
    struct IVPBaseConfig;
    struct IVPBaseNotify;
    struct IVPConfig;
    struct IVPManager;
    struct IVPNotify;
    struct IVPNotify2;
    struct IVPVBIConfig;
    struct IVPVBINotify;
    struct IVideoEncoder;
    struct IVideoFrameStep;
    struct IVideoProcAmp;
    struct IVideoWindow;
    struct IXDSCodec;
    struct IXDSCodecConfig;
    struct IXDSCodecEvents;
    struct IXDSToRat;
    struct IXMLGraphBuilder;
    struct _IMSVidCtlEvents;
#pragma endregion forward_declarations

#pragma region delegates
    using AMGETERRORTEXTPROCA = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::HRESULT, Windows::Win32::Foundation::PSTR, uint32_t);
    using AMGETERRORTEXTPROCW = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::HRESULT, Windows::Win32::Foundation::PWSTR, uint32_t);
    using PDXVA2SW_GETVIDEOPROCESSORRENDERTARGETCOUNT = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Media::MediaFoundation::DXVA2_VideoDesc*, uint32_t*);
    using PDXVA2SW_GETVIDEOPROCESSORRENDERTARGETS = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Media::MediaFoundation::DXVA2_VideoDesc*, uint32_t, Windows::Win32::Graphics::Direct3D9::D3DFORMAT*);
    using PDXVA2SW_GETVIDEOPROCESSORCAPS = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Media::MediaFoundation::DXVA2_VideoDesc*, Windows::Win32::Graphics::Direct3D9::D3DFORMAT, Windows::Win32::Media::MediaFoundation::DXVA2_VideoProcessorCaps*);
    using PDXVA2SW_GETVIDEOPROCESSORSUBSTREAMFORMATCOUNT = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Media::MediaFoundation::DXVA2_VideoDesc*, Windows::Win32::Graphics::Direct3D9::D3DFORMAT, uint32_t*);
    using PDXVA2SW_GETVIDEOPROCESSORSUBSTREAMFORMATS = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Media::MediaFoundation::DXVA2_VideoDesc*, Windows::Win32::Graphics::Direct3D9::D3DFORMAT, uint32_t, Windows::Win32::Graphics::Direct3D9::D3DFORMAT*);
    using PDXVA2SW_GETPROCAMPRANGE = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Media::MediaFoundation::DXVA2_VideoDesc*, Windows::Win32::Graphics::Direct3D9::D3DFORMAT, uint32_t, Windows::Win32::Media::MediaFoundation::DXVA2_ValueRange*);
    using PDXVA2SW_GETFILTERPROPERTYRANGE = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Media::MediaFoundation::DXVA2_VideoDesc*, Windows::Win32::Graphics::Direct3D9::D3DFORMAT, uint32_t, Windows::Win32::Media::MediaFoundation::DXVA2_ValueRange*);
    using PDXVA2SW_CREATEVIDEOPROCESSDEVICE = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Graphics::Direct3D9::IDirect3DDevice9*, Windows::Win32::Media::MediaFoundation::DXVA2_VideoDesc*, Windows::Win32::Graphics::Direct3D9::D3DFORMAT, uint32_t, Windows::Win32::Foundation::HANDLE*);
    using PDXVA2SW_DESTROYVIDEOPROCESSDEVICE = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Foundation::HANDLE);
    using PDXVA2SW_VIDEOPROCESSBEGINFRAME = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Foundation::HANDLE);
    using PDXVA2SW_VIDEOPROCESSENDFRAME = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Foundation::HANDLE, Windows::Win32::Foundation::HANDLE*);
    using PDXVA2SW_VIDEOPROCESSSETRENDERTARGET = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Foundation::HANDLE, Windows::Win32::Graphics::Direct3D9::IDirect3DSurface9*);
    using PDXVA2SW_VIDEOPROCESSBLT = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Foundation::HANDLE, Windows::Win32::Graphics::DirectShow::DXVA2_VIDEOPROCESSBLT*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
