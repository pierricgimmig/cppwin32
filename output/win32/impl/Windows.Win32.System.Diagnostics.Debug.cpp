// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_Diagnostics_Debug_2_H
#define WIN32_Windows_Win32_System_Diagnostics_Debug_2_H
#include "win32/Windows.Win32.System.Diagnostics.Debug.h"
#include "win32/impl/Windows.Win32.System.Diagnostics.Debug.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::System::Diagnostics::Debug
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_RtlAddFunctionTable(win32::Windows::Win32::System::SystemServices::IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY* FunctionTable, uint32_t EntryCount, size_t BaseAddress) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FunctionTable);
        ORBIT_TRACK_PARAM(EntryCount);
        ORBIT_TRACK_PARAM(BaseAddress);

        auto win32_impl_result = g_api_table.RtlAddFunctionTable(FunctionTable, EntryCount, BaseAddress);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_RtlDeleteFunctionTable(win32::Windows::Win32::System::SystemServices::IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY* FunctionTable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FunctionTable);

        auto win32_impl_result = g_api_table.RtlDeleteFunctionTable(FunctionTable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtlAddGrowableFunctionTable(void** DynamicTable, win32::Windows::Win32::System::SystemServices::IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY* FunctionTable, uint32_t EntryCount, uint32_t MaximumEntryCount, size_t RangeBase, size_t RangeEnd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DynamicTable);
        ORBIT_TRACK_PARAM(FunctionTable);
        ORBIT_TRACK_PARAM(EntryCount);
        ORBIT_TRACK_PARAM(MaximumEntryCount);
        ORBIT_TRACK_PARAM(RangeBase);
        ORBIT_TRACK_PARAM(RangeEnd);

        auto win32_impl_result = g_api_table.RtlAddGrowableFunctionTable(DynamicTable, FunctionTable, EntryCount, MaximumEntryCount, RangeBase, RangeEnd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::SystemServices::IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY* __stdcall ORBIT_IMPL_RtlLookupFunctionEntry(size_t ControlPc, size_t* ImageBase, win32::Windows::Win32::System::SystemServices::UNWIND_HISTORY_TABLE* HistoryTable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ControlPc);
        ORBIT_TRACK_PARAM(ImageBase);
        ORBIT_TRACK_PARAM(HistoryTable);

        auto win32_impl_result = g_api_table.RtlLookupFunctionEntry(ControlPc, ImageBase, HistoryTable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Kernel::EXCEPTION_ROUTINE* __stdcall ORBIT_IMPL_RtlVirtualUnwind(win32::Windows::Win32::System::Diagnostics::Debug::RTL_VIRTUAL_UNWIND_HANDLER_TYPE HandlerType, size_t ImageBase, size_t ControlPc, win32::Windows::Win32::System::SystemServices::IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY* FunctionEntry, win32::Windows::Win32::System::Diagnostics::Debug::CONTEXT* ContextRecord, void** HandlerData, size_t* EstablisherFrame, win32::Windows::Win32::System::SystemServices::KNONVOLATILE_CONTEXT_POINTERS_ARM64* ContextPointers) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HandlerType);
        ORBIT_TRACK_PARAM(ImageBase);
        ORBIT_TRACK_PARAM(ControlPc);
        ORBIT_TRACK_PARAM(FunctionEntry);
        ORBIT_TRACK_PARAM(ContextRecord);
        ORBIT_TRACK_PARAM(HandlerData);
        ORBIT_TRACK_PARAM(EstablisherFrame);
        ORBIT_TRACK_PARAM(ContextPointers);

        auto win32_impl_result = g_api_table.RtlVirtualUnwind(HandlerType, ImageBase, ControlPc, FunctionEntry, ContextRecord, HandlerData, EstablisherFrame, ContextPointers);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DebugConnect(win32::Windows::Win32::Foundation::PSTR RemoteOptions, ::win32::guid* InterfaceId, void** Interface) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RemoteOptions);
        ORBIT_TRACK_PARAM(InterfaceId);
        ORBIT_TRACK_PARAM(Interface);

        auto win32_impl_result = g_api_table.DebugConnect(RemoteOptions, InterfaceId, Interface);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DebugConnectWide(win32::Windows::Win32::Foundation::PWSTR RemoteOptions, ::win32::guid* InterfaceId, void** Interface) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RemoteOptions);
        ORBIT_TRACK_PARAM(InterfaceId);
        ORBIT_TRACK_PARAM(Interface);

        auto win32_impl_result = g_api_table.DebugConnectWide(RemoteOptions, InterfaceId, Interface);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DebugCreate(::win32::guid* InterfaceId, void** Interface) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InterfaceId);
        ORBIT_TRACK_PARAM(Interface);

        auto win32_impl_result = g_api_table.DebugCreate(InterfaceId, Interface);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DebugCreateEx(::win32::guid* InterfaceId, uint32_t DbgEngOptions, void** Interface) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InterfaceId);
        ORBIT_TRACK_PARAM(DbgEngOptions);
        ORBIT_TRACK_PARAM(Interface);

        auto win32_impl_result = g_api_table.DebugCreateEx(InterfaceId, DbgEngOptions, Interface);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateDataModelManager(win32::Windows::Win32::System::Diagnostics::Debug::IDebugHost* debugHost, win32::Windows::Win32::System::Diagnostics::Debug::IDataModelManager** manager) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(debugHost);
        ORBIT_TRACK_PARAM(manager);

        auto win32_impl_result = g_api_table.CreateDataModelManager(debugHost, manager);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ReadProcessMemory(win32::Windows::Win32::Foundation::HANDLE hProcess, void* lpBaseAddress, void* lpBuffer, size_t nSize, size_t* lpNumberOfBytesRead) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(lpBaseAddress);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(nSize);
        ORBIT_TRACK_PARAM(lpNumberOfBytesRead);

        auto win32_impl_result = g_api_table.ReadProcessMemory(hProcess, lpBaseAddress, lpBuffer, nSize, lpNumberOfBytesRead);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WriteProcessMemory(win32::Windows::Win32::Foundation::HANDLE hProcess, void* lpBaseAddress, void* lpBuffer, size_t nSize, size_t* lpNumberOfBytesWritten) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(lpBaseAddress);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(nSize);
        ORBIT_TRACK_PARAM(lpNumberOfBytesWritten);

        auto win32_impl_result = g_api_table.WriteProcessMemory(hProcess, lpBaseAddress, lpBuffer, nSize, lpNumberOfBytesWritten);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetThreadContext(win32::Windows::Win32::Foundation::HANDLE hThread, win32::Windows::Win32::System::Diagnostics::Debug::CONTEXT* lpContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hThread);
        ORBIT_TRACK_PARAM(lpContext);

        auto win32_impl_result = g_api_table.GetThreadContext(hThread, lpContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetThreadContext(win32::Windows::Win32::Foundation::HANDLE hThread, win32::Windows::Win32::System::Diagnostics::Debug::CONTEXT* lpContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hThread);
        ORBIT_TRACK_PARAM(lpContext);

        auto win32_impl_result = g_api_table.SetThreadContext(hThread, lpContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_FlushInstructionCache(win32::Windows::Win32::Foundation::HANDLE hProcess, void* lpBaseAddress, size_t dwSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(lpBaseAddress);
        ORBIT_TRACK_PARAM(dwSize);

        auto win32_impl_result = g_api_table.FlushInstructionCache(hProcess, lpBaseAddress, dwSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_Wow64GetThreadContext(win32::Windows::Win32::Foundation::HANDLE hThread, win32::Windows::Win32::System::Diagnostics::Debug::WOW64_CONTEXT* lpContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hThread);
        ORBIT_TRACK_PARAM(lpContext);

        auto win32_impl_result = g_api_table.Wow64GetThreadContext(hThread, lpContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_Wow64SetThreadContext(win32::Windows::Win32::Foundation::HANDLE hThread, win32::Windows::Win32::System::Diagnostics::Debug::WOW64_CONTEXT* lpContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hThread);
        ORBIT_TRACK_PARAM(lpContext);

        auto win32_impl_result = g_api_table.Wow64SetThreadContext(hThread, lpContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint16_t __stdcall ORBIT_IMPL_RtlCaptureStackBackTrace(uint32_t FramesToSkip, uint32_t FramesToCapture, void** BackTrace, uint32_t* BackTraceHash) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FramesToSkip);
        ORBIT_TRACK_PARAM(FramesToCapture);
        ORBIT_TRACK_PARAM(BackTrace);
        ORBIT_TRACK_PARAM(BackTraceHash);

        auto win32_impl_result = g_api_table.RtlCaptureStackBackTrace(FramesToSkip, FramesToCapture, BackTrace, BackTraceHash);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RtlCaptureContext(win32::Windows::Win32::System::Diagnostics::Debug::CONTEXT* ContextRecord) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ContextRecord);

        g_api_table.RtlCaptureContext(ContextRecord);
        
    }

    void __stdcall ORBIT_IMPL_RtlCaptureContext2(win32::Windows::Win32::System::Diagnostics::Debug::CONTEXT* ContextRecord) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ContextRecord);

        g_api_table.RtlCaptureContext2(ContextRecord);
        
    }

    void __stdcall ORBIT_IMPL_RtlUnwind(void* TargetFrame, void* TargetIp, win32::Windows::Win32::System::Diagnostics::Debug::EXCEPTION_RECORD* ExceptionRecord, void* ReturnValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TargetFrame);
        ORBIT_TRACK_PARAM(TargetIp);
        ORBIT_TRACK_PARAM(ExceptionRecord);
        ORBIT_TRACK_PARAM(ReturnValue);

        g_api_table.RtlUnwind(TargetFrame, TargetIp, ExceptionRecord, ReturnValue);
        
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_RtlAddFunctionTable(win32::Windows::Win32::System::SystemServices::IMAGE_RUNTIME_FUNCTION_ENTRY* FunctionTable, uint32_t EntryCount, uint64_t BaseAddress) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FunctionTable);
        ORBIT_TRACK_PARAM(EntryCount);
        ORBIT_TRACK_PARAM(BaseAddress);

        auto win32_impl_result = g_api_table.RtlAddFunctionTable(FunctionTable, EntryCount, BaseAddress);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_RtlDeleteFunctionTable(win32::Windows::Win32::System::SystemServices::IMAGE_RUNTIME_FUNCTION_ENTRY* FunctionTable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FunctionTable);

        auto win32_impl_result = g_api_table.RtlDeleteFunctionTable(FunctionTable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_RtlInstallFunctionTableCallback(uint64_t TableIdentifier, uint64_t BaseAddress, uint32_t Length, win32::Windows::Win32::System::SystemServices::PGET_RUNTIME_FUNCTION_CALLBACK* Callback, void* Context, win32::Windows::Win32::Foundation::PWSTR OutOfProcessCallbackDll) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TableIdentifier);
        ORBIT_TRACK_PARAM(BaseAddress);
        ORBIT_TRACK_PARAM(Length);
        ORBIT_TRACK_PARAM(Callback);
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(OutOfProcessCallbackDll);

        auto win32_impl_result = g_api_table.RtlInstallFunctionTableCallback(TableIdentifier, BaseAddress, Length, Callback, Context, OutOfProcessCallbackDll);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtlAddGrowableFunctionTable(void** DynamicTable, win32::Windows::Win32::System::SystemServices::IMAGE_RUNTIME_FUNCTION_ENTRY* FunctionTable, uint32_t EntryCount, uint32_t MaximumEntryCount, size_t RangeBase, size_t RangeEnd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DynamicTable);
        ORBIT_TRACK_PARAM(FunctionTable);
        ORBIT_TRACK_PARAM(EntryCount);
        ORBIT_TRACK_PARAM(MaximumEntryCount);
        ORBIT_TRACK_PARAM(RangeBase);
        ORBIT_TRACK_PARAM(RangeEnd);

        auto win32_impl_result = g_api_table.RtlAddGrowableFunctionTable(DynamicTable, FunctionTable, EntryCount, MaximumEntryCount, RangeBase, RangeEnd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RtlGrowFunctionTable(void* DynamicTable, uint32_t NewEntryCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DynamicTable);
        ORBIT_TRACK_PARAM(NewEntryCount);

        g_api_table.RtlGrowFunctionTable(DynamicTable, NewEntryCount);
        
    }

    void __stdcall ORBIT_IMPL_RtlDeleteGrowableFunctionTable(void* DynamicTable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DynamicTable);

        g_api_table.RtlDeleteGrowableFunctionTable(DynamicTable);
        
    }

    win32::Windows::Win32::System::SystemServices::IMAGE_RUNTIME_FUNCTION_ENTRY* __stdcall ORBIT_IMPL_RtlLookupFunctionEntry(uint64_t ControlPc, uint64_t* ImageBase, win32::Windows::Win32::System::SystemServices::UNWIND_HISTORY_TABLE* HistoryTable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ControlPc);
        ORBIT_TRACK_PARAM(ImageBase);
        ORBIT_TRACK_PARAM(HistoryTable);

        auto win32_impl_result = g_api_table.RtlLookupFunctionEntry(ControlPc, ImageBase, HistoryTable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RtlRestoreContext(win32::Windows::Win32::System::Diagnostics::Debug::CONTEXT* ContextRecord, win32::Windows::Win32::System::Diagnostics::Debug::EXCEPTION_RECORD* ExceptionRecord) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ContextRecord);
        ORBIT_TRACK_PARAM(ExceptionRecord);

        g_api_table.RtlRestoreContext(ContextRecord, ExceptionRecord);
        
    }

    void __stdcall ORBIT_IMPL_RtlUnwindEx(void* TargetFrame, void* TargetIp, win32::Windows::Win32::System::Diagnostics::Debug::EXCEPTION_RECORD* ExceptionRecord, void* ReturnValue, win32::Windows::Win32::System::Diagnostics::Debug::CONTEXT* ContextRecord, win32::Windows::Win32::System::SystemServices::UNWIND_HISTORY_TABLE* HistoryTable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TargetFrame);
        ORBIT_TRACK_PARAM(TargetIp);
        ORBIT_TRACK_PARAM(ExceptionRecord);
        ORBIT_TRACK_PARAM(ReturnValue);
        ORBIT_TRACK_PARAM(ContextRecord);
        ORBIT_TRACK_PARAM(HistoryTable);

        g_api_table.RtlUnwindEx(TargetFrame, TargetIp, ExceptionRecord, ReturnValue, ContextRecord, HistoryTable);
        
    }

    win32::Windows::Win32::System::Kernel::EXCEPTION_ROUTINE* __stdcall ORBIT_IMPL_RtlVirtualUnwind(win32::Windows::Win32::System::Diagnostics::Debug::RTL_VIRTUAL_UNWIND_HANDLER_TYPE HandlerType, uint64_t ImageBase, uint64_t ControlPc, win32::Windows::Win32::System::SystemServices::IMAGE_RUNTIME_FUNCTION_ENTRY* FunctionEntry, win32::Windows::Win32::System::Diagnostics::Debug::CONTEXT* ContextRecord, void** HandlerData, uint64_t* EstablisherFrame, win32::Windows::Win32::System::SystemServices::KNONVOLATILE_CONTEXT_POINTERS* ContextPointers) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HandlerType);
        ORBIT_TRACK_PARAM(ImageBase);
        ORBIT_TRACK_PARAM(ControlPc);
        ORBIT_TRACK_PARAM(FunctionEntry);
        ORBIT_TRACK_PARAM(ContextRecord);
        ORBIT_TRACK_PARAM(HandlerData);
        ORBIT_TRACK_PARAM(EstablisherFrame);
        ORBIT_TRACK_PARAM(ContextPointers);

        auto win32_impl_result = g_api_table.RtlVirtualUnwind(HandlerType, ImageBase, ControlPc, FunctionEntry, ContextRecord, HandlerData, EstablisherFrame, ContextPointers);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_RtlPcToFileHeader(void* PcValue, void** BaseOfImage) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PcValue);
        ORBIT_TRACK_PARAM(BaseOfImage);

        auto win32_impl_result = g_api_table.RtlPcToFileHeader(PcValue, BaseOfImage);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsDebuggerPresent() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.IsDebuggerPresent();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_DebugBreak() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        g_api_table.DebugBreak();
        
    }

    void __stdcall ORBIT_IMPL_OutputDebugStringA(win32::Windows::Win32::Foundation::PSTR lpOutputString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpOutputString);

        g_api_table.OutputDebugStringA(lpOutputString);
        
    }

    void __stdcall ORBIT_IMPL_OutputDebugStringW(win32::Windows::Win32::Foundation::PWSTR lpOutputString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpOutputString);

        g_api_table.OutputDebugStringW(lpOutputString);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ContinueDebugEvent(uint32_t dwProcessId, uint32_t dwThreadId, uint32_t dwContinueStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwProcessId);
        ORBIT_TRACK_PARAM(dwThreadId);
        ORBIT_TRACK_PARAM(dwContinueStatus);

        auto win32_impl_result = g_api_table.ContinueDebugEvent(dwProcessId, dwThreadId, dwContinueStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WaitForDebugEvent(win32::Windows::Win32::System::Diagnostics::Debug::DEBUG_EVENT* lpDebugEvent, uint32_t dwMilliseconds) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpDebugEvent);
        ORBIT_TRACK_PARAM(dwMilliseconds);

        auto win32_impl_result = g_api_table.WaitForDebugEvent(lpDebugEvent, dwMilliseconds);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DebugActiveProcess(uint32_t dwProcessId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwProcessId);

        auto win32_impl_result = g_api_table.DebugActiveProcess(dwProcessId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DebugActiveProcessStop(uint32_t dwProcessId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwProcessId);

        auto win32_impl_result = g_api_table.DebugActiveProcessStop(dwProcessId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CheckRemoteDebuggerPresent(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::BOOL* pbDebuggerPresent) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(pbDebuggerPresent);

        auto win32_impl_result = g_api_table.CheckRemoteDebuggerPresent(hProcess, pbDebuggerPresent);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WaitForDebugEventEx(win32::Windows::Win32::System::Diagnostics::Debug::DEBUG_EVENT* lpDebugEvent, uint32_t dwMilliseconds) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpDebugEvent);
        ORBIT_TRACK_PARAM(dwMilliseconds);

        auto win32_impl_result = g_api_table.WaitForDebugEventEx(lpDebugEvent, dwMilliseconds);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_EncodePointer(void* Ptr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Ptr);

        auto win32_impl_result = g_api_table.EncodePointer(Ptr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_DecodePointer(void* Ptr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Ptr);

        auto win32_impl_result = g_api_table.DecodePointer(Ptr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_EncodeSystemPointer(void* Ptr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Ptr);

        auto win32_impl_result = g_api_table.EncodeSystemPointer(Ptr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_DecodeSystemPointer(void* Ptr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Ptr);

        auto win32_impl_result = g_api_table.DecodeSystemPointer(Ptr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_EncodeRemotePointer(win32::Windows::Win32::Foundation::HANDLE ProcessHandle, void* Ptr, void** EncodedPtr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ProcessHandle);
        ORBIT_TRACK_PARAM(Ptr);
        ORBIT_TRACK_PARAM(EncodedPtr);

        auto win32_impl_result = g_api_table.EncodeRemotePointer(ProcessHandle, Ptr, EncodedPtr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DecodeRemotePointer(win32::Windows::Win32::Foundation::HANDLE ProcessHandle, void* Ptr, void** DecodedPtr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ProcessHandle);
        ORBIT_TRACK_PARAM(Ptr);
        ORBIT_TRACK_PARAM(DecodedPtr);

        auto win32_impl_result = g_api_table.DecodeRemotePointer(ProcessHandle, Ptr, DecodedPtr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_Beep(uint32_t dwFreq, uint32_t dwDuration) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwFreq);
        ORBIT_TRACK_PARAM(dwDuration);

        auto win32_impl_result = g_api_table.Beep(dwFreq, dwDuration);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RaiseException(uint32_t dwExceptionCode, uint32_t dwExceptionFlags, uint32_t nNumberOfArguments, size_t* lpArguments) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwExceptionCode);
        ORBIT_TRACK_PARAM(dwExceptionFlags);
        ORBIT_TRACK_PARAM(nNumberOfArguments);
        ORBIT_TRACK_PARAM(lpArguments);

        g_api_table.RaiseException(dwExceptionCode, dwExceptionFlags, nNumberOfArguments, lpArguments);
        
    }

    int32_t __stdcall ORBIT_IMPL_UnhandledExceptionFilter(win32::Windows::Win32::System::Diagnostics::Debug::EXCEPTION_POINTERS* ExceptionInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ExceptionInfo);

        auto win32_impl_result = g_api_table.UnhandledExceptionFilter(ExceptionInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Diagnostics::Debug::LPTOP_LEVEL_EXCEPTION_FILTER* __stdcall ORBIT_IMPL_SetUnhandledExceptionFilter(win32::Windows::Win32::System::Diagnostics::Debug::LPTOP_LEVEL_EXCEPTION_FILTER* lpTopLevelExceptionFilter) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpTopLevelExceptionFilter);

        auto win32_impl_result = g_api_table.SetUnhandledExceptionFilter(lpTopLevelExceptionFilter);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetErrorMode() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.GetErrorMode();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetErrorMode(win32::Windows::Win32::System::Diagnostics::Debug::THREAD_ERROR_MODE uMode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(uMode);

        auto win32_impl_result = g_api_table.SetErrorMode(uMode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_AddVectoredExceptionHandler(uint32_t First, win32::Windows::Win32::System::Diagnostics::Debug::PVECTORED_EXCEPTION_HANDLER* Handler) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(First);
        ORBIT_TRACK_PARAM(Handler);

        auto win32_impl_result = g_api_table.AddVectoredExceptionHandler(First, Handler);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RemoveVectoredExceptionHandler(void* Handle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Handle);

        auto win32_impl_result = g_api_table.RemoveVectoredExceptionHandler(Handle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_AddVectoredContinueHandler(uint32_t First, win32::Windows::Win32::System::Diagnostics::Debug::PVECTORED_EXCEPTION_HANDLER* Handler) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(First);
        ORBIT_TRACK_PARAM(Handler);

        auto win32_impl_result = g_api_table.AddVectoredContinueHandler(First, Handler);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RemoveVectoredContinueHandler(void* Handle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Handle);

        auto win32_impl_result = g_api_table.RemoveVectoredContinueHandler(Handle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RaiseFailFastException(win32::Windows::Win32::System::Diagnostics::Debug::EXCEPTION_RECORD* pExceptionRecord, win32::Windows::Win32::System::Diagnostics::Debug::CONTEXT* pContextRecord, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pExceptionRecord);
        ORBIT_TRACK_PARAM(pContextRecord);
        ORBIT_TRACK_PARAM(dwFlags);

        g_api_table.RaiseFailFastException(pExceptionRecord, pContextRecord, dwFlags);
        
    }

    void __stdcall ORBIT_IMPL_FatalAppExitA(uint32_t uAction, win32::Windows::Win32::Foundation::PSTR lpMessageText) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(uAction);
        ORBIT_TRACK_PARAM(lpMessageText);

        g_api_table.FatalAppExitA(uAction, lpMessageText);
        
    }

    void __stdcall ORBIT_IMPL_FatalAppExitW(uint32_t uAction, win32::Windows::Win32::Foundation::PWSTR lpMessageText) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(uAction);
        ORBIT_TRACK_PARAM(lpMessageText);

        g_api_table.FatalAppExitW(uAction, lpMessageText);
        
    }

    uint32_t __stdcall ORBIT_IMPL_GetThreadErrorMode() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.GetThreadErrorMode();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetThreadErrorMode(win32::Windows::Win32::System::Diagnostics::Debug::THREAD_ERROR_MODE dwNewMode, win32::Windows::Win32::System::Diagnostics::Debug::THREAD_ERROR_MODE* lpOldMode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwNewMode);
        ORBIT_TRACK_PARAM(lpOldMode);

        auto win32_impl_result = g_api_table.SetThreadErrorMode(dwNewMode, lpOldMode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_TerminateProcessOnMemoryExhaustion(size_t FailedAllocationSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FailedAllocationSize);

        g_api_table.TerminateProcessOnMemoryExhaustion(FailedAllocationSize);
        
    }

    void* __stdcall ORBIT_IMPL_OpenThreadWaitChainSession(win32::Windows::Win32::System::Diagnostics::Debug::OPEN_THREAD_WAIT_CHAIN_SESSION_FLAGS Flags, win32::Windows::Win32::System::Diagnostics::Debug::PWAITCHAINCALLBACK* callback) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(callback);

        auto win32_impl_result = g_api_table.OpenThreadWaitChainSession(Flags, callback);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_CloseThreadWaitChainSession(void* WctHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(WctHandle);

        g_api_table.CloseThreadWaitChainSession(WctHandle);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetThreadWaitChain(void* WctHandle, size_t Context, win32::Windows::Win32::System::Diagnostics::Debug::WAIT_CHAIN_THREAD_OPTIONS Flags, uint32_t ThreadId, uint32_t* NodeCount, win32::Windows::Win32::System::Diagnostics::Debug::WAITCHAIN_NODE_INFO* NodeInfoArray, int32_t* IsCycle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(WctHandle);
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(ThreadId);
        ORBIT_TRACK_PARAM(NodeCount);
        ORBIT_TRACK_PARAM(NodeInfoArray);
        ORBIT_TRACK_PARAM(IsCycle);

        auto win32_impl_result = g_api_table.GetThreadWaitChain(WctHandle, Context, Flags, ThreadId, NodeCount, NodeInfoArray, IsCycle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RegisterWaitChainCOMCallback(win32::Windows::Win32::System::Diagnostics::Debug::PCOGETCALLSTATE* CallStateCallback, win32::Windows::Win32::System::Diagnostics::Debug::PCOGETACTIVATIONSTATE* ActivationStateCallback) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CallStateCallback);
        ORBIT_TRACK_PARAM(ActivationStateCallback);

        g_api_table.RegisterWaitChainCOMCallback(CallStateCallback, ActivationStateCallback);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_MiniDumpWriteDump(win32::Windows::Win32::Foundation::HANDLE hProcess, uint32_t ProcessId, win32::Windows::Win32::Foundation::HANDLE hFile, win32::Windows::Win32::System::Diagnostics::Debug::MINIDUMP_TYPE DumpType, win32::Windows::Win32::System::Diagnostics::Debug::MINIDUMP_EXCEPTION_INFORMATION* ExceptionParam, win32::Windows::Win32::System::Diagnostics::Debug::MINIDUMP_USER_STREAM_INFORMATION* UserStreamParam, win32::Windows::Win32::System::Diagnostics::Debug::MINIDUMP_CALLBACK_INFORMATION* CallbackParam) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(ProcessId);
        ORBIT_TRACK_PARAM(hFile);
        ORBIT_TRACK_PARAM(DumpType);
        ORBIT_TRACK_PARAM(ExceptionParam);
        ORBIT_TRACK_PARAM(UserStreamParam);
        ORBIT_TRACK_PARAM(CallbackParam);

        auto win32_impl_result = g_api_table.MiniDumpWriteDump(hProcess, ProcessId, hFile, DumpType, ExceptionParam, UserStreamParam, CallbackParam);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_MiniDumpReadDumpStream(void* BaseOfDump, uint32_t StreamNumber, win32::Windows::Win32::System::Diagnostics::Debug::MINIDUMP_DIRECTORY** Dir, void** StreamPointer, uint32_t* StreamSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(BaseOfDump);
        ORBIT_TRACK_PARAM(StreamNumber);
        ORBIT_TRACK_PARAM(Dir);
        ORBIT_TRACK_PARAM(StreamPointer);
        ORBIT_TRACK_PARAM(StreamSize);

        auto win32_impl_result = g_api_table.MiniDumpReadDumpStream(BaseOfDump, StreamNumber, Dir, StreamPointer, StreamSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_BindImage(win32::Windows::Win32::Foundation::PSTR ImageName, win32::Windows::Win32::Foundation::PSTR DllPath, win32::Windows::Win32::Foundation::PSTR SymbolPath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ImageName);
        ORBIT_TRACK_PARAM(DllPath);
        ORBIT_TRACK_PARAM(SymbolPath);

        auto win32_impl_result = g_api_table.BindImage(ImageName, DllPath, SymbolPath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_BindImageEx(uint32_t Flags, win32::Windows::Win32::Foundation::PSTR ImageName, win32::Windows::Win32::Foundation::PSTR DllPath, win32::Windows::Win32::Foundation::PSTR SymbolPath, win32::Windows::Win32::System::Diagnostics::Debug::PIMAGEHLP_STATUS_ROUTINE* StatusRoutine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(ImageName);
        ORBIT_TRACK_PARAM(DllPath);
        ORBIT_TRACK_PARAM(SymbolPath);
        ORBIT_TRACK_PARAM(StatusRoutine);

        auto win32_impl_result = g_api_table.BindImageEx(Flags, ImageName, DllPath, SymbolPath, StatusRoutine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ReBaseImage(win32::Windows::Win32::Foundation::PSTR CurrentImageName, win32::Windows::Win32::Foundation::PSTR SymbolPath, win32::Windows::Win32::Foundation::BOOL fReBase, win32::Windows::Win32::Foundation::BOOL fRebaseSysfileOk, win32::Windows::Win32::Foundation::BOOL fGoingDown, uint32_t CheckImageSize, uint32_t* OldImageSize, size_t* OldImageBase, uint32_t* NewImageSize, size_t* NewImageBase, uint32_t TimeStamp) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CurrentImageName);
        ORBIT_TRACK_PARAM(SymbolPath);
        ORBIT_TRACK_PARAM(fReBase);
        ORBIT_TRACK_PARAM(fRebaseSysfileOk);
        ORBIT_TRACK_PARAM(fGoingDown);
        ORBIT_TRACK_PARAM(CheckImageSize);
        ORBIT_TRACK_PARAM(OldImageSize);
        ORBIT_TRACK_PARAM(OldImageBase);
        ORBIT_TRACK_PARAM(NewImageSize);
        ORBIT_TRACK_PARAM(NewImageBase);
        ORBIT_TRACK_PARAM(TimeStamp);

        auto win32_impl_result = g_api_table.ReBaseImage(CurrentImageName, SymbolPath, fReBase, fRebaseSysfileOk, fGoingDown, CheckImageSize, OldImageSize, OldImageBase, NewImageSize, NewImageBase, TimeStamp);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ReBaseImage64(win32::Windows::Win32::Foundation::PSTR CurrentImageName, win32::Windows::Win32::Foundation::PSTR SymbolPath, win32::Windows::Win32::Foundation::BOOL fReBase, win32::Windows::Win32::Foundation::BOOL fRebaseSysfileOk, win32::Windows::Win32::Foundation::BOOL fGoingDown, uint32_t CheckImageSize, uint32_t* OldImageSize, uint64_t* OldImageBase, uint32_t* NewImageSize, uint64_t* NewImageBase, uint32_t TimeStamp) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CurrentImageName);
        ORBIT_TRACK_PARAM(SymbolPath);
        ORBIT_TRACK_PARAM(fReBase);
        ORBIT_TRACK_PARAM(fRebaseSysfileOk);
        ORBIT_TRACK_PARAM(fGoingDown);
        ORBIT_TRACK_PARAM(CheckImageSize);
        ORBIT_TRACK_PARAM(OldImageSize);
        ORBIT_TRACK_PARAM(OldImageBase);
        ORBIT_TRACK_PARAM(NewImageSize);
        ORBIT_TRACK_PARAM(NewImageBase);
        ORBIT_TRACK_PARAM(TimeStamp);

        auto win32_impl_result = g_api_table.ReBaseImage64(CurrentImageName, SymbolPath, fReBase, fRebaseSysfileOk, fGoingDown, CheckImageSize, OldImageSize, OldImageBase, NewImageSize, NewImageBase, TimeStamp);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_NT_HEADERS64* __stdcall ORBIT_IMPL_CheckSumMappedFile(void* BaseAddress, uint32_t FileLength, uint32_t* HeaderSum, uint32_t* CheckSum) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(BaseAddress);
        ORBIT_TRACK_PARAM(FileLength);
        ORBIT_TRACK_PARAM(HeaderSum);
        ORBIT_TRACK_PARAM(CheckSum);

        auto win32_impl_result = g_api_table.CheckSumMappedFile(BaseAddress, FileLength, HeaderSum, CheckSum);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MapFileAndCheckSumA(win32::Windows::Win32::Foundation::PSTR Filename, uint32_t* HeaderSum, uint32_t* CheckSum) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Filename);
        ORBIT_TRACK_PARAM(HeaderSum);
        ORBIT_TRACK_PARAM(CheckSum);

        auto win32_impl_result = g_api_table.MapFileAndCheckSumA(Filename, HeaderSum, CheckSum);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MapFileAndCheckSumW(win32::Windows::Win32::Foundation::PWSTR Filename, uint32_t* HeaderSum, uint32_t* CheckSum) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Filename);
        ORBIT_TRACK_PARAM(HeaderSum);
        ORBIT_TRACK_PARAM(CheckSum);

        auto win32_impl_result = g_api_table.MapFileAndCheckSumW(Filename, HeaderSum, CheckSum);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetImageConfigInformation(win32::Windows::Win32::System::Diagnostics::Debug::LOADED_IMAGE* LoadedImage, win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_LOAD_CONFIG_DIRECTORY64* ImageConfigInformation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LoadedImage);
        ORBIT_TRACK_PARAM(ImageConfigInformation);

        auto win32_impl_result = g_api_table.GetImageConfigInformation(LoadedImage, ImageConfigInformation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetImageUnusedHeaderBytes(win32::Windows::Win32::System::Diagnostics::Debug::LOADED_IMAGE* LoadedImage, uint32_t* SizeUnusedHeaderBytes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LoadedImage);
        ORBIT_TRACK_PARAM(SizeUnusedHeaderBytes);

        auto win32_impl_result = g_api_table.GetImageUnusedHeaderBytes(LoadedImage, SizeUnusedHeaderBytes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetImageConfigInformation(win32::Windows::Win32::System::Diagnostics::Debug::LOADED_IMAGE* LoadedImage, win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_LOAD_CONFIG_DIRECTORY64* ImageConfigInformation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LoadedImage);
        ORBIT_TRACK_PARAM(ImageConfigInformation);

        auto win32_impl_result = g_api_table.SetImageConfigInformation(LoadedImage, ImageConfigInformation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ImageGetDigestStream(win32::Windows::Win32::Foundation::HANDLE FileHandle, uint32_t DigestLevel, win32::Windows::Win32::System::Diagnostics::Debug::DIGEST_FUNCTION* DigestFunction, void* DigestHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileHandle);
        ORBIT_TRACK_PARAM(DigestLevel);
        ORBIT_TRACK_PARAM(DigestFunction);
        ORBIT_TRACK_PARAM(DigestHandle);

        auto win32_impl_result = g_api_table.ImageGetDigestStream(FileHandle, DigestLevel, DigestFunction, DigestHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ImageAddCertificate(win32::Windows::Win32::Foundation::HANDLE FileHandle, win32::Windows::Win32::Security::WinTrust::WIN_CERTIFICATE* Certificate, uint32_t* Index) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileHandle);
        ORBIT_TRACK_PARAM(Certificate);
        ORBIT_TRACK_PARAM(Index);

        auto win32_impl_result = g_api_table.ImageAddCertificate(FileHandle, Certificate, Index);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ImageRemoveCertificate(win32::Windows::Win32::Foundation::HANDLE FileHandle, uint32_t Index) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileHandle);
        ORBIT_TRACK_PARAM(Index);

        auto win32_impl_result = g_api_table.ImageRemoveCertificate(FileHandle, Index);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ImageEnumerateCertificates(win32::Windows::Win32::Foundation::HANDLE FileHandle, uint16_t TypeFilter, uint32_t* CertificateCount, uint32_t* Indices, uint32_t IndexCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileHandle);
        ORBIT_TRACK_PARAM(TypeFilter);
        ORBIT_TRACK_PARAM(CertificateCount);
        ORBIT_TRACK_PARAM(Indices);
        ORBIT_TRACK_PARAM(IndexCount);

        auto win32_impl_result = g_api_table.ImageEnumerateCertificates(FileHandle, TypeFilter, CertificateCount, Indices, IndexCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ImageGetCertificateData(win32::Windows::Win32::Foundation::HANDLE FileHandle, uint32_t CertificateIndex, win32::Windows::Win32::Security::WinTrust::WIN_CERTIFICATE* Certificate, uint32_t* RequiredLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileHandle);
        ORBIT_TRACK_PARAM(CertificateIndex);
        ORBIT_TRACK_PARAM(Certificate);
        ORBIT_TRACK_PARAM(RequiredLength);

        auto win32_impl_result = g_api_table.ImageGetCertificateData(FileHandle, CertificateIndex, Certificate, RequiredLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ImageGetCertificateHeader(win32::Windows::Win32::Foundation::HANDLE FileHandle, uint32_t CertificateIndex, win32::Windows::Win32::Security::WinTrust::WIN_CERTIFICATE* Certificateheader) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileHandle);
        ORBIT_TRACK_PARAM(CertificateIndex);
        ORBIT_TRACK_PARAM(Certificateheader);

        auto win32_impl_result = g_api_table.ImageGetCertificateHeader(FileHandle, CertificateIndex, Certificateheader);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Diagnostics::Debug::LOADED_IMAGE* __stdcall ORBIT_IMPL_ImageLoad(win32::Windows::Win32::Foundation::PSTR DllName, win32::Windows::Win32::Foundation::PSTR DllPath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DllName);
        ORBIT_TRACK_PARAM(DllPath);

        auto win32_impl_result = g_api_table.ImageLoad(DllName, DllPath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ImageUnload(win32::Windows::Win32::System::Diagnostics::Debug::LOADED_IMAGE* LoadedImage) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LoadedImage);

        auto win32_impl_result = g_api_table.ImageUnload(LoadedImage);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_MapAndLoad(win32::Windows::Win32::Foundation::PSTR ImageName, win32::Windows::Win32::Foundation::PSTR DllPath, win32::Windows::Win32::System::Diagnostics::Debug::LOADED_IMAGE* LoadedImage, win32::Windows::Win32::Foundation::BOOL DotDll, win32::Windows::Win32::Foundation::BOOL ReadOnly) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ImageName);
        ORBIT_TRACK_PARAM(DllPath);
        ORBIT_TRACK_PARAM(LoadedImage);
        ORBIT_TRACK_PARAM(DotDll);
        ORBIT_TRACK_PARAM(ReadOnly);

        auto win32_impl_result = g_api_table.MapAndLoad(ImageName, DllPath, LoadedImage, DotDll, ReadOnly);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UnMapAndLoad(win32::Windows::Win32::System::Diagnostics::Debug::LOADED_IMAGE* LoadedImage) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LoadedImage);

        auto win32_impl_result = g_api_table.UnMapAndLoad(LoadedImage);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_TouchFileTimes(win32::Windows::Win32::Foundation::HANDLE FileHandle, win32::Windows::Win32::Foundation::SYSTEMTIME* pSystemTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileHandle);
        ORBIT_TRACK_PARAM(pSystemTime);

        auto win32_impl_result = g_api_table.TouchFileTimes(FileHandle, pSystemTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UpdateDebugInfoFile(win32::Windows::Win32::Foundation::PSTR ImageFileName, win32::Windows::Win32::Foundation::PSTR SymbolPath, win32::Windows::Win32::Foundation::PSTR DebugFilePath, win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_NT_HEADERS32* NtHeaders) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ImageFileName);
        ORBIT_TRACK_PARAM(SymbolPath);
        ORBIT_TRACK_PARAM(DebugFilePath);
        ORBIT_TRACK_PARAM(NtHeaders);

        auto win32_impl_result = g_api_table.UpdateDebugInfoFile(ImageFileName, SymbolPath, DebugFilePath, NtHeaders);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UpdateDebugInfoFileEx(win32::Windows::Win32::Foundation::PSTR ImageFileName, win32::Windows::Win32::Foundation::PSTR SymbolPath, win32::Windows::Win32::Foundation::PSTR DebugFilePath, win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_NT_HEADERS32* NtHeaders, uint32_t OldCheckSum) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ImageFileName);
        ORBIT_TRACK_PARAM(SymbolPath);
        ORBIT_TRACK_PARAM(DebugFilePath);
        ORBIT_TRACK_PARAM(NtHeaders);
        ORBIT_TRACK_PARAM(OldCheckSum);

        auto win32_impl_result = g_api_table.UpdateDebugInfoFileEx(ImageFileName, SymbolPath, DebugFilePath, NtHeaders, OldCheckSum);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_SymFindDebugInfoFile(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR FileName, win32::Windows::Win32::Foundation::PSTR DebugFilePath, win32::Windows::Win32::System::Diagnostics::Debug::PFIND_DEBUG_FILE_CALLBACK* Callback, void* CallerData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(DebugFilePath);
        ORBIT_TRACK_PARAM(Callback);
        ORBIT_TRACK_PARAM(CallerData);

        auto win32_impl_result = g_api_table.SymFindDebugInfoFile(hProcess, FileName, DebugFilePath, Callback, CallerData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_SymFindDebugInfoFileW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PWSTR FileName, win32::Windows::Win32::Foundation::PWSTR DebugFilePath, win32::Windows::Win32::System::Diagnostics::Debug::PFIND_DEBUG_FILE_CALLBACKW* Callback, void* CallerData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(DebugFilePath);
        ORBIT_TRACK_PARAM(Callback);
        ORBIT_TRACK_PARAM(CallerData);

        auto win32_impl_result = g_api_table.SymFindDebugInfoFileW(hProcess, FileName, DebugFilePath, Callback, CallerData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_FindDebugInfoFile(win32::Windows::Win32::Foundation::PSTR FileName, win32::Windows::Win32::Foundation::PSTR SymbolPath, win32::Windows::Win32::Foundation::PSTR DebugFilePath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(SymbolPath);
        ORBIT_TRACK_PARAM(DebugFilePath);

        auto win32_impl_result = g_api_table.FindDebugInfoFile(FileName, SymbolPath, DebugFilePath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_FindDebugInfoFileEx(win32::Windows::Win32::Foundation::PSTR FileName, win32::Windows::Win32::Foundation::PSTR SymbolPath, win32::Windows::Win32::Foundation::PSTR DebugFilePath, win32::Windows::Win32::System::Diagnostics::Debug::PFIND_DEBUG_FILE_CALLBACK* Callback, void* CallerData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(SymbolPath);
        ORBIT_TRACK_PARAM(DebugFilePath);
        ORBIT_TRACK_PARAM(Callback);
        ORBIT_TRACK_PARAM(CallerData);

        auto win32_impl_result = g_api_table.FindDebugInfoFileEx(FileName, SymbolPath, DebugFilePath, Callback, CallerData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_FindDebugInfoFileExW(win32::Windows::Win32::Foundation::PWSTR FileName, win32::Windows::Win32::Foundation::PWSTR SymbolPath, win32::Windows::Win32::Foundation::PWSTR DebugFilePath, win32::Windows::Win32::System::Diagnostics::Debug::PFIND_DEBUG_FILE_CALLBACKW* Callback, void* CallerData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(SymbolPath);
        ORBIT_TRACK_PARAM(DebugFilePath);
        ORBIT_TRACK_PARAM(Callback);
        ORBIT_TRACK_PARAM(CallerData);

        auto win32_impl_result = g_api_table.FindDebugInfoFileExW(FileName, SymbolPath, DebugFilePath, Callback, CallerData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymFindFileInPath(win32::Windows::Win32::Foundation::HANDLE hprocess, win32::Windows::Win32::Foundation::PSTR SearchPathA, win32::Windows::Win32::Foundation::PSTR FileName, void* id, uint32_t two, uint32_t three, win32::Windows::Win32::System::Diagnostics::Debug::SYM_FIND_ID_OPTION flags, win32::Windows::Win32::Foundation::PSTR FoundFile, win32::Windows::Win32::System::Diagnostics::Debug::PFINDFILEINPATHCALLBACK* callback, void* context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hprocess);
        ORBIT_TRACK_PARAM(SearchPathA);
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(two);
        ORBIT_TRACK_PARAM(three);
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(FoundFile);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);

        auto win32_impl_result = g_api_table.SymFindFileInPath(hprocess, SearchPathA, FileName, id, two, three, flags, FoundFile, callback, context);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymFindFileInPathW(win32::Windows::Win32::Foundation::HANDLE hprocess, win32::Windows::Win32::Foundation::PWSTR SearchPathA, win32::Windows::Win32::Foundation::PWSTR FileName, void* id, uint32_t two, uint32_t three, win32::Windows::Win32::System::Diagnostics::Debug::SYM_FIND_ID_OPTION flags, win32::Windows::Win32::Foundation::PWSTR FoundFile, win32::Windows::Win32::System::Diagnostics::Debug::PFINDFILEINPATHCALLBACKW* callback, void* context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hprocess);
        ORBIT_TRACK_PARAM(SearchPathA);
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(two);
        ORBIT_TRACK_PARAM(three);
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(FoundFile);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);

        auto win32_impl_result = g_api_table.SymFindFileInPathW(hprocess, SearchPathA, FileName, id, two, three, flags, FoundFile, callback, context);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_SymFindExecutableImage(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR FileName, win32::Windows::Win32::Foundation::PSTR ImageFilePath, win32::Windows::Win32::System::Diagnostics::Debug::PFIND_EXE_FILE_CALLBACK* Callback, void* CallerData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(ImageFilePath);
        ORBIT_TRACK_PARAM(Callback);
        ORBIT_TRACK_PARAM(CallerData);

        auto win32_impl_result = g_api_table.SymFindExecutableImage(hProcess, FileName, ImageFilePath, Callback, CallerData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_SymFindExecutableImageW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PWSTR FileName, win32::Windows::Win32::Foundation::PWSTR ImageFilePath, win32::Windows::Win32::System::Diagnostics::Debug::PFIND_EXE_FILE_CALLBACKW* Callback, void* CallerData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(ImageFilePath);
        ORBIT_TRACK_PARAM(Callback);
        ORBIT_TRACK_PARAM(CallerData);

        auto win32_impl_result = g_api_table.SymFindExecutableImageW(hProcess, FileName, ImageFilePath, Callback, CallerData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_FindExecutableImage(win32::Windows::Win32::Foundation::PSTR FileName, win32::Windows::Win32::Foundation::PSTR SymbolPath, win32::Windows::Win32::Foundation::PSTR ImageFilePath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(SymbolPath);
        ORBIT_TRACK_PARAM(ImageFilePath);

        auto win32_impl_result = g_api_table.FindExecutableImage(FileName, SymbolPath, ImageFilePath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_FindExecutableImageEx(win32::Windows::Win32::Foundation::PSTR FileName, win32::Windows::Win32::Foundation::PSTR SymbolPath, win32::Windows::Win32::Foundation::PSTR ImageFilePath, win32::Windows::Win32::System::Diagnostics::Debug::PFIND_EXE_FILE_CALLBACK* Callback, void* CallerData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(SymbolPath);
        ORBIT_TRACK_PARAM(ImageFilePath);
        ORBIT_TRACK_PARAM(Callback);
        ORBIT_TRACK_PARAM(CallerData);

        auto win32_impl_result = g_api_table.FindExecutableImageEx(FileName, SymbolPath, ImageFilePath, Callback, CallerData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_FindExecutableImageExW(win32::Windows::Win32::Foundation::PWSTR FileName, win32::Windows::Win32::Foundation::PWSTR SymbolPath, win32::Windows::Win32::Foundation::PWSTR ImageFilePath, win32::Windows::Win32::System::Diagnostics::Debug::PFIND_EXE_FILE_CALLBACKW* Callback, void* CallerData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(SymbolPath);
        ORBIT_TRACK_PARAM(ImageFilePath);
        ORBIT_TRACK_PARAM(Callback);
        ORBIT_TRACK_PARAM(CallerData);

        auto win32_impl_result = g_api_table.FindExecutableImageExW(FileName, SymbolPath, ImageFilePath, Callback, CallerData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_NT_HEADERS64* __stdcall ORBIT_IMPL_ImageNtHeader(void* Base) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Base);

        auto win32_impl_result = g_api_table.ImageNtHeader(Base);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_ImageDirectoryEntryToDataEx(void* Base, win32::Windows::Win32::Foundation::BOOLEAN MappedAsImage, win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_DIRECTORY_ENTRY DirectoryEntry, uint32_t* Size, win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_SECTION_HEADER** FoundHeader) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(MappedAsImage);
        ORBIT_TRACK_PARAM(DirectoryEntry);
        ORBIT_TRACK_PARAM(Size);
        ORBIT_TRACK_PARAM(FoundHeader);

        auto win32_impl_result = g_api_table.ImageDirectoryEntryToDataEx(Base, MappedAsImage, DirectoryEntry, Size, FoundHeader);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_ImageDirectoryEntryToData(void* Base, win32::Windows::Win32::Foundation::BOOLEAN MappedAsImage, win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_DIRECTORY_ENTRY DirectoryEntry, uint32_t* Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(MappedAsImage);
        ORBIT_TRACK_PARAM(DirectoryEntry);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.ImageDirectoryEntryToData(Base, MappedAsImage, DirectoryEntry, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_SECTION_HEADER* __stdcall ORBIT_IMPL_ImageRvaToSection(win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_NT_HEADERS64* NtHeaders, void* Base, uint32_t Rva) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NtHeaders);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(Rva);

        auto win32_impl_result = g_api_table.ImageRvaToSection(NtHeaders, Base, Rva);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_ImageRvaToVa(win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_NT_HEADERS64* NtHeaders, void* Base, uint32_t Rva, win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_SECTION_HEADER** LastRvaSection) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NtHeaders);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(Rva);
        ORBIT_TRACK_PARAM(LastRvaSection);

        auto win32_impl_result = g_api_table.ImageRvaToVa(NtHeaders, Base, Rva, LastRvaSection);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SearchTreeForFile(win32::Windows::Win32::Foundation::PSTR RootPath, win32::Windows::Win32::Foundation::PSTR InputPathName, win32::Windows::Win32::Foundation::PSTR OutputPathBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RootPath);
        ORBIT_TRACK_PARAM(InputPathName);
        ORBIT_TRACK_PARAM(OutputPathBuffer);

        auto win32_impl_result = g_api_table.SearchTreeForFile(RootPath, InputPathName, OutputPathBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SearchTreeForFileW(win32::Windows::Win32::Foundation::PWSTR RootPath, win32::Windows::Win32::Foundation::PWSTR InputPathName, win32::Windows::Win32::Foundation::PWSTR OutputPathBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RootPath);
        ORBIT_TRACK_PARAM(InputPathName);
        ORBIT_TRACK_PARAM(OutputPathBuffer);

        auto win32_impl_result = g_api_table.SearchTreeForFileW(RootPath, InputPathName, OutputPathBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EnumDirTree(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR RootPath, win32::Windows::Win32::Foundation::PSTR InputPathName, win32::Windows::Win32::Foundation::PSTR OutputPathBuffer, win32::Windows::Win32::System::Diagnostics::Debug::PENUMDIRTREE_CALLBACK* cb, void* data) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(RootPath);
        ORBIT_TRACK_PARAM(InputPathName);
        ORBIT_TRACK_PARAM(OutputPathBuffer);
        ORBIT_TRACK_PARAM(cb);
        ORBIT_TRACK_PARAM(data);

        auto win32_impl_result = g_api_table.EnumDirTree(hProcess, RootPath, InputPathName, OutputPathBuffer, cb, data);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EnumDirTreeW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PWSTR RootPath, win32::Windows::Win32::Foundation::PWSTR InputPathName, win32::Windows::Win32::Foundation::PWSTR OutputPathBuffer, win32::Windows::Win32::System::Diagnostics::Debug::PENUMDIRTREE_CALLBACKW* cb, void* data) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(RootPath);
        ORBIT_TRACK_PARAM(InputPathName);
        ORBIT_TRACK_PARAM(OutputPathBuffer);
        ORBIT_TRACK_PARAM(cb);
        ORBIT_TRACK_PARAM(data);

        auto win32_impl_result = g_api_table.EnumDirTreeW(hProcess, RootPath, InputPathName, OutputPathBuffer, cb, data);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_MakeSureDirectoryPathExists(win32::Windows::Win32::Foundation::PSTR DirPath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DirPath);

        auto win32_impl_result = g_api_table.MakeSureDirectoryPathExists(DirPath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_UnDecorateSymbolName(win32::Windows::Win32::Foundation::PSTR name, win32::Windows::Win32::Foundation::PSTR outputString, uint32_t maxStringLength, uint32_t flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(name);
        ORBIT_TRACK_PARAM(outputString);
        ORBIT_TRACK_PARAM(maxStringLength);
        ORBIT_TRACK_PARAM(flags);

        auto win32_impl_result = g_api_table.UnDecorateSymbolName(name, outputString, maxStringLength, flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_UnDecorateSymbolNameW(win32::Windows::Win32::Foundation::PWSTR name, win32::Windows::Win32::Foundation::PWSTR outputString, uint32_t maxStringLength, uint32_t flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(name);
        ORBIT_TRACK_PARAM(outputString);
        ORBIT_TRACK_PARAM(maxStringLength);
        ORBIT_TRACK_PARAM(flags);

        auto win32_impl_result = g_api_table.UnDecorateSymbolNameW(name, outputString, maxStringLength, flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_StackWalk64(uint32_t MachineType, win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::HANDLE hThread, win32::Windows::Win32::System::Diagnostics::Debug::STACKFRAME64* StackFrame, void* ContextRecord, win32::Windows::Win32::System::Diagnostics::Debug::PREAD_PROCESS_MEMORY_ROUTINE64* ReadMemoryRoutine, win32::Windows::Win32::System::Diagnostics::Debug::PFUNCTION_TABLE_ACCESS_ROUTINE64* FunctionTableAccessRoutine, win32::Windows::Win32::System::Diagnostics::Debug::PGET_MODULE_BASE_ROUTINE64* GetModuleBaseRoutine, win32::Windows::Win32::System::Diagnostics::Debug::PTRANSLATE_ADDRESS_ROUTINE64* TranslateAddress) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(MachineType);
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(hThread);
        ORBIT_TRACK_PARAM(StackFrame);
        ORBIT_TRACK_PARAM(ContextRecord);
        ORBIT_TRACK_PARAM(ReadMemoryRoutine);
        ORBIT_TRACK_PARAM(FunctionTableAccessRoutine);
        ORBIT_TRACK_PARAM(GetModuleBaseRoutine);
        ORBIT_TRACK_PARAM(TranslateAddress);

        auto win32_impl_result = g_api_table.StackWalk64(MachineType, hProcess, hThread, StackFrame, ContextRecord, ReadMemoryRoutine, FunctionTableAccessRoutine, GetModuleBaseRoutine, TranslateAddress);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_StackWalkEx(uint32_t MachineType, win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::HANDLE hThread, win32::Windows::Win32::System::Diagnostics::Debug::STACKFRAME_EX* StackFrame, void* ContextRecord, win32::Windows::Win32::System::Diagnostics::Debug::PREAD_PROCESS_MEMORY_ROUTINE64* ReadMemoryRoutine, win32::Windows::Win32::System::Diagnostics::Debug::PFUNCTION_TABLE_ACCESS_ROUTINE64* FunctionTableAccessRoutine, win32::Windows::Win32::System::Diagnostics::Debug::PGET_MODULE_BASE_ROUTINE64* GetModuleBaseRoutine, win32::Windows::Win32::System::Diagnostics::Debug::PTRANSLATE_ADDRESS_ROUTINE64* TranslateAddress, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(MachineType);
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(hThread);
        ORBIT_TRACK_PARAM(StackFrame);
        ORBIT_TRACK_PARAM(ContextRecord);
        ORBIT_TRACK_PARAM(ReadMemoryRoutine);
        ORBIT_TRACK_PARAM(FunctionTableAccessRoutine);
        ORBIT_TRACK_PARAM(GetModuleBaseRoutine);
        ORBIT_TRACK_PARAM(TranslateAddress);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.StackWalkEx(MachineType, hProcess, hThread, StackFrame, ContextRecord, ReadMemoryRoutine, FunctionTableAccessRoutine, GetModuleBaseRoutine, TranslateAddress, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Diagnostics::Debug::API_VERSION* __stdcall ORBIT_IMPL_ImagehlpApiVersion() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.ImagehlpApiVersion();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Diagnostics::Debug::API_VERSION* __stdcall ORBIT_IMPL_ImagehlpApiVersionEx(win32::Windows::Win32::System::Diagnostics::Debug::API_VERSION* AppVersion) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AppVersion);

        auto win32_impl_result = g_api_table.ImagehlpApiVersionEx(AppVersion);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetTimestampForLoadedLibrary(win32::Windows::Win32::Foundation::HINSTANCE Module) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Module);

        auto win32_impl_result = g_api_table.GetTimestampForLoadedLibrary(Module);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymSetParentWindow(win32::Windows::Win32::Foundation::HWND hwnd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);

        auto win32_impl_result = g_api_table.SymSetParentWindow(hwnd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::PSTR __stdcall ORBIT_IMPL_SymSetHomeDirectory(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR dir) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(dir);

        auto win32_impl_result = g_api_table.SymSetHomeDirectory(hProcess, dir);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::PWSTR __stdcall ORBIT_IMPL_SymSetHomeDirectoryW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PWSTR dir) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(dir);

        auto win32_impl_result = g_api_table.SymSetHomeDirectoryW(hProcess, dir);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::PSTR __stdcall ORBIT_IMPL_SymGetHomeDirectory(win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_HD_TYPE type, win32::Windows::Win32::Foundation::PSTR dir, size_t size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(type);
        ORBIT_TRACK_PARAM(dir);
        ORBIT_TRACK_PARAM(size);

        auto win32_impl_result = g_api_table.SymGetHomeDirectory(type, dir, size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::PWSTR __stdcall ORBIT_IMPL_SymGetHomeDirectoryW(win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_HD_TYPE type, win32::Windows::Win32::Foundation::PWSTR dir, size_t size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(type);
        ORBIT_TRACK_PARAM(dir);
        ORBIT_TRACK_PARAM(size);

        auto win32_impl_result = g_api_table.SymGetHomeDirectoryW(type, dir, size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetOmaps(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, win32::Windows::Win32::System::Diagnostics::Debug::OMAP** OmapTo, uint64_t* cOmapTo, win32::Windows::Win32::System::Diagnostics::Debug::OMAP** OmapFrom, uint64_t* cOmapFrom) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(OmapTo);
        ORBIT_TRACK_PARAM(cOmapTo);
        ORBIT_TRACK_PARAM(OmapFrom);
        ORBIT_TRACK_PARAM(cOmapFrom);

        auto win32_impl_result = g_api_table.SymGetOmaps(hProcess, BaseOfDll, OmapTo, cOmapTo, OmapFrom, cOmapFrom);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SymSetOptions(uint32_t SymOptions) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SymOptions);

        auto win32_impl_result = g_api_table.SymSetOptions(SymOptions);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SymGetOptions() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.SymGetOptions();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymCleanup(win32::Windows::Win32::Foundation::HANDLE hProcess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);

        auto win32_impl_result = g_api_table.SymCleanup(hProcess);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetExtendedOption(win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_EXTENDED_OPTIONS option) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(option);

        auto win32_impl_result = g_api_table.SymGetExtendedOption(option);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymSetExtendedOption(win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_EXTENDED_OPTIONS option, win32::Windows::Win32::Foundation::BOOL value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(option);
        ORBIT_TRACK_PARAM(value);

        auto win32_impl_result = g_api_table.SymSetExtendedOption(option, value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymMatchString(win32::Windows::Win32::Foundation::PSTR string, win32::Windows::Win32::Foundation::PSTR expression, win32::Windows::Win32::Foundation::BOOL fCase) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(string);
        ORBIT_TRACK_PARAM(expression);
        ORBIT_TRACK_PARAM(fCase);

        auto win32_impl_result = g_api_table.SymMatchString(string, expression, fCase);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymMatchStringA(win32::Windows::Win32::Foundation::PSTR string, win32::Windows::Win32::Foundation::PSTR expression, win32::Windows::Win32::Foundation::BOOL fCase) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(string);
        ORBIT_TRACK_PARAM(expression);
        ORBIT_TRACK_PARAM(fCase);

        auto win32_impl_result = g_api_table.SymMatchStringA(string, expression, fCase);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymMatchStringW(win32::Windows::Win32::Foundation::PWSTR string, win32::Windows::Win32::Foundation::PWSTR expression, win32::Windows::Win32::Foundation::BOOL fCase) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(string);
        ORBIT_TRACK_PARAM(expression);
        ORBIT_TRACK_PARAM(fCase);

        auto win32_impl_result = g_api_table.SymMatchStringW(string, expression, fCase);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumSourceFiles(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t ModBase, win32::Windows::Win32::Foundation::PSTR Mask, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMSOURCEFILES_CALLBACK* cbSrcFiles, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(ModBase);
        ORBIT_TRACK_PARAM(Mask);
        ORBIT_TRACK_PARAM(cbSrcFiles);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumSourceFiles(hProcess, ModBase, Mask, cbSrcFiles, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumSourceFilesW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t ModBase, win32::Windows::Win32::Foundation::PWSTR Mask, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMSOURCEFILES_CALLBACKW* cbSrcFiles, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(ModBase);
        ORBIT_TRACK_PARAM(Mask);
        ORBIT_TRACK_PARAM(cbSrcFiles);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumSourceFilesW(hProcess, ModBase, Mask, cbSrcFiles, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumerateModules64(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMMODULES_CALLBACK64* EnumModulesCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(EnumModulesCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumerateModules64(hProcess, EnumModulesCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumerateModulesW64(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMMODULES_CALLBACKW64* EnumModulesCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(EnumModulesCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumerateModulesW64(hProcess, EnumModulesCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EnumerateLoadedModulesEx(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::PENUMLOADED_MODULES_CALLBACK64* EnumLoadedModulesCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(EnumLoadedModulesCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.EnumerateLoadedModulesEx(hProcess, EnumLoadedModulesCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EnumerateLoadedModulesExW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::PENUMLOADED_MODULES_CALLBACKW64* EnumLoadedModulesCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(EnumLoadedModulesCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.EnumerateLoadedModulesExW(hProcess, EnumLoadedModulesCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EnumerateLoadedModules64(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::PENUMLOADED_MODULES_CALLBACK64* EnumLoadedModulesCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(EnumLoadedModulesCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.EnumerateLoadedModules64(hProcess, EnumLoadedModulesCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EnumerateLoadedModulesW64(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::PENUMLOADED_MODULES_CALLBACKW64* EnumLoadedModulesCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(EnumLoadedModulesCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.EnumerateLoadedModulesW64(hProcess, EnumLoadedModulesCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SymFunctionTableAccess64(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t AddrBase) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(AddrBase);

        auto win32_impl_result = g_api_table.SymFunctionTableAccess64(hProcess, AddrBase);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SymFunctionTableAccess64AccessRoutines(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t AddrBase, win32::Windows::Win32::System::Diagnostics::Debug::PREAD_PROCESS_MEMORY_ROUTINE64* ReadMemoryRoutine, win32::Windows::Win32::System::Diagnostics::Debug::PGET_MODULE_BASE_ROUTINE64* GetModuleBaseRoutine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(AddrBase);
        ORBIT_TRACK_PARAM(ReadMemoryRoutine);
        ORBIT_TRACK_PARAM(GetModuleBaseRoutine);

        auto win32_impl_result = g_api_table.SymFunctionTableAccess64AccessRoutines(hProcess, AddrBase, ReadMemoryRoutine, GetModuleBaseRoutine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetUnwindInfo(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Address, void* Buffer, uint32_t* Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Address);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.SymGetUnwindInfo(hProcess, Address, Buffer, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetModuleInfo64(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t qwAddr, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_MODULE64* ModuleInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(qwAddr);
        ORBIT_TRACK_PARAM(ModuleInfo);

        auto win32_impl_result = g_api_table.SymGetModuleInfo64(hProcess, qwAddr, ModuleInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetModuleInfoW64(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t qwAddr, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_MODULEW64* ModuleInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(qwAddr);
        ORBIT_TRACK_PARAM(ModuleInfo);

        auto win32_impl_result = g_api_table.SymGetModuleInfoW64(hProcess, qwAddr, ModuleInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint64_t __stdcall ORBIT_IMPL_SymGetModuleBase64(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t qwAddr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(qwAddr);

        auto win32_impl_result = g_api_table.SymGetModuleBase64(hProcess, qwAddr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumLines(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Base, win32::Windows::Win32::Foundation::PSTR Obj, win32::Windows::Win32::Foundation::PSTR File, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMLINES_CALLBACK* EnumLinesCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(Obj);
        ORBIT_TRACK_PARAM(File);
        ORBIT_TRACK_PARAM(EnumLinesCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumLines(hProcess, Base, Obj, File, EnumLinesCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumLinesW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Base, win32::Windows::Win32::Foundation::PWSTR Obj, win32::Windows::Win32::Foundation::PWSTR File, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMLINES_CALLBACKW* EnumLinesCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(Obj);
        ORBIT_TRACK_PARAM(File);
        ORBIT_TRACK_PARAM(EnumLinesCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumLinesW(hProcess, Base, Obj, File, EnumLinesCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetLineFromAddr64(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t qwAddr, uint32_t* pdwDisplacement, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_LINE64* Line64) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(qwAddr);
        ORBIT_TRACK_PARAM(pdwDisplacement);
        ORBIT_TRACK_PARAM(Line64);

        auto win32_impl_result = g_api_table.SymGetLineFromAddr64(hProcess, qwAddr, pdwDisplacement, Line64);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetLineFromAddrW64(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t dwAddr, uint32_t* pdwDisplacement, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_LINEW64* Line) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(dwAddr);
        ORBIT_TRACK_PARAM(pdwDisplacement);
        ORBIT_TRACK_PARAM(Line);

        auto win32_impl_result = g_api_table.SymGetLineFromAddrW64(hProcess, dwAddr, pdwDisplacement, Line);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetLineFromInlineContext(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t qwAddr, uint32_t InlineContext, uint64_t qwModuleBaseAddress, uint32_t* pdwDisplacement, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_LINE64* Line64) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(qwAddr);
        ORBIT_TRACK_PARAM(InlineContext);
        ORBIT_TRACK_PARAM(qwModuleBaseAddress);
        ORBIT_TRACK_PARAM(pdwDisplacement);
        ORBIT_TRACK_PARAM(Line64);

        auto win32_impl_result = g_api_table.SymGetLineFromInlineContext(hProcess, qwAddr, InlineContext, qwModuleBaseAddress, pdwDisplacement, Line64);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetLineFromInlineContextW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t dwAddr, uint32_t InlineContext, uint64_t qwModuleBaseAddress, uint32_t* pdwDisplacement, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_LINEW64* Line) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(dwAddr);
        ORBIT_TRACK_PARAM(InlineContext);
        ORBIT_TRACK_PARAM(qwModuleBaseAddress);
        ORBIT_TRACK_PARAM(pdwDisplacement);
        ORBIT_TRACK_PARAM(Line);

        auto win32_impl_result = g_api_table.SymGetLineFromInlineContextW(hProcess, dwAddr, InlineContext, qwModuleBaseAddress, pdwDisplacement, Line);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumSourceLines(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Base, win32::Windows::Win32::Foundation::PSTR Obj, win32::Windows::Win32::Foundation::PSTR File, uint32_t Line, uint32_t Flags, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMLINES_CALLBACK* EnumLinesCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(Obj);
        ORBIT_TRACK_PARAM(File);
        ORBIT_TRACK_PARAM(Line);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(EnumLinesCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumSourceLines(hProcess, Base, Obj, File, Line, Flags, EnumLinesCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumSourceLinesW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Base, win32::Windows::Win32::Foundation::PWSTR Obj, win32::Windows::Win32::Foundation::PWSTR File, uint32_t Line, uint32_t Flags, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMLINES_CALLBACKW* EnumLinesCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(Obj);
        ORBIT_TRACK_PARAM(File);
        ORBIT_TRACK_PARAM(Line);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(EnumLinesCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumSourceLinesW(hProcess, Base, Obj, File, Line, Flags, EnumLinesCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SymAddrIncludeInlineTrace(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Address) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Address);

        auto win32_impl_result = g_api_table.SymAddrIncludeInlineTrace(hProcess, Address);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SymCompareInlineTrace(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Address1, uint32_t InlineContext1, uint64_t RetAddress1, uint64_t Address2, uint64_t RetAddress2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Address1);
        ORBIT_TRACK_PARAM(InlineContext1);
        ORBIT_TRACK_PARAM(RetAddress1);
        ORBIT_TRACK_PARAM(Address2);
        ORBIT_TRACK_PARAM(RetAddress2);

        auto win32_impl_result = g_api_table.SymCompareInlineTrace(hProcess, Address1, InlineContext1, RetAddress1, Address2, RetAddress2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymQueryInlineTrace(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t StartAddress, uint32_t StartContext, uint64_t StartRetAddress, uint64_t CurAddress, uint32_t* CurContext, uint32_t* CurFrameIndex) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(StartAddress);
        ORBIT_TRACK_PARAM(StartContext);
        ORBIT_TRACK_PARAM(StartRetAddress);
        ORBIT_TRACK_PARAM(CurAddress);
        ORBIT_TRACK_PARAM(CurContext);
        ORBIT_TRACK_PARAM(CurFrameIndex);

        auto win32_impl_result = g_api_table.SymQueryInlineTrace(hProcess, StartAddress, StartContext, StartRetAddress, CurAddress, CurContext, CurFrameIndex);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetLineFromName64(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR ModuleName, win32::Windows::Win32::Foundation::PSTR FileName, uint32_t dwLineNumber, int32_t* plDisplacement, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_LINE64* Line) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(ModuleName);
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(dwLineNumber);
        ORBIT_TRACK_PARAM(plDisplacement);
        ORBIT_TRACK_PARAM(Line);

        auto win32_impl_result = g_api_table.SymGetLineFromName64(hProcess, ModuleName, FileName, dwLineNumber, plDisplacement, Line);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetLineFromNameW64(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PWSTR ModuleName, win32::Windows::Win32::Foundation::PWSTR FileName, uint32_t dwLineNumber, int32_t* plDisplacement, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_LINEW64* Line) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(ModuleName);
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(dwLineNumber);
        ORBIT_TRACK_PARAM(plDisplacement);
        ORBIT_TRACK_PARAM(Line);

        auto win32_impl_result = g_api_table.SymGetLineFromNameW64(hProcess, ModuleName, FileName, dwLineNumber, plDisplacement, Line);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetLineNext64(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_LINE64* Line) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Line);

        auto win32_impl_result = g_api_table.SymGetLineNext64(hProcess, Line);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetLineNextW64(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_LINEW64* Line) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Line);

        auto win32_impl_result = g_api_table.SymGetLineNextW64(hProcess, Line);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetLinePrev64(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_LINE64* Line) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Line);

        auto win32_impl_result = g_api_table.SymGetLinePrev64(hProcess, Line);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetLinePrevW64(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_LINEW64* Line) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Line);

        auto win32_impl_result = g_api_table.SymGetLinePrevW64(hProcess, Line);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SymGetFileLineOffsets64(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR ModuleName, win32::Windows::Win32::Foundation::PSTR FileName, uint64_t* Buffer, uint32_t BufferLines) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(ModuleName);
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLines);

        auto win32_impl_result = g_api_table.SymGetFileLineOffsets64(hProcess, ModuleName, FileName, Buffer, BufferLines);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymMatchFileName(win32::Windows::Win32::Foundation::PSTR FileName, win32::Windows::Win32::Foundation::PSTR Match, win32::Windows::Win32::Foundation::PSTR* FileNameStop, win32::Windows::Win32::Foundation::PSTR* MatchStop) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(Match);
        ORBIT_TRACK_PARAM(FileNameStop);
        ORBIT_TRACK_PARAM(MatchStop);

        auto win32_impl_result = g_api_table.SymMatchFileName(FileName, Match, FileNameStop, MatchStop);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymMatchFileNameW(win32::Windows::Win32::Foundation::PWSTR FileName, win32::Windows::Win32::Foundation::PWSTR Match, win32::Windows::Win32::Foundation::PWSTR* FileNameStop, win32::Windows::Win32::Foundation::PWSTR* MatchStop) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(Match);
        ORBIT_TRACK_PARAM(FileNameStop);
        ORBIT_TRACK_PARAM(MatchStop);

        auto win32_impl_result = g_api_table.SymMatchFileNameW(FileName, Match, FileNameStop, MatchStop);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSourceFile(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Base, win32::Windows::Win32::Foundation::PSTR Params, win32::Windows::Win32::Foundation::PSTR FileSpec, win32::Windows::Win32::Foundation::PSTR FilePath, uint32_t Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(Params);
        ORBIT_TRACK_PARAM(FileSpec);
        ORBIT_TRACK_PARAM(FilePath);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.SymGetSourceFile(hProcess, Base, Params, FileSpec, FilePath, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSourceFileW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Base, win32::Windows::Win32::Foundation::PWSTR Params, win32::Windows::Win32::Foundation::PWSTR FileSpec, win32::Windows::Win32::Foundation::PWSTR FilePath, uint32_t Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(Params);
        ORBIT_TRACK_PARAM(FileSpec);
        ORBIT_TRACK_PARAM(FilePath);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.SymGetSourceFileW(hProcess, Base, Params, FileSpec, FilePath, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSourceFileToken(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Base, win32::Windows::Win32::Foundation::PSTR FileSpec, void** Token, uint32_t* Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(FileSpec);
        ORBIT_TRACK_PARAM(Token);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.SymGetSourceFileToken(hProcess, Base, FileSpec, Token, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSourceFileTokenByTokenName(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Base, win32::Windows::Win32::Foundation::PSTR FileSpec, win32::Windows::Win32::Foundation::PSTR TokenName, win32::Windows::Win32::Foundation::PSTR TokenParameters, void** Token, uint32_t* Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(FileSpec);
        ORBIT_TRACK_PARAM(TokenName);
        ORBIT_TRACK_PARAM(TokenParameters);
        ORBIT_TRACK_PARAM(Token);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.SymGetSourceFileTokenByTokenName(hProcess, Base, FileSpec, TokenName, TokenParameters, Token, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSourceFileChecksumW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Base, win32::Windows::Win32::Foundation::PWSTR FileSpec, uint32_t* pCheckSumType, uint8_t* pChecksum, uint32_t checksumSize, uint32_t* pActualBytesWritten) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(FileSpec);
        ORBIT_TRACK_PARAM(pCheckSumType);
        ORBIT_TRACK_PARAM(pChecksum);
        ORBIT_TRACK_PARAM(checksumSize);
        ORBIT_TRACK_PARAM(pActualBytesWritten);

        auto win32_impl_result = g_api_table.SymGetSourceFileChecksumW(hProcess, Base, FileSpec, pCheckSumType, pChecksum, checksumSize, pActualBytesWritten);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSourceFileChecksum(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Base, win32::Windows::Win32::Foundation::PSTR FileSpec, uint32_t* pCheckSumType, uint8_t* pChecksum, uint32_t checksumSize, uint32_t* pActualBytesWritten) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(FileSpec);
        ORBIT_TRACK_PARAM(pCheckSumType);
        ORBIT_TRACK_PARAM(pChecksum);
        ORBIT_TRACK_PARAM(checksumSize);
        ORBIT_TRACK_PARAM(pActualBytesWritten);

        auto win32_impl_result = g_api_table.SymGetSourceFileChecksum(hProcess, Base, FileSpec, pCheckSumType, pChecksum, checksumSize, pActualBytesWritten);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSourceFileTokenW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Base, win32::Windows::Win32::Foundation::PWSTR FileSpec, void** Token, uint32_t* Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(FileSpec);
        ORBIT_TRACK_PARAM(Token);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.SymGetSourceFileTokenW(hProcess, Base, FileSpec, Token, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSourceFileTokenByTokenNameW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Base, win32::Windows::Win32::Foundation::PWSTR FileSpec, win32::Windows::Win32::Foundation::PWSTR TokenName, win32::Windows::Win32::Foundation::PWSTR TokenParameters, void** Token, uint32_t* Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(FileSpec);
        ORBIT_TRACK_PARAM(TokenName);
        ORBIT_TRACK_PARAM(TokenParameters);
        ORBIT_TRACK_PARAM(Token);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.SymGetSourceFileTokenByTokenNameW(hProcess, Base, FileSpec, TokenName, TokenParameters, Token, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSourceFileFromToken(win32::Windows::Win32::Foundation::HANDLE hProcess, void* Token, win32::Windows::Win32::Foundation::PSTR Params, win32::Windows::Win32::Foundation::PSTR FilePath, uint32_t Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Token);
        ORBIT_TRACK_PARAM(Params);
        ORBIT_TRACK_PARAM(FilePath);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.SymGetSourceFileFromToken(hProcess, Token, Params, FilePath, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSourceFileFromTokenByTokenName(win32::Windows::Win32::Foundation::HANDLE hProcess, void* Token, win32::Windows::Win32::Foundation::PSTR TokenName, win32::Windows::Win32::Foundation::PSTR Params, win32::Windows::Win32::Foundation::PSTR FilePath, uint32_t Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Token);
        ORBIT_TRACK_PARAM(TokenName);
        ORBIT_TRACK_PARAM(Params);
        ORBIT_TRACK_PARAM(FilePath);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.SymGetSourceFileFromTokenByTokenName(hProcess, Token, TokenName, Params, FilePath, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSourceFileFromTokenW(win32::Windows::Win32::Foundation::HANDLE hProcess, void* Token, win32::Windows::Win32::Foundation::PWSTR Params, win32::Windows::Win32::Foundation::PWSTR FilePath, uint32_t Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Token);
        ORBIT_TRACK_PARAM(Params);
        ORBIT_TRACK_PARAM(FilePath);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.SymGetSourceFileFromTokenW(hProcess, Token, Params, FilePath, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSourceFileFromTokenByTokenNameW(win32::Windows::Win32::Foundation::HANDLE hProcess, void* Token, win32::Windows::Win32::Foundation::PWSTR TokenName, win32::Windows::Win32::Foundation::PWSTR Params, win32::Windows::Win32::Foundation::PWSTR FilePath, uint32_t Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Token);
        ORBIT_TRACK_PARAM(TokenName);
        ORBIT_TRACK_PARAM(Params);
        ORBIT_TRACK_PARAM(FilePath);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.SymGetSourceFileFromTokenByTokenNameW(hProcess, Token, TokenName, Params, FilePath, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSourceVarFromToken(win32::Windows::Win32::Foundation::HANDLE hProcess, void* Token, win32::Windows::Win32::Foundation::PSTR Params, win32::Windows::Win32::Foundation::PSTR VarName, win32::Windows::Win32::Foundation::PSTR Value, uint32_t Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Token);
        ORBIT_TRACK_PARAM(Params);
        ORBIT_TRACK_PARAM(VarName);
        ORBIT_TRACK_PARAM(Value);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.SymGetSourceVarFromToken(hProcess, Token, Params, VarName, Value, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSourceVarFromTokenW(win32::Windows::Win32::Foundation::HANDLE hProcess, void* Token, win32::Windows::Win32::Foundation::PWSTR Params, win32::Windows::Win32::Foundation::PWSTR VarName, win32::Windows::Win32::Foundation::PWSTR Value, uint32_t Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Token);
        ORBIT_TRACK_PARAM(Params);
        ORBIT_TRACK_PARAM(VarName);
        ORBIT_TRACK_PARAM(Value);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.SymGetSourceVarFromTokenW(hProcess, Token, Params, VarName, Value, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumSourceFileTokens(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Base, win32::Windows::Win32::System::Diagnostics::Debug::PENUMSOURCEFILETOKENSCALLBACK* Callback) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(Callback);

        auto win32_impl_result = g_api_table.SymEnumSourceFileTokens(hProcess, Base, Callback);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymInitialize(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR UserSearchPath, win32::Windows::Win32::Foundation::BOOL fInvadeProcess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(UserSearchPath);
        ORBIT_TRACK_PARAM(fInvadeProcess);

        auto win32_impl_result = g_api_table.SymInitialize(hProcess, UserSearchPath, fInvadeProcess);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymInitializeW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PWSTR UserSearchPath, win32::Windows::Win32::Foundation::BOOL fInvadeProcess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(UserSearchPath);
        ORBIT_TRACK_PARAM(fInvadeProcess);

        auto win32_impl_result = g_api_table.SymInitializeW(hProcess, UserSearchPath, fInvadeProcess);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSearchPath(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR SearchPathA, uint32_t SearchPathLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(SearchPathA);
        ORBIT_TRACK_PARAM(SearchPathLength);

        auto win32_impl_result = g_api_table.SymGetSearchPath(hProcess, SearchPathA, SearchPathLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSearchPathW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PWSTR SearchPathA, uint32_t SearchPathLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(SearchPathA);
        ORBIT_TRACK_PARAM(SearchPathLength);

        auto win32_impl_result = g_api_table.SymGetSearchPathW(hProcess, SearchPathA, SearchPathLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymSetSearchPath(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR SearchPathA) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(SearchPathA);

        auto win32_impl_result = g_api_table.SymSetSearchPath(hProcess, SearchPathA);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymSetSearchPathW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PWSTR SearchPathA) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(SearchPathA);

        auto win32_impl_result = g_api_table.SymSetSearchPathW(hProcess, SearchPathA);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint64_t __stdcall ORBIT_IMPL_SymLoadModuleEx(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::HANDLE hFile, win32::Windows::Win32::Foundation::PSTR ImageName, win32::Windows::Win32::Foundation::PSTR ModuleName, uint64_t BaseOfDll, uint32_t DllSize, win32::Windows::Win32::System::Diagnostics::Debug::MODLOAD_DATA* Data, win32::Windows::Win32::System::Diagnostics::Debug::SYM_LOAD_FLAGS Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(hFile);
        ORBIT_TRACK_PARAM(ImageName);
        ORBIT_TRACK_PARAM(ModuleName);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(DllSize);
        ORBIT_TRACK_PARAM(Data);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SymLoadModuleEx(hProcess, hFile, ImageName, ModuleName, BaseOfDll, DllSize, Data, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint64_t __stdcall ORBIT_IMPL_SymLoadModuleExW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::HANDLE hFile, win32::Windows::Win32::Foundation::PWSTR ImageName, win32::Windows::Win32::Foundation::PWSTR ModuleName, uint64_t BaseOfDll, uint32_t DllSize, win32::Windows::Win32::System::Diagnostics::Debug::MODLOAD_DATA* Data, win32::Windows::Win32::System::Diagnostics::Debug::SYM_LOAD_FLAGS Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(hFile);
        ORBIT_TRACK_PARAM(ImageName);
        ORBIT_TRACK_PARAM(ModuleName);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(DllSize);
        ORBIT_TRACK_PARAM(Data);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SymLoadModuleExW(hProcess, hFile, ImageName, ModuleName, BaseOfDll, DllSize, Data, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymUnloadModule64(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);

        auto win32_impl_result = g_api_table.SymUnloadModule64(hProcess, BaseOfDll);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymUnDName64(win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_SYMBOL64* sym, win32::Windows::Win32::Foundation::PSTR UnDecName, uint32_t UnDecNameLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(sym);
        ORBIT_TRACK_PARAM(UnDecName);
        ORBIT_TRACK_PARAM(UnDecNameLength);

        auto win32_impl_result = g_api_table.SymUnDName64(sym, UnDecName, UnDecNameLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymRegisterCallback64(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::PSYMBOL_REGISTERED_CALLBACK64* CallbackFunction, uint64_t UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(CallbackFunction);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymRegisterCallback64(hProcess, CallbackFunction, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymRegisterCallbackW64(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::PSYMBOL_REGISTERED_CALLBACK64* CallbackFunction, uint64_t UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(CallbackFunction);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymRegisterCallbackW64(hProcess, CallbackFunction, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymRegisterFunctionEntryCallback64(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::PSYMBOL_FUNCENTRY_CALLBACK64* CallbackFunction, uint64_t UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(CallbackFunction);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymRegisterFunctionEntryCallback64(hProcess, CallbackFunction, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymSetContext(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_STACK_FRAME* StackFrame, void* Context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(StackFrame);
        ORBIT_TRACK_PARAM(Context);

        auto win32_impl_result = g_api_table.SymSetContext(hProcess, StackFrame, Context);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymSetScopeFromAddr(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Address) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Address);

        auto win32_impl_result = g_api_table.SymSetScopeFromAddr(hProcess, Address);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymSetScopeFromInlineContext(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Address, uint32_t InlineContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Address);
        ORBIT_TRACK_PARAM(InlineContext);

        auto win32_impl_result = g_api_table.SymSetScopeFromInlineContext(hProcess, Address, InlineContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymSetScopeFromIndex(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, uint32_t Index) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(Index);

        auto win32_impl_result = g_api_table.SymSetScopeFromIndex(hProcess, BaseOfDll, Index);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumProcesses(win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMPROCESSES_CALLBACK* EnumProcessesCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(EnumProcessesCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumProcesses(EnumProcessesCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymFromAddr(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Address, uint64_t* Displacement, win32::Windows::Win32::System::Diagnostics::Debug::SYMBOL_INFO* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Address);
        ORBIT_TRACK_PARAM(Displacement);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymFromAddr(hProcess, Address, Displacement, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymFromAddrW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Address, uint64_t* Displacement, win32::Windows::Win32::System::Diagnostics::Debug::SYMBOL_INFOW* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Address);
        ORBIT_TRACK_PARAM(Displacement);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymFromAddrW(hProcess, Address, Displacement, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymFromInlineContext(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Address, uint32_t InlineContext, uint64_t* Displacement, win32::Windows::Win32::System::Diagnostics::Debug::SYMBOL_INFO* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Address);
        ORBIT_TRACK_PARAM(InlineContext);
        ORBIT_TRACK_PARAM(Displacement);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymFromInlineContext(hProcess, Address, InlineContext, Displacement, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymFromInlineContextW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Address, uint32_t InlineContext, uint64_t* Displacement, win32::Windows::Win32::System::Diagnostics::Debug::SYMBOL_INFOW* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Address);
        ORBIT_TRACK_PARAM(InlineContext);
        ORBIT_TRACK_PARAM(Displacement);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymFromInlineContextW(hProcess, Address, InlineContext, Displacement, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymFromToken(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Base, uint32_t Token, win32::Windows::Win32::System::Diagnostics::Debug::SYMBOL_INFO* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(Token);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymFromToken(hProcess, Base, Token, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymFromTokenW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Base, uint32_t Token, win32::Windows::Win32::System::Diagnostics::Debug::SYMBOL_INFOW* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(Token);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymFromTokenW(hProcess, Base, Token, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymNext(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::SYMBOL_INFO* si) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(si);

        auto win32_impl_result = g_api_table.SymNext(hProcess, si);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymNextW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::SYMBOL_INFOW* siw) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(siw);

        auto win32_impl_result = g_api_table.SymNextW(hProcess, siw);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymPrev(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::SYMBOL_INFO* si) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(si);

        auto win32_impl_result = g_api_table.SymPrev(hProcess, si);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymPrevW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::SYMBOL_INFOW* siw) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(siw);

        auto win32_impl_result = g_api_table.SymPrevW(hProcess, siw);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymFromName(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR Name, win32::Windows::Win32::System::Diagnostics::Debug::SYMBOL_INFO* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Name);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymFromName(hProcess, Name, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymFromNameW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PWSTR Name, win32::Windows::Win32::System::Diagnostics::Debug::SYMBOL_INFOW* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Name);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymFromNameW(hProcess, Name, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumSymbols(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, win32::Windows::Win32::Foundation::PSTR Mask, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMERATESYMBOLS_CALLBACK* EnumSymbolsCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(Mask);
        ORBIT_TRACK_PARAM(EnumSymbolsCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumSymbols(hProcess, BaseOfDll, Mask, EnumSymbolsCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumSymbolsEx(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, win32::Windows::Win32::Foundation::PSTR Mask, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMERATESYMBOLS_CALLBACK* EnumSymbolsCallback, void* UserContext, uint32_t Options) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(Mask);
        ORBIT_TRACK_PARAM(EnumSymbolsCallback);
        ORBIT_TRACK_PARAM(UserContext);
        ORBIT_TRACK_PARAM(Options);

        auto win32_impl_result = g_api_table.SymEnumSymbolsEx(hProcess, BaseOfDll, Mask, EnumSymbolsCallback, UserContext, Options);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumSymbolsW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, win32::Windows::Win32::Foundation::PWSTR Mask, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMERATESYMBOLS_CALLBACKW* EnumSymbolsCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(Mask);
        ORBIT_TRACK_PARAM(EnumSymbolsCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumSymbolsW(hProcess, BaseOfDll, Mask, EnumSymbolsCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumSymbolsExW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, win32::Windows::Win32::Foundation::PWSTR Mask, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMERATESYMBOLS_CALLBACKW* EnumSymbolsCallback, void* UserContext, uint32_t Options) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(Mask);
        ORBIT_TRACK_PARAM(EnumSymbolsCallback);
        ORBIT_TRACK_PARAM(UserContext);
        ORBIT_TRACK_PARAM(Options);

        auto win32_impl_result = g_api_table.SymEnumSymbolsExW(hProcess, BaseOfDll, Mask, EnumSymbolsCallback, UserContext, Options);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumSymbolsForAddr(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Address, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMERATESYMBOLS_CALLBACK* EnumSymbolsCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Address);
        ORBIT_TRACK_PARAM(EnumSymbolsCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumSymbolsForAddr(hProcess, Address, EnumSymbolsCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumSymbolsForAddrW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Address, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMERATESYMBOLS_CALLBACKW* EnumSymbolsCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Address);
        ORBIT_TRACK_PARAM(EnumSymbolsCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumSymbolsForAddrW(hProcess, Address, EnumSymbolsCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymSearch(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, uint32_t Index, uint32_t SymTag, win32::Windows::Win32::Foundation::PSTR Mask, uint64_t Address, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMERATESYMBOLS_CALLBACK* EnumSymbolsCallback, void* UserContext, uint32_t Options) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(Index);
        ORBIT_TRACK_PARAM(SymTag);
        ORBIT_TRACK_PARAM(Mask);
        ORBIT_TRACK_PARAM(Address);
        ORBIT_TRACK_PARAM(EnumSymbolsCallback);
        ORBIT_TRACK_PARAM(UserContext);
        ORBIT_TRACK_PARAM(Options);

        auto win32_impl_result = g_api_table.SymSearch(hProcess, BaseOfDll, Index, SymTag, Mask, Address, EnumSymbolsCallback, UserContext, Options);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymSearchW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, uint32_t Index, uint32_t SymTag, win32::Windows::Win32::Foundation::PWSTR Mask, uint64_t Address, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMERATESYMBOLS_CALLBACKW* EnumSymbolsCallback, void* UserContext, uint32_t Options) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(Index);
        ORBIT_TRACK_PARAM(SymTag);
        ORBIT_TRACK_PARAM(Mask);
        ORBIT_TRACK_PARAM(Address);
        ORBIT_TRACK_PARAM(EnumSymbolsCallback);
        ORBIT_TRACK_PARAM(UserContext);
        ORBIT_TRACK_PARAM(Options);

        auto win32_impl_result = g_api_table.SymSearchW(hProcess, BaseOfDll, Index, SymTag, Mask, Address, EnumSymbolsCallback, UserContext, Options);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetScope(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, uint32_t Index, win32::Windows::Win32::System::Diagnostics::Debug::SYMBOL_INFO* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(Index);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymGetScope(hProcess, BaseOfDll, Index, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetScopeW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, uint32_t Index, win32::Windows::Win32::System::Diagnostics::Debug::SYMBOL_INFOW* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(Index);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymGetScopeW(hProcess, BaseOfDll, Index, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymFromIndex(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, uint32_t Index, win32::Windows::Win32::System::Diagnostics::Debug::SYMBOL_INFO* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(Index);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymFromIndex(hProcess, BaseOfDll, Index, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymFromIndexW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, uint32_t Index, win32::Windows::Win32::System::Diagnostics::Debug::SYMBOL_INFOW* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(Index);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymFromIndexW(hProcess, BaseOfDll, Index, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetTypeInfo(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t ModBase, uint32_t TypeId, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_SYMBOL_TYPE_INFO GetType, void* pInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(ModBase);
        ORBIT_TRACK_PARAM(TypeId);
        ORBIT_TRACK_PARAM(GetType);
        ORBIT_TRACK_PARAM(pInfo);

        auto win32_impl_result = g_api_table.SymGetTypeInfo(hProcess, ModBase, TypeId, GetType, pInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetTypeInfoEx(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t ModBase, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_GET_TYPE_INFO_PARAMS* Params) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(ModBase);
        ORBIT_TRACK_PARAM(Params);

        auto win32_impl_result = g_api_table.SymGetTypeInfoEx(hProcess, ModBase, Params);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumTypes(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMERATESYMBOLS_CALLBACK* EnumSymbolsCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(EnumSymbolsCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumTypes(hProcess, BaseOfDll, EnumSymbolsCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumTypesW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMERATESYMBOLS_CALLBACKW* EnumSymbolsCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(EnumSymbolsCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumTypesW(hProcess, BaseOfDll, EnumSymbolsCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumTypesByName(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, win32::Windows::Win32::Foundation::PSTR mask, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMERATESYMBOLS_CALLBACK* EnumSymbolsCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(mask);
        ORBIT_TRACK_PARAM(EnumSymbolsCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumTypesByName(hProcess, BaseOfDll, mask, EnumSymbolsCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumTypesByNameW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, win32::Windows::Win32::Foundation::PWSTR mask, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMERATESYMBOLS_CALLBACKW* EnumSymbolsCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(mask);
        ORBIT_TRACK_PARAM(EnumSymbolsCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumTypesByNameW(hProcess, BaseOfDll, mask, EnumSymbolsCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetTypeFromName(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, win32::Windows::Win32::Foundation::PSTR Name, win32::Windows::Win32::System::Diagnostics::Debug::SYMBOL_INFO* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(Name);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymGetTypeFromName(hProcess, BaseOfDll, Name, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetTypeFromNameW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, win32::Windows::Win32::Foundation::PWSTR Name, win32::Windows::Win32::System::Diagnostics::Debug::SYMBOL_INFOW* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(Name);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymGetTypeFromNameW(hProcess, BaseOfDll, Name, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymAddSymbol(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, win32::Windows::Win32::Foundation::PSTR Name, uint64_t Address, uint32_t Size, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(Name);
        ORBIT_TRACK_PARAM(Address);
        ORBIT_TRACK_PARAM(Size);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SymAddSymbol(hProcess, BaseOfDll, Name, Address, Size, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymAddSymbolW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, win32::Windows::Win32::Foundation::PWSTR Name, uint64_t Address, uint32_t Size, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(Name);
        ORBIT_TRACK_PARAM(Address);
        ORBIT_TRACK_PARAM(Size);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SymAddSymbolW(hProcess, BaseOfDll, Name, Address, Size, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymDeleteSymbol(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, win32::Windows::Win32::Foundation::PSTR Name, uint64_t Address, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(Name);
        ORBIT_TRACK_PARAM(Address);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SymDeleteSymbol(hProcess, BaseOfDll, Name, Address, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymDeleteSymbolW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, win32::Windows::Win32::Foundation::PWSTR Name, uint64_t Address, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(Name);
        ORBIT_TRACK_PARAM(Address);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SymDeleteSymbolW(hProcess, BaseOfDll, Name, Address, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymRefreshModuleList(win32::Windows::Win32::Foundation::HANDLE hProcess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);

        auto win32_impl_result = g_api_table.SymRefreshModuleList(hProcess);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymAddSourceStream(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Base, win32::Windows::Win32::Foundation::PSTR StreamFile, uint8_t* Buffer, size_t Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(StreamFile);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.SymAddSourceStream(hProcess, Base, StreamFile, Buffer, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymAddSourceStreamA(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Base, win32::Windows::Win32::Foundation::PSTR StreamFile, uint8_t* Buffer, size_t Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(StreamFile);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.SymAddSourceStreamA(hProcess, Base, StreamFile, Buffer, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymAddSourceStreamW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t Base, win32::Windows::Win32::Foundation::PWSTR FileSpec, uint8_t* Buffer, size_t Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(FileSpec);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.SymAddSourceStreamW(hProcess, Base, FileSpec, Buffer, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymSrvIsStoreW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PWSTR path) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(path);

        auto win32_impl_result = g_api_table.SymSrvIsStoreW(hProcess, path);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymSrvIsStore(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR path) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(path);

        auto win32_impl_result = g_api_table.SymSrvIsStore(hProcess, path);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::PSTR __stdcall ORBIT_IMPL_SymSrvDeltaName(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR SymPath, win32::Windows::Win32::Foundation::PSTR Type, win32::Windows::Win32::Foundation::PSTR File1, win32::Windows::Win32::Foundation::PSTR File2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(SymPath);
        ORBIT_TRACK_PARAM(Type);
        ORBIT_TRACK_PARAM(File1);
        ORBIT_TRACK_PARAM(File2);

        auto win32_impl_result = g_api_table.SymSrvDeltaName(hProcess, SymPath, Type, File1, File2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::PWSTR __stdcall ORBIT_IMPL_SymSrvDeltaNameW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PWSTR SymPath, win32::Windows::Win32::Foundation::PWSTR Type, win32::Windows::Win32::Foundation::PWSTR File1, win32::Windows::Win32::Foundation::PWSTR File2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(SymPath);
        ORBIT_TRACK_PARAM(Type);
        ORBIT_TRACK_PARAM(File1);
        ORBIT_TRACK_PARAM(File2);

        auto win32_impl_result = g_api_table.SymSrvDeltaNameW(hProcess, SymPath, Type, File1, File2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::PSTR __stdcall ORBIT_IMPL_SymSrvGetSupplement(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR SymPath, win32::Windows::Win32::Foundation::PSTR Node, win32::Windows::Win32::Foundation::PSTR File) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(SymPath);
        ORBIT_TRACK_PARAM(Node);
        ORBIT_TRACK_PARAM(File);

        auto win32_impl_result = g_api_table.SymSrvGetSupplement(hProcess, SymPath, Node, File);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::PWSTR __stdcall ORBIT_IMPL_SymSrvGetSupplementW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PWSTR SymPath, win32::Windows::Win32::Foundation::PWSTR Node, win32::Windows::Win32::Foundation::PWSTR File) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(SymPath);
        ORBIT_TRACK_PARAM(Node);
        ORBIT_TRACK_PARAM(File);

        auto win32_impl_result = g_api_table.SymSrvGetSupplementW(hProcess, SymPath, Node, File);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymSrvGetFileIndexes(win32::Windows::Win32::Foundation::PSTR File, ::win32::guid* Id, uint32_t* Val1, uint32_t* Val2, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(File);
        ORBIT_TRACK_PARAM(Id);
        ORBIT_TRACK_PARAM(Val1);
        ORBIT_TRACK_PARAM(Val2);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SymSrvGetFileIndexes(File, Id, Val1, Val2, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymSrvGetFileIndexesW(win32::Windows::Win32::Foundation::PWSTR File, ::win32::guid* Id, uint32_t* Val1, uint32_t* Val2, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(File);
        ORBIT_TRACK_PARAM(Id);
        ORBIT_TRACK_PARAM(Val1);
        ORBIT_TRACK_PARAM(Val2);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SymSrvGetFileIndexesW(File, Id, Val1, Val2, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymSrvGetFileIndexStringW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PWSTR SrvPath, win32::Windows::Win32::Foundation::PWSTR File, win32::Windows::Win32::Foundation::PWSTR Index, size_t Size, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(SrvPath);
        ORBIT_TRACK_PARAM(File);
        ORBIT_TRACK_PARAM(Index);
        ORBIT_TRACK_PARAM(Size);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SymSrvGetFileIndexStringW(hProcess, SrvPath, File, Index, Size, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymSrvGetFileIndexString(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR SrvPath, win32::Windows::Win32::Foundation::PSTR File, win32::Windows::Win32::Foundation::PSTR Index, size_t Size, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(SrvPath);
        ORBIT_TRACK_PARAM(File);
        ORBIT_TRACK_PARAM(Index);
        ORBIT_TRACK_PARAM(Size);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SymSrvGetFileIndexString(hProcess, SrvPath, File, Index, Size, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymSrvGetFileIndexInfo(win32::Windows::Win32::Foundation::PSTR File, win32::Windows::Win32::System::Diagnostics::Debug::SYMSRV_INDEX_INFO* Info, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(File);
        ORBIT_TRACK_PARAM(Info);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SymSrvGetFileIndexInfo(File, Info, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymSrvGetFileIndexInfoW(win32::Windows::Win32::Foundation::PWSTR File, win32::Windows::Win32::System::Diagnostics::Debug::SYMSRV_INDEX_INFOW* Info, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(File);
        ORBIT_TRACK_PARAM(Info);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SymSrvGetFileIndexInfoW(File, Info, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::PSTR __stdcall ORBIT_IMPL_SymSrvStoreSupplement(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR SrvPath, win32::Windows::Win32::Foundation::PSTR Node, win32::Windows::Win32::Foundation::PSTR File, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(SrvPath);
        ORBIT_TRACK_PARAM(Node);
        ORBIT_TRACK_PARAM(File);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SymSrvStoreSupplement(hProcess, SrvPath, Node, File, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::PWSTR __stdcall ORBIT_IMPL_SymSrvStoreSupplementW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PWSTR SymPath, win32::Windows::Win32::Foundation::PWSTR Node, win32::Windows::Win32::Foundation::PWSTR File, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(SymPath);
        ORBIT_TRACK_PARAM(Node);
        ORBIT_TRACK_PARAM(File);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SymSrvStoreSupplementW(hProcess, SymPath, Node, File, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::PSTR __stdcall ORBIT_IMPL_SymSrvStoreFile(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR SrvPath, win32::Windows::Win32::Foundation::PSTR File, win32::Windows::Win32::System::Diagnostics::Debug::SYM_SRV_STORE_FILE_FLAGS Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(SrvPath);
        ORBIT_TRACK_PARAM(File);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SymSrvStoreFile(hProcess, SrvPath, File, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::PWSTR __stdcall ORBIT_IMPL_SymSrvStoreFileW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PWSTR SrvPath, win32::Windows::Win32::Foundation::PWSTR File, win32::Windows::Win32::System::Diagnostics::Debug::SYM_SRV_STORE_FILE_FLAGS Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(SrvPath);
        ORBIT_TRACK_PARAM(File);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SymSrvStoreFileW(hProcess, SrvPath, File, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSymbolFile(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR SymPath, win32::Windows::Win32::Foundation::PSTR ImageFile, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_SF_TYPE Type, win32::Windows::Win32::Foundation::PSTR SymbolFile, size_t cSymbolFile, win32::Windows::Win32::Foundation::PSTR DbgFile, size_t cDbgFile) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(SymPath);
        ORBIT_TRACK_PARAM(ImageFile);
        ORBIT_TRACK_PARAM(Type);
        ORBIT_TRACK_PARAM(SymbolFile);
        ORBIT_TRACK_PARAM(cSymbolFile);
        ORBIT_TRACK_PARAM(DbgFile);
        ORBIT_TRACK_PARAM(cDbgFile);

        auto win32_impl_result = g_api_table.SymGetSymbolFile(hProcess, SymPath, ImageFile, Type, SymbolFile, cSymbolFile, DbgFile, cDbgFile);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSymbolFileW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PWSTR SymPath, win32::Windows::Win32::Foundation::PWSTR ImageFile, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_SF_TYPE Type, win32::Windows::Win32::Foundation::PWSTR SymbolFile, size_t cSymbolFile, win32::Windows::Win32::Foundation::PWSTR DbgFile, size_t cDbgFile) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(SymPath);
        ORBIT_TRACK_PARAM(ImageFile);
        ORBIT_TRACK_PARAM(Type);
        ORBIT_TRACK_PARAM(SymbolFile);
        ORBIT_TRACK_PARAM(cSymbolFile);
        ORBIT_TRACK_PARAM(DbgFile);
        ORBIT_TRACK_PARAM(cDbgFile);

        auto win32_impl_result = g_api_table.SymGetSymbolFileW(hProcess, SymPath, ImageFile, Type, SymbolFile, cSymbolFile, DbgFile, cDbgFile);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DbgHelpCreateUserDump(win32::Windows::Win32::Foundation::PSTR FileName, win32::Windows::Win32::System::Diagnostics::Debug::PDBGHELP_CREATE_USER_DUMP_CALLBACK* Callback, void* UserData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(Callback);
        ORBIT_TRACK_PARAM(UserData);

        auto win32_impl_result = g_api_table.DbgHelpCreateUserDump(FileName, Callback, UserData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DbgHelpCreateUserDumpW(win32::Windows::Win32::Foundation::PWSTR FileName, win32::Windows::Win32::System::Diagnostics::Debug::PDBGHELP_CREATE_USER_DUMP_CALLBACK* Callback, void* UserData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(Callback);
        ORBIT_TRACK_PARAM(UserData);

        auto win32_impl_result = g_api_table.DbgHelpCreateUserDumpW(FileName, Callback, UserData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSymFromAddr64(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t qwAddr, uint64_t* pdwDisplacement, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_SYMBOL64* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(qwAddr);
        ORBIT_TRACK_PARAM(pdwDisplacement);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymGetSymFromAddr64(hProcess, qwAddr, pdwDisplacement, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSymFromName64(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR Name, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_SYMBOL64* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Name);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymGetSymFromName64(hProcess, Name, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_FindFileInPath(win32::Windows::Win32::Foundation::HANDLE hprocess, win32::Windows::Win32::Foundation::PSTR SearchPathA, win32::Windows::Win32::Foundation::PSTR FileName, void* id, uint32_t two, uint32_t three, uint32_t flags, win32::Windows::Win32::Foundation::PSTR FilePath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hprocess);
        ORBIT_TRACK_PARAM(SearchPathA);
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(two);
        ORBIT_TRACK_PARAM(three);
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(FilePath);

        auto win32_impl_result = g_api_table.FindFileInPath(hprocess, SearchPathA, FileName, id, two, three, flags, FilePath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_FindFileInSearchPath(win32::Windows::Win32::Foundation::HANDLE hprocess, win32::Windows::Win32::Foundation::PSTR SearchPathA, win32::Windows::Win32::Foundation::PSTR FileName, uint32_t one, uint32_t two, uint32_t three, win32::Windows::Win32::Foundation::PSTR FilePath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hprocess);
        ORBIT_TRACK_PARAM(SearchPathA);
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(one);
        ORBIT_TRACK_PARAM(two);
        ORBIT_TRACK_PARAM(three);
        ORBIT_TRACK_PARAM(FilePath);

        auto win32_impl_result = g_api_table.FindFileInSearchPath(hprocess, SearchPathA, FileName, one, two, three, FilePath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumSym(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMERATESYMBOLS_CALLBACK* EnumSymbolsCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(EnumSymbolsCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumSym(hProcess, BaseOfDll, EnumSymbolsCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumerateSymbols64(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMSYMBOLS_CALLBACK64* EnumSymbolsCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(EnumSymbolsCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumerateSymbols64(hProcess, BaseOfDll, EnumSymbolsCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumerateSymbolsW64(win32::Windows::Win32::Foundation::HANDLE hProcess, uint64_t BaseOfDll, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMSYMBOLS_CALLBACK64W* EnumSymbolsCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(EnumSymbolsCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumerateSymbolsW64(hProcess, BaseOfDll, EnumSymbolsCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint64_t __stdcall ORBIT_IMPL_SymLoadModule64(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::HANDLE hFile, win32::Windows::Win32::Foundation::PSTR ImageName, win32::Windows::Win32::Foundation::PSTR ModuleName, uint64_t BaseOfDll, uint32_t SizeOfDll) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(hFile);
        ORBIT_TRACK_PARAM(ImageName);
        ORBIT_TRACK_PARAM(ModuleName);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(SizeOfDll);

        auto win32_impl_result = g_api_table.SymLoadModule64(hProcess, hFile, ImageName, ModuleName, BaseOfDll, SizeOfDll);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSymNext64(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_SYMBOL64* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymGetSymNext64(hProcess, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSymPrev64(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_SYMBOL64* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymGetSymPrev64(hProcess, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_SetCheckUserInterruptShared(win32::Windows::Win32::System::Diagnostics::Debug::LPCALL_BACK_USER_INTERRUPT_ROUTINE* lpStartAddress) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpStartAddress);

        g_api_table.SetCheckUserInterruptShared(lpStartAddress);
        
    }

    uint32_t __stdcall ORBIT_IMPL_GetSymLoadError() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.GetSymLoadError();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_SetSymLoadError(uint32_t error) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(error);

        g_api_table.SetSymLoadError(error);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ReportSymbolLoadSummary(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PWSTR pLoadModule, win32::Windows::Win32::System::Diagnostics::Debug::DBGHELP_DATA_REPORT_STRUCT* pSymbolData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(pLoadModule);
        ORBIT_TRACK_PARAM(pSymbolData);

        auto win32_impl_result = g_api_table.ReportSymbolLoadSummary(hProcess, pLoadModule, pSymbolData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RemoveInvalidModuleList(win32::Windows::Win32::Foundation::HANDLE hProcess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);

        g_api_table.RemoveInvalidModuleList(hProcess);
        
    }

    void* __stdcall ORBIT_IMPL_RangeMapCreate() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.RangeMapCreate();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RangeMapFree(void* RmapHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RmapHandle);

        g_api_table.RangeMapFree(RmapHandle);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RangeMapAddPeImageSections(void* RmapHandle, win32::Windows::Win32::Foundation::PWSTR ImageName, void* MappedImage, uint32_t MappingBytes, uint64_t ImageBase, uint64_t UserTag, uint32_t MappingFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RmapHandle);
        ORBIT_TRACK_PARAM(ImageName);
        ORBIT_TRACK_PARAM(MappedImage);
        ORBIT_TRACK_PARAM(MappingBytes);
        ORBIT_TRACK_PARAM(ImageBase);
        ORBIT_TRACK_PARAM(UserTag);
        ORBIT_TRACK_PARAM(MappingFlags);

        auto win32_impl_result = g_api_table.RangeMapAddPeImageSections(RmapHandle, ImageName, MappedImage, MappingBytes, ImageBase, UserTag, MappingFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RangeMapRemove(void* RmapHandle, uint64_t UserTag) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RmapHandle);
        ORBIT_TRACK_PARAM(UserTag);

        auto win32_impl_result = g_api_table.RangeMapRemove(RmapHandle, UserTag);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RangeMapRead(void* RmapHandle, uint64_t Offset, void* Buffer, uint32_t RequestBytes, uint32_t Flags, uint32_t* DoneBytes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RmapHandle);
        ORBIT_TRACK_PARAM(Offset);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(RequestBytes);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(DoneBytes);

        auto win32_impl_result = g_api_table.RangeMapRead(RmapHandle, Offset, Buffer, RequestBytes, Flags, DoneBytes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RangeMapWrite(void* RmapHandle, uint64_t Offset, void* Buffer, uint32_t RequestBytes, uint32_t Flags, uint32_t* DoneBytes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RmapHandle);
        ORBIT_TRACK_PARAM(Offset);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(RequestBytes);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(DoneBytes);

        auto win32_impl_result = g_api_table.RangeMapWrite(RmapHandle, Offset, Buffer, RequestBytes, Flags, DoneBytes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_MessageBeep(uint32_t uType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(uType);

        auto win32_impl_result = g_api_table.MessageBeep(uType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_FatalExit(int32_t ExitCode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ExitCode);

        g_api_table.FatalExit(ExitCode);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetThreadSelectorEntry(win32::Windows::Win32::Foundation::HANDLE hThread, uint32_t dwSelector, win32::Windows::Win32::System::Diagnostics::Debug::LDT_ENTRY* lpSelectorEntry) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hThread);
        ORBIT_TRACK_PARAM(dwSelector);
        ORBIT_TRACK_PARAM(lpSelectorEntry);

        auto win32_impl_result = g_api_table.GetThreadSelectorEntry(hThread, dwSelector, lpSelectorEntry);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_Wow64GetThreadSelectorEntry(win32::Windows::Win32::Foundation::HANDLE hThread, uint32_t dwSelector, win32::Windows::Win32::System::Diagnostics::Debug::WOW64_LDT_ENTRY* lpSelectorEntry) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hThread);
        ORBIT_TRACK_PARAM(dwSelector);
        ORBIT_TRACK_PARAM(lpSelectorEntry);

        auto win32_impl_result = g_api_table.Wow64GetThreadSelectorEntry(hThread, dwSelector, lpSelectorEntry);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DebugSetProcessKillOnExit(win32::Windows::Win32::Foundation::BOOL KillOnExit) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(KillOnExit);

        auto win32_impl_result = g_api_table.DebugSetProcessKillOnExit(KillOnExit);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DebugBreakProcess(win32::Windows::Win32::Foundation::HANDLE Process) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Process);

        auto win32_impl_result = g_api_table.DebugBreakProcess(Process);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FormatMessageA(win32::Windows::Win32::System::Diagnostics::Debug::FORMAT_MESSAGE_OPTIONS dwFlags, void* lpSource, uint32_t dwMessageId, uint32_t dwLanguageId, win32::Windows::Win32::Foundation::PSTR lpBuffer, uint32_t nSize, int8_t** Arguments) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(lpSource);
        ORBIT_TRACK_PARAM(dwMessageId);
        ORBIT_TRACK_PARAM(dwLanguageId);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(nSize);
        ORBIT_TRACK_PARAM(Arguments);

        auto win32_impl_result = g_api_table.FormatMessageA(dwFlags, lpSource, dwMessageId, dwLanguageId, lpBuffer, nSize, Arguments);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FormatMessageW(win32::Windows::Win32::System::Diagnostics::Debug::FORMAT_MESSAGE_OPTIONS dwFlags, void* lpSource, uint32_t dwMessageId, uint32_t dwLanguageId, win32::Windows::Win32::Foundation::PWSTR lpBuffer, uint32_t nSize, int8_t** Arguments) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(lpSource);
        ORBIT_TRACK_PARAM(dwMessageId);
        ORBIT_TRACK_PARAM(dwLanguageId);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(nSize);
        ORBIT_TRACK_PARAM(Arguments);

        auto win32_impl_result = g_api_table.FormatMessageW(dwFlags, lpSource, dwMessageId, dwLanguageId, lpBuffer, nSize, Arguments);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CopyContext(win32::Windows::Win32::System::Diagnostics::Debug::CONTEXT* Destination, uint32_t ContextFlags, win32::Windows::Win32::System::Diagnostics::Debug::CONTEXT* Source) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Destination);
        ORBIT_TRACK_PARAM(ContextFlags);
        ORBIT_TRACK_PARAM(Source);

        auto win32_impl_result = g_api_table.CopyContext(Destination, ContextFlags, Source);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_InitializeContext(void* Buffer, uint32_t ContextFlags, win32::Windows::Win32::System::Diagnostics::Debug::CONTEXT** Context, uint32_t* ContextLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(ContextFlags);
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(ContextLength);

        auto win32_impl_result = g_api_table.InitializeContext(Buffer, ContextFlags, Context, ContextLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint64_t __stdcall ORBIT_IMPL_GetEnabledXStateFeatures() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.GetEnabledXStateFeatures();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetXStateFeaturesMask(win32::Windows::Win32::System::Diagnostics::Debug::CONTEXT* Context, uint64_t* FeatureMask) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(FeatureMask);

        auto win32_impl_result = g_api_table.GetXStateFeaturesMask(Context, FeatureMask);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_LocateXStateFeature(win32::Windows::Win32::System::Diagnostics::Debug::CONTEXT* Context, uint32_t FeatureId, uint32_t* Length) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(FeatureId);
        ORBIT_TRACK_PARAM(Length);

        auto win32_impl_result = g_api_table.LocateXStateFeature(Context, FeatureId, Length);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetXStateFeaturesMask(win32::Windows::Win32::System::Diagnostics::Debug::CONTEXT* Context, uint64_t FeatureMask) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(FeatureMask);

        auto win32_impl_result = g_api_table.SetXStateFeaturesMask(Context, FeatureMask);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_NT_HEADERS32* __stdcall ORBIT_IMPL_CheckSumMappedFile(void* BaseAddress, uint32_t FileLength, uint32_t* HeaderSum, uint32_t* CheckSum) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(BaseAddress);
        ORBIT_TRACK_PARAM(FileLength);
        ORBIT_TRACK_PARAM(HeaderSum);
        ORBIT_TRACK_PARAM(CheckSum);

        auto win32_impl_result = g_api_table.CheckSumMappedFile(BaseAddress, FileLength, HeaderSum, CheckSum);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetImageConfigInformation(win32::Windows::Win32::System::Diagnostics::Debug::LOADED_IMAGE* LoadedImage, win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_LOAD_CONFIG_DIRECTORY32* ImageConfigInformation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LoadedImage);
        ORBIT_TRACK_PARAM(ImageConfigInformation);

        auto win32_impl_result = g_api_table.GetImageConfigInformation(LoadedImage, ImageConfigInformation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetImageConfigInformation(win32::Windows::Win32::System::Diagnostics::Debug::LOADED_IMAGE* LoadedImage, win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_LOAD_CONFIG_DIRECTORY32* ImageConfigInformation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LoadedImage);
        ORBIT_TRACK_PARAM(ImageConfigInformation);

        auto win32_impl_result = g_api_table.SetImageConfigInformation(LoadedImage, ImageConfigInformation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_NT_HEADERS32* __stdcall ORBIT_IMPL_ImageNtHeader(void* Base) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Base);

        auto win32_impl_result = g_api_table.ImageNtHeader(Base);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_SECTION_HEADER* __stdcall ORBIT_IMPL_ImageRvaToSection(win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_NT_HEADERS32* NtHeaders, void* Base, uint32_t Rva) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NtHeaders);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(Rva);

        auto win32_impl_result = g_api_table.ImageRvaToSection(NtHeaders, Base, Rva);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_ImageRvaToVa(win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_NT_HEADERS32* NtHeaders, void* Base, uint32_t Rva, win32::Windows::Win32::System::Diagnostics::Debug::IMAGE_SECTION_HEADER** LastRvaSection) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NtHeaders);
        ORBIT_TRACK_PARAM(Base);
        ORBIT_TRACK_PARAM(Rva);
        ORBIT_TRACK_PARAM(LastRvaSection);

        auto win32_impl_result = g_api_table.ImageRvaToVa(NtHeaders, Base, Rva, LastRvaSection);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_StackWalk(uint32_t MachineType, win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::HANDLE hThread, win32::Windows::Win32::System::Diagnostics::Debug::STACKFRAME* StackFrame, void* ContextRecord, win32::Windows::Win32::System::Diagnostics::Debug::PREAD_PROCESS_MEMORY_ROUTINE* ReadMemoryRoutine, win32::Windows::Win32::System::Diagnostics::Debug::PFUNCTION_TABLE_ACCESS_ROUTINE* FunctionTableAccessRoutine, win32::Windows::Win32::System::Diagnostics::Debug::PGET_MODULE_BASE_ROUTINE* GetModuleBaseRoutine, win32::Windows::Win32::System::Diagnostics::Debug::PTRANSLATE_ADDRESS_ROUTINE* TranslateAddress) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(MachineType);
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(hThread);
        ORBIT_TRACK_PARAM(StackFrame);
        ORBIT_TRACK_PARAM(ContextRecord);
        ORBIT_TRACK_PARAM(ReadMemoryRoutine);
        ORBIT_TRACK_PARAM(FunctionTableAccessRoutine);
        ORBIT_TRACK_PARAM(GetModuleBaseRoutine);
        ORBIT_TRACK_PARAM(TranslateAddress);

        auto win32_impl_result = g_api_table.StackWalk(MachineType, hProcess, hThread, StackFrame, ContextRecord, ReadMemoryRoutine, FunctionTableAccessRoutine, GetModuleBaseRoutine, TranslateAddress);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumerateModules(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMMODULES_CALLBACK* EnumModulesCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(EnumModulesCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumerateModules(hProcess, EnumModulesCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EnumerateLoadedModules(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::PENUMLOADED_MODULES_CALLBACK* EnumLoadedModulesCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(EnumLoadedModulesCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.EnumerateLoadedModules(hProcess, EnumLoadedModulesCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SymFunctionTableAccess(win32::Windows::Win32::Foundation::HANDLE hProcess, uint32_t AddrBase) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(AddrBase);

        auto win32_impl_result = g_api_table.SymFunctionTableAccess(hProcess, AddrBase);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetModuleInfo(win32::Windows::Win32::Foundation::HANDLE hProcess, uint32_t dwAddr, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_MODULE* ModuleInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(dwAddr);
        ORBIT_TRACK_PARAM(ModuleInfo);

        auto win32_impl_result = g_api_table.SymGetModuleInfo(hProcess, dwAddr, ModuleInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetModuleInfoW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint32_t dwAddr, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_MODULEW* ModuleInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(dwAddr);
        ORBIT_TRACK_PARAM(ModuleInfo);

        auto win32_impl_result = g_api_table.SymGetModuleInfoW(hProcess, dwAddr, ModuleInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SymGetModuleBase(win32::Windows::Win32::Foundation::HANDLE hProcess, uint32_t dwAddr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(dwAddr);

        auto win32_impl_result = g_api_table.SymGetModuleBase(hProcess, dwAddr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetLineFromAddr(win32::Windows::Win32::Foundation::HANDLE hProcess, uint32_t dwAddr, uint32_t* pdwDisplacement, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_LINE* Line) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(dwAddr);
        ORBIT_TRACK_PARAM(pdwDisplacement);
        ORBIT_TRACK_PARAM(Line);

        auto win32_impl_result = g_api_table.SymGetLineFromAddr(hProcess, dwAddr, pdwDisplacement, Line);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetLineFromName(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR ModuleName, win32::Windows::Win32::Foundation::PSTR FileName, uint32_t dwLineNumber, int32_t* plDisplacement, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_LINE* Line) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(ModuleName);
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(dwLineNumber);
        ORBIT_TRACK_PARAM(plDisplacement);
        ORBIT_TRACK_PARAM(Line);

        auto win32_impl_result = g_api_table.SymGetLineFromName(hProcess, ModuleName, FileName, dwLineNumber, plDisplacement, Line);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetLineNext(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_LINE* Line) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Line);

        auto win32_impl_result = g_api_table.SymGetLineNext(hProcess, Line);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetLinePrev(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_LINE* Line) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Line);

        auto win32_impl_result = g_api_table.SymGetLinePrev(hProcess, Line);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymUnloadModule(win32::Windows::Win32::Foundation::HANDLE hProcess, uint32_t BaseOfDll) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);

        auto win32_impl_result = g_api_table.SymUnloadModule(hProcess, BaseOfDll);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymUnDName(win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_SYMBOL* sym, win32::Windows::Win32::Foundation::PSTR UnDecName, uint32_t UnDecNameLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(sym);
        ORBIT_TRACK_PARAM(UnDecName);
        ORBIT_TRACK_PARAM(UnDecNameLength);

        auto win32_impl_result = g_api_table.SymUnDName(sym, UnDecName, UnDecNameLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymRegisterCallback(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::PSYMBOL_REGISTERED_CALLBACK* CallbackFunction, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(CallbackFunction);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymRegisterCallback(hProcess, CallbackFunction, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymRegisterFunctionEntryCallback(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::PSYMBOL_FUNCENTRY_CALLBACK* CallbackFunction, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(CallbackFunction);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymRegisterFunctionEntryCallback(hProcess, CallbackFunction, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSymFromAddr(win32::Windows::Win32::Foundation::HANDLE hProcess, uint32_t dwAddr, uint32_t* pdwDisplacement, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_SYMBOL* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(dwAddr);
        ORBIT_TRACK_PARAM(pdwDisplacement);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymGetSymFromAddr(hProcess, dwAddr, pdwDisplacement, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSymFromName(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR Name, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_SYMBOL* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Name);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymGetSymFromName(hProcess, Name, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumerateSymbols(win32::Windows::Win32::Foundation::HANDLE hProcess, uint32_t BaseOfDll, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMSYMBOLS_CALLBACK* EnumSymbolsCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(EnumSymbolsCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumerateSymbols(hProcess, BaseOfDll, EnumSymbolsCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymEnumerateSymbolsW(win32::Windows::Win32::Foundation::HANDLE hProcess, uint32_t BaseOfDll, win32::Windows::Win32::System::Diagnostics::Debug::PSYM_ENUMSYMBOLS_CALLBACKW* EnumSymbolsCallback, void* UserContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(EnumSymbolsCallback);
        ORBIT_TRACK_PARAM(UserContext);

        auto win32_impl_result = g_api_table.SymEnumerateSymbolsW(hProcess, BaseOfDll, EnumSymbolsCallback, UserContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SymLoadModule(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::HANDLE hFile, win32::Windows::Win32::Foundation::PSTR ImageName, win32::Windows::Win32::Foundation::PSTR ModuleName, uint32_t BaseOfDll, uint32_t SizeOfDll) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(hFile);
        ORBIT_TRACK_PARAM(ImageName);
        ORBIT_TRACK_PARAM(ModuleName);
        ORBIT_TRACK_PARAM(BaseOfDll);
        ORBIT_TRACK_PARAM(SizeOfDll);

        auto win32_impl_result = g_api_table.SymLoadModule(hProcess, hFile, ImageName, ModuleName, BaseOfDll, SizeOfDll);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSymNext(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_SYMBOL* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymGetSymNext(hProcess, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SymGetSymPrev(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::Diagnostics::Debug::IMAGEHLP_SYMBOL* Symbol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(Symbol);

        auto win32_impl_result = g_api_table.SymGetSymPrev(hProcess, Symbol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
