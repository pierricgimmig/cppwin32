// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_Diagnostics_ProcessSnapshotting_0_H
#define WIN32_Windows_Win32_System_Diagnostics_ProcessSnapshotting_0_H
WIN32_EXPORT namespace win32::Windows::Win32::System::Diagnostics::ProcessSnapshotting
{
#pragma region enums
    enum class PSS_CAPTURE_FLAGS : uint32_t
    {
        PSS_CAPTURE_NONE = 0x0,
        PSS_CAPTURE_VA_CLONE = 0x1,
        PSS_CAPTURE_RESERVED_00000002 = 0x2,
        PSS_CAPTURE_HANDLES = 0x4,
        PSS_CAPTURE_HANDLE_NAME_INFORMATION = 0x8,
        PSS_CAPTURE_HANDLE_BASIC_INFORMATION = 0x10,
        PSS_CAPTURE_HANDLE_TYPE_SPECIFIC_INFORMATION = 0x20,
        PSS_CAPTURE_HANDLE_TRACE = 0x40,
        PSS_CAPTURE_THREADS = 0x80,
        PSS_CAPTURE_THREAD_CONTEXT = 0x100,
        PSS_CAPTURE_THREAD_CONTEXT_EXTENDED = 0x200,
        PSS_CAPTURE_RESERVED_00000400 = 0x400,
        PSS_CAPTURE_VA_SPACE = 0x800,
        PSS_CAPTURE_VA_SPACE_SECTION_INFORMATION = 0x1000,
        PSS_CAPTURE_IPT_TRACE = 0x2000,
        PSS_CAPTURE_RESERVED_00004000 = 0x4000,
        PSS_CREATE_BREAKAWAY_OPTIONAL = 0x4000000,
        PSS_CREATE_BREAKAWAY = 0x8000000,
        PSS_CREATE_FORCE_BREAKAWAY = 0x10000000,
        PSS_CREATE_USE_VM_ALLOCATIONS = 0x20000000,
        PSS_CREATE_MEASURE_PERFORMANCE = 0x40000000,
        PSS_CREATE_RELEASE_SECTION = 0x80000000,
    };
    enum class PSS_DUPLICATE_FLAGS : uint32_t
    {
        PSS_DUPLICATE_NONE = 0x0,
        PSS_DUPLICATE_CLOSE_SOURCE = 0x1,
    };
    enum class PSS_HANDLE_FLAGS : uint32_t
    {
        PSS_HANDLE_NONE = 0x0,
        PSS_HANDLE_HAVE_TYPE = 0x1,
        PSS_HANDLE_HAVE_NAME = 0x2,
        PSS_HANDLE_HAVE_BASIC_INFORMATION = 0x4,
        PSS_HANDLE_HAVE_TYPE_SPECIFIC_INFORMATION = 0x8,
    };
    enum class PSS_OBJECT_TYPE : int32_t
    {
        PSS_OBJECT_TYPE_UNKNOWN = 0,
        PSS_OBJECT_TYPE_PROCESS = 1,
        PSS_OBJECT_TYPE_THREAD = 2,
        PSS_OBJECT_TYPE_MUTANT = 3,
        PSS_OBJECT_TYPE_EVENT = 4,
        PSS_OBJECT_TYPE_SECTION = 5,
        PSS_OBJECT_TYPE_SEMAPHORE = 6,
    };
    enum class PSS_PROCESS_FLAGS : uint32_t
    {
        PSS_PROCESS_FLAGS_NONE = 0x0,
        PSS_PROCESS_FLAGS_PROTECTED = 0x1,
        PSS_PROCESS_FLAGS_WOW64 = 0x2,
        PSS_PROCESS_FLAGS_RESERVED_03 = 0x4,
        PSS_PROCESS_FLAGS_RESERVED_04 = 0x8,
        PSS_PROCESS_FLAGS_FROZEN = 0x10,
    };
    enum class PSS_QUERY_INFORMATION_CLASS : int32_t
    {
        PSS_QUERY_PROCESS_INFORMATION = 0,
        PSS_QUERY_VA_CLONE_INFORMATION = 1,
        PSS_QUERY_AUXILIARY_PAGES_INFORMATION = 2,
        PSS_QUERY_VA_SPACE_INFORMATION = 3,
        PSS_QUERY_HANDLE_INFORMATION = 4,
        PSS_QUERY_THREAD_INFORMATION = 5,
        PSS_QUERY_HANDLE_TRACE_INFORMATION = 6,
        PSS_QUERY_PERFORMANCE_COUNTERS = 7,
    };
    enum class PSS_THREAD_FLAGS : uint32_t
    {
        PSS_THREAD_FLAGS_NONE = 0x0,
        PSS_THREAD_FLAGS_TERMINATED = 0x1,
    };
    enum class PSS_WALK_INFORMATION_CLASS : int32_t
    {
        PSS_WALK_AUXILIARY_PAGES = 0,
        PSS_WALK_VA_SPACE = 1,
        PSS_WALK_HANDLES = 2,
        PSS_WALK_THREADS = 3,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct HPSS;
    struct HPSSWALK;
    struct PSS_ALLOCATOR;
    struct PSS_AUXILIARY_PAGES_INFORMATION;
    struct PSS_AUXILIARY_PAGE_ENTRY;
    struct PSS_HANDLE_ENTRY;
    struct PSS_HANDLE_INFORMATION;
    struct PSS_HANDLE_TRACE_INFORMATION;
    struct PSS_PERFORMANCE_COUNTERS;
    struct PSS_PROCESS_INFORMATION;
    struct PSS_THREAD_ENTRY;
    struct PSS_THREAD_INFORMATION;
    struct PSS_VA_CLONE_INFORMATION;
    struct PSS_VA_SPACE_ENTRY;
    struct PSS_VA_SPACE_INFORMATION;
#pragma endregion forward_declarations

#pragma region delegates
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
