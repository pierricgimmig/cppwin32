// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_UI_Xaml_Diagnostics_2_H
#define WIN32_Windows_Win32_UI_Xaml_Diagnostics_2_H
#include "win32/Windows.Win32.UI.Xaml.Diagnostics.h"
#include "win32/impl/Windows.Win32.UI.Xaml.Diagnostics.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::UI::Xaml::Diagnostics
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_InitializeXamlDiagnostic(win32::Windows::Win32::Foundation::PWSTR endPointName, uint32_t pid, win32::Windows::Win32::Foundation::PWSTR wszDllXamlDiagnostics, win32::Windows::Win32::Foundation::PWSTR wszTAPDllName, ::win32::guid tapClsid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(endPointName);
        ORBIT_TRACK_PARAM(pid);
        ORBIT_TRACK_PARAM(wszDllXamlDiagnostics);
        ORBIT_TRACK_PARAM(wszTAPDllName);
        ORBIT_TRACK_PARAM(tapClsid);

        auto win32_impl_result = g_api_table.InitializeXamlDiagnostic(endPointName, pid, wszDllXamlDiagnostics, wszTAPDllName, tapClsid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_InitializeXamlDiagnosticsEx(win32::Windows::Win32::Foundation::PWSTR endPointName, uint32_t pid, win32::Windows::Win32::Foundation::PWSTR wszDllXamlDiagnostics, win32::Windows::Win32::Foundation::PWSTR wszTAPDllName, ::win32::guid tapClsid, win32::Windows::Win32::Foundation::PWSTR wszInitializationData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(endPointName);
        ORBIT_TRACK_PARAM(pid);
        ORBIT_TRACK_PARAM(wszDllXamlDiagnostics);
        ORBIT_TRACK_PARAM(wszTAPDllName);
        ORBIT_TRACK_PARAM(tapClsid);
        ORBIT_TRACK_PARAM(wszInitializationData);

        auto win32_impl_result = g_api_table.InitializeXamlDiagnosticsEx(endPointName, pid, wszDllXamlDiagnostics, wszTAPDllName, tapClsid, wszInitializationData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
