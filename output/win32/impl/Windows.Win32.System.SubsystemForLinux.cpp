// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_SubsystemForLinux_2_H
#define WIN32_Windows_Win32_System_SubsystemForLinux_2_H
#include "win32/Windows.Win32.System.SubsystemForLinux.h"
#include "win32/impl/Windows.Win32.System.SubsystemForLinux.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::System::SubsystemForLinux
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WslIsDistributionRegistered(win32::Windows::Win32::Foundation::PWSTR distributionName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(distributionName);

        auto win32_impl_result = g_api_table.WslIsDistributionRegistered(distributionName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WslRegisterDistribution(win32::Windows::Win32::Foundation::PWSTR distributionName, win32::Windows::Win32::Foundation::PWSTR tarGzFilename) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(distributionName);
        ORBIT_TRACK_PARAM(tarGzFilename);

        auto win32_impl_result = g_api_table.WslRegisterDistribution(distributionName, tarGzFilename);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WslUnregisterDistribution(win32::Windows::Win32::Foundation::PWSTR distributionName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(distributionName);

        auto win32_impl_result = g_api_table.WslUnregisterDistribution(distributionName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WslConfigureDistribution(win32::Windows::Win32::Foundation::PWSTR distributionName, uint32_t defaultUID, win32::Windows::Win32::System::SubsystemForLinux::WSL_DISTRIBUTION_FLAGS wslDistributionFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(distributionName);
        ORBIT_TRACK_PARAM(defaultUID);
        ORBIT_TRACK_PARAM(wslDistributionFlags);

        auto win32_impl_result = g_api_table.WslConfigureDistribution(distributionName, defaultUID, wslDistributionFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WslGetDistributionConfiguration(win32::Windows::Win32::Foundation::PWSTR distributionName, uint32_t* distributionVersion, uint32_t* defaultUID, win32::Windows::Win32::System::SubsystemForLinux::WSL_DISTRIBUTION_FLAGS* wslDistributionFlags, win32::Windows::Win32::Foundation::PSTR** defaultEnvironmentVariables, uint32_t* defaultEnvironmentVariableCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(distributionName);
        ORBIT_TRACK_PARAM(distributionVersion);
        ORBIT_TRACK_PARAM(defaultUID);
        ORBIT_TRACK_PARAM(wslDistributionFlags);
        ORBIT_TRACK_PARAM(defaultEnvironmentVariables);
        ORBIT_TRACK_PARAM(defaultEnvironmentVariableCount);

        auto win32_impl_result = g_api_table.WslGetDistributionConfiguration(distributionName, distributionVersion, defaultUID, wslDistributionFlags, defaultEnvironmentVariables, defaultEnvironmentVariableCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WslLaunchInteractive(win32::Windows::Win32::Foundation::PWSTR distributionName, win32::Windows::Win32::Foundation::PWSTR command, win32::Windows::Win32::Foundation::BOOL useCurrentWorkingDirectory, uint32_t* exitCode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(distributionName);
        ORBIT_TRACK_PARAM(command);
        ORBIT_TRACK_PARAM(useCurrentWorkingDirectory);
        ORBIT_TRACK_PARAM(exitCode);

        auto win32_impl_result = g_api_table.WslLaunchInteractive(distributionName, command, useCurrentWorkingDirectory, exitCode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WslLaunch(win32::Windows::Win32::Foundation::PWSTR distributionName, win32::Windows::Win32::Foundation::PWSTR command, win32::Windows::Win32::Foundation::BOOL useCurrentWorkingDirectory, win32::Windows::Win32::Foundation::HANDLE stdIn, win32::Windows::Win32::Foundation::HANDLE stdOut, win32::Windows::Win32::Foundation::HANDLE stdErr, win32::Windows::Win32::Foundation::HANDLE* process) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(distributionName);
        ORBIT_TRACK_PARAM(command);
        ORBIT_TRACK_PARAM(useCurrentWorkingDirectory);
        ORBIT_TRACK_PARAM(stdIn);
        ORBIT_TRACK_PARAM(stdOut);
        ORBIT_TRACK_PARAM(stdErr);
        ORBIT_TRACK_PARAM(process);

        auto win32_impl_result = g_api_table.WslLaunch(distributionName, command, useCurrentWorkingDirectory, stdIn, stdOut, stdErr, process);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
