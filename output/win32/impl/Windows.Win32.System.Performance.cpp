// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_Performance_2_H
#define WIN32_Windows_Win32_System_Performance_2_H
#include "win32/Windows.Win32.System.Performance.h"
#include "win32/impl/Windows.Win32.System.Performance.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::System::Performance
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryPerformanceCounter(win32::Windows::Win32::Foundation::LARGE_INTEGER* lpPerformanceCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpPerformanceCount);

        auto win32_impl_result = g_api_table.QueryPerformanceCounter(lpPerformanceCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryPerformanceFrequency(win32::Windows::Win32::Foundation::LARGE_INTEGER* lpFrequency) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpFrequency);

        auto win32_impl_result = g_api_table.QueryPerformanceFrequency(lpFrequency);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_InstallPerfDllW(win32::Windows::Win32::Foundation::PWSTR szComputerName, win32::Windows::Win32::Foundation::PWSTR lpIniFile, size_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szComputerName);
        ORBIT_TRACK_PARAM(lpIniFile);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.InstallPerfDllW(szComputerName, lpIniFile, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_InstallPerfDllA(win32::Windows::Win32::Foundation::PSTR szComputerName, win32::Windows::Win32::Foundation::PSTR lpIniFile, size_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szComputerName);
        ORBIT_TRACK_PARAM(lpIniFile);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.InstallPerfDllA(szComputerName, lpIniFile, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_LoadPerfCounterTextStringsA(win32::Windows::Win32::Foundation::PSTR lpCommandLine, win32::Windows::Win32::Foundation::BOOL bQuietModeArg) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpCommandLine);
        ORBIT_TRACK_PARAM(bQuietModeArg);

        auto win32_impl_result = g_api_table.LoadPerfCounterTextStringsA(lpCommandLine, bQuietModeArg);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_LoadPerfCounterTextStringsW(win32::Windows::Win32::Foundation::PWSTR lpCommandLine, win32::Windows::Win32::Foundation::BOOL bQuietModeArg) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpCommandLine);
        ORBIT_TRACK_PARAM(bQuietModeArg);

        auto win32_impl_result = g_api_table.LoadPerfCounterTextStringsW(lpCommandLine, bQuietModeArg);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_UnloadPerfCounterTextStringsW(win32::Windows::Win32::Foundation::PWSTR lpCommandLine, win32::Windows::Win32::Foundation::BOOL bQuietModeArg) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpCommandLine);
        ORBIT_TRACK_PARAM(bQuietModeArg);

        auto win32_impl_result = g_api_table.UnloadPerfCounterTextStringsW(lpCommandLine, bQuietModeArg);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_UnloadPerfCounterTextStringsA(win32::Windows::Win32::Foundation::PSTR lpCommandLine, win32::Windows::Win32::Foundation::BOOL bQuietModeArg) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpCommandLine);
        ORBIT_TRACK_PARAM(bQuietModeArg);

        auto win32_impl_result = g_api_table.UnloadPerfCounterTextStringsA(lpCommandLine, bQuietModeArg);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_UpdatePerfNameFilesA(win32::Windows::Win32::Foundation::PSTR szNewCtrFilePath, win32::Windows::Win32::Foundation::PSTR szNewHlpFilePath, win32::Windows::Win32::Foundation::PSTR szLanguageID, size_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szNewCtrFilePath);
        ORBIT_TRACK_PARAM(szNewHlpFilePath);
        ORBIT_TRACK_PARAM(szLanguageID);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.UpdatePerfNameFilesA(szNewCtrFilePath, szNewHlpFilePath, szLanguageID, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_UpdatePerfNameFilesW(win32::Windows::Win32::Foundation::PWSTR szNewCtrFilePath, win32::Windows::Win32::Foundation::PWSTR szNewHlpFilePath, win32::Windows::Win32::Foundation::PWSTR szLanguageID, size_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szNewCtrFilePath);
        ORBIT_TRACK_PARAM(szNewHlpFilePath);
        ORBIT_TRACK_PARAM(szLanguageID);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.UpdatePerfNameFilesW(szNewCtrFilePath, szNewHlpFilePath, szLanguageID, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetServiceAsTrustedA(win32::Windows::Win32::Foundation::PSTR szReserved, win32::Windows::Win32::Foundation::PSTR szServiceName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szReserved);
        ORBIT_TRACK_PARAM(szServiceName);

        auto win32_impl_result = g_api_table.SetServiceAsTrustedA(szReserved, szServiceName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetServiceAsTrustedW(win32::Windows::Win32::Foundation::PWSTR szReserved, win32::Windows::Win32::Foundation::PWSTR szServiceName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szReserved);
        ORBIT_TRACK_PARAM(szServiceName);

        auto win32_impl_result = g_api_table.SetServiceAsTrustedW(szReserved, szServiceName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_BackupPerfRegistryToFileW(win32::Windows::Win32::Foundation::PWSTR szFileName, win32::Windows::Win32::Foundation::PWSTR szCommentString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szFileName);
        ORBIT_TRACK_PARAM(szCommentString);

        auto win32_impl_result = g_api_table.BackupPerfRegistryToFileW(szFileName, szCommentString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RestorePerfRegistryFromFileW(win32::Windows::Win32::Foundation::PWSTR szFileName, win32::Windows::Win32::Foundation::PWSTR szLangId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szFileName);
        ORBIT_TRACK_PARAM(szLangId);

        auto win32_impl_result = g_api_table.RestorePerfRegistryFromFileW(szFileName, szLangId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfStartProvider(::win32::guid* ProviderGuid, win32::Windows::Win32::System::Performance::PERFLIBREQUEST* ControlCallback, win32::Windows::Win32::System::Performance::PerfProviderHandle* phProvider) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ProviderGuid);
        ORBIT_TRACK_PARAM(ControlCallback);
        ORBIT_TRACK_PARAM(phProvider);

        auto win32_impl_result = g_api_table.PerfStartProvider(ProviderGuid, ControlCallback, phProvider);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfStartProviderEx(::win32::guid* ProviderGuid, win32::Windows::Win32::System::Performance::PERF_PROVIDER_CONTEXT* ProviderContext, win32::Windows::Win32::System::Performance::PerfProviderHandle* Provider) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ProviderGuid);
        ORBIT_TRACK_PARAM(ProviderContext);
        ORBIT_TRACK_PARAM(Provider);

        auto win32_impl_result = g_api_table.PerfStartProviderEx(ProviderGuid, ProviderContext, Provider);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfStopProvider(win32::Windows::Win32::System::Performance::PerfProviderHandle ProviderHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ProviderHandle);

        auto win32_impl_result = g_api_table.PerfStopProvider(ProviderHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfSetCounterSetInfo(win32::Windows::Win32::Foundation::HANDLE ProviderHandle, win32::Windows::Win32::System::Performance::PERF_COUNTERSET_INFO* Template, uint32_t TemplateSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ProviderHandle);
        ORBIT_TRACK_PARAM(Template);
        ORBIT_TRACK_PARAM(TemplateSize);

        auto win32_impl_result = g_api_table.PerfSetCounterSetInfo(ProviderHandle, Template, TemplateSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Performance::PERF_COUNTERSET_INSTANCE* __stdcall ORBIT_IMPL_PerfCreateInstance(win32::Windows::Win32::System::Performance::PerfProviderHandle ProviderHandle, ::win32::guid* CounterSetGuid, win32::Windows::Win32::Foundation::PWSTR Name, uint32_t Id) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ProviderHandle);
        ORBIT_TRACK_PARAM(CounterSetGuid);
        ORBIT_TRACK_PARAM(Name);
        ORBIT_TRACK_PARAM(Id);

        auto win32_impl_result = g_api_table.PerfCreateInstance(ProviderHandle, CounterSetGuid, Name, Id);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfDeleteInstance(win32::Windows::Win32::System::Performance::PerfProviderHandle Provider, win32::Windows::Win32::System::Performance::PERF_COUNTERSET_INSTANCE* InstanceBlock) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Provider);
        ORBIT_TRACK_PARAM(InstanceBlock);

        auto win32_impl_result = g_api_table.PerfDeleteInstance(Provider, InstanceBlock);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Performance::PERF_COUNTERSET_INSTANCE* __stdcall ORBIT_IMPL_PerfQueryInstance(win32::Windows::Win32::Foundation::HANDLE ProviderHandle, ::win32::guid* CounterSetGuid, win32::Windows::Win32::Foundation::PWSTR Name, uint32_t Id) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ProviderHandle);
        ORBIT_TRACK_PARAM(CounterSetGuid);
        ORBIT_TRACK_PARAM(Name);
        ORBIT_TRACK_PARAM(Id);

        auto win32_impl_result = g_api_table.PerfQueryInstance(ProviderHandle, CounterSetGuid, Name, Id);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfSetCounterRefValue(win32::Windows::Win32::Foundation::HANDLE Provider, win32::Windows::Win32::System::Performance::PERF_COUNTERSET_INSTANCE* Instance, uint32_t CounterId, void* Address) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Provider);
        ORBIT_TRACK_PARAM(Instance);
        ORBIT_TRACK_PARAM(CounterId);
        ORBIT_TRACK_PARAM(Address);

        auto win32_impl_result = g_api_table.PerfSetCounterRefValue(Provider, Instance, CounterId, Address);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfSetULongCounterValue(win32::Windows::Win32::Foundation::HANDLE Provider, win32::Windows::Win32::System::Performance::PERF_COUNTERSET_INSTANCE* Instance, uint32_t CounterId, uint32_t Value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Provider);
        ORBIT_TRACK_PARAM(Instance);
        ORBIT_TRACK_PARAM(CounterId);
        ORBIT_TRACK_PARAM(Value);

        auto win32_impl_result = g_api_table.PerfSetULongCounterValue(Provider, Instance, CounterId, Value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfSetULongLongCounterValue(win32::Windows::Win32::Foundation::HANDLE Provider, win32::Windows::Win32::System::Performance::PERF_COUNTERSET_INSTANCE* Instance, uint32_t CounterId, uint64_t Value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Provider);
        ORBIT_TRACK_PARAM(Instance);
        ORBIT_TRACK_PARAM(CounterId);
        ORBIT_TRACK_PARAM(Value);

        auto win32_impl_result = g_api_table.PerfSetULongLongCounterValue(Provider, Instance, CounterId, Value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfIncrementULongCounterValue(win32::Windows::Win32::Foundation::HANDLE Provider, win32::Windows::Win32::System::Performance::PERF_COUNTERSET_INSTANCE* Instance, uint32_t CounterId, uint32_t Value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Provider);
        ORBIT_TRACK_PARAM(Instance);
        ORBIT_TRACK_PARAM(CounterId);
        ORBIT_TRACK_PARAM(Value);

        auto win32_impl_result = g_api_table.PerfIncrementULongCounterValue(Provider, Instance, CounterId, Value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfIncrementULongLongCounterValue(win32::Windows::Win32::Foundation::HANDLE Provider, win32::Windows::Win32::System::Performance::PERF_COUNTERSET_INSTANCE* Instance, uint32_t CounterId, uint64_t Value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Provider);
        ORBIT_TRACK_PARAM(Instance);
        ORBIT_TRACK_PARAM(CounterId);
        ORBIT_TRACK_PARAM(Value);

        auto win32_impl_result = g_api_table.PerfIncrementULongLongCounterValue(Provider, Instance, CounterId, Value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfDecrementULongCounterValue(win32::Windows::Win32::Foundation::HANDLE Provider, win32::Windows::Win32::System::Performance::PERF_COUNTERSET_INSTANCE* Instance, uint32_t CounterId, uint32_t Value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Provider);
        ORBIT_TRACK_PARAM(Instance);
        ORBIT_TRACK_PARAM(CounterId);
        ORBIT_TRACK_PARAM(Value);

        auto win32_impl_result = g_api_table.PerfDecrementULongCounterValue(Provider, Instance, CounterId, Value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfDecrementULongLongCounterValue(win32::Windows::Win32::Foundation::HANDLE Provider, win32::Windows::Win32::System::Performance::PERF_COUNTERSET_INSTANCE* Instance, uint32_t CounterId, uint64_t Value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Provider);
        ORBIT_TRACK_PARAM(Instance);
        ORBIT_TRACK_PARAM(CounterId);
        ORBIT_TRACK_PARAM(Value);

        auto win32_impl_result = g_api_table.PerfDecrementULongLongCounterValue(Provider, Instance, CounterId, Value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfEnumerateCounterSet(win32::Windows::Win32::Foundation::PWSTR szMachine, ::win32::guid* pCounterSetIds, uint32_t cCounterSetIds, uint32_t* pcCounterSetIdsActual) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szMachine);
        ORBIT_TRACK_PARAM(pCounterSetIds);
        ORBIT_TRACK_PARAM(cCounterSetIds);
        ORBIT_TRACK_PARAM(pcCounterSetIdsActual);

        auto win32_impl_result = g_api_table.PerfEnumerateCounterSet(szMachine, pCounterSetIds, cCounterSetIds, pcCounterSetIdsActual);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfEnumerateCounterSetInstances(win32::Windows::Win32::Foundation::PWSTR szMachine, ::win32::guid* pCounterSetId, win32::Windows::Win32::System::Performance::PERF_INSTANCE_HEADER* pInstances, uint32_t cbInstances, uint32_t* pcbInstancesActual) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szMachine);
        ORBIT_TRACK_PARAM(pCounterSetId);
        ORBIT_TRACK_PARAM(pInstances);
        ORBIT_TRACK_PARAM(cbInstances);
        ORBIT_TRACK_PARAM(pcbInstancesActual);

        auto win32_impl_result = g_api_table.PerfEnumerateCounterSetInstances(szMachine, pCounterSetId, pInstances, cbInstances, pcbInstancesActual);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfQueryCounterSetRegistrationInfo(win32::Windows::Win32::Foundation::PWSTR szMachine, ::win32::guid* pCounterSetId, win32::Windows::Win32::System::Performance::PerfRegInfoType requestCode, uint32_t requestLangId, uint8_t* pbRegInfo, uint32_t cbRegInfo, uint32_t* pcbRegInfoActual) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szMachine);
        ORBIT_TRACK_PARAM(pCounterSetId);
        ORBIT_TRACK_PARAM(requestCode);
        ORBIT_TRACK_PARAM(requestLangId);
        ORBIT_TRACK_PARAM(pbRegInfo);
        ORBIT_TRACK_PARAM(cbRegInfo);
        ORBIT_TRACK_PARAM(pcbRegInfoActual);

        auto win32_impl_result = g_api_table.PerfQueryCounterSetRegistrationInfo(szMachine, pCounterSetId, requestCode, requestLangId, pbRegInfo, cbRegInfo, pcbRegInfoActual);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfOpenQueryHandle(win32::Windows::Win32::Foundation::PWSTR szMachine, win32::Windows::Win32::System::Performance::PerfQueryHandle* phQuery) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szMachine);
        ORBIT_TRACK_PARAM(phQuery);

        auto win32_impl_result = g_api_table.PerfOpenQueryHandle(szMachine, phQuery);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfCloseQueryHandle(win32::Windows::Win32::Foundation::HANDLE hQuery) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hQuery);

        auto win32_impl_result = g_api_table.PerfCloseQueryHandle(hQuery);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfQueryCounterInfo(win32::Windows::Win32::System::Performance::PerfQueryHandle hQuery, win32::Windows::Win32::System::Performance::PERF_COUNTER_IDENTIFIER* pCounters, uint32_t cbCounters, uint32_t* pcbCountersActual) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hQuery);
        ORBIT_TRACK_PARAM(pCounters);
        ORBIT_TRACK_PARAM(cbCounters);
        ORBIT_TRACK_PARAM(pcbCountersActual);

        auto win32_impl_result = g_api_table.PerfQueryCounterInfo(hQuery, pCounters, cbCounters, pcbCountersActual);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfQueryCounterData(win32::Windows::Win32::System::Performance::PerfQueryHandle hQuery, win32::Windows::Win32::System::Performance::PERF_DATA_HEADER* pCounterBlock, uint32_t cbCounterBlock, uint32_t* pcbCounterBlockActual) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hQuery);
        ORBIT_TRACK_PARAM(pCounterBlock);
        ORBIT_TRACK_PARAM(cbCounterBlock);
        ORBIT_TRACK_PARAM(pcbCounterBlockActual);

        auto win32_impl_result = g_api_table.PerfQueryCounterData(hQuery, pCounterBlock, cbCounterBlock, pcbCounterBlockActual);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfAddCounters(win32::Windows::Win32::System::Performance::PerfQueryHandle hQuery, win32::Windows::Win32::System::Performance::PERF_COUNTER_IDENTIFIER* pCounters, uint32_t cbCounters) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hQuery);
        ORBIT_TRACK_PARAM(pCounters);
        ORBIT_TRACK_PARAM(cbCounters);

        auto win32_impl_result = g_api_table.PerfAddCounters(hQuery, pCounters, cbCounters);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_PerfDeleteCounters(win32::Windows::Win32::System::Performance::PerfQueryHandle hQuery, win32::Windows::Win32::System::Performance::PERF_COUNTER_IDENTIFIER* pCounters, uint32_t cbCounters) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hQuery);
        ORBIT_TRACK_PARAM(pCounters);
        ORBIT_TRACK_PARAM(cbCounters);

        auto win32_impl_result = g_api_table.PerfDeleteCounters(hQuery, pCounters, cbCounters);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetDllVersion(win32::Windows::Win32::System::Performance::PDH_DLL_VERSION* lpdwVersion) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpdwVersion);

        auto win32_impl_result = g_api_table.PdhGetDllVersion(lpdwVersion);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhOpenQueryW(win32::Windows::Win32::Foundation::PWSTR szDataSource, size_t dwUserData, intptr_t* phQuery) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(dwUserData);
        ORBIT_TRACK_PARAM(phQuery);

        auto win32_impl_result = g_api_table.PdhOpenQueryW(szDataSource, dwUserData, phQuery);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhOpenQueryA(win32::Windows::Win32::Foundation::PSTR szDataSource, size_t dwUserData, intptr_t* phQuery) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(dwUserData);
        ORBIT_TRACK_PARAM(phQuery);

        auto win32_impl_result = g_api_table.PdhOpenQueryA(szDataSource, dwUserData, phQuery);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhAddCounterW(intptr_t hQuery, win32::Windows::Win32::Foundation::PWSTR szFullCounterPath, size_t dwUserData, intptr_t* phCounter) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hQuery);
        ORBIT_TRACK_PARAM(szFullCounterPath);
        ORBIT_TRACK_PARAM(dwUserData);
        ORBIT_TRACK_PARAM(phCounter);

        auto win32_impl_result = g_api_table.PdhAddCounterW(hQuery, szFullCounterPath, dwUserData, phCounter);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhAddCounterA(intptr_t hQuery, win32::Windows::Win32::Foundation::PSTR szFullCounterPath, size_t dwUserData, intptr_t* phCounter) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hQuery);
        ORBIT_TRACK_PARAM(szFullCounterPath);
        ORBIT_TRACK_PARAM(dwUserData);
        ORBIT_TRACK_PARAM(phCounter);

        auto win32_impl_result = g_api_table.PdhAddCounterA(hQuery, szFullCounterPath, dwUserData, phCounter);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhAddEnglishCounterW(intptr_t hQuery, win32::Windows::Win32::Foundation::PWSTR szFullCounterPath, size_t dwUserData, intptr_t* phCounter) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hQuery);
        ORBIT_TRACK_PARAM(szFullCounterPath);
        ORBIT_TRACK_PARAM(dwUserData);
        ORBIT_TRACK_PARAM(phCounter);

        auto win32_impl_result = g_api_table.PdhAddEnglishCounterW(hQuery, szFullCounterPath, dwUserData, phCounter);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhAddEnglishCounterA(intptr_t hQuery, win32::Windows::Win32::Foundation::PSTR szFullCounterPath, size_t dwUserData, intptr_t* phCounter) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hQuery);
        ORBIT_TRACK_PARAM(szFullCounterPath);
        ORBIT_TRACK_PARAM(dwUserData);
        ORBIT_TRACK_PARAM(phCounter);

        auto win32_impl_result = g_api_table.PdhAddEnglishCounterA(hQuery, szFullCounterPath, dwUserData, phCounter);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhCollectQueryDataWithTime(intptr_t hQuery, int64_t* pllTimeStamp) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hQuery);
        ORBIT_TRACK_PARAM(pllTimeStamp);

        auto win32_impl_result = g_api_table.PdhCollectQueryDataWithTime(hQuery, pllTimeStamp);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhValidatePathExW(intptr_t hDataSource, win32::Windows::Win32::Foundation::PWSTR szFullPathBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDataSource);
        ORBIT_TRACK_PARAM(szFullPathBuffer);

        auto win32_impl_result = g_api_table.PdhValidatePathExW(hDataSource, szFullPathBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhValidatePathExA(intptr_t hDataSource, win32::Windows::Win32::Foundation::PSTR szFullPathBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDataSource);
        ORBIT_TRACK_PARAM(szFullPathBuffer);

        auto win32_impl_result = g_api_table.PdhValidatePathExA(hDataSource, szFullPathBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhRemoveCounter(intptr_t hCounter) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCounter);

        auto win32_impl_result = g_api_table.PdhRemoveCounter(hCounter);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhCollectQueryData(intptr_t hQuery) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hQuery);

        auto win32_impl_result = g_api_table.PdhCollectQueryData(hQuery);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhCloseQuery(intptr_t hQuery) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hQuery);

        auto win32_impl_result = g_api_table.PdhCloseQuery(hQuery);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetFormattedCounterValue(intptr_t hCounter, win32::Windows::Win32::System::Performance::PDH_FMT dwFormat, uint32_t* lpdwType, win32::Windows::Win32::System::Performance::PDH_FMT_COUNTERVALUE* pValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCounter);
        ORBIT_TRACK_PARAM(dwFormat);
        ORBIT_TRACK_PARAM(lpdwType);
        ORBIT_TRACK_PARAM(pValue);

        auto win32_impl_result = g_api_table.PdhGetFormattedCounterValue(hCounter, dwFormat, lpdwType, pValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetFormattedCounterArrayA(intptr_t hCounter, win32::Windows::Win32::System::Performance::PDH_FMT dwFormat, uint32_t* lpdwBufferSize, uint32_t* lpdwItemCount, win32::Windows::Win32::System::Performance::PDH_FMT_COUNTERVALUE_ITEM_A* ItemBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCounter);
        ORBIT_TRACK_PARAM(dwFormat);
        ORBIT_TRACK_PARAM(lpdwBufferSize);
        ORBIT_TRACK_PARAM(lpdwItemCount);
        ORBIT_TRACK_PARAM(ItemBuffer);

        auto win32_impl_result = g_api_table.PdhGetFormattedCounterArrayA(hCounter, dwFormat, lpdwBufferSize, lpdwItemCount, ItemBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetFormattedCounterArrayW(intptr_t hCounter, win32::Windows::Win32::System::Performance::PDH_FMT dwFormat, uint32_t* lpdwBufferSize, uint32_t* lpdwItemCount, win32::Windows::Win32::System::Performance::PDH_FMT_COUNTERVALUE_ITEM_W* ItemBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCounter);
        ORBIT_TRACK_PARAM(dwFormat);
        ORBIT_TRACK_PARAM(lpdwBufferSize);
        ORBIT_TRACK_PARAM(lpdwItemCount);
        ORBIT_TRACK_PARAM(ItemBuffer);

        auto win32_impl_result = g_api_table.PdhGetFormattedCounterArrayW(hCounter, dwFormat, lpdwBufferSize, lpdwItemCount, ItemBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetRawCounterValue(intptr_t hCounter, uint32_t* lpdwType, win32::Windows::Win32::System::Performance::PDH_RAW_COUNTER* pValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCounter);
        ORBIT_TRACK_PARAM(lpdwType);
        ORBIT_TRACK_PARAM(pValue);

        auto win32_impl_result = g_api_table.PdhGetRawCounterValue(hCounter, lpdwType, pValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetRawCounterArrayA(intptr_t hCounter, uint32_t* lpdwBufferSize, uint32_t* lpdwItemCount, win32::Windows::Win32::System::Performance::PDH_RAW_COUNTER_ITEM_A* ItemBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCounter);
        ORBIT_TRACK_PARAM(lpdwBufferSize);
        ORBIT_TRACK_PARAM(lpdwItemCount);
        ORBIT_TRACK_PARAM(ItemBuffer);

        auto win32_impl_result = g_api_table.PdhGetRawCounterArrayA(hCounter, lpdwBufferSize, lpdwItemCount, ItemBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetRawCounterArrayW(intptr_t hCounter, uint32_t* lpdwBufferSize, uint32_t* lpdwItemCount, win32::Windows::Win32::System::Performance::PDH_RAW_COUNTER_ITEM_W* ItemBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCounter);
        ORBIT_TRACK_PARAM(lpdwBufferSize);
        ORBIT_TRACK_PARAM(lpdwItemCount);
        ORBIT_TRACK_PARAM(ItemBuffer);

        auto win32_impl_result = g_api_table.PdhGetRawCounterArrayW(hCounter, lpdwBufferSize, lpdwItemCount, ItemBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhCalculateCounterFromRawValue(intptr_t hCounter, win32::Windows::Win32::System::Performance::PDH_FMT dwFormat, win32::Windows::Win32::System::Performance::PDH_RAW_COUNTER* rawValue1, win32::Windows::Win32::System::Performance::PDH_RAW_COUNTER* rawValue2, win32::Windows::Win32::System::Performance::PDH_FMT_COUNTERVALUE* fmtValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCounter);
        ORBIT_TRACK_PARAM(dwFormat);
        ORBIT_TRACK_PARAM(rawValue1);
        ORBIT_TRACK_PARAM(rawValue2);
        ORBIT_TRACK_PARAM(fmtValue);

        auto win32_impl_result = g_api_table.PdhCalculateCounterFromRawValue(hCounter, dwFormat, rawValue1, rawValue2, fmtValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhComputeCounterStatistics(intptr_t hCounter, win32::Windows::Win32::System::Performance::PDH_FMT dwFormat, uint32_t dwFirstEntry, uint32_t dwNumEntries, win32::Windows::Win32::System::Performance::PDH_RAW_COUNTER* lpRawValueArray, win32::Windows::Win32::System::Performance::PDH_STATISTICS* data) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCounter);
        ORBIT_TRACK_PARAM(dwFormat);
        ORBIT_TRACK_PARAM(dwFirstEntry);
        ORBIT_TRACK_PARAM(dwNumEntries);
        ORBIT_TRACK_PARAM(lpRawValueArray);
        ORBIT_TRACK_PARAM(data);

        auto win32_impl_result = g_api_table.PdhComputeCounterStatistics(hCounter, dwFormat, dwFirstEntry, dwNumEntries, lpRawValueArray, data);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetCounterInfoW(intptr_t hCounter, win32::Windows::Win32::Foundation::BOOLEAN bRetrieveExplainText, uint32_t* pdwBufferSize, win32::Windows::Win32::System::Performance::PDH_COUNTER_INFO_W* lpBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCounter);
        ORBIT_TRACK_PARAM(bRetrieveExplainText);
        ORBIT_TRACK_PARAM(pdwBufferSize);
        ORBIT_TRACK_PARAM(lpBuffer);

        auto win32_impl_result = g_api_table.PdhGetCounterInfoW(hCounter, bRetrieveExplainText, pdwBufferSize, lpBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetCounterInfoA(intptr_t hCounter, win32::Windows::Win32::Foundation::BOOLEAN bRetrieveExplainText, uint32_t* pdwBufferSize, win32::Windows::Win32::System::Performance::PDH_COUNTER_INFO_A* lpBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCounter);
        ORBIT_TRACK_PARAM(bRetrieveExplainText);
        ORBIT_TRACK_PARAM(pdwBufferSize);
        ORBIT_TRACK_PARAM(lpBuffer);

        auto win32_impl_result = g_api_table.PdhGetCounterInfoA(hCounter, bRetrieveExplainText, pdwBufferSize, lpBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhSetCounterScaleFactor(intptr_t hCounter, int32_t lFactor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCounter);
        ORBIT_TRACK_PARAM(lFactor);

        auto win32_impl_result = g_api_table.PdhSetCounterScaleFactor(hCounter, lFactor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhConnectMachineW(win32::Windows::Win32::Foundation::PWSTR szMachineName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szMachineName);

        auto win32_impl_result = g_api_table.PdhConnectMachineW(szMachineName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhConnectMachineA(win32::Windows::Win32::Foundation::PSTR szMachineName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szMachineName);

        auto win32_impl_result = g_api_table.PdhConnectMachineA(szMachineName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhEnumMachinesW(win32::Windows::Win32::Foundation::PWSTR szDataSource, win32::Windows::Win32::Foundation::PWSTR mszMachineList, uint32_t* pcchBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(mszMachineList);
        ORBIT_TRACK_PARAM(pcchBufferSize);

        auto win32_impl_result = g_api_table.PdhEnumMachinesW(szDataSource, mszMachineList, pcchBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhEnumMachinesA(win32::Windows::Win32::Foundation::PSTR szDataSource, win32::Windows::Win32::Foundation::PSTR mszMachineList, uint32_t* pcchBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(mszMachineList);
        ORBIT_TRACK_PARAM(pcchBufferSize);

        auto win32_impl_result = g_api_table.PdhEnumMachinesA(szDataSource, mszMachineList, pcchBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhEnumObjectsW(win32::Windows::Win32::Foundation::PWSTR szDataSource, win32::Windows::Win32::Foundation::PWSTR szMachineName, win32::Windows::Win32::Foundation::PWSTR mszObjectList, uint32_t* pcchBufferSize, win32::Windows::Win32::System::Performance::PERF_DETAIL dwDetailLevel, win32::Windows::Win32::Foundation::BOOL bRefresh) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(mszObjectList);
        ORBIT_TRACK_PARAM(pcchBufferSize);
        ORBIT_TRACK_PARAM(dwDetailLevel);
        ORBIT_TRACK_PARAM(bRefresh);

        auto win32_impl_result = g_api_table.PdhEnumObjectsW(szDataSource, szMachineName, mszObjectList, pcchBufferSize, dwDetailLevel, bRefresh);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhEnumObjectsA(win32::Windows::Win32::Foundation::PSTR szDataSource, win32::Windows::Win32::Foundation::PSTR szMachineName, win32::Windows::Win32::Foundation::PSTR mszObjectList, uint32_t* pcchBufferSize, win32::Windows::Win32::System::Performance::PERF_DETAIL dwDetailLevel, win32::Windows::Win32::Foundation::BOOL bRefresh) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(mszObjectList);
        ORBIT_TRACK_PARAM(pcchBufferSize);
        ORBIT_TRACK_PARAM(dwDetailLevel);
        ORBIT_TRACK_PARAM(bRefresh);

        auto win32_impl_result = g_api_table.PdhEnumObjectsA(szDataSource, szMachineName, mszObjectList, pcchBufferSize, dwDetailLevel, bRefresh);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhEnumObjectItemsW(win32::Windows::Win32::Foundation::PWSTR szDataSource, win32::Windows::Win32::Foundation::PWSTR szMachineName, win32::Windows::Win32::Foundation::PWSTR szObjectName, win32::Windows::Win32::Foundation::PWSTR mszCounterList, uint32_t* pcchCounterListLength, win32::Windows::Win32::Foundation::PWSTR mszInstanceList, uint32_t* pcchInstanceListLength, win32::Windows::Win32::System::Performance::PERF_DETAIL dwDetailLevel, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(szObjectName);
        ORBIT_TRACK_PARAM(mszCounterList);
        ORBIT_TRACK_PARAM(pcchCounterListLength);
        ORBIT_TRACK_PARAM(mszInstanceList);
        ORBIT_TRACK_PARAM(pcchInstanceListLength);
        ORBIT_TRACK_PARAM(dwDetailLevel);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.PdhEnumObjectItemsW(szDataSource, szMachineName, szObjectName, mszCounterList, pcchCounterListLength, mszInstanceList, pcchInstanceListLength, dwDetailLevel, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhEnumObjectItemsA(win32::Windows::Win32::Foundation::PSTR szDataSource, win32::Windows::Win32::Foundation::PSTR szMachineName, win32::Windows::Win32::Foundation::PSTR szObjectName, win32::Windows::Win32::Foundation::PSTR mszCounterList, uint32_t* pcchCounterListLength, win32::Windows::Win32::Foundation::PSTR mszInstanceList, uint32_t* pcchInstanceListLength, win32::Windows::Win32::System::Performance::PERF_DETAIL dwDetailLevel, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(szObjectName);
        ORBIT_TRACK_PARAM(mszCounterList);
        ORBIT_TRACK_PARAM(pcchCounterListLength);
        ORBIT_TRACK_PARAM(mszInstanceList);
        ORBIT_TRACK_PARAM(pcchInstanceListLength);
        ORBIT_TRACK_PARAM(dwDetailLevel);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.PdhEnumObjectItemsA(szDataSource, szMachineName, szObjectName, mszCounterList, pcchCounterListLength, mszInstanceList, pcchInstanceListLength, dwDetailLevel, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhMakeCounterPathW(win32::Windows::Win32::System::Performance::PDH_COUNTER_PATH_ELEMENTS_W* pCounterPathElements, win32::Windows::Win32::Foundation::PWSTR szFullPathBuffer, uint32_t* pcchBufferSize, win32::Windows::Win32::System::Performance::PDH_PATH_FLAGS dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pCounterPathElements);
        ORBIT_TRACK_PARAM(szFullPathBuffer);
        ORBIT_TRACK_PARAM(pcchBufferSize);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.PdhMakeCounterPathW(pCounterPathElements, szFullPathBuffer, pcchBufferSize, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhMakeCounterPathA(win32::Windows::Win32::System::Performance::PDH_COUNTER_PATH_ELEMENTS_A* pCounterPathElements, win32::Windows::Win32::Foundation::PSTR szFullPathBuffer, uint32_t* pcchBufferSize, win32::Windows::Win32::System::Performance::PDH_PATH_FLAGS dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pCounterPathElements);
        ORBIT_TRACK_PARAM(szFullPathBuffer);
        ORBIT_TRACK_PARAM(pcchBufferSize);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.PdhMakeCounterPathA(pCounterPathElements, szFullPathBuffer, pcchBufferSize, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhParseCounterPathW(win32::Windows::Win32::Foundation::PWSTR szFullPathBuffer, win32::Windows::Win32::System::Performance::PDH_COUNTER_PATH_ELEMENTS_W* pCounterPathElements, uint32_t* pdwBufferSize, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szFullPathBuffer);
        ORBIT_TRACK_PARAM(pCounterPathElements);
        ORBIT_TRACK_PARAM(pdwBufferSize);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.PdhParseCounterPathW(szFullPathBuffer, pCounterPathElements, pdwBufferSize, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhParseCounterPathA(win32::Windows::Win32::Foundation::PSTR szFullPathBuffer, win32::Windows::Win32::System::Performance::PDH_COUNTER_PATH_ELEMENTS_A* pCounterPathElements, uint32_t* pdwBufferSize, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szFullPathBuffer);
        ORBIT_TRACK_PARAM(pCounterPathElements);
        ORBIT_TRACK_PARAM(pdwBufferSize);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.PdhParseCounterPathA(szFullPathBuffer, pCounterPathElements, pdwBufferSize, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhParseInstanceNameW(win32::Windows::Win32::Foundation::PWSTR szInstanceString, win32::Windows::Win32::Foundation::PWSTR szInstanceName, uint32_t* pcchInstanceNameLength, win32::Windows::Win32::Foundation::PWSTR szParentName, uint32_t* pcchParentNameLength, uint32_t* lpIndex) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szInstanceString);
        ORBIT_TRACK_PARAM(szInstanceName);
        ORBIT_TRACK_PARAM(pcchInstanceNameLength);
        ORBIT_TRACK_PARAM(szParentName);
        ORBIT_TRACK_PARAM(pcchParentNameLength);
        ORBIT_TRACK_PARAM(lpIndex);

        auto win32_impl_result = g_api_table.PdhParseInstanceNameW(szInstanceString, szInstanceName, pcchInstanceNameLength, szParentName, pcchParentNameLength, lpIndex);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhParseInstanceNameA(win32::Windows::Win32::Foundation::PSTR szInstanceString, win32::Windows::Win32::Foundation::PSTR szInstanceName, uint32_t* pcchInstanceNameLength, win32::Windows::Win32::Foundation::PSTR szParentName, uint32_t* pcchParentNameLength, uint32_t* lpIndex) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szInstanceString);
        ORBIT_TRACK_PARAM(szInstanceName);
        ORBIT_TRACK_PARAM(pcchInstanceNameLength);
        ORBIT_TRACK_PARAM(szParentName);
        ORBIT_TRACK_PARAM(pcchParentNameLength);
        ORBIT_TRACK_PARAM(lpIndex);

        auto win32_impl_result = g_api_table.PdhParseInstanceNameA(szInstanceString, szInstanceName, pcchInstanceNameLength, szParentName, pcchParentNameLength, lpIndex);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhValidatePathW(win32::Windows::Win32::Foundation::PWSTR szFullPathBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szFullPathBuffer);

        auto win32_impl_result = g_api_table.PdhValidatePathW(szFullPathBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhValidatePathA(win32::Windows::Win32::Foundation::PSTR szFullPathBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szFullPathBuffer);

        auto win32_impl_result = g_api_table.PdhValidatePathA(szFullPathBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetDefaultPerfObjectW(win32::Windows::Win32::Foundation::PWSTR szDataSource, win32::Windows::Win32::Foundation::PWSTR szMachineName, win32::Windows::Win32::Foundation::PWSTR szDefaultObjectName, uint32_t* pcchBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(szDefaultObjectName);
        ORBIT_TRACK_PARAM(pcchBufferSize);

        auto win32_impl_result = g_api_table.PdhGetDefaultPerfObjectW(szDataSource, szMachineName, szDefaultObjectName, pcchBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetDefaultPerfObjectA(win32::Windows::Win32::Foundation::PSTR szDataSource, win32::Windows::Win32::Foundation::PSTR szMachineName, win32::Windows::Win32::Foundation::PSTR szDefaultObjectName, uint32_t* pcchBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(szDefaultObjectName);
        ORBIT_TRACK_PARAM(pcchBufferSize);

        auto win32_impl_result = g_api_table.PdhGetDefaultPerfObjectA(szDataSource, szMachineName, szDefaultObjectName, pcchBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetDefaultPerfCounterW(win32::Windows::Win32::Foundation::PWSTR szDataSource, win32::Windows::Win32::Foundation::PWSTR szMachineName, win32::Windows::Win32::Foundation::PWSTR szObjectName, win32::Windows::Win32::Foundation::PWSTR szDefaultCounterName, uint32_t* pcchBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(szObjectName);
        ORBIT_TRACK_PARAM(szDefaultCounterName);
        ORBIT_TRACK_PARAM(pcchBufferSize);

        auto win32_impl_result = g_api_table.PdhGetDefaultPerfCounterW(szDataSource, szMachineName, szObjectName, szDefaultCounterName, pcchBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetDefaultPerfCounterA(win32::Windows::Win32::Foundation::PSTR szDataSource, win32::Windows::Win32::Foundation::PSTR szMachineName, win32::Windows::Win32::Foundation::PSTR szObjectName, win32::Windows::Win32::Foundation::PSTR szDefaultCounterName, uint32_t* pcchBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(szObjectName);
        ORBIT_TRACK_PARAM(szDefaultCounterName);
        ORBIT_TRACK_PARAM(pcchBufferSize);

        auto win32_impl_result = g_api_table.PdhGetDefaultPerfCounterA(szDataSource, szMachineName, szObjectName, szDefaultCounterName, pcchBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhBrowseCountersW(win32::Windows::Win32::System::Performance::PDH_BROWSE_DLG_CONFIG_W* pBrowseDlgData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pBrowseDlgData);

        auto win32_impl_result = g_api_table.PdhBrowseCountersW(pBrowseDlgData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhBrowseCountersA(win32::Windows::Win32::System::Performance::PDH_BROWSE_DLG_CONFIG_A* pBrowseDlgData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pBrowseDlgData);

        auto win32_impl_result = g_api_table.PdhBrowseCountersA(pBrowseDlgData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhExpandCounterPathW(win32::Windows::Win32::Foundation::PWSTR szWildCardPath, win32::Windows::Win32::Foundation::PWSTR mszExpandedPathList, uint32_t* pcchPathListLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szWildCardPath);
        ORBIT_TRACK_PARAM(mszExpandedPathList);
        ORBIT_TRACK_PARAM(pcchPathListLength);

        auto win32_impl_result = g_api_table.PdhExpandCounterPathW(szWildCardPath, mszExpandedPathList, pcchPathListLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhExpandCounterPathA(win32::Windows::Win32::Foundation::PSTR szWildCardPath, win32::Windows::Win32::Foundation::PSTR mszExpandedPathList, uint32_t* pcchPathListLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szWildCardPath);
        ORBIT_TRACK_PARAM(mszExpandedPathList);
        ORBIT_TRACK_PARAM(pcchPathListLength);

        auto win32_impl_result = g_api_table.PdhExpandCounterPathA(szWildCardPath, mszExpandedPathList, pcchPathListLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhLookupPerfNameByIndexW(win32::Windows::Win32::Foundation::PWSTR szMachineName, uint32_t dwNameIndex, win32::Windows::Win32::Foundation::PWSTR szNameBuffer, uint32_t* pcchNameBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(dwNameIndex);
        ORBIT_TRACK_PARAM(szNameBuffer);
        ORBIT_TRACK_PARAM(pcchNameBufferSize);

        auto win32_impl_result = g_api_table.PdhLookupPerfNameByIndexW(szMachineName, dwNameIndex, szNameBuffer, pcchNameBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhLookupPerfNameByIndexA(win32::Windows::Win32::Foundation::PSTR szMachineName, uint32_t dwNameIndex, win32::Windows::Win32::Foundation::PSTR szNameBuffer, uint32_t* pcchNameBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(dwNameIndex);
        ORBIT_TRACK_PARAM(szNameBuffer);
        ORBIT_TRACK_PARAM(pcchNameBufferSize);

        auto win32_impl_result = g_api_table.PdhLookupPerfNameByIndexA(szMachineName, dwNameIndex, szNameBuffer, pcchNameBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhLookupPerfIndexByNameW(win32::Windows::Win32::Foundation::PWSTR szMachineName, win32::Windows::Win32::Foundation::PWSTR szNameBuffer, uint32_t* pdwIndex) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(szNameBuffer);
        ORBIT_TRACK_PARAM(pdwIndex);

        auto win32_impl_result = g_api_table.PdhLookupPerfIndexByNameW(szMachineName, szNameBuffer, pdwIndex);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhLookupPerfIndexByNameA(win32::Windows::Win32::Foundation::PSTR szMachineName, win32::Windows::Win32::Foundation::PSTR szNameBuffer, uint32_t* pdwIndex) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(szNameBuffer);
        ORBIT_TRACK_PARAM(pdwIndex);

        auto win32_impl_result = g_api_table.PdhLookupPerfIndexByNameA(szMachineName, szNameBuffer, pdwIndex);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhExpandWildCardPathA(win32::Windows::Win32::Foundation::PSTR szDataSource, win32::Windows::Win32::Foundation::PSTR szWildCardPath, win32::Windows::Win32::Foundation::PSTR mszExpandedPathList, uint32_t* pcchPathListLength, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(szWildCardPath);
        ORBIT_TRACK_PARAM(mszExpandedPathList);
        ORBIT_TRACK_PARAM(pcchPathListLength);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.PdhExpandWildCardPathA(szDataSource, szWildCardPath, mszExpandedPathList, pcchPathListLength, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhExpandWildCardPathW(win32::Windows::Win32::Foundation::PWSTR szDataSource, win32::Windows::Win32::Foundation::PWSTR szWildCardPath, win32::Windows::Win32::Foundation::PWSTR mszExpandedPathList, uint32_t* pcchPathListLength, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(szWildCardPath);
        ORBIT_TRACK_PARAM(mszExpandedPathList);
        ORBIT_TRACK_PARAM(pcchPathListLength);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.PdhExpandWildCardPathW(szDataSource, szWildCardPath, mszExpandedPathList, pcchPathListLength, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhOpenLogW(win32::Windows::Win32::Foundation::PWSTR szLogFileName, win32::Windows::Win32::System::Performance::PDH_LOG dwAccessFlags, win32::Windows::Win32::System::Performance::PDH_LOG_TYPE* lpdwLogType, intptr_t hQuery, uint32_t dwMaxSize, win32::Windows::Win32::Foundation::PWSTR szUserCaption, intptr_t* phLog) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szLogFileName);
        ORBIT_TRACK_PARAM(dwAccessFlags);
        ORBIT_TRACK_PARAM(lpdwLogType);
        ORBIT_TRACK_PARAM(hQuery);
        ORBIT_TRACK_PARAM(dwMaxSize);
        ORBIT_TRACK_PARAM(szUserCaption);
        ORBIT_TRACK_PARAM(phLog);

        auto win32_impl_result = g_api_table.PdhOpenLogW(szLogFileName, dwAccessFlags, lpdwLogType, hQuery, dwMaxSize, szUserCaption, phLog);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhOpenLogA(win32::Windows::Win32::Foundation::PSTR szLogFileName, win32::Windows::Win32::System::Performance::PDH_LOG dwAccessFlags, win32::Windows::Win32::System::Performance::PDH_LOG_TYPE* lpdwLogType, intptr_t hQuery, uint32_t dwMaxSize, win32::Windows::Win32::Foundation::PSTR szUserCaption, intptr_t* phLog) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szLogFileName);
        ORBIT_TRACK_PARAM(dwAccessFlags);
        ORBIT_TRACK_PARAM(lpdwLogType);
        ORBIT_TRACK_PARAM(hQuery);
        ORBIT_TRACK_PARAM(dwMaxSize);
        ORBIT_TRACK_PARAM(szUserCaption);
        ORBIT_TRACK_PARAM(phLog);

        auto win32_impl_result = g_api_table.PdhOpenLogA(szLogFileName, dwAccessFlags, lpdwLogType, hQuery, dwMaxSize, szUserCaption, phLog);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhUpdateLogW(intptr_t hLog, win32::Windows::Win32::Foundation::PWSTR szUserString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLog);
        ORBIT_TRACK_PARAM(szUserString);

        auto win32_impl_result = g_api_table.PdhUpdateLogW(hLog, szUserString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhUpdateLogA(intptr_t hLog, win32::Windows::Win32::Foundation::PSTR szUserString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLog);
        ORBIT_TRACK_PARAM(szUserString);

        auto win32_impl_result = g_api_table.PdhUpdateLogA(hLog, szUserString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhUpdateLogFileCatalog(intptr_t hLog) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLog);

        auto win32_impl_result = g_api_table.PdhUpdateLogFileCatalog(hLog);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetLogFileSize(intptr_t hLog, int64_t* llSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLog);
        ORBIT_TRACK_PARAM(llSize);

        auto win32_impl_result = g_api_table.PdhGetLogFileSize(hLog, llSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhCloseLog(intptr_t hLog, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLog);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.PdhCloseLog(hLog, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhSelectDataSourceW(win32::Windows::Win32::Foundation::HWND hWndOwner, win32::Windows::Win32::System::Performance::PDH_SELECT_DATA_SOURCE_FLAGS dwFlags, win32::Windows::Win32::Foundation::PWSTR szDataSource, uint32_t* pcchBufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWndOwner);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(pcchBufferLength);

        auto win32_impl_result = g_api_table.PdhSelectDataSourceW(hWndOwner, dwFlags, szDataSource, pcchBufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhSelectDataSourceA(win32::Windows::Win32::Foundation::HWND hWndOwner, win32::Windows::Win32::System::Performance::PDH_SELECT_DATA_SOURCE_FLAGS dwFlags, win32::Windows::Win32::Foundation::PSTR szDataSource, uint32_t* pcchBufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWndOwner);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(pcchBufferLength);

        auto win32_impl_result = g_api_table.PdhSelectDataSourceA(hWndOwner, dwFlags, szDataSource, pcchBufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_PdhIsRealTimeQuery(intptr_t hQuery) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hQuery);

        auto win32_impl_result = g_api_table.PdhIsRealTimeQuery(hQuery);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhSetQueryTimeRange(intptr_t hQuery, win32::Windows::Win32::System::Performance::PDH_TIME_INFO* pInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hQuery);
        ORBIT_TRACK_PARAM(pInfo);

        auto win32_impl_result = g_api_table.PdhSetQueryTimeRange(hQuery, pInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetDataSourceTimeRangeW(win32::Windows::Win32::Foundation::PWSTR szDataSource, uint32_t* pdwNumEntries, win32::Windows::Win32::System::Performance::PDH_TIME_INFO* pInfo, uint32_t* pdwBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(pdwNumEntries);
        ORBIT_TRACK_PARAM(pInfo);
        ORBIT_TRACK_PARAM(pdwBufferSize);

        auto win32_impl_result = g_api_table.PdhGetDataSourceTimeRangeW(szDataSource, pdwNumEntries, pInfo, pdwBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetDataSourceTimeRangeA(win32::Windows::Win32::Foundation::PSTR szDataSource, uint32_t* pdwNumEntries, win32::Windows::Win32::System::Performance::PDH_TIME_INFO* pInfo, uint32_t* pdwBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(pdwNumEntries);
        ORBIT_TRACK_PARAM(pInfo);
        ORBIT_TRACK_PARAM(pdwBufferSize);

        auto win32_impl_result = g_api_table.PdhGetDataSourceTimeRangeA(szDataSource, pdwNumEntries, pInfo, pdwBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhCollectQueryDataEx(intptr_t hQuery, uint32_t dwIntervalTime, win32::Windows::Win32::Foundation::HANDLE hNewDataEvent) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hQuery);
        ORBIT_TRACK_PARAM(dwIntervalTime);
        ORBIT_TRACK_PARAM(hNewDataEvent);

        auto win32_impl_result = g_api_table.PdhCollectQueryDataEx(hQuery, dwIntervalTime, hNewDataEvent);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhFormatFromRawValue(uint32_t dwCounterType, win32::Windows::Win32::System::Performance::PDH_FMT dwFormat, int64_t* pTimeBase, win32::Windows::Win32::System::Performance::PDH_RAW_COUNTER* pRawValue1, win32::Windows::Win32::System::Performance::PDH_RAW_COUNTER* pRawValue2, win32::Windows::Win32::System::Performance::PDH_FMT_COUNTERVALUE* pFmtValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwCounterType);
        ORBIT_TRACK_PARAM(dwFormat);
        ORBIT_TRACK_PARAM(pTimeBase);
        ORBIT_TRACK_PARAM(pRawValue1);
        ORBIT_TRACK_PARAM(pRawValue2);
        ORBIT_TRACK_PARAM(pFmtValue);

        auto win32_impl_result = g_api_table.PdhFormatFromRawValue(dwCounterType, dwFormat, pTimeBase, pRawValue1, pRawValue2, pFmtValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetCounterTimeBase(intptr_t hCounter, int64_t* pTimeBase) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCounter);
        ORBIT_TRACK_PARAM(pTimeBase);

        auto win32_impl_result = g_api_table.PdhGetCounterTimeBase(hCounter, pTimeBase);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhReadRawLogRecord(intptr_t hLog, win32::Windows::Win32::Foundation::FILETIME ftRecord, win32::Windows::Win32::System::Performance::PDH_RAW_LOG_RECORD* pRawLogRecord, uint32_t* pdwBufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLog);
        ORBIT_TRACK_PARAM(ftRecord);
        ORBIT_TRACK_PARAM(pRawLogRecord);
        ORBIT_TRACK_PARAM(pdwBufferLength);

        auto win32_impl_result = g_api_table.PdhReadRawLogRecord(hLog, ftRecord, pRawLogRecord, pdwBufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhSetDefaultRealTimeDataSource(win32::Windows::Win32::System::Performance::REAL_TIME_DATA_SOURCE_ID_FLAGS dwDataSourceId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDataSourceId);

        auto win32_impl_result = g_api_table.PdhSetDefaultRealTimeDataSource(dwDataSourceId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhBindInputDataSourceW(intptr_t* phDataSource, win32::Windows::Win32::Foundation::PWSTR LogFileNameList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phDataSource);
        ORBIT_TRACK_PARAM(LogFileNameList);

        auto win32_impl_result = g_api_table.PdhBindInputDataSourceW(phDataSource, LogFileNameList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhBindInputDataSourceA(intptr_t* phDataSource, win32::Windows::Win32::Foundation::PSTR LogFileNameList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phDataSource);
        ORBIT_TRACK_PARAM(LogFileNameList);

        auto win32_impl_result = g_api_table.PdhBindInputDataSourceA(phDataSource, LogFileNameList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhOpenQueryH(intptr_t hDataSource, size_t dwUserData, intptr_t* phQuery) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDataSource);
        ORBIT_TRACK_PARAM(dwUserData);
        ORBIT_TRACK_PARAM(phQuery);

        auto win32_impl_result = g_api_table.PdhOpenQueryH(hDataSource, dwUserData, phQuery);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhEnumMachinesHW(intptr_t hDataSource, win32::Windows::Win32::Foundation::PWSTR mszMachineList, uint32_t* pcchBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDataSource);
        ORBIT_TRACK_PARAM(mszMachineList);
        ORBIT_TRACK_PARAM(pcchBufferSize);

        auto win32_impl_result = g_api_table.PdhEnumMachinesHW(hDataSource, mszMachineList, pcchBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhEnumMachinesHA(intptr_t hDataSource, win32::Windows::Win32::Foundation::PSTR mszMachineList, uint32_t* pcchBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDataSource);
        ORBIT_TRACK_PARAM(mszMachineList);
        ORBIT_TRACK_PARAM(pcchBufferSize);

        auto win32_impl_result = g_api_table.PdhEnumMachinesHA(hDataSource, mszMachineList, pcchBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhEnumObjectsHW(intptr_t hDataSource, win32::Windows::Win32::Foundation::PWSTR szMachineName, win32::Windows::Win32::Foundation::PWSTR mszObjectList, uint32_t* pcchBufferSize, win32::Windows::Win32::System::Performance::PERF_DETAIL dwDetailLevel, win32::Windows::Win32::Foundation::BOOL bRefresh) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDataSource);
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(mszObjectList);
        ORBIT_TRACK_PARAM(pcchBufferSize);
        ORBIT_TRACK_PARAM(dwDetailLevel);
        ORBIT_TRACK_PARAM(bRefresh);

        auto win32_impl_result = g_api_table.PdhEnumObjectsHW(hDataSource, szMachineName, mszObjectList, pcchBufferSize, dwDetailLevel, bRefresh);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhEnumObjectsHA(intptr_t hDataSource, win32::Windows::Win32::Foundation::PSTR szMachineName, win32::Windows::Win32::Foundation::PSTR mszObjectList, uint32_t* pcchBufferSize, win32::Windows::Win32::System::Performance::PERF_DETAIL dwDetailLevel, win32::Windows::Win32::Foundation::BOOL bRefresh) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDataSource);
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(mszObjectList);
        ORBIT_TRACK_PARAM(pcchBufferSize);
        ORBIT_TRACK_PARAM(dwDetailLevel);
        ORBIT_TRACK_PARAM(bRefresh);

        auto win32_impl_result = g_api_table.PdhEnumObjectsHA(hDataSource, szMachineName, mszObjectList, pcchBufferSize, dwDetailLevel, bRefresh);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhEnumObjectItemsHW(intptr_t hDataSource, win32::Windows::Win32::Foundation::PWSTR szMachineName, win32::Windows::Win32::Foundation::PWSTR szObjectName, win32::Windows::Win32::Foundation::PWSTR mszCounterList, uint32_t* pcchCounterListLength, win32::Windows::Win32::Foundation::PWSTR mszInstanceList, uint32_t* pcchInstanceListLength, win32::Windows::Win32::System::Performance::PERF_DETAIL dwDetailLevel, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDataSource);
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(szObjectName);
        ORBIT_TRACK_PARAM(mszCounterList);
        ORBIT_TRACK_PARAM(pcchCounterListLength);
        ORBIT_TRACK_PARAM(mszInstanceList);
        ORBIT_TRACK_PARAM(pcchInstanceListLength);
        ORBIT_TRACK_PARAM(dwDetailLevel);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.PdhEnumObjectItemsHW(hDataSource, szMachineName, szObjectName, mszCounterList, pcchCounterListLength, mszInstanceList, pcchInstanceListLength, dwDetailLevel, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhEnumObjectItemsHA(intptr_t hDataSource, win32::Windows::Win32::Foundation::PSTR szMachineName, win32::Windows::Win32::Foundation::PSTR szObjectName, win32::Windows::Win32::Foundation::PSTR mszCounterList, uint32_t* pcchCounterListLength, win32::Windows::Win32::Foundation::PSTR mszInstanceList, uint32_t* pcchInstanceListLength, win32::Windows::Win32::System::Performance::PERF_DETAIL dwDetailLevel, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDataSource);
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(szObjectName);
        ORBIT_TRACK_PARAM(mszCounterList);
        ORBIT_TRACK_PARAM(pcchCounterListLength);
        ORBIT_TRACK_PARAM(mszInstanceList);
        ORBIT_TRACK_PARAM(pcchInstanceListLength);
        ORBIT_TRACK_PARAM(dwDetailLevel);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.PdhEnumObjectItemsHA(hDataSource, szMachineName, szObjectName, mszCounterList, pcchCounterListLength, mszInstanceList, pcchInstanceListLength, dwDetailLevel, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhExpandWildCardPathHW(intptr_t hDataSource, win32::Windows::Win32::Foundation::PWSTR szWildCardPath, win32::Windows::Win32::Foundation::PWSTR mszExpandedPathList, uint32_t* pcchPathListLength, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDataSource);
        ORBIT_TRACK_PARAM(szWildCardPath);
        ORBIT_TRACK_PARAM(mszExpandedPathList);
        ORBIT_TRACK_PARAM(pcchPathListLength);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.PdhExpandWildCardPathHW(hDataSource, szWildCardPath, mszExpandedPathList, pcchPathListLength, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhExpandWildCardPathHA(intptr_t hDataSource, win32::Windows::Win32::Foundation::PSTR szWildCardPath, win32::Windows::Win32::Foundation::PSTR mszExpandedPathList, uint32_t* pcchPathListLength, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDataSource);
        ORBIT_TRACK_PARAM(szWildCardPath);
        ORBIT_TRACK_PARAM(mszExpandedPathList);
        ORBIT_TRACK_PARAM(pcchPathListLength);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.PdhExpandWildCardPathHA(hDataSource, szWildCardPath, mszExpandedPathList, pcchPathListLength, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetDataSourceTimeRangeH(intptr_t hDataSource, uint32_t* pdwNumEntries, win32::Windows::Win32::System::Performance::PDH_TIME_INFO* pInfo, uint32_t* pdwBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDataSource);
        ORBIT_TRACK_PARAM(pdwNumEntries);
        ORBIT_TRACK_PARAM(pInfo);
        ORBIT_TRACK_PARAM(pdwBufferSize);

        auto win32_impl_result = g_api_table.PdhGetDataSourceTimeRangeH(hDataSource, pdwNumEntries, pInfo, pdwBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetDefaultPerfObjectHW(intptr_t hDataSource, win32::Windows::Win32::Foundation::PWSTR szMachineName, win32::Windows::Win32::Foundation::PWSTR szDefaultObjectName, uint32_t* pcchBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDataSource);
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(szDefaultObjectName);
        ORBIT_TRACK_PARAM(pcchBufferSize);

        auto win32_impl_result = g_api_table.PdhGetDefaultPerfObjectHW(hDataSource, szMachineName, szDefaultObjectName, pcchBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetDefaultPerfObjectHA(intptr_t hDataSource, win32::Windows::Win32::Foundation::PSTR szMachineName, win32::Windows::Win32::Foundation::PSTR szDefaultObjectName, uint32_t* pcchBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDataSource);
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(szDefaultObjectName);
        ORBIT_TRACK_PARAM(pcchBufferSize);

        auto win32_impl_result = g_api_table.PdhGetDefaultPerfObjectHA(hDataSource, szMachineName, szDefaultObjectName, pcchBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetDefaultPerfCounterHW(intptr_t hDataSource, win32::Windows::Win32::Foundation::PWSTR szMachineName, win32::Windows::Win32::Foundation::PWSTR szObjectName, win32::Windows::Win32::Foundation::PWSTR szDefaultCounterName, uint32_t* pcchBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDataSource);
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(szObjectName);
        ORBIT_TRACK_PARAM(szDefaultCounterName);
        ORBIT_TRACK_PARAM(pcchBufferSize);

        auto win32_impl_result = g_api_table.PdhGetDefaultPerfCounterHW(hDataSource, szMachineName, szObjectName, szDefaultCounterName, pcchBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetDefaultPerfCounterHA(intptr_t hDataSource, win32::Windows::Win32::Foundation::PSTR szMachineName, win32::Windows::Win32::Foundation::PSTR szObjectName, win32::Windows::Win32::Foundation::PSTR szDefaultCounterName, uint32_t* pcchBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hDataSource);
        ORBIT_TRACK_PARAM(szMachineName);
        ORBIT_TRACK_PARAM(szObjectName);
        ORBIT_TRACK_PARAM(szDefaultCounterName);
        ORBIT_TRACK_PARAM(pcchBufferSize);

        auto win32_impl_result = g_api_table.PdhGetDefaultPerfCounterHA(hDataSource, szMachineName, szObjectName, szDefaultCounterName, pcchBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhBrowseCountersHW(win32::Windows::Win32::System::Performance::PDH_BROWSE_DLG_CONFIG_HW* pBrowseDlgData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pBrowseDlgData);

        auto win32_impl_result = g_api_table.PdhBrowseCountersHW(pBrowseDlgData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhBrowseCountersHA(win32::Windows::Win32::System::Performance::PDH_BROWSE_DLG_CONFIG_HA* pBrowseDlgData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pBrowseDlgData);

        auto win32_impl_result = g_api_table.PdhBrowseCountersHA(pBrowseDlgData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhVerifySQLDBW(win32::Windows::Win32::Foundation::PWSTR szDataSource) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);

        auto win32_impl_result = g_api_table.PdhVerifySQLDBW(szDataSource);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhVerifySQLDBA(win32::Windows::Win32::Foundation::PSTR szDataSource) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);

        auto win32_impl_result = g_api_table.PdhVerifySQLDBA(szDataSource);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhCreateSQLTablesW(win32::Windows::Win32::Foundation::PWSTR szDataSource) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);

        auto win32_impl_result = g_api_table.PdhCreateSQLTablesW(szDataSource);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhCreateSQLTablesA(win32::Windows::Win32::Foundation::PSTR szDataSource) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);

        auto win32_impl_result = g_api_table.PdhCreateSQLTablesA(szDataSource);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhEnumLogSetNamesW(win32::Windows::Win32::Foundation::PWSTR szDataSource, win32::Windows::Win32::Foundation::PWSTR mszDataSetNameList, uint32_t* pcchBufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(mszDataSetNameList);
        ORBIT_TRACK_PARAM(pcchBufferLength);

        auto win32_impl_result = g_api_table.PdhEnumLogSetNamesW(szDataSource, mszDataSetNameList, pcchBufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhEnumLogSetNamesA(win32::Windows::Win32::Foundation::PSTR szDataSource, win32::Windows::Win32::Foundation::PSTR mszDataSetNameList, uint32_t* pcchBufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(szDataSource);
        ORBIT_TRACK_PARAM(mszDataSetNameList);
        ORBIT_TRACK_PARAM(pcchBufferLength);

        auto win32_impl_result = g_api_table.PdhEnumLogSetNamesA(szDataSource, mszDataSetNameList, pcchBufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhGetLogSetGUID(intptr_t hLog, ::win32::guid* pGuid, int32_t* pRunId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLog);
        ORBIT_TRACK_PARAM(pGuid);
        ORBIT_TRACK_PARAM(pRunId);

        auto win32_impl_result = g_api_table.PdhGetLogSetGUID(hLog, pGuid, pRunId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_PdhSetLogSetRunID(intptr_t hLog, int32_t RunId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hLog);
        ORBIT_TRACK_PARAM(RunId);

        auto win32_impl_result = g_api_table.PdhSetLogSetRunID(hLog, RunId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
