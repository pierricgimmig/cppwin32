// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_ProcessStatus_2_H
#define WIN32_Windows_Win32_System_ProcessStatus_2_H
#include "win32/Windows.Win32.System.ProcessStatus.h"
#include "win32/impl/Windows.Win32.System.ProcessStatus.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::System::ProcessStatus
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_K32EnumProcesses(uint32_t* lpidProcess, uint32_t cb, uint32_t* lpcbNeeded) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpidProcess);
        ORBIT_TRACK_PARAM(cb);
        ORBIT_TRACK_PARAM(lpcbNeeded);

        auto win32_impl_result = g_api_table.K32EnumProcesses(lpidProcess, cb, lpcbNeeded);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_K32EnumProcessModules(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::HINSTANCE* lphModule, uint32_t cb, uint32_t* lpcbNeeded) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(lphModule);
        ORBIT_TRACK_PARAM(cb);
        ORBIT_TRACK_PARAM(lpcbNeeded);

        auto win32_impl_result = g_api_table.K32EnumProcessModules(hProcess, lphModule, cb, lpcbNeeded);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_K32EnumProcessModulesEx(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::HINSTANCE* lphModule, uint32_t cb, uint32_t* lpcbNeeded, win32::Windows::Win32::System::ProcessStatus::ENUM_PROCESS_MODULES_EX_FLAGS dwFilterFlag) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(lphModule);
        ORBIT_TRACK_PARAM(cb);
        ORBIT_TRACK_PARAM(lpcbNeeded);
        ORBIT_TRACK_PARAM(dwFilterFlag);

        auto win32_impl_result = g_api_table.K32EnumProcessModulesEx(hProcess, lphModule, cb, lpcbNeeded, dwFilterFlag);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_K32GetModuleBaseNameA(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::HINSTANCE hModule, win32::Windows::Win32::Foundation::PSTR lpBaseName, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(hModule);
        ORBIT_TRACK_PARAM(lpBaseName);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.K32GetModuleBaseNameA(hProcess, hModule, lpBaseName, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_K32GetModuleBaseNameW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::HINSTANCE hModule, win32::Windows::Win32::Foundation::PWSTR lpBaseName, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(hModule);
        ORBIT_TRACK_PARAM(lpBaseName);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.K32GetModuleBaseNameW(hProcess, hModule, lpBaseName, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_K32GetModuleFileNameExA(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::HINSTANCE hModule, win32::Windows::Win32::Foundation::PSTR lpFilename, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(hModule);
        ORBIT_TRACK_PARAM(lpFilename);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.K32GetModuleFileNameExA(hProcess, hModule, lpFilename, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_K32GetModuleFileNameExW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::HINSTANCE hModule, win32::Windows::Win32::Foundation::PWSTR lpFilename, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(hModule);
        ORBIT_TRACK_PARAM(lpFilename);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.K32GetModuleFileNameExW(hProcess, hModule, lpFilename, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_K32GetModuleInformation(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::HINSTANCE hModule, win32::Windows::Win32::System::ProcessStatus::MODULEINFO* lpmodinfo, uint32_t cb) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(hModule);
        ORBIT_TRACK_PARAM(lpmodinfo);
        ORBIT_TRACK_PARAM(cb);

        auto win32_impl_result = g_api_table.K32GetModuleInformation(hProcess, hModule, lpmodinfo, cb);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_K32EmptyWorkingSet(win32::Windows::Win32::Foundation::HANDLE hProcess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);

        auto win32_impl_result = g_api_table.K32EmptyWorkingSet(hProcess);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_K32InitializeProcessForWsWatch(win32::Windows::Win32::Foundation::HANDLE hProcess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);

        auto win32_impl_result = g_api_table.K32InitializeProcessForWsWatch(hProcess);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_K32GetWsChanges(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::ProcessStatus::PSAPI_WS_WATCH_INFORMATION* lpWatchInfo, uint32_t cb) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(lpWatchInfo);
        ORBIT_TRACK_PARAM(cb);

        auto win32_impl_result = g_api_table.K32GetWsChanges(hProcess, lpWatchInfo, cb);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_K32GetWsChangesEx(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::System::ProcessStatus::PSAPI_WS_WATCH_INFORMATION_EX* lpWatchInfoEx, uint32_t* cb) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(lpWatchInfoEx);
        ORBIT_TRACK_PARAM(cb);

        auto win32_impl_result = g_api_table.K32GetWsChangesEx(hProcess, lpWatchInfoEx, cb);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_K32GetMappedFileNameW(win32::Windows::Win32::Foundation::HANDLE hProcess, void* lpv, win32::Windows::Win32::Foundation::PWSTR lpFilename, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(lpv);
        ORBIT_TRACK_PARAM(lpFilename);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.K32GetMappedFileNameW(hProcess, lpv, lpFilename, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_K32GetMappedFileNameA(win32::Windows::Win32::Foundation::HANDLE hProcess, void* lpv, win32::Windows::Win32::Foundation::PSTR lpFilename, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(lpv);
        ORBIT_TRACK_PARAM(lpFilename);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.K32GetMappedFileNameA(hProcess, lpv, lpFilename, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_K32EnumDeviceDrivers(void** lpImageBase, uint32_t cb, uint32_t* lpcbNeeded) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpImageBase);
        ORBIT_TRACK_PARAM(cb);
        ORBIT_TRACK_PARAM(lpcbNeeded);

        auto win32_impl_result = g_api_table.K32EnumDeviceDrivers(lpImageBase, cb, lpcbNeeded);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_K32GetDeviceDriverBaseNameA(void* ImageBase, win32::Windows::Win32::Foundation::PSTR lpFilename, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ImageBase);
        ORBIT_TRACK_PARAM(lpFilename);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.K32GetDeviceDriverBaseNameA(ImageBase, lpFilename, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_K32GetDeviceDriverBaseNameW(void* ImageBase, win32::Windows::Win32::Foundation::PWSTR lpBaseName, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ImageBase);
        ORBIT_TRACK_PARAM(lpBaseName);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.K32GetDeviceDriverBaseNameW(ImageBase, lpBaseName, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_K32GetDeviceDriverFileNameA(void* ImageBase, win32::Windows::Win32::Foundation::PSTR lpFilename, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ImageBase);
        ORBIT_TRACK_PARAM(lpFilename);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.K32GetDeviceDriverFileNameA(ImageBase, lpFilename, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_K32GetDeviceDriverFileNameW(void* ImageBase, win32::Windows::Win32::Foundation::PWSTR lpFilename, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ImageBase);
        ORBIT_TRACK_PARAM(lpFilename);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.K32GetDeviceDriverFileNameW(ImageBase, lpFilename, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_K32QueryWorkingSet(win32::Windows::Win32::Foundation::HANDLE hProcess, void* pv, uint32_t cb) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(pv);
        ORBIT_TRACK_PARAM(cb);

        auto win32_impl_result = g_api_table.K32QueryWorkingSet(hProcess, pv, cb);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_K32QueryWorkingSetEx(win32::Windows::Win32::Foundation::HANDLE hProcess, void* pv, uint32_t cb) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(pv);
        ORBIT_TRACK_PARAM(cb);

        auto win32_impl_result = g_api_table.K32QueryWorkingSetEx(hProcess, pv, cb);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_K32GetProcessMemoryInfo(win32::Windows::Win32::Foundation::HANDLE Process, win32::Windows::Win32::System::ProcessStatus::PROCESS_MEMORY_COUNTERS* ppsmemCounters, uint32_t cb) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Process);
        ORBIT_TRACK_PARAM(ppsmemCounters);
        ORBIT_TRACK_PARAM(cb);

        auto win32_impl_result = g_api_table.K32GetProcessMemoryInfo(Process, ppsmemCounters, cb);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_K32GetPerformanceInfo(win32::Windows::Win32::System::ProcessStatus::PERFORMANCE_INFORMATION* pPerformanceInformation, uint32_t cb) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pPerformanceInformation);
        ORBIT_TRACK_PARAM(cb);

        auto win32_impl_result = g_api_table.K32GetPerformanceInfo(pPerformanceInformation, cb);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_K32EnumPageFilesW(win32::Windows::Win32::System::ProcessStatus::PENUM_PAGE_FILE_CALLBACKW* pCallBackRoutine, void* pContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pCallBackRoutine);
        ORBIT_TRACK_PARAM(pContext);

        auto win32_impl_result = g_api_table.K32EnumPageFilesW(pCallBackRoutine, pContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_K32EnumPageFilesA(win32::Windows::Win32::System::ProcessStatus::PENUM_PAGE_FILE_CALLBACKA* pCallBackRoutine, void* pContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pCallBackRoutine);
        ORBIT_TRACK_PARAM(pContext);

        auto win32_impl_result = g_api_table.K32EnumPageFilesA(pCallBackRoutine, pContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_K32GetProcessImageFileNameA(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PSTR lpImageFileName, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(lpImageFileName);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.K32GetProcessImageFileNameA(hProcess, lpImageFileName, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_K32GetProcessImageFileNameW(win32::Windows::Win32::Foundation::HANDLE hProcess, win32::Windows::Win32::Foundation::PWSTR lpImageFileName, uint32_t nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hProcess);
        ORBIT_TRACK_PARAM(lpImageFileName);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.K32GetProcessImageFileNameW(hProcess, lpImageFileName, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
