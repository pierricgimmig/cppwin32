// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Storage_Xps_0_H
#define WIN32_Windows_Win32_Storage_Xps_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct BOOL;
}
WIN32_EXPORT namespace win32::Windows::Win32::Graphics::Gdi
{
    struct HDC;
}
WIN32_EXPORT namespace win32::Windows::Win32::Storage::Xps
{
#pragma region enums
    enum class DEVICE_CAPABILITIES : uint32_t
    {
        DC_BINNAMES = 0xc,
        DC_BINS = 0x6,
        DC_COLLATE = 0x16,
        DC_COLORDEVICE = 0x20,
        DC_COPIES = 0x12,
        DC_DRIVER = 0xb,
        DC_DUPLEX = 0x7,
        DC_ENUMRESOLUTIONS = 0xd,
        DC_EXTRA = 0x9,
        DC_FIELDS = 0x1,
        DC_FILEDEPENDENCIES = 0xe,
        DC_MAXEXTENT = 0x5,
        DC_MEDIAREADY = 0x1d,
        DC_MEDIATYPENAMES = 0x22,
        DC_MEDIATYPES = 0x23,
        DC_MINEXTENT = 0x4,
        DC_ORIENTATION = 0x11,
        DC_NUP = 0x21,
        DC_PAPERNAMES = 0x10,
        DC_PAPERS = 0x2,
        DC_PAPERSIZE = 0x3,
        DC_PERSONALITY = 0x19,
        DC_PRINTERMEM = 0x1c,
        DC_PRINTRATE = 0x1a,
        DC_PRINTRATEPPM = 0x1f,
        DC_PRINTRATEUNIT = 0x1b,
        DC_SIZE = 0x8,
        DC_STAPLE = 0x1e,
        DC_TRUETYPE = 0xf,
        DC_VERSION = 0xa,
    };
    enum class PRINT_WINDOW_FLAGS : uint32_t
    {
        PW_CLIENTONLY = 0x1,
    };
    enum class PSINJECT_POINT : uint16_t
    {
        PSINJECT_BEGINSTREAM = 0x1,
        PSINJECT_PSADOBE = 0x2,
        PSINJECT_PAGESATEND = 0x3,
        PSINJECT_PAGES = 0x4,
        PSINJECT_DOCNEEDEDRES = 0x5,
        PSINJECT_DOCSUPPLIEDRES = 0x6,
        PSINJECT_PAGEORDER = 0x7,
        PSINJECT_ORIENTATION = 0x8,
        PSINJECT_BOUNDINGBOX = 0x9,
        PSINJECT_DOCUMENTPROCESSCOLORS = 0xa,
        PSINJECT_COMMENTS = 0xb,
        PSINJECT_BEGINDEFAULTS = 0xc,
        PSINJECT_ENDDEFAULTS = 0xd,
        PSINJECT_BEGINPROLOG = 0xe,
        PSINJECT_ENDPROLOG = 0xf,
        PSINJECT_BEGINSETUP = 0x10,
        PSINJECT_ENDSETUP = 0x11,
        PSINJECT_TRAILER = 0x12,
        PSINJECT_EOF = 0x13,
        PSINJECT_ENDSTREAM = 0x14,
        PSINJECT_DOCUMENTPROCESSCOLORSATEND = 0x15,
        PSINJECT_PAGENUMBER = 0x64,
        PSINJECT_BEGINPAGESETUP = 0x65,
        PSINJECT_ENDPAGESETUP = 0x66,
        PSINJECT_PAGETRAILER = 0x67,
        PSINJECT_PLATECOLOR = 0x68,
        PSINJECT_SHOWPAGE = 0x69,
        PSINJECT_PAGEBBOX = 0x6a,
        PSINJECT_ENDPAGECOMMENTS = 0x6b,
        PSINJECT_VMSAVE = 0xc8,
        PSINJECT_VMRESTORE = 0xc9,
    };
    enum class XPS_COLOR_INTERPOLATION : int32_t
    {
        XPS_COLOR_INTERPOLATION_SCRGBLINEAR = 1,
        XPS_COLOR_INTERPOLATION_SRGBLINEAR = 2,
    };
    enum class XPS_COLOR_TYPE : int32_t
    {
        XPS_COLOR_TYPE_SRGB = 1,
        XPS_COLOR_TYPE_SCRGB = 2,
        XPS_COLOR_TYPE_CONTEXT = 3,
    };
    enum class XPS_DASH_CAP : int32_t
    {
        XPS_DASH_CAP_FLAT = 1,
        XPS_DASH_CAP_ROUND = 2,
        XPS_DASH_CAP_SQUARE = 3,
        XPS_DASH_CAP_TRIANGLE = 4,
    };
    enum class XPS_DOCUMENT_TYPE : int32_t
    {
        XPS_DOCUMENT_TYPE_UNSPECIFIED = 1,
        XPS_DOCUMENT_TYPE_XPS = 2,
        XPS_DOCUMENT_TYPE_OPENXPS = 3,
    };
    enum class XPS_FILL_RULE : int32_t
    {
        XPS_FILL_RULE_EVENODD = 1,
        XPS_FILL_RULE_NONZERO = 2,
    };
    enum class XPS_FONT_EMBEDDING : int32_t
    {
        XPS_FONT_EMBEDDING_NORMAL = 1,
        XPS_FONT_EMBEDDING_OBFUSCATED = 2,
        XPS_FONT_EMBEDDING_RESTRICTED = 3,
        XPS_FONT_EMBEDDING_RESTRICTED_UNOBFUSCATED = 4,
    };
    enum class XPS_IMAGE_TYPE : int32_t
    {
        XPS_IMAGE_TYPE_JPEG = 1,
        XPS_IMAGE_TYPE_PNG = 2,
        XPS_IMAGE_TYPE_TIFF = 3,
        XPS_IMAGE_TYPE_WDP = 4,
        XPS_IMAGE_TYPE_JXR = 5,
    };
    enum class XPS_INTERLEAVING : int32_t
    {
        XPS_INTERLEAVING_OFF = 1,
        XPS_INTERLEAVING_ON = 2,
    };
    enum class XPS_LINE_CAP : int32_t
    {
        XPS_LINE_CAP_FLAT = 1,
        XPS_LINE_CAP_ROUND = 2,
        XPS_LINE_CAP_SQUARE = 3,
        XPS_LINE_CAP_TRIANGLE = 4,
    };
    enum class XPS_LINE_JOIN : int32_t
    {
        XPS_LINE_JOIN_MITER = 1,
        XPS_LINE_JOIN_BEVEL = 2,
        XPS_LINE_JOIN_ROUND = 3,
    };
    enum class XPS_OBJECT_TYPE : int32_t
    {
        XPS_OBJECT_TYPE_CANVAS = 1,
        XPS_OBJECT_TYPE_GLYPHS = 2,
        XPS_OBJECT_TYPE_PATH = 3,
        XPS_OBJECT_TYPE_MATRIX_TRANSFORM = 4,
        XPS_OBJECT_TYPE_GEOMETRY = 5,
        XPS_OBJECT_TYPE_SOLID_COLOR_BRUSH = 6,
        XPS_OBJECT_TYPE_IMAGE_BRUSH = 7,
        XPS_OBJECT_TYPE_LINEAR_GRADIENT_BRUSH = 8,
        XPS_OBJECT_TYPE_RADIAL_GRADIENT_BRUSH = 9,
        XPS_OBJECT_TYPE_VISUAL_BRUSH = 10,
    };
    enum class XPS_SEGMENT_STROKE_PATTERN : int32_t
    {
        XPS_SEGMENT_STROKE_PATTERN_ALL = 1,
        XPS_SEGMENT_STROKE_PATTERN_NONE = 2,
        XPS_SEGMENT_STROKE_PATTERN_MIXED = 3,
    };
    enum class XPS_SEGMENT_TYPE : int32_t
    {
        XPS_SEGMENT_TYPE_ARC_LARGE_CLOCKWISE = 1,
        XPS_SEGMENT_TYPE_ARC_LARGE_COUNTERCLOCKWISE = 2,
        XPS_SEGMENT_TYPE_ARC_SMALL_CLOCKWISE = 3,
        XPS_SEGMENT_TYPE_ARC_SMALL_COUNTERCLOCKWISE = 4,
        XPS_SEGMENT_TYPE_BEZIER = 5,
        XPS_SEGMENT_TYPE_LINE = 6,
        XPS_SEGMENT_TYPE_QUADRATIC_BEZIER = 7,
    };
    enum class XPS_SIGNATURE_STATUS : int32_t
    {
        XPS_SIGNATURE_STATUS_INCOMPLIANT = 1,
        XPS_SIGNATURE_STATUS_INCOMPLETE = 2,
        XPS_SIGNATURE_STATUS_BROKEN = 3,
        XPS_SIGNATURE_STATUS_QUESTIONABLE = 4,
        XPS_SIGNATURE_STATUS_VALID = 5,
    };
    enum class XPS_SIGN_FLAGS : int32_t
    {
        XPS_SIGN_FLAGS_NONE = 0,
        XPS_SIGN_FLAGS_IGNORE_MARKUP_COMPATIBILITY = 1,
    };
    enum class XPS_SIGN_POLICY : int32_t
    {
        XPS_SIGN_POLICY_NONE = 0,
        XPS_SIGN_POLICY_CORE_PROPERTIES = 1,
        XPS_SIGN_POLICY_SIGNATURE_RELATIONSHIPS = 2,
        XPS_SIGN_POLICY_PRINT_TICKET = 4,
        XPS_SIGN_POLICY_DISCARD_CONTROL = 8,
        XPS_SIGN_POLICY_ALL = 15,
    };
    enum class XPS_SPREAD_METHOD : int32_t
    {
        XPS_SPREAD_METHOD_PAD = 1,
        XPS_SPREAD_METHOD_REFLECT = 2,
        XPS_SPREAD_METHOD_REPEAT = 3,
    };
    enum class XPS_STYLE_SIMULATION : int32_t
    {
        XPS_STYLE_SIMULATION_NONE = 1,
        XPS_STYLE_SIMULATION_ITALIC = 2,
        XPS_STYLE_SIMULATION_BOLD = 3,
        XPS_STYLE_SIMULATION_BOLDITALIC = 4,
    };
    enum class XPS_THUMBNAIL_SIZE : int32_t
    {
        XPS_THUMBNAIL_SIZE_VERYSMALL = 1,
        XPS_THUMBNAIL_SIZE_SMALL = 2,
        XPS_THUMBNAIL_SIZE_MEDIUM = 3,
        XPS_THUMBNAIL_SIZE_LARGE = 4,
    };
    enum class XPS_TILE_MODE : int32_t
    {
        XPS_TILE_MODE_NONE = 1,
        XPS_TILE_MODE_TILE = 2,
        XPS_TILE_MODE_FLIPX = 3,
        XPS_TILE_MODE_FLIPY = 4,
        XPS_TILE_MODE_FLIPXY = 5,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct DOCINFOA;
    struct DOCINFOW;
    struct DRAWPATRECT;
    struct HPTPROVIDER;
    struct PSFEATURE_CUSTPAPER;
    struct PSFEATURE_OUTPUT;
    struct PSINJECTDATA;
    struct XPS_COLOR;
    struct XPS_DASH;
    struct XPS_GLYPH_INDEX;
    struct XPS_GLYPH_MAPPING;
    struct XPS_MATRIX;
    struct XPS_POINT;
    struct XPS_RECT;
    struct XPS_SIZE;
    struct XpsOMObjectFactory;
    struct XpsOMThumbnailGenerator;
    struct XpsSignatureManager;
    struct IXpsDocumentPackageTarget;
    struct IXpsDocumentPackageTarget3D;
    struct IXpsOMBrush;
    struct IXpsOMCanvas;
    struct IXpsOMColorProfileResource;
    struct IXpsOMColorProfileResourceCollection;
    struct IXpsOMCoreProperties;
    struct IXpsOMDashCollection;
    struct IXpsOMDictionary;
    struct IXpsOMDocument;
    struct IXpsOMDocumentCollection;
    struct IXpsOMDocumentSequence;
    struct IXpsOMDocumentStructureResource;
    struct IXpsOMFontResource;
    struct IXpsOMFontResourceCollection;
    struct IXpsOMGeometry;
    struct IXpsOMGeometryFigure;
    struct IXpsOMGeometryFigureCollection;
    struct IXpsOMGlyphs;
    struct IXpsOMGlyphsEditor;
    struct IXpsOMGradientBrush;
    struct IXpsOMGradientStop;
    struct IXpsOMGradientStopCollection;
    struct IXpsOMImageBrush;
    struct IXpsOMImageResource;
    struct IXpsOMImageResourceCollection;
    struct IXpsOMLinearGradientBrush;
    struct IXpsOMMatrixTransform;
    struct IXpsOMNameCollection;
    struct IXpsOMObjectFactory;
    struct IXpsOMObjectFactory1;
    struct IXpsOMPackage;
    struct IXpsOMPackage1;
    struct IXpsOMPackageTarget;
    struct IXpsOMPackageWriter;
    struct IXpsOMPackageWriter3D;
    struct IXpsOMPage;
    struct IXpsOMPage1;
    struct IXpsOMPageReference;
    struct IXpsOMPageReferenceCollection;
    struct IXpsOMPart;
    struct IXpsOMPartResources;
    struct IXpsOMPartUriCollection;
    struct IXpsOMPath;
    struct IXpsOMPrintTicketResource;
    struct IXpsOMRadialGradientBrush;
    struct IXpsOMRemoteDictionaryResource;
    struct IXpsOMRemoteDictionaryResource1;
    struct IXpsOMRemoteDictionaryResourceCollection;
    struct IXpsOMResource;
    struct IXpsOMShareable;
    struct IXpsOMSignatureBlockResource;
    struct IXpsOMSignatureBlockResourceCollection;
    struct IXpsOMSolidColorBrush;
    struct IXpsOMStoryFragmentsResource;
    struct IXpsOMThumbnailGenerator;
    struct IXpsOMTileBrush;
    struct IXpsOMVisual;
    struct IXpsOMVisualBrush;
    struct IXpsOMVisualCollection;
    struct IXpsSignature;
    struct IXpsSignatureBlock;
    struct IXpsSignatureBlockCollection;
    struct IXpsSignatureCollection;
    struct IXpsSignatureManager;
    struct IXpsSignatureRequest;
    struct IXpsSignatureRequestCollection;
    struct IXpsSigningOptions;
#pragma endregion forward_declarations

#pragma region delegates
    using ABORTPROC = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Graphics::Gdi::HDC, int32_t);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
