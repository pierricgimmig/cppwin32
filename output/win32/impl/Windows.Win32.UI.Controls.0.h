// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_UI_Controls_0_H
#define WIN32_Windows_Win32_UI_Controls_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct BOOL;
    struct HRESULT;
    struct HWND;
    struct LPARAM;
    struct PSTR;
    struct PWSTR;
    struct RECT;
    struct WPARAM;
}
WIN32_EXPORT namespace win32::Windows::Win32::Graphics::Gdi
{
    struct HDC;
    struct HFONT;
}
WIN32_EXPORT namespace win32::Windows::Win32::System::Com
{
    struct IStream;
}
WIN32_EXPORT namespace win32::Windows::Win32::UI::Controls
{
#pragma region enums
    enum class BGTYPE : int32_t
    {
        BT_IMAGEFILE = 0,
        BT_BORDERFILL = 1,
        BT_NONE = 2,
    };
    enum class BORDERTYPE : int32_t
    {
        BT_RECT = 0,
        BT_ROUNDRECT = 1,
        BT_ELLIPSE = 2,
    };
    enum class BP_ANIMATIONSTYLE : int32_t
    {
        BPAS_NONE = 0,
        BPAS_LINEAR = 1,
        BPAS_CUBIC = 2,
        BPAS_SINE = 3,
    };
    enum class BP_BUFFERFORMAT : int32_t
    {
        BPBF_COMPATIBLEBITMAP = 0,
        BPBF_DIB = 1,
        BPBF_TOPDOWNDIB = 2,
        BPBF_TOPDOWNMONODIB = 3,
    };
    enum class BP_PAINTPARAMS_FLAGS : uint32_t
    {
        BPPF_ERASE = 0x1,
        BPPF_NOCLIP = 0x2,
        BPPF_NONCLIENT = 0x4,
    };
    enum class BUTTON_IMAGELIST_ALIGN : uint32_t
    {
        BUTTON_IMAGELIST_ALIGN_LEFT = 0x0,
        BUTTON_IMAGELIST_ALIGN_RIGHT = 0x1,
        BUTTON_IMAGELIST_ALIGN_TOP = 0x2,
        BUTTON_IMAGELIST_ALIGN_BOTTOM = 0x3,
        BUTTON_IMAGELIST_ALIGN_CENTER = 0x4,
    };
    enum class CLOCKPARTS : int32_t
    {
        CLP_TIME = 1,
    };
    enum class CLOCKSTATES : int32_t
    {
        CLS_NORMAL = 1,
        CLS_HOT = 2,
        CLS_PRESSED = 3,
    };
    enum class COMBOBOXINFO_BUTTON_STATE : uint32_t
    {
        STATE_SYSTEM_INVISIBLE = 0x8000,
        STATE_SYSTEM_PRESSED = 0x8,
        STATE_SYSTEM_FOCUSABLE = 0x100000,
        STATE_SYSTEM_OFFSCREEN = 0x10000,
        STATE_SYSTEM_UNAVAILABLE = 0x1,
    };
    enum class COMBOBOX_EX_ITEM_FLAGS : uint32_t
    {
        CBEIF_DI_SETITEM = 0x10000000,
        CBEIF_IMAGE = 0x2,
        CBEIF_INDENT = 0x10,
        CBEIF_LPARAM = 0x20,
        CBEIF_OVERLAY = 0x8,
        CBEIF_SELECTEDIMAGE = 0x4,
        CBEIF_TEXT = 0x1,
    };
    enum class CONTENTALIGNMENT : int32_t
    {
        CA_LEFT = 0,
        CA_CENTER = 1,
        CA_RIGHT = 2,
    };
    enum class DLG_BUTTON_CHECK_STATE : uint32_t
    {
        BST_CHECKED = 0x1,
        BST_INDETERMINATE = 0x2,
        BST_UNCHECKED = 0x0,
    };
    enum class DLG_DIR_LIST_FILE_TYPE : uint32_t
    {
        DDL_ARCHIVE = 0x20,
        DDL_DIRECTORY = 0x10,
        DDL_DRIVES = 0x4000,
        DDL_EXCLUSIVE = 0x8000,
        DDL_HIDDEN = 0x2,
        DDL_READONLY = 0x1,
        DDL_READWRITE = 0x0,
        DDL_SYSTEM = 0x4,
        DDL_POSTMSGS = 0x2000,
    };
    enum class DPAMM_MESSAGE : uint32_t
    {
        DPAMM_MERGE = 0x1,
        DPAMM_DELETE = 0x2,
        DPAMM_INSERT = 0x3,
    };
    enum class DRAGLISTINFO_NOTIFICATION_FLAGS : uint32_t
    {
        DL_BEGINDRAG = 0x485,
        DL_CANCELDRAG = 0x488,
        DL_DRAGGING = 0x486,
        DL_DROPPED = 0x487,
    };
    enum class DRAWITEMSTRUCT_CTL_TYPE : uint32_t
    {
        ODT_BUTTON = 0x4,
        ODT_COMBOBOX = 0x3,
        ODT_LISTBOX = 0x2,
        ODT_LISTVIEW = 0x66,
        ODT_MENU = 0x1,
        ODT_STATIC = 0x5,
        ODT_TAB = 0x65,
    };
    enum class DRAW_THEME_PARENT_BACKGROUND_FLAGS : uint32_t
    {
        DTPB_WINDOWDC = 0x1,
        DTPB_USECTLCOLORSTATIC = 0x2,
        DTPB_USEERASEBKGND = 0x4,
    };
    enum class EC_ENDOFLINE : int32_t
    {
        EC_ENDOFLINE_DETECTFROMCONTENT = 0,
        EC_ENDOFLINE_CRLF = 1,
        EC_ENDOFLINE_CR = 2,
        EC_ENDOFLINE_LF = 3,
    };
    enum class EC_SEARCHWEB_ENTRYPOINT : int32_t
    {
        EC_SEARCHWEB_ENTRYPOINT_EXTERNAL = 0,
        EC_SEARCHWEB_ENTRYPOINT_CONTEXTMENU = 1,
    };
    enum class EDITBALLOONTIP_ICON : uint32_t
    {
        TTI_ERROR = 0x3,
        TTI_INFO = 0x1,
        TTI_NONE = 0x0,
        TTI_WARNING = 0x2,
        TTI_INFO_LARGE = 0x4,
        TTI_WARNING_LARGE = 0x5,
        TTI_ERROR_LARGE = 0x6,
    };
    enum class EMPTYMARKUPPARTS : int32_t
    {
        EMP_MARKUPTEXT = 1,
    };
    enum class ENABLE_SCROLL_BAR_ARROWS : uint32_t
    {
        ESB_DISABLE_BOTH = 0x3,
        ESB_DISABLE_DOWN = 0x2,
        ESB_DISABLE_LEFT = 0x1,
        ESB_DISABLE_LTUP = 0x1,
        ESB_DISABLE_RIGHT = 0x2,
        ESB_DISABLE_RTDN = 0x2,
        ESB_DISABLE_UP = 0x1,
        ESB_ENABLE_BOTH = 0x0,
    };
    enum class FEEDBACK_TYPE : int32_t
    {
        FEEDBACK_TOUCH_CONTACTVISUALIZATION = 1,
        FEEDBACK_PEN_BARRELVISUALIZATION = 2,
        FEEDBACK_PEN_TAP = 3,
        FEEDBACK_PEN_DOUBLETAP = 4,
        FEEDBACK_PEN_PRESSANDHOLD = 5,
        FEEDBACK_PEN_RIGHTTAP = 6,
        FEEDBACK_TOUCH_TAP = 7,
        FEEDBACK_TOUCH_DOUBLETAP = 8,
        FEEDBACK_TOUCH_PRESSANDHOLD = 9,
        FEEDBACK_TOUCH_RIGHTTAP = 10,
        FEEDBACK_GESTURE_PRESSANDTAP = 11,
        FEEDBACK_MAX = -1,
    };
    enum class FILLTYPE : int32_t
    {
        FT_SOLID = 0,
        FT_VERTGRADIENT = 1,
        FT_HORZGRADIENT = 2,
        FT_RADIALGRADIENT = 3,
        FT_TILEIMAGE = 4,
    };
    enum class GET_THEME_BITMAP_FLAGS : uint32_t
    {
        GBF_DIRECT = 0x1,
        GBF_COPY = 0x2,
        GBF_VALIDBITS = 0x3,
    };
    enum class GLYPHFONTSIZINGTYPE : int32_t
    {
        GFST_NONE = 0,
        GFST_SIZE = 1,
        GFST_DPI = 2,
    };
    enum class GLYPHTYPE : int32_t
    {
        GT_NONE = 0,
        GT_IMAGEGLYPH = 1,
        GT_FONTGLYPH = 2,
    };
    enum class GRIDCELLBACKGROUNDSTATES : int32_t
    {
        MCGCB_SELECTED = 1,
        MCGCB_HOT = 2,
        MCGCB_SELECTEDHOT = 3,
        MCGCB_SELECTEDNOTFOCUSED = 4,
        MCGCB_TODAY = 5,
        MCGCB_TODAYSELECTED = 6,
    };
    enum class GRIDCELLSTATES : int32_t
    {
        MCGC_HOT = 1,
        MCGC_HASSTATE = 2,
        MCGC_HASSTATEHOT = 3,
        MCGC_TODAY = 4,
        MCGC_TODAYSELECTED = 5,
        MCGC_SELECTED = 6,
        MCGC_SELECTEDHOT = 7,
    };
    enum class GRIDCELLUPPERSTATES : int32_t
    {
        MCGCU_HOT = 1,
        MCGCU_HASSTATE = 2,
        MCGCU_HASSTATEHOT = 3,
        MCGCU_SELECTED = 4,
        MCGCU_SELECTEDHOT = 5,
    };
    enum class HALIGN : int32_t
    {
        HA_LEFT = 0,
        HA_CENTER = 1,
        HA_RIGHT = 2,
    };
    enum class HDI_MASK : uint32_t
    {
        HDI_WIDTH = 0x1,
        HDI_HEIGHT = 0x1,
        HDI_TEXT = 0x2,
        HDI_FORMAT = 0x4,
        HDI_LPARAM = 0x8,
        HDI_BITMAP = 0x10,
        HDI_IMAGE = 0x20,
        HDI_DI_SETITEM = 0x40,
        HDI_ORDER = 0x80,
        HDI_FILTER = 0x100,
        HDI_STATE = 0x200,
    };
    enum class HEADER_CONTROL_NOTIFICATION_BUTTON : uint32_t
    {
        HEADER_CONTROL_NOTIFICATION_BUTTON_LEFT = 0x0,
        HEADER_CONTROL_NOTIFICATION_BUTTON_RIGHT = 0x1,
        HEADER_CONTROL_NOTIFICATION_BUTTON_MIDDLE = 0x2,
    };
    enum class HYPERLINKSTATES : int32_t
    {
        HLS_NORMALTEXT = 1,
        HLS_LINKTEXT = 2,
    };
    enum class ICONEFFECT : int32_t
    {
        ICE_NONE = 0,
        ICE_GLOW = 1,
        ICE_SHADOW = 2,
        ICE_PULSE = 3,
        ICE_ALPHA = 4,
    };
    enum class IMAGELAYOUT : int32_t
    {
        IL_VERTICAL = 0,
        IL_HORIZONTAL = 1,
    };
    enum class IMAGELIST_CREATION_FLAGS : uint32_t
    {
        ILC_MASK = 0x1,
        ILC_COLOR = 0x0,
        ILC_COLORDDB = 0xfe,
        ILC_COLOR4 = 0x4,
        ILC_COLOR8 = 0x8,
        ILC_COLOR16 = 0x10,
        ILC_COLOR24 = 0x18,
        ILC_COLOR32 = 0x20,
        ILC_PALETTE = 0x800,
        ILC_MIRROR = 0x2000,
        ILC_PERITEMMIRROR = 0x8000,
        ILC_ORIGINALSIZE = 0x10000,
        ILC_HIGHQUALITYSCALE = 0x20000,
    };
    enum class IMAGESELECTTYPE : int32_t
    {
        IST_NONE = 0,
        IST_SIZE = 1,
        IST_DPI = 2,
    };
    enum class IMAGE_LIST_COPY_FLAGS : uint32_t
    {
        ILCF_MOVE = 0x0,
        ILCF_SWAP = 0x1,
    };
    enum class IMAGE_LIST_DRAW_STYLE : uint32_t
    {
        ILD_BLEND = 0x4,
        ILD_BLEND50 = 0x4,
        ILD_FOCUS = 0x2,
        ILD_MASK = 0x10,
        ILD_NORMAL = 0x0,
        ILD_SELECTED = 0x4,
    };
    enum class IMAGE_LIST_ITEM_FLAGS : uint32_t
    {
        ILIF_ALPHA = 0x1,
        ILIF_LOWQUALITY = 0x2,
    };
    enum class INITCOMMONCONTROLSEX_ICC : uint32_t
    {
        ICC_ANIMATE_CLASS = 0x80,
        ICC_BAR_CLASSES = 0x4,
        ICC_COOL_CLASSES = 0x400,
        ICC_DATE_CLASSES = 0x100,
        ICC_HOTKEY_CLASS = 0x40,
        ICC_INTERNET_CLASSES = 0x800,
        ICC_LINK_CLASS = 0x8000,
        ICC_LISTVIEW_CLASSES = 0x1,
        ICC_NATIVEFNTCTL_CLASS = 0x2000,
        ICC_PAGESCROLLER_CLASS = 0x1000,
        ICC_PROGRESS_CLASS = 0x20,
        ICC_STANDARD_CLASSES = 0x4000,
        ICC_TAB_CLASSES = 0x8,
        ICC_TREEVIEW_CLASSES = 0x2,
        ICC_UPDOWN_CLASS = 0x10,
        ICC_USEREX_CLASSES = 0x200,
        ICC_WIN95_CLASSES = 0xff,
    };
    enum class LINKPARTS : int32_t
    {
        LP_HYPERLINK = 1,
    };
    enum class LOGOFFBUTTONSSTATES : int32_t
    {
        SPLS_NORMAL = 1,
        SPLS_HOT = 2,
        SPLS_PRESSED = 3,
    };
    enum class LVCOLUMNW_FORMAT : uint32_t
    {
        LVCFMT_LEFT = 0x0,
        LVCFMT_RIGHT = 0x1,
        LVCFMT_CENTER = 0x2,
        LVCFMT_JUSTIFYMASK = 0x3,
        LVCFMT_IMAGE = 0x800,
        LVCFMT_BITMAP_ON_RIGHT = 0x1000,
        LVCFMT_COL_HAS_IMAGES = 0x8000,
        LVCFMT_FIXED_WIDTH = 0x100,
        LVCFMT_NO_DPI_SCALE = 0x40000,
        LVCFMT_FIXED_RATIO = 0x80000,
        LVCFMT_SPLITBUTTON = 0x1000000,
    };
    enum class LVCOLUMNW_MASK : uint32_t
    {
        LVCF_FMT = 0x1,
        LVCF_WIDTH = 0x2,
        LVCF_TEXT = 0x4,
        LVCF_SUBITEM = 0x8,
        LVCF_IMAGE = 0x10,
        LVCF_ORDER = 0x20,
        LVCF_MINWIDTH = 0x40,
        LVCF_DEFAULTWIDTH = 0x80,
        LVCF_IDEALWIDTH = 0x100,
    };
    enum class LVFINDINFOW_FLAGS : uint32_t
    {
        LVFI_PARAM = 0x1,
        LVFI_PARTIAL = 0x8,
        LVFI_STRING = 0x2,
        LVFI_SUBSTRING = 0x4,
        LVFI_WRAP = 0x20,
        LVFI_NEARESTXY = 0x40,
    };
    enum class LVFOOTERITEM_MASK : uint32_t
    {
        LVFIF_TEXT = 0x1,
        LVFIF_STATE = 0x2,
    };
    enum class LVGROUP_MASK : uint32_t
    {
        LVGF_NONE = 0x0,
        LVGF_HEADER = 0x1,
        LVGF_FOOTER = 0x2,
        LVGF_STATE = 0x4,
    };
    enum class LVHITTESTINFO_FLAGS : uint32_t
    {
        LVHT_ABOVE = 0x8,
        LVHT_BELOW = 0x10,
        LVHT_NOWHERE = 0x1,
        LVHT_ONITEMICON = 0x2,
        LVHT_ONITEMLABEL = 0x4,
        LVHT_ONITEMSTATEICON = 0x8,
        LVHT_TOLEFT = 0x40,
        LVHT_TORIGHT = 0x20,
        LVHT_EX_GROUP_HEADER = 0x10000000,
        LVHT_EX_GROUP_FOOTER = 0x20000000,
        LVHT_EX_GROUP_COLLAPSE = 0x40000000,
        LVHT_EX_GROUP_BACKGROUND = 0x80000000,
        LVHT_EX_GROUP_STATEICON = 0x1000000,
        LVHT_EX_GROUP_SUBSETLINK = 0x2000000,
        LVHT_EX_GROUP = 0xf3000000,
        LVHT_EX_ONCONTENTS = 0x4000000,
        LVHT_EX_FOOTER = 0x8000000,
    };
    enum class LVITEMA_GROUP_ID : int32_t
    {
        I_GROUPIDCALLBACK = -1,
        I_GROUPIDNONE = -2,
    };
    enum class LVTILEVIEWINFO_FLAGS : uint32_t
    {
        LVTVIF_EXTENDED = 0x4,
    };
    enum class MARKUPTEXTSTATES : int32_t
    {
        EMT_NORMALTEXT = 1,
        EMT_LINKTEXT = 2,
    };
    enum class MCGRIDINFO_FLAGS : uint32_t
    {
        MCGIF_DATE = 0x1,
        MCGIF_RECT = 0x2,
        MCGIF_NAME = 0x4,
    };
    enum class MCGRIDINFO_PART : uint32_t
    {
        MCGIP_CALENDARCONTROL = 0x0,
        MCGIP_NEXT = 0x1,
        MCGIP_PREV = 0x2,
        MCGIP_FOOTER = 0x3,
        MCGIP_CALENDAR = 0x4,
        MCGIP_CALENDARHEADER = 0x5,
        MCGIP_CALENDARBODY = 0x6,
        MCGIP_CALENDARROW = 0x7,
        MCGIP_CALENDARCELL = 0x8,
    };
    enum class MENUBANDPARTS : int32_t
    {
        MDP_NEWAPPBUTTON = 1,
        MDP_SEPERATOR = 2,
    };
    enum class MENUBANDSTATES : int32_t
    {
        MDS_NORMAL = 1,
        MDS_HOT = 2,
        MDS_PRESSED = 3,
        MDS_DISABLED = 4,
        MDS_CHECKED = 5,
        MDS_HOTCHECKED = 6,
    };
    enum class MONTHCALPARTS : int32_t
    {
        MC_BACKGROUND = 1,
        MC_BORDERS = 2,
        MC_GRIDBACKGROUND = 3,
        MC_COLHEADERSPLITTER = 4,
        MC_GRIDCELLBACKGROUND = 5,
        MC_GRIDCELL = 6,
        MC_GRIDCELLUPPER = 7,
        MC_TRAILINGGRIDCELL = 8,
        MC_TRAILINGGRIDCELLUPPER = 9,
        MC_NAVNEXT = 10,
        MC_NAVPREV = 11,
    };
    enum class MOREPROGRAMSARROWBACKSTATES : int32_t
    {
        SPSB_NORMAL = 1,
        SPSB_HOT = 2,
        SPSB_PRESSED = 3,
    };
    enum class MOREPROGRAMSARROWSTATES : int32_t
    {
        SPS_NORMAL = 1,
        SPS_HOT = 2,
        SPS_PRESSED = 3,
    };
    enum class MOREPROGRAMSTABSTATES : int32_t
    {
        SPMPT_NORMAL = 1,
        SPMPT_HOT = 2,
        SPMPT_SELECTED = 3,
        SPMPT_DISABLED = 4,
        SPMPT_FOCUSED = 5,
    };
    enum class NAVNEXTSTATES : int32_t
    {
        MCNN_NORMAL = 1,
        MCNN_HOT = 2,
        MCNN_PRESSED = 3,
        MCNN_DISABLED = 4,
    };
    enum class NAVPREVSTATES : int32_t
    {
        MCNP_NORMAL = 1,
        MCNP_HOT = 2,
        MCNP_PRESSED = 3,
        MCNP_DISABLED = 4,
    };
    enum class NMCUSTOMDRAW_DRAW_STAGE : uint32_t
    {
        CDDS_POSTPAINT = 0x2,
        CDDS_PREERASE = 0x3,
        CDDS_PREPAINT = 0x1,
        CDDS_ITEMPOSTERASE = 0x10004,
        CDDS_ITEMPOSTPAINT = 0x10002,
        CDDS_ITEMPREERASE = 0x10003,
        CDDS_ITEMPREPAINT = 0x10001,
        CDDS_SUBITEM = 0x20000,
    };
    enum class NMLVCUSTOMDRAW_ALIGN : uint32_t
    {
        LVGA_HEADER_CENTER = 0x2,
        LVGA_HEADER_LEFT = 0x1,
        LVGA_HEADER_RIGHT = 0x4,
    };
    enum class NMLVCUSTOMDRAW_ITEM_TYPE : uint32_t
    {
        LVCDI_ITEM = 0x0,
        LVCDI_GROUP = 0x1,
        LVCDI_ITEMSLIST = 0x2,
    };
    enum class NMLVEMPTYMARKUP_FLAGS : uint32_t
    {
        EMF_CENTERED = 0x1,
    };
    enum class NMPGCALCSIZE_FLAGS : uint32_t
    {
        PGF_CALCHEIGHT = 0x2,
        PGF_CALCWIDTH = 0x1,
    };
    enum class NMPGSCROLL_DIR : uint32_t
    {
        PGF_SCROLLDOWN = 0x2,
        PGF_SCROLLLEFT = 0x4,
        PGF_SCROLLRIGHT = 0x8,
        PGF_SCROLLUP = 0x1,
    };
    enum class NMPGSCROLL_KEYS : uint16_t
    {
        PGK_NONE = 0x0,
        PGK_SHIFT = 0x1,
        PGK_CONTROL = 0x2,
        PGK_MENU = 0x4,
    };
    enum class NMREBAR_MASK_FLAGS : uint32_t
    {
        RBNM_ID = 0x1,
        RBNM_LPARAM = 0x4,
        RBNM_STYLE = 0x2,
    };
    enum class NMTBDISPINFOW_MASK : uint32_t
    {
        TBNF_IMAGE = 0x1,
        TBNF_TEXT = 0x2,
        TBNF_DI_SETITEM = 0x10000000,
    };
    enum class NMTBHOTITEM_FLAGS : uint32_t
    {
        HICF_ACCELERATOR = 0x4,
        HICF_ARROWKEYS = 0x2,
        HICF_DUPACCEL = 0x8,
        HICF_ENTERING = 0x10,
        HICF_LEAVING = 0x20,
        HICF_LMOUSE = 0x80,
        HICF_MOUSE = 0x1,
        HICF_OTHER = 0x0,
        HICF_RESELECT = 0x40,
        HICF_TOGGLEDROPDOWN = 0x100,
    };
    enum class OFFSETTYPE : int32_t
    {
        OT_TOPLEFT = 0,
        OT_TOPRIGHT = 1,
        OT_TOPMIDDLE = 2,
        OT_BOTTOMLEFT = 3,
        OT_BOTTOMRIGHT = 4,
        OT_BOTTOMMIDDLE = 5,
        OT_MIDDLELEFT = 6,
        OT_MIDDLERIGHT = 7,
        OT_LEFTOFCAPTION = 8,
        OT_RIGHTOFCAPTION = 9,
        OT_LEFTOFLASTBUTTON = 10,
        OT_RIGHTOFLASTBUTTON = 11,
        OT_ABOVELASTBUTTON = 12,
        OT_BELOWLASTBUTTON = 13,
    };
    enum class OPENBOXSTATES : int32_t
    {
        SPOB_NORMAL = 1,
        SPOB_HOT = 2,
        SPOB_SELECTED = 3,
        SPOB_DISABLED = 4,
        SPOB_FOCUSED = 5,
    };
    enum class OPEN_THEME_DATA_FLAGS : uint32_t
    {
        OTD_FORCE_RECT_SIZING = 0x1,
        OTD_NONCLIENT = 0x2,
    };
    enum class PAGEPARTS : int32_t
    {
        PGRP_UP = 1,
        PGRP_DOWN = 2,
        PGRP_UPHORZ = 3,
        PGRP_DOWNHORZ = 4,
    };
    enum class POINTER_DEVICE_CURSOR_TYPE : int32_t
    {
        POINTER_DEVICE_CURSOR_TYPE_UNKNOWN = 0,
        POINTER_DEVICE_CURSOR_TYPE_TIP = 1,
        POINTER_DEVICE_CURSOR_TYPE_ERASER = 2,
        POINTER_DEVICE_CURSOR_TYPE_MAX = -1,
    };
    enum class POINTER_DEVICE_TYPE : int32_t
    {
        POINTER_DEVICE_TYPE_INTEGRATED_PEN = 1,
        POINTER_DEVICE_TYPE_EXTERNAL_PEN = 2,
        POINTER_DEVICE_TYPE_TOUCH = 3,
        POINTER_DEVICE_TYPE_TOUCH_PAD = 4,
        POINTER_DEVICE_TYPE_MAX = -1,
    };
    enum class POINTER_FEEDBACK_MODE : int32_t
    {
        POINTER_FEEDBACK_DEFAULT = 1,
        POINTER_FEEDBACK_INDIRECT = 2,
        POINTER_FEEDBACK_NONE = 3,
    };
    enum class PROPERTYORIGIN : int32_t
    {
        PO_STATE = 0,
        PO_PART = 1,
        PO_CLASS = 2,
        PO_GLOBAL = 3,
        PO_NOTFOUND = 4,
    };
    enum class PSPCB_MESSAGE : uint32_t
    {
        PSPCB_ADDREF = 0x0,
        PSPCB_CREATE = 0x2,
        PSPCB_RELEASE = 0x1,
        PSPCB_SI_INITDIALOG = 0x401,
    };
    enum class SIZINGTYPE : int32_t
    {
        ST_TRUESIZE = 0,
        ST_STRETCH = 1,
        ST_TILE = 2,
    };
    enum class SOFTWAREEXPLORERSTATES : int32_t
    {
        SPSE_NORMAL = 1,
        SPSE_HOT = 2,
        SPSE_SELECTED = 3,
        SPSE_DISABLED = 4,
        SPSE_FOCUSED = 5,
    };
    enum class STARTPANELPARTS : int32_t
    {
        SPP_USERPANE = 1,
        SPP_MOREPROGRAMS = 2,
        SPP_MOREPROGRAMSARROW = 3,
        SPP_PROGLIST = 4,
        SPP_PROGLISTSEPARATOR = 5,
        SPP_PLACESLIST = 6,
        SPP_PLACESLISTSEPARATOR = 7,
        SPP_LOGOFF = 8,
        SPP_LOGOFFBUTTONS = 9,
        SPP_USERPICTURE = 10,
        SPP_PREVIEW = 11,
        SPP_MOREPROGRAMSTAB = 12,
        SPP_NSCHOST = 13,
        SPP_SOFTWAREEXPLORER = 14,
        SPP_OPENBOX = 15,
        SPP_SEARCHVIEW = 16,
        SPP_MOREPROGRAMSARROWBACK = 17,
        SPP_TOPMATCH = 18,
        SPP_LOGOFFSPLITBUTTONDROPDOWN = 19,
    };
    enum class STATICPARTS : int32_t
    {
        STAT_TEXT = 1,
    };
    enum class TASKBANDPARTS : int32_t
    {
        TDP_GROUPCOUNT = 1,
        TDP_FLASHBUTTON = 2,
        TDP_FLASHBUTTONGROUPMENU = 3,
    };
    enum class TASKBARPARTS : int32_t
    {
        TBP_BACKGROUNDBOTTOM = 1,
        TBP_BACKGROUNDRIGHT = 2,
        TBP_BACKGROUNDTOP = 3,
        TBP_BACKGROUNDLEFT = 4,
        TBP_SIZINGBARBOTTOM = 5,
        TBP_SIZINGBARRIGHT = 6,
        TBP_SIZINGBARTOP = 7,
        TBP_SIZINGBARLEFT = 8,
    };
    enum class TASKDIALOG_COMMON_BUTTON_FLAGS : int32_t
    {
        TDCBF_OK_BUTTON = 1,
        TDCBF_YES_BUTTON = 2,
        TDCBF_NO_BUTTON = 4,
        TDCBF_CANCEL_BUTTON = 8,
        TDCBF_RETRY_BUTTON = 16,
        TDCBF_CLOSE_BUTTON = 32,
    };
    enum class TASKDIALOG_ELEMENTS : int32_t
    {
        TDE_CONTENT = 0,
        TDE_EXPANDED_INFORMATION = 1,
        TDE_FOOTER = 2,
        TDE_MAIN_INSTRUCTION = 3,
    };
    enum class TASKDIALOG_FLAGS : int32_t
    {
        TDF_ENABLE_HYPERLINKS = 1,
        TDF_USE_HICON_MAIN = 2,
        TDF_USE_HICON_FOOTER = 4,
        TDF_ALLOW_DIALOG_CANCELLATION = 8,
        TDF_USE_COMMAND_LINKS = 16,
        TDF_USE_COMMAND_LINKS_NO_ICON = 32,
        TDF_EXPAND_FOOTER_AREA = 64,
        TDF_EXPANDED_BY_DEFAULT = 128,
        TDF_VERIFICATION_FLAG_CHECKED = 256,
        TDF_SHOW_PROGRESS_BAR = 512,
        TDF_SHOW_MARQUEE_PROGRESS_BAR = 1024,
        TDF_CALLBACK_TIMER = 2048,
        TDF_POSITION_RELATIVE_TO_WINDOW = 4096,
        TDF_RTL_LAYOUT = 8192,
        TDF_NO_DEFAULT_RADIO_BUTTON = 16384,
        TDF_CAN_BE_MINIMIZED = 32768,
        TDF_NO_SET_FOREGROUND = 65536,
        TDF_SIZE_TO_CONTENT = 16777216,
    };
    enum class TASKDIALOG_ICON_ELEMENTS : int32_t
    {
        TDIE_ICON_MAIN = 0,
        TDIE_ICON_FOOTER = 1,
    };
    enum class TASKDIALOG_MESSAGES : int32_t
    {
        TDM_NAVIGATE_PAGE = 1125,
        TDM_CLICK_BUTTON = 1126,
        TDM_SET_MARQUEE_PROGRESS_BAR = 1127,
        TDM_SET_PROGRESS_BAR_STATE = 1128,
        TDM_SET_PROGRESS_BAR_RANGE = 1129,
        TDM_SET_PROGRESS_BAR_POS = 1130,
        TDM_SET_PROGRESS_BAR_MARQUEE = 1131,
        TDM_SET_ELEMENT_TEXT = 1132,
        TDM_CLICK_RADIO_BUTTON = 1134,
        TDM_ENABLE_BUTTON = 1135,
        TDM_ENABLE_RADIO_BUTTON = 1136,
        TDM_CLICK_VERIFICATION = 1137,
        TDM_UPDATE_ELEMENT_TEXT = 1138,
        TDM_SET_BUTTON_ELEVATION_REQUIRED_STATE = 1139,
        TDM_UPDATE_ICON = 1140,
    };
    enum class TASKDIALOG_NOTIFICATIONS : int32_t
    {
        TDN_CREATED = 0,
        TDN_NAVIGATED = 1,
        TDN_BUTTON_CLICKED = 2,
        TDN_HYPERLINK_CLICKED = 3,
        TDN_TIMER = 4,
        TDN_DESTROYED = 5,
        TDN_RADIO_BUTTON_CLICKED = 6,
        TDN_DIALOG_CONSTRUCTED = 7,
        TDN_VERIFICATION_CLICKED = 8,
        TDN_HELP = 9,
        TDN_EXPANDO_BUTTON_CLICKED = 10,
    };
    enum class TA_PROPERTY : int32_t
    {
        TAP_FLAGS = 0,
        TAP_TRANSFORMCOUNT = 1,
        TAP_STAGGERDELAY = 2,
        TAP_STAGGERDELAYCAP = 3,
        TAP_STAGGERDELAYFACTOR = 4,
        TAP_ZORDER = 5,
    };
    enum class TA_PROPERTY_FLAG : uint32_t
    {
        TAPF_NONE = 0x0,
        TAPF_HASSTAGGER = 0x1,
        TAPF_ISRTLAWARE = 0x2,
        TAPF_ALLOWCOLLECTION = 0x4,
        TAPF_HASBACKGROUND = 0x8,
        TAPF_HASPERSPECTIVE = 0x10,
    };
    enum class TA_TIMINGFUNCTION_TYPE : int32_t
    {
        TTFT_UNDEFINED = 0,
        TTFT_CUBIC_BEZIER = 1,
    };
    enum class TA_TRANSFORM_FLAG : int32_t
    {
        TATF_NONE = 0,
        TATF_TARGETVALUES_USER = 1,
        TATF_HASINITIALVALUES = 2,
        TATF_HASORIGINVALUES = 4,
    };
    enum class TA_TRANSFORM_TYPE : int32_t
    {
        TATT_TRANSLATE_2D = 0,
        TATT_SCALE_2D = 1,
        TATT_OPACITY = 2,
        TATT_CLIP = 3,
    };
    enum class TBBUTTONINFOW_MASK : uint32_t
    {
        TBIF_BYINDEX = 0x80000000,
        TBIF_COMMAND = 0x20,
        TBIF_IMAGE = 0x1,
        TBIF_LPARAM = 0x10,
        TBIF_SIZE = 0x40,
        TBIF_STATE = 0x4,
        TBIF_STYLE = 0x8,
        TBIF_TEXT = 0x2,
    };
    enum class TBINSERTMARK_FLAGS : uint32_t
    {
        TBIMHT_NONE = 0x0,
        TBIMHT_AFTER = 0x1,
        TBIMHT_BACKGROUND = 0x2,
    };
    enum class TCHITTESTINFO_FLAGS : uint32_t
    {
        TCHT_NOWHERE = 0x1,
        TCHT_ONITEM = 0x6,
        TCHT_ONITEMICON = 0x2,
        TCHT_ONITEMLABEL = 0x4,
    };
    enum class TCITEMHEADERA_MASK : uint32_t
    {
        TCIF_IMAGE = 0x2,
        TCIF_RTLREADING = 0x4,
        TCIF_TEXT = 0x1,
        TCIF_PARAM = 0x8,
        TCIF_STATE = 0x10,
    };
    enum class TEXTSHADOWTYPE : int32_t
    {
        TST_NONE = 0,
        TST_SINGLE = 1,
        TST_CONTINUOUS = 2,
    };
    enum class THEMESIZE : int32_t
    {
        TS_MIN = 0,
        TS_TRUE = 1,
        TS_DRAW = 2,
    };
    enum class THEME_PROPERTY_SYMBOL_ID : uint32_t
    {
        TMT_RESERVEDLOW = 0x0,
        TMT_RESERVEDHIGH = 0x1f3f,
        TMT_DIBDATA = 0x2,
        TMT_GLYPHDIBDATA = 0x8,
        TMT_ENUM = 0xc8,
        TMT_STRING = 0xc9,
        TMT_INT = 0xca,
        TMT_BOOL = 0xcb,
        TMT_COLOR = 0xcc,
        TMT_MARGINS = 0xcd,
        TMT_FILENAME = 0xce,
        TMT_SIZE = 0xcf,
        TMT_POSITION = 0xd0,
        TMT_RECT = 0xd1,
        TMT_FONT = 0xd2,
        TMT_INTLIST = 0xd3,
        TMT_HBITMAP = 0xd4,
        TMT_DISKSTREAM = 0xd5,
        TMT_STREAM = 0xd6,
        TMT_BITMAPREF = 0xd7,
        TMT_FLOAT = 0xd8,
        TMT_FLOATLIST = 0xd9,
        TMT_COLORSCHEMES = 0x191,
        TMT_SIZES = 0x192,
        TMT_CHARSET = 0x193,
        TMT_NAME = 0x258,
        TMT_DISPLAYNAME = 0x259,
        TMT_TOOLTIP = 0x25a,
        TMT_COMPANY = 0x25b,
        TMT_AUTHOR = 0x25c,
        TMT_COPYRIGHT = 0x25d,
        TMT_URL = 0x25e,
        TMT_VERSION = 0x25f,
        TMT_DESCRIPTION = 0x260,
        TMT_FIRST_RCSTRING_NAME = 0x259,
        TMT_LAST_RCSTRING_NAME = 0x260,
        TMT_CAPTIONFONT = 0x321,
        TMT_SMALLCAPTIONFONT = 0x322,
        TMT_MENUFONT = 0x323,
        TMT_STATUSFONT = 0x324,
        TMT_MSGBOXFONT = 0x325,
        TMT_ICONTITLEFONT = 0x326,
        TMT_HEADING1FONT = 0x327,
        TMT_HEADING2FONT = 0x328,
        TMT_BODYFONT = 0x329,
        TMT_FIRSTFONT = 0x321,
        TMT_LASTFONT = 0x329,
        TMT_FLATMENUS = 0x3e9,
        TMT_FIRSTBOOL = 0x3e9,
        TMT_LASTBOOL = 0x3e9,
        TMT_SIZINGBORDERWIDTH = 0x4b1,
        TMT_SCROLLBARWIDTH = 0x4b2,
        TMT_SCROLLBARHEIGHT = 0x4b3,
        TMT_CAPTIONBARWIDTH = 0x4b4,
        TMT_CAPTIONBARHEIGHT = 0x4b5,
        TMT_SMCAPTIONBARWIDTH = 0x4b6,
        TMT_SMCAPTIONBARHEIGHT = 0x4b7,
        TMT_MENUBARWIDTH = 0x4b8,
        TMT_MENUBARHEIGHT = 0x4b9,
        TMT_PADDEDBORDERWIDTH = 0x4ba,
        TMT_FIRSTSIZE = 0x4b1,
        TMT_LASTSIZE = 0x4ba,
        TMT_MINCOLORDEPTH = 0x515,
        TMT_FIRSTINT = 0x515,
        TMT_LASTINT = 0x515,
        TMT_CSSNAME = 0x579,
        TMT_XMLNAME = 0x57a,
        TMT_LASTUPDATED = 0x57b,
        TMT_ALIAS = 0x57c,
        TMT_FIRSTSTRING = 0x579,
        TMT_LASTSTRING = 0x57c,
        TMT_SCROLLBAR = 0x641,
        TMT_BACKGROUND = 0x642,
        TMT_ACTIVECAPTION = 0x643,
        TMT_INACTIVECAPTION = 0x644,
        TMT_MENU = 0x645,
        TMT_WINDOW = 0x646,
        TMT_WINDOWFRAME = 0x647,
        TMT_MENUTEXT = 0x648,
        TMT_WINDOWTEXT = 0x649,
        TMT_CAPTIONTEXT = 0x64a,
        TMT_ACTIVEBORDER = 0x64b,
        TMT_INACTIVEBORDER = 0x64c,
        TMT_APPWORKSPACE = 0x64d,
        TMT_HIGHLIGHT = 0x64e,
        TMT_HIGHLIGHTTEXT = 0x64f,
        TMT_BTNFACE = 0x650,
        TMT_BTNSHADOW = 0x651,
        TMT_GRAYTEXT = 0x652,
        TMT_BTNTEXT = 0x653,
        TMT_INACTIVECAPTIONTEXT = 0x654,
        TMT_BTNHIGHLIGHT = 0x655,
        TMT_DKSHADOW3D = 0x656,
        TMT_LIGHT3D = 0x657,
        TMT_INFOTEXT = 0x658,
        TMT_INFOBK = 0x659,
        TMT_BUTTONALTERNATEFACE = 0x65a,
        TMT_HOTTRACKING = 0x65b,
        TMT_GRADIENTACTIVECAPTION = 0x65c,
        TMT_GRADIENTINACTIVECAPTION = 0x65d,
        TMT_MENUHILIGHT = 0x65e,
        TMT_MENUBAR = 0x65f,
        TMT_FIRSTCOLOR = 0x641,
        TMT_LASTCOLOR = 0x65f,
        TMT_FROMHUE1 = 0x709,
        TMT_FROMHUE2 = 0x70a,
        TMT_FROMHUE3 = 0x70b,
        TMT_FROMHUE4 = 0x70c,
        TMT_FROMHUE5 = 0x70d,
        TMT_TOHUE1 = 0x70e,
        TMT_TOHUE2 = 0x70f,
        TMT_TOHUE3 = 0x710,
        TMT_TOHUE4 = 0x711,
        TMT_TOHUE5 = 0x712,
        TMT_FROMCOLOR1 = 0x7d1,
        TMT_FROMCOLOR2 = 0x7d2,
        TMT_FROMCOLOR3 = 0x7d3,
        TMT_FROMCOLOR4 = 0x7d4,
        TMT_FROMCOLOR5 = 0x7d5,
        TMT_TOCOLOR1 = 0x7d6,
        TMT_TOCOLOR2 = 0x7d7,
        TMT_TOCOLOR3 = 0x7d8,
        TMT_TOCOLOR4 = 0x7d9,
        TMT_TOCOLOR5 = 0x7da,
        TMT_TRANSPARENT = 0x899,
        TMT_AUTOSIZE = 0x89a,
        TMT_BORDERONLY = 0x89b,
        TMT_COMPOSITED = 0x89c,
        TMT_BGFILL = 0x89d,
        TMT_GLYPHTRANSPARENT = 0x89e,
        TMT_GLYPHONLY = 0x89f,
        TMT_ALWAYSSHOWSIZINGBAR = 0x8a0,
        TMT_MIRRORIMAGE = 0x8a1,
        TMT_UNIFORMSIZING = 0x8a2,
        TMT_INTEGRALSIZING = 0x8a3,
        TMT_SOURCEGROW = 0x8a4,
        TMT_SOURCESHRINK = 0x8a5,
        TMT_DRAWBORDERS = 0x8a6,
        TMT_NOETCHEDEFFECT = 0x8a7,
        TMT_TEXTAPPLYOVERLAY = 0x8a8,
        TMT_TEXTGLOW = 0x8a9,
        TMT_TEXTITALIC = 0x8aa,
        TMT_COMPOSITEDOPAQUE = 0x8ab,
        TMT_LOCALIZEDMIRRORIMAGE = 0x8ac,
        TMT_IMAGECOUNT = 0x961,
        TMT_ALPHALEVEL = 0x962,
        TMT_BORDERSIZE = 0x963,
        TMT_ROUNDCORNERWIDTH = 0x964,
        TMT_ROUNDCORNERHEIGHT = 0x965,
        TMT_GRADIENTRATIO1 = 0x966,
        TMT_GRADIENTRATIO2 = 0x967,
        TMT_GRADIENTRATIO3 = 0x968,
        TMT_GRADIENTRATIO4 = 0x969,
        TMT_GRADIENTRATIO5 = 0x96a,
        TMT_PROGRESSCHUNKSIZE = 0x96b,
        TMT_PROGRESSSPACESIZE = 0x96c,
        TMT_SATURATION = 0x96d,
        TMT_TEXTBORDERSIZE = 0x96e,
        TMT_ALPHATHRESHOLD = 0x96f,
        TMT_WIDTH = 0x970,
        TMT_HEIGHT = 0x971,
        TMT_GLYPHINDEX = 0x972,
        TMT_TRUESIZESTRETCHMARK = 0x973,
        TMT_MINDPI1 = 0x974,
        TMT_MINDPI2 = 0x975,
        TMT_MINDPI3 = 0x976,
        TMT_MINDPI4 = 0x977,
        TMT_MINDPI5 = 0x978,
        TMT_TEXTGLOWSIZE = 0x979,
        TMT_FRAMESPERSECOND = 0x97a,
        TMT_PIXELSPERFRAME = 0x97b,
        TMT_ANIMATIONDELAY = 0x97c,
        TMT_GLOWINTENSITY = 0x97d,
        TMT_OPACITY = 0x97e,
        TMT_COLORIZATIONCOLOR = 0x97f,
        TMT_COLORIZATIONOPACITY = 0x980,
        TMT_MINDPI6 = 0x981,
        TMT_MINDPI7 = 0x982,
        TMT_GLYPHFONT = 0xa29,
        TMT_IMAGEFILE = 0xbb9,
        TMT_IMAGEFILE1 = 0xbba,
        TMT_IMAGEFILE2 = 0xbbb,
        TMT_IMAGEFILE3 = 0xbbc,
        TMT_IMAGEFILE4 = 0xbbd,
        TMT_IMAGEFILE5 = 0xbbe,
        TMT_GLYPHIMAGEFILE = 0xbc0,
        TMT_IMAGEFILE6 = 0xbc1,
        TMT_IMAGEFILE7 = 0xbc2,
        TMT_TEXT = 0xc81,
        TMT_CLASSICVALUE = 0xc82,
        TMT_OFFSET = 0xd49,
        TMT_TEXTSHADOWOFFSET = 0xd4a,
        TMT_MINSIZE = 0xd4b,
        TMT_MINSIZE1 = 0xd4c,
        TMT_MINSIZE2 = 0xd4d,
        TMT_MINSIZE3 = 0xd4e,
        TMT_MINSIZE4 = 0xd4f,
        TMT_MINSIZE5 = 0xd50,
        TMT_NORMALSIZE = 0xd51,
        TMT_MINSIZE6 = 0xd52,
        TMT_MINSIZE7 = 0xd53,
        TMT_SIZINGMARGINS = 0xe11,
        TMT_CONTENTMARGINS = 0xe12,
        TMT_CAPTIONMARGINS = 0xe13,
        TMT_BORDERCOLOR = 0xed9,
        TMT_FILLCOLOR = 0xeda,
        TMT_TEXTCOLOR = 0xedb,
        TMT_EDGELIGHTCOLOR = 0xedc,
        TMT_EDGEHIGHLIGHTCOLOR = 0xedd,
        TMT_EDGESHADOWCOLOR = 0xede,
        TMT_EDGEDKSHADOWCOLOR = 0xedf,
        TMT_EDGEFILLCOLOR = 0xee0,
        TMT_TRANSPARENTCOLOR = 0xee1,
        TMT_GRADIENTCOLOR1 = 0xee2,
        TMT_GRADIENTCOLOR2 = 0xee3,
        TMT_GRADIENTCOLOR3 = 0xee4,
        TMT_GRADIENTCOLOR4 = 0xee5,
        TMT_GRADIENTCOLOR5 = 0xee6,
        TMT_SHADOWCOLOR = 0xee7,
        TMT_GLOWCOLOR = 0xee8,
        TMT_TEXTBORDERCOLOR = 0xee9,
        TMT_TEXTSHADOWCOLOR = 0xeea,
        TMT_GLYPHTEXTCOLOR = 0xeeb,
        TMT_GLYPHTRANSPARENTCOLOR = 0xeec,
        TMT_FILLCOLORHINT = 0xeed,
        TMT_BORDERCOLORHINT = 0xeee,
        TMT_ACCENTCOLORHINT = 0xeef,
        TMT_TEXTCOLORHINT = 0xef0,
        TMT_HEADING1TEXTCOLOR = 0xef1,
        TMT_HEADING2TEXTCOLOR = 0xef2,
        TMT_BODYTEXTCOLOR = 0xef3,
        TMT_BGTYPE = 0xfa1,
        TMT_BORDERTYPE = 0xfa2,
        TMT_FILLTYPE = 0xfa3,
        TMT_SIZINGTYPE = 0xfa4,
        TMT_HALIGN = 0xfa5,
        TMT_CONTENTALIGNMENT = 0xfa6,
        TMT_VALIGN = 0xfa7,
        TMT_OFFSETTYPE = 0xfa8,
        TMT_ICONEFFECT = 0xfa9,
        TMT_TEXTSHADOWTYPE = 0xfaa,
        TMT_IMAGELAYOUT = 0xfab,
        TMT_GLYPHTYPE = 0xfac,
        TMT_IMAGESELECTTYPE = 0xfad,
        TMT_GLYPHFONTSIZINGTYPE = 0xfae,
        TMT_TRUESIZESCALINGTYPE = 0xfaf,
        TMT_USERPICTURE = 0x1389,
        TMT_DEFAULTPANESIZE = 0x138a,
        TMT_BLENDCOLOR = 0x138b,
        TMT_CUSTOMSPLITRECT = 0x138c,
        TMT_ANIMATIONBUTTONRECT = 0x138d,
        TMT_ANIMATIONDURATION = 0x138e,
        TMT_TRANSITIONDURATIONS = 0x1770,
        TMT_SCALEDBACKGROUND = 0x1b59,
        TMT_ATLASIMAGE = 0x1f40,
        TMT_ATLASINPUTIMAGE = 0x1f41,
        TMT_ATLASRECT = 0x1f42,
    };
    enum class TRAILINGGRIDCELLSTATES : int32_t
    {
        MCTGC_HOT = 1,
        MCTGC_HASSTATE = 2,
        MCTGC_HASSTATEHOT = 3,
        MCTGC_TODAY = 4,
        MCTGC_TODAYSELECTED = 5,
        MCTGC_SELECTED = 6,
        MCTGC_SELECTEDHOT = 7,
    };
    enum class TRAILINGGRIDCELLUPPERSTATES : int32_t
    {
        MCTGCU_HOT = 1,
        MCTGCU_HASSTATE = 2,
        MCTGCU_HASSTATEHOT = 3,
        MCTGCU_SELECTED = 4,
        MCTGCU_SELECTEDHOT = 5,
    };
    enum class TRAYNOTIFYPARTS : int32_t
    {
        TNP_BACKGROUND = 1,
        TNP_ANIMBACKGROUND = 2,
    };
    enum class TRUESIZESCALINGTYPE : int32_t
    {
        TSST_NONE = 0,
        TSST_SIZE = 1,
        TSST_DPI = 2,
    };
    enum class TTTOOLINFO_FLAGS : uint32_t
    {
        TTF_ABSOLUTE = 0x80,
        TTF_CENTERTIP = 0x2,
        TTF_IDISHWND = 0x1,
        TTF_PARSELINKS = 0x1000,
        TTF_RTLREADING = 0x4,
        TTF_SUBCLASS = 0x10,
        TTF_TRACK = 0x20,
        TTF_TRANSPARENT = 0x100,
    };
    enum class TVHITTESTINFO_FLAGS : uint32_t
    {
        TVHT_ABOVE = 0x100,
        TVHT_BELOW = 0x200,
        TVHT_NOWHERE = 0x1,
        TVHT_ONITEM = 0x46,
        TVHT_ONITEMBUTTON = 0x10,
        TVHT_ONITEMICON = 0x2,
        TVHT_ONITEMINDENT = 0x8,
        TVHT_ONITEMLABEL = 0x4,
        TVHT_ONITEMRIGHT = 0x20,
        TVHT_ONITEMSTATEICON = 0x40,
        TVHT_TOLEFT = 0x800,
        TVHT_TORIGHT = 0x400,
    };
    enum class TVITEMEXW_CHILDREN : int32_t
    {
        I_ZERO = 0,
        I_ONE_OR_MORE = 1,
        I_CHILDRENCALLBACK = -1,
        I_CHILDRENAUTO = -2,
    };
    enum class TVITEMPART : int32_t
    {
        TVGIPR_BUTTON = 1,
    };
    enum class TVITEM_MASK : uint32_t
    {
        TVIF_CHILDREN = 0x40,
        TVIF_DI_SETITEM = 0x1000,
        TVIF_HANDLE = 0x10,
        TVIF_IMAGE = 0x2,
        TVIF_PARAM = 0x4,
        TVIF_SELECTEDIMAGE = 0x20,
        TVIF_STATE = 0x8,
        TVIF_TEXT = 0x1,
        TVIF_EXPANDEDIMAGE = 0x200,
        TVIF_INTEGRAL = 0x80,
        TVIF_STATEEX = 0x100,
    };
    enum class VALIGN : int32_t
    {
        VA_TOP = 0,
        VA_CENTER = 1,
        VA_BOTTOM = 2,
    };
    enum class WINDOWTHEMEATTRIBUTETYPE : int32_t
    {
        WTA_NONCLIENT = 1,
    };
    enum class WORD_BREAK_ACTION : uint32_t
    {
        WB_CLASSIFY = 0x3,
        WB_ISDELIMITER = 0x2,
        WB_LEFT = 0x0,
        WB_LEFTBREAK = 0x6,
        WB_MOVEWORDLEFT = 0x4,
        WB_MOVEWORDRIGHT = 0x5,
        WB_RIGHT = 0x1,
        WB_RIGHTBREAK = 0x7,
    };
    enum class WSB_PROP : int32_t
    {
        WSB_PROP_CXHSCROLL = 2,
        WSB_PROP_CXHTHUMB = 16,
        WSB_PROP_CXVSCROLL = 8,
        WSB_PROP_CYHSCROLL = 4,
        WSB_PROP_CYVSCROLL = 1,
        WSB_PROP_CYVTHUMB = 32,
        WSB_PROP_HBKGCOLOR = 128,
        WSB_PROP_HSTYLE = 512,
        WSB_PROP_PALETTE = 2048,
        WSB_PROP_VBKGCOLOR = 64,
        WSB_PROP_VSTYLE = 256,
        WSB_PROP_WINSTYLE = 1024,
    };
    enum class _LI_METRIC : int32_t
    {
        LIM_SMALL = 0,
        LIM_LARGE = 1,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct BP_ANIMATIONPARAMS;
    struct BP_PAINTPARAMS;
    struct BUTTON_IMAGELIST;
    struct BUTTON_SPLITINFO;
    struct CCINFOA;
    struct CCINFOW;
    struct CCSTYLEA;
    struct CCSTYLEFLAGA;
    struct CCSTYLEFLAGW;
    struct CCSTYLEW;
    struct COLORMAP;
    struct COLORSCHEME;
    struct COMBOBOXEXITEMA;
    struct COMBOBOXEXITEMW;
    struct COMBOBOXINFO;
    struct COMPAREITEMSTRUCT;
    struct DATETIMEPICKERINFO;
    struct DELETEITEMSTRUCT;
    struct DPASTREAMINFO;
    struct DRAGLISTINFO;
    struct DRAWITEMSTRUCT;
    struct DTBGOPTS;
    struct DTTOPTS;
    struct EDITBALLOONTIP;
    struct HDHITTESTINFO;
    struct HDITEMA;
    struct HDITEMW;
    struct HDLAYOUT;
    struct HD_TEXTFILTERA;
    struct HD_TEXTFILTERW;
    struct HIMAGELIST;
    struct HPROPSHEETPAGE;
    struct HSYNTHETICPOINTERDEVICE;
    struct HTREEITEM;
    struct IMAGEINFO;
    struct IMAGELISTDRAWPARAMS;
    struct IMAGELISTSTATS;
    struct INITCOMMONCONTROLSEX;
    struct INTLIST;
    struct ImageList;
    struct LHITTESTINFO;
    struct LITEM;
    struct LVBKIMAGEA;
    struct LVBKIMAGEW;
    struct LVCOLUMNA;
    struct LVCOLUMNW;
    struct LVFINDINFOA;
    struct LVFINDINFOW;
    struct LVFOOTERINFO;
    struct LVFOOTERITEM;
    struct LVGROUP;
    struct LVGROUPMETRICS;
    struct LVHITTESTINFO;
    struct LVINSERTGROUPSORTED;
    struct LVINSERTMARK;
    struct LVITEMA;
    struct LVITEMINDEX;
    struct LVITEMW;
    struct LVSETINFOTIP;
    struct LVTILEINFO;
    struct LVTILEVIEWINFO;
    struct MARGINS;
    struct MCGRIDINFO;
    struct MCHITTESTINFO;
    struct MEASUREITEMSTRUCT;
    struct NMBCDROPDOWN;
    struct NMBCHOTITEM;
    struct NMCBEDRAGBEGINA;
    struct NMCBEDRAGBEGINW;
    struct NMCBEENDEDITA;
    struct NMCBEENDEDITW;
    struct NMCHAR;
    struct NMCOMBOBOXEXA;
    struct NMCOMBOBOXEXW;
    struct NMCUSTOMDRAW;
    struct NMCUSTOMSPLITRECTINFO;
    struct NMCUSTOMTEXT;
    struct NMDATETIMECHANGE;
    struct NMDATETIMEFORMATA;
    struct NMDATETIMEFORMATQUERYA;
    struct NMDATETIMEFORMATQUERYW;
    struct NMDATETIMEFORMATW;
    struct NMDATETIMESTRINGA;
    struct NMDATETIMESTRINGW;
    struct NMDATETIMEWMKEYDOWNA;
    struct NMDATETIMEWMKEYDOWNW;
    struct NMDAYSTATE;
    struct NMHDDISPINFOA;
    struct NMHDDISPINFOW;
    struct NMHDFILTERBTNCLICK;
    struct NMHDR;
    struct NMHEADERA;
    struct NMHEADERW;
    struct NMIPADDRESS;
    struct NMITEMACTIVATE;
    struct NMKEY;
    struct NMLINK;
    struct NMLISTVIEW;
    struct NMLVCACHEHINT;
    struct NMLVCUSTOMDRAW;
    struct NMLVDISPINFOA;
    struct NMLVDISPINFOW;
    struct NMLVEMPTYMARKUP;
    struct NMLVFINDITEMA;
    struct NMLVFINDITEMW;
    struct NMLVGETINFOTIPA;
    struct NMLVGETINFOTIPW;
    struct NMLVKEYDOWN;
    struct NMLVLINK;
    struct NMLVODSTATECHANGE;
    struct NMLVSCROLL;
    struct NMMOUSE;
    struct NMOBJECTNOTIFY;
    struct NMPGCALCSIZE;
    struct NMPGHOTITEM;
    struct NMPGSCROLL;
    struct NMRBAUTOSIZE;
    struct NMREBAR;
    struct NMREBARAUTOBREAK;
    struct NMREBARCHEVRON;
    struct NMREBARCHILDSIZE;
    struct NMREBARSPLITTER;
    struct NMSEARCHWEB;
    struct NMSELCHANGE;
    struct NMTBCUSTOMDRAW;
    struct NMTBDISPINFOA;
    struct NMTBDISPINFOW;
    struct NMTBGETINFOTIPA;
    struct NMTBGETINFOTIPW;
    struct NMTBHOTITEM;
    struct NMTBRESTORE;
    struct NMTBSAVE;
    struct NMTCKEYDOWN;
    struct NMTOOLBARA;
    struct NMTOOLBARW;
    struct NMTOOLTIPSCREATED;
    struct NMTRBTHUMBPOSCHANGING;
    struct NMTREEVIEWA;
    struct NMTREEVIEWW;
    struct NMTTCUSTOMDRAW;
    struct NMTTDISPINFOA;
    struct NMTTDISPINFOW;
    struct NMTVASYNCDRAW;
    struct NMTVCUSTOMDRAW;
    struct NMTVDISPINFOA;
    struct NMTVDISPINFOEXA;
    struct NMTVDISPINFOEXW;
    struct NMTVDISPINFOW;
    struct NMTVGETINFOTIPA;
    struct NMTVGETINFOTIPW;
    struct NMTVITEMCHANGE;
    struct NMTVKEYDOWN;
    struct NMTVSTATEIMAGECHANGING;
    struct NMUPDOWN;
    struct NMVIEWCHANGE;
    struct PBRANGE;
    struct POINTER_DEVICE_CURSOR_INFO;
    struct POINTER_DEVICE_INFO;
    struct POINTER_DEVICE_PROPERTY;
    struct POINTER_TYPE_INFO;
    struct PROPSHEETHEADERA_V1;
    struct PROPSHEETHEADERA_V2;
    struct PROPSHEETHEADERW_V1;
    struct PROPSHEETHEADERW_V2;
    struct PROPSHEETPAGEA;
    struct PROPSHEETPAGEA_V1;
    struct PROPSHEETPAGEA_V2;
    struct PROPSHEETPAGEA_V3;
    struct PROPSHEETPAGEW;
    struct PROPSHEETPAGEW_V1;
    struct PROPSHEETPAGEW_V2;
    struct PROPSHEETPAGEW_V3;
    struct PSHNOTIFY;
    struct RBHITTESTINFO;
    struct REBARBANDINFOA;
    struct REBARBANDINFOW;
    struct REBARINFO;
    struct TASKDIALOGCONFIG;
    struct TASKDIALOG_BUTTON;
    struct TA_CUBIC_BEZIER;
    struct TA_TIMINGFUNCTION;
    struct TA_TRANSFORM;
    struct TA_TRANSFORM_2D;
    struct TA_TRANSFORM_CLIP;
    struct TA_TRANSFORM_OPACITY;
    struct TBADDBITMAP;
    struct TBBUTTON;
    struct TBBUTTONINFOA;
    struct TBBUTTONINFOW;
    struct TBINSERTMARK;
    struct TBMETRICS;
    struct TBREPLACEBITMAP;
    struct TBSAVEPARAMSA;
    struct TBSAVEPARAMSW;
    struct TCHITTESTINFO;
    struct TCITEMA;
    struct TCITEMHEADERA;
    struct TCITEMHEADERW;
    struct TCITEMW;
    struct TOUCH_HIT_TESTING_INPUT;
    struct TOUCH_HIT_TESTING_PROXIMITY_EVALUATION;
    struct TTGETTITLE;
    struct TTHITTESTINFOA;
    struct TTHITTESTINFOW;
    struct TTTOOLINFOA;
    struct TTTOOLINFOW;
    struct TVGETITEMPARTRECTINFO;
    struct TVHITTESTINFO;
    struct TVINSERTSTRUCTA;
    struct TVINSERTSTRUCTW;
    struct TVITEMA;
    struct TVITEMEXA;
    struct TVITEMEXW;
    struct TVITEMW;
    struct TVSORTCB;
    struct UDACCEL;
    struct USAGE_PROPERTIES;
    struct WTA_OPTIONS;
    struct _DPA;
    struct _DSA;
    struct _IMAGELIST;
    struct _TREEITEM;
    struct IImageList;
    struct IImageList2;
#pragma endregion forward_declarations

#pragma region delegates
    using LPFNPSPCALLBACKA = uint32_t __stdcall(Windows::Win32::Foundation::HWND, Windows::Win32::UI::Controls::PSPCB_MESSAGE, Windows::Win32::UI::Controls::PROPSHEETPAGEA*);
    using LPFNPSPCALLBACKW = uint32_t __stdcall(Windows::Win32::Foundation::HWND, Windows::Win32::UI::Controls::PSPCB_MESSAGE, Windows::Win32::UI::Controls::PROPSHEETPAGEW*);
    using PFNPROPSHEETCALLBACK = int32_t __stdcall(Windows::Win32::Foundation::HWND, uint32_t, Windows::Win32::Foundation::LPARAM);
    using LPFNSVADDPROPSHEETPAGE = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::UI::Controls::HPROPSHEETPAGE, Windows::Win32::Foundation::LPARAM);
    using LPFNADDPROPSHEETPAGES = Windows::Win32::Foundation::BOOL __stdcall(void*, Windows::Win32::UI::Controls::LPFNSVADDPROPSHEETPAGE*, Windows::Win32::Foundation::LPARAM);
    using PFNLVCOMPARE = int32_t __stdcall(Windows::Win32::Foundation::LPARAM, Windows::Win32::Foundation::LPARAM, Windows::Win32::Foundation::LPARAM);
    using PFNLVGROUPCOMPARE = int32_t __stdcall(int32_t, int32_t, void*);
    using PFNTVCOMPARE = int32_t __stdcall(Windows::Win32::Foundation::LPARAM, Windows::Win32::Foundation::LPARAM, Windows::Win32::Foundation::LPARAM);
    using PFTASKDIALOGCALLBACK = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Foundation::HWND, uint32_t, Windows::Win32::Foundation::WPARAM, Windows::Win32::Foundation::LPARAM, intptr_t);
    using PFNDAENUMCALLBACK = int32_t __stdcall(void*, void*);
    using PFNDAENUMCALLBACKCONST = int32_t __stdcall(void*, void*);
    using PFNDACOMPARE = int32_t __stdcall(void*, void*, Windows::Win32::Foundation::LPARAM);
    using PFNDACOMPARECONST = int32_t __stdcall(void*, void*, Windows::Win32::Foundation::LPARAM);
    using PFNDPASTREAM = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::UI::Controls::DPASTREAMINFO*, Windows::Win32::System::Com::IStream*, void*);
    using PFNDPAMERGE = void* __stdcall(Windows::Win32::UI::Controls::DPAMM_MESSAGE, void*, void*, Windows::Win32::Foundation::LPARAM);
    using PFNDPAMERGECONST = void* __stdcall(Windows::Win32::UI::Controls::DPAMM_MESSAGE, void*, void*, Windows::Win32::Foundation::LPARAM);
    using DTT_CALLBACK_PROC = int32_t __stdcall(Windows::Win32::Graphics::Gdi::HDC, Windows::Win32::Foundation::PWSTR, int32_t, Windows::Win32::Foundation::RECT*, uint32_t, Windows::Win32::Foundation::LPARAM);
    using LPFNCCSTYLEA = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::HWND, Windows::Win32::UI::Controls::CCSTYLEA*);
    using LPFNCCSTYLEW = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::HWND, Windows::Win32::UI::Controls::CCSTYLEW*);
    using LPFNCCSIZETOTEXTA = int32_t __stdcall(uint32_t, uint32_t, Windows::Win32::Graphics::Gdi::HFONT, Windows::Win32::Foundation::PSTR);
    using LPFNCCSIZETOTEXTW = int32_t __stdcall(uint32_t, uint32_t, Windows::Win32::Graphics::Gdi::HFONT, Windows::Win32::Foundation::PWSTR);
    using LPFNCCINFOA = uint32_t __stdcall(Windows::Win32::UI::Controls::CCINFOA*);
    using LPFNCCINFOW = uint32_t __stdcall(Windows::Win32::UI::Controls::CCINFOW*);
    using EDITWORDBREAKPROCA = int32_t __stdcall(Windows::Win32::Foundation::PSTR, int32_t, int32_t, Windows::Win32::UI::Controls::WORD_BREAK_ACTION);
    using EDITWORDBREAKPROCW = int32_t __stdcall(Windows::Win32::Foundation::PWSTR, int32_t, int32_t, Windows::Win32::UI::Controls::WORD_BREAK_ACTION);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
