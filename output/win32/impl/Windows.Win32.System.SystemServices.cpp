// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_SystemServices_2_H
#define WIN32_Windows_Win32_System_SystemServices_2_H
#include "win32/Windows.Win32.System.SystemServices.h"
#include "win32/impl/Windows.Win32.System.SystemServices.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::System::SystemServices
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    void __stdcall ORBIT_IMPL_RtlRaiseException(win32::Windows::Win32::System::Diagnostics::Debug::EXCEPTION_RECORD* ExceptionRecord) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ExceptionRecord);

        g_api_table.RtlRaiseException(ExceptionRecord);
        
    }

    size_t __stdcall ORBIT_IMPL_RtlCompareMemory(void* Source1, void* Source2, size_t Length) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Source1);
        ORBIT_TRACK_PARAM(Source2);
        ORBIT_TRACK_PARAM(Length);

        auto win32_impl_result = g_api_table.RtlCompareMemory(Source1, Source2, Length);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RtlInitializeSListHead(win32::Windows::Win32::System::Kernel::SLIST_HEADER* ListHead) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ListHead);

        g_api_table.RtlInitializeSListHead(ListHead);
        
    }

    win32::Windows::Win32::System::Kernel::SLIST_ENTRY* __stdcall ORBIT_IMPL_RtlFirstEntrySList(win32::Windows::Win32::System::Kernel::SLIST_HEADER* ListHead) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ListHead);

        auto win32_impl_result = g_api_table.RtlFirstEntrySList(ListHead);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Kernel::SLIST_ENTRY* __stdcall ORBIT_IMPL_RtlInterlockedPopEntrySList(win32::Windows::Win32::System::Kernel::SLIST_HEADER* ListHead) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ListHead);

        auto win32_impl_result = g_api_table.RtlInterlockedPopEntrySList(ListHead);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Kernel::SLIST_ENTRY* __stdcall ORBIT_IMPL_RtlInterlockedPushEntrySList(win32::Windows::Win32::System::Kernel::SLIST_HEADER* ListHead, win32::Windows::Win32::System::Kernel::SLIST_ENTRY* ListEntry) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ListHead);
        ORBIT_TRACK_PARAM(ListEntry);

        auto win32_impl_result = g_api_table.RtlInterlockedPushEntrySList(ListHead, ListEntry);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Kernel::SLIST_ENTRY* __stdcall ORBIT_IMPL_RtlInterlockedPushListSListEx(win32::Windows::Win32::System::Kernel::SLIST_HEADER* ListHead, win32::Windows::Win32::System::Kernel::SLIST_ENTRY* List, win32::Windows::Win32::System::Kernel::SLIST_ENTRY* ListEnd, uint32_t Count) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ListHead);
        ORBIT_TRACK_PARAM(List);
        ORBIT_TRACK_PARAM(ListEnd);
        ORBIT_TRACK_PARAM(Count);

        auto win32_impl_result = g_api_table.RtlInterlockedPushListSListEx(ListHead, List, ListEnd, Count);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Kernel::SLIST_ENTRY* __stdcall ORBIT_IMPL_RtlInterlockedFlushSList(win32::Windows::Win32::System::Kernel::SLIST_HEADER* ListHead) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ListHead);

        auto win32_impl_result = g_api_table.RtlInterlockedFlushSList(ListHead);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint16_t __stdcall ORBIT_IMPL_RtlQueryDepthSList(win32::Windows::Win32::System::Kernel::SLIST_HEADER* ListHead) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ListHead);

        auto win32_impl_result = g_api_table.RtlQueryDepthSList(ListHead);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    size_t __stdcall ORBIT_IMPL_RtlGetReturnAddressHijackTarget() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.RtlGetReturnAddressHijackTarget();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_RtlGetProductInfo(uint32_t OSMajorVersion, uint32_t OSMinorVersion, uint32_t SpMajorVersion, uint32_t SpMinorVersion, uint32_t* ReturnedProductType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(OSMajorVersion);
        ORBIT_TRACK_PARAM(OSMinorVersion);
        ORBIT_TRACK_PARAM(SpMajorVersion);
        ORBIT_TRACK_PARAM(SpMinorVersion);
        ORBIT_TRACK_PARAM(ReturnedProductType);

        auto win32_impl_result = g_api_table.RtlGetProductInfo(OSMajorVersion, OSMinorVersion, SpMajorVersion, SpMinorVersion, ReturnedProductType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtlCrc32(void* Buffer, size_t Size, uint32_t InitialCrc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(Size);
        ORBIT_TRACK_PARAM(InitialCrc);

        auto win32_impl_result = g_api_table.RtlCrc32(Buffer, Size, InitialCrc);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint64_t __stdcall ORBIT_IMPL_RtlCrc64(void* Buffer, size_t Size, uint64_t InitialCrc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(Size);
        ORBIT_TRACK_PARAM(InitialCrc);

        auto win32_impl_result = g_api_table.RtlCrc64(Buffer, Size, InitialCrc);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::SystemServices::OS_DEPLOYEMENT_STATE_VALUES __stdcall ORBIT_IMPL_RtlOsDeploymentState(uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.RtlOsDeploymentState(Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtlGetNonVolatileToken(void* NvBuffer, size_t Size, void** NvToken) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NvBuffer);
        ORBIT_TRACK_PARAM(Size);
        ORBIT_TRACK_PARAM(NvToken);

        auto win32_impl_result = g_api_table.RtlGetNonVolatileToken(NvBuffer, Size, NvToken);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtlFreeNonVolatileToken(void* NvToken) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NvToken);

        auto win32_impl_result = g_api_table.RtlFreeNonVolatileToken(NvToken);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtlFlushNonVolatileMemory(void* NvToken, void* NvBuffer, size_t Size, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NvToken);
        ORBIT_TRACK_PARAM(NvBuffer);
        ORBIT_TRACK_PARAM(Size);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.RtlFlushNonVolatileMemory(NvToken, NvBuffer, Size, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtlDrainNonVolatileFlush(void* NvToken) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NvToken);

        auto win32_impl_result = g_api_table.RtlDrainNonVolatileFlush(NvToken);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtlWriteNonVolatileMemory(void* NvToken, void* NvDestination, void* Source, size_t Size, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NvToken);
        ORBIT_TRACK_PARAM(NvDestination);
        ORBIT_TRACK_PARAM(Source);
        ORBIT_TRACK_PARAM(Size);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.RtlWriteNonVolatileMemory(NvToken, NvDestination, Source, Size, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtlFillNonVolatileMemory(void* NvToken, void* NvDestination, size_t Size, uint8_t Value, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NvToken);
        ORBIT_TRACK_PARAM(NvDestination);
        ORBIT_TRACK_PARAM(Size);
        ORBIT_TRACK_PARAM(Value);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.RtlFillNonVolatileMemory(NvToken, NvDestination, Size, Value, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtlFlushNonVolatileMemoryRanges(void* NvToken, win32::Windows::Win32::System::SystemServices::NV_MEMORY_RANGE* NvRanges, size_t NumRanges, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NvToken);
        ORBIT_TRACK_PARAM(NvRanges);
        ORBIT_TRACK_PARAM(NumRanges);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.RtlFlushNonVolatileMemoryRanges(NvToken, NvRanges, NumRanges, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtlInitializeCorrelationVector(win32::Windows::Win32::System::SystemServices::CORRELATION_VECTOR* CorrelationVector, int32_t Version, ::win32::guid* Guid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CorrelationVector);
        ORBIT_TRACK_PARAM(Version);
        ORBIT_TRACK_PARAM(Guid);

        auto win32_impl_result = g_api_table.RtlInitializeCorrelationVector(CorrelationVector, Version, Guid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtlIncrementCorrelationVector(win32::Windows::Win32::System::SystemServices::CORRELATION_VECTOR* CorrelationVector) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CorrelationVector);

        auto win32_impl_result = g_api_table.RtlIncrementCorrelationVector(CorrelationVector);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtlExtendCorrelationVector(win32::Windows::Win32::System::SystemServices::CORRELATION_VECTOR* CorrelationVector) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CorrelationVector);

        auto win32_impl_result = g_api_table.RtlExtendCorrelationVector(CorrelationVector);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtlValidateCorrelationVector(win32::Windows::Win32::System::SystemServices::CORRELATION_VECTOR* Vector) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Vector);

        auto win32_impl_result = g_api_table.RtlValidateCorrelationVector(Vector);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtlRaiseCustomSystemEventTrigger(win32::Windows::Win32::System::SystemServices::CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG* TriggerConfig) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TriggerConfig);

        auto win32_impl_result = g_api_table.RtlRaiseCustomSystemEventTrigger(TriggerConfig);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_RtlIsZeroMemory(void* Buffer, size_t Length) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(Length);

        auto win32_impl_result = g_api_table.RtlIsZeroMemory(Buffer, Length);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_RtlNormalizeSecurityDescriptor(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** SecurityDescriptor, uint32_t SecurityDescriptorLength, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** NewSecurityDescriptor, uint32_t* NewSecurityDescriptorLength, win32::Windows::Win32::Foundation::BOOLEAN CheckOnly) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SecurityDescriptor);
        ORBIT_TRACK_PARAM(SecurityDescriptorLength);
        ORBIT_TRACK_PARAM(NewSecurityDescriptor);
        ORBIT_TRACK_PARAM(NewSecurityDescriptorLength);
        ORBIT_TRACK_PARAM(CheckOnly);

        auto win32_impl_result = g_api_table.RtlNormalizeSecurityDescriptor(SecurityDescriptor, SecurityDescriptorLength, NewSecurityDescriptor, NewSecurityDescriptorLength, CheckOnly);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtlGetSystemGlobalData(win32::Windows::Win32::System::SystemServices::RTL_SYSTEM_GLOBAL_DATA_ID DataId, void* Buffer, uint32_t Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DataId);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.RtlGetSystemGlobalData(DataId, Buffer, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_RtlGetDeviceFamilyInfoEnum(uint64_t* pullUAPInfo, uint32_t* pulDeviceFamily, uint32_t* pulDeviceForm) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pullUAPInfo);
        ORBIT_TRACK_PARAM(pulDeviceFamily);
        ORBIT_TRACK_PARAM(pulDeviceForm);

        g_api_table.RtlGetDeviceFamilyInfoEnum(pullUAPInfo, pulDeviceFamily, pulDeviceForm);
        
    }

    uint32_t __stdcall ORBIT_IMPL_RtlConvertDeviceFamilyInfoToString(uint32_t* pulDeviceFamilyBufferSize, uint32_t* pulDeviceFormBufferSize, win32::Windows::Win32::Foundation::PWSTR DeviceFamily, win32::Windows::Win32::Foundation::PWSTR DeviceForm) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulDeviceFamilyBufferSize);
        ORBIT_TRACK_PARAM(pulDeviceFormBufferSize);
        ORBIT_TRACK_PARAM(DeviceFamily);
        ORBIT_TRACK_PARAM(DeviceForm);

        auto win32_impl_result = g_api_table.RtlConvertDeviceFamilyInfoToString(pulDeviceFamilyBufferSize, pulDeviceFormBufferSize, DeviceFamily, DeviceForm);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_RtlSwitchedVVI(win32::Windows::Win32::System::SystemInformation::OSVERSIONINFOEXW* VersionInfo, uint32_t TypeMask, uint64_t ConditionMask) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(VersionInfo);
        ORBIT_TRACK_PARAM(TypeMask);
        ORBIT_TRACK_PARAM(ConditionMask);

        auto win32_impl_result = g_api_table.RtlSwitchedVVI(VersionInfo, TypeMask, ConditionMask);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Rpc::RPC_STATUS __stdcall ORBIT_IMPL_I_RpcNsGetBuffer(win32::Windows::Win32::System::Rpc::RPC_MESSAGE* Message) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Message);

        auto win32_impl_result = g_api_table.I_RpcNsGetBuffer(Message);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Rpc::RPC_STATUS __stdcall ORBIT_IMPL_I_RpcNsSendReceive(win32::Windows::Win32::System::Rpc::RPC_MESSAGE* Message, void** Handle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Message);
        ORBIT_TRACK_PARAM(Handle);

        auto win32_impl_result = g_api_table.I_RpcNsSendReceive(Message, Handle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_I_RpcNsRaiseException(win32::Windows::Win32::System::Rpc::RPC_MESSAGE* Message, win32::Windows::Win32::System::Rpc::RPC_STATUS Status) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Message);
        ORBIT_TRACK_PARAM(Status);

        g_api_table.I_RpcNsRaiseException(Message, Status);
        
    }

    win32::Windows::Win32::System::Rpc::RPC_STATUS __stdcall ORBIT_IMPL_I_RpcReBindBuffer(win32::Windows::Win32::System::Rpc::RPC_MESSAGE* Message) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Message);

        auto win32_impl_result = g_api_table.I_RpcReBindBuffer(Message);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngQueryEMFInfo(win32::Windows::Win32::System::SystemServices::HDEV hdev, win32::Windows::Win32::System::SystemServices::EMFINFO* pEMFInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdev);
        ORBIT_TRACK_PARAM(pEMFInfo);

        auto win32_impl_result = g_api_table.EngQueryEMFInfo(hdev, pEMFInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_RegisterDeviceNotificationA(win32::Windows::Win32::Foundation::HANDLE hRecipient, void* NotificationFilter, win32::Windows::Win32::System::Power::POWER_SETTING_REGISTER_NOTIFICATION_FLAGS Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRecipient);
        ORBIT_TRACK_PARAM(NotificationFilter);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.RegisterDeviceNotificationA(hRecipient, NotificationFilter, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_RegisterDeviceNotificationW(win32::Windows::Win32::Foundation::HANDLE hRecipient, void* NotificationFilter, win32::Windows::Win32::System::Power::POWER_SETTING_REGISTER_NOTIFICATION_FLAGS Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRecipient);
        ORBIT_TRACK_PARAM(NotificationFilter);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.RegisterDeviceNotificationW(hRecipient, NotificationFilter, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UnregisterDeviceNotification(void* Handle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Handle);

        auto win32_impl_result = g_api_table.UnregisterDeviceNotification(Handle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_BindIoCompletionCallback(win32::Windows::Win32::Foundation::HANDLE FileHandle, win32::Windows::Win32::System::IO::LPOVERLAPPED_COMPLETION_ROUTINE* Function, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileHandle);
        ORBIT_TRACK_PARAM(Function);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.BindIoCompletionCallback(FileHandle, Function, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
