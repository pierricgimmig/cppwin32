// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_Time_2_H
#define WIN32_Windows_Win32_System_Time_2_H
#include "win32/Windows.Win32.System.Time.h"
#include "win32/impl/Windows.Win32.System.Time.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::System::Time
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SystemTimeToTzSpecificLocalTime(win32::Windows::Win32::System::Time::TIME_ZONE_INFORMATION* lpTimeZoneInformation, win32::Windows::Win32::Foundation::SYSTEMTIME* lpUniversalTime, win32::Windows::Win32::Foundation::SYSTEMTIME* lpLocalTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpTimeZoneInformation);
        ORBIT_TRACK_PARAM(lpUniversalTime);
        ORBIT_TRACK_PARAM(lpLocalTime);

        auto win32_impl_result = g_api_table.SystemTimeToTzSpecificLocalTime(lpTimeZoneInformation, lpUniversalTime, lpLocalTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_TzSpecificLocalTimeToSystemTime(win32::Windows::Win32::System::Time::TIME_ZONE_INFORMATION* lpTimeZoneInformation, win32::Windows::Win32::Foundation::SYSTEMTIME* lpLocalTime, win32::Windows::Win32::Foundation::SYSTEMTIME* lpUniversalTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpTimeZoneInformation);
        ORBIT_TRACK_PARAM(lpLocalTime);
        ORBIT_TRACK_PARAM(lpUniversalTime);

        auto win32_impl_result = g_api_table.TzSpecificLocalTimeToSystemTime(lpTimeZoneInformation, lpLocalTime, lpUniversalTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_FileTimeToSystemTime(win32::Windows::Win32::Foundation::FILETIME* lpFileTime, win32::Windows::Win32::Foundation::SYSTEMTIME* lpSystemTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpFileTime);
        ORBIT_TRACK_PARAM(lpSystemTime);

        auto win32_impl_result = g_api_table.FileTimeToSystemTime(lpFileTime, lpSystemTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SystemTimeToFileTime(win32::Windows::Win32::Foundation::SYSTEMTIME* lpSystemTime, win32::Windows::Win32::Foundation::FILETIME* lpFileTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemTime);
        ORBIT_TRACK_PARAM(lpFileTime);

        auto win32_impl_result = g_api_table.SystemTimeToFileTime(lpSystemTime, lpFileTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetTimeZoneInformation(win32::Windows::Win32::System::Time::TIME_ZONE_INFORMATION* lpTimeZoneInformation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpTimeZoneInformation);

        auto win32_impl_result = g_api_table.GetTimeZoneInformation(lpTimeZoneInformation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetTimeZoneInformation(win32::Windows::Win32::System::Time::TIME_ZONE_INFORMATION* lpTimeZoneInformation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpTimeZoneInformation);

        auto win32_impl_result = g_api_table.SetTimeZoneInformation(lpTimeZoneInformation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetDynamicTimeZoneInformation(win32::Windows::Win32::System::Time::DYNAMIC_TIME_ZONE_INFORMATION* lpTimeZoneInformation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpTimeZoneInformation);

        auto win32_impl_result = g_api_table.SetDynamicTimeZoneInformation(lpTimeZoneInformation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetDynamicTimeZoneInformation(win32::Windows::Win32::System::Time::DYNAMIC_TIME_ZONE_INFORMATION* pTimeZoneInformation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pTimeZoneInformation);

        auto win32_impl_result = g_api_table.GetDynamicTimeZoneInformation(pTimeZoneInformation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetTimeZoneInformationForYear(uint16_t wYear, win32::Windows::Win32::System::Time::DYNAMIC_TIME_ZONE_INFORMATION* pdtzi, win32::Windows::Win32::System::Time::TIME_ZONE_INFORMATION* ptzi) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(wYear);
        ORBIT_TRACK_PARAM(pdtzi);
        ORBIT_TRACK_PARAM(ptzi);

        auto win32_impl_result = g_api_table.GetTimeZoneInformationForYear(wYear, pdtzi, ptzi);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_EnumDynamicTimeZoneInformation(uint32_t dwIndex, win32::Windows::Win32::System::Time::DYNAMIC_TIME_ZONE_INFORMATION* lpTimeZoneInformation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwIndex);
        ORBIT_TRACK_PARAM(lpTimeZoneInformation);

        auto win32_impl_result = g_api_table.EnumDynamicTimeZoneInformation(dwIndex, lpTimeZoneInformation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetDynamicTimeZoneInformationEffectiveYears(win32::Windows::Win32::System::Time::DYNAMIC_TIME_ZONE_INFORMATION* lpTimeZoneInformation, uint32_t* FirstYear, uint32_t* LastYear) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpTimeZoneInformation);
        ORBIT_TRACK_PARAM(FirstYear);
        ORBIT_TRACK_PARAM(LastYear);

        auto win32_impl_result = g_api_table.GetDynamicTimeZoneInformationEffectiveYears(lpTimeZoneInformation, FirstYear, LastYear);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SystemTimeToTzSpecificLocalTimeEx(win32::Windows::Win32::System::Time::DYNAMIC_TIME_ZONE_INFORMATION* lpTimeZoneInformation, win32::Windows::Win32::Foundation::SYSTEMTIME* lpUniversalTime, win32::Windows::Win32::Foundation::SYSTEMTIME* lpLocalTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpTimeZoneInformation);
        ORBIT_TRACK_PARAM(lpUniversalTime);
        ORBIT_TRACK_PARAM(lpLocalTime);

        auto win32_impl_result = g_api_table.SystemTimeToTzSpecificLocalTimeEx(lpTimeZoneInformation, lpUniversalTime, lpLocalTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_TzSpecificLocalTimeToSystemTimeEx(win32::Windows::Win32::System::Time::DYNAMIC_TIME_ZONE_INFORMATION* lpTimeZoneInformation, win32::Windows::Win32::Foundation::SYSTEMTIME* lpLocalTime, win32::Windows::Win32::Foundation::SYSTEMTIME* lpUniversalTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpTimeZoneInformation);
        ORBIT_TRACK_PARAM(lpLocalTime);
        ORBIT_TRACK_PARAM(lpUniversalTime);

        auto win32_impl_result = g_api_table.TzSpecificLocalTimeToSystemTimeEx(lpTimeZoneInformation, lpLocalTime, lpUniversalTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LocalFileTimeToLocalSystemTime(win32::Windows::Win32::System::Time::TIME_ZONE_INFORMATION* timeZoneInformation, win32::Windows::Win32::Foundation::FILETIME* localFileTime, win32::Windows::Win32::Foundation::SYSTEMTIME* localSystemTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(timeZoneInformation);
        ORBIT_TRACK_PARAM(localFileTime);
        ORBIT_TRACK_PARAM(localSystemTime);

        auto win32_impl_result = g_api_table.LocalFileTimeToLocalSystemTime(timeZoneInformation, localFileTime, localSystemTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LocalSystemTimeToLocalFileTime(win32::Windows::Win32::System::Time::TIME_ZONE_INFORMATION* timeZoneInformation, win32::Windows::Win32::Foundation::SYSTEMTIME* localSystemTime, win32::Windows::Win32::Foundation::FILETIME* localFileTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(timeZoneInformation);
        ORBIT_TRACK_PARAM(localSystemTime);
        ORBIT_TRACK_PARAM(localFileTime);

        auto win32_impl_result = g_api_table.LocalSystemTimeToLocalFileTime(timeZoneInformation, localSystemTime, localFileTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
