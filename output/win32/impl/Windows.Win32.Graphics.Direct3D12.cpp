// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Graphics_Direct3D12_2_H
#define WIN32_Windows_Win32_Graphics_Direct3D12_2_H
#include "win32/Windows.Win32.Graphics.Direct3D12.h"
#include "win32/impl/Windows.Win32.Graphics.Direct3D12.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::Graphics::Direct3D12
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3D12SerializeRootSignature(win32::Windows::Win32::Graphics::Direct3D12::D3D12_ROOT_SIGNATURE_DESC* pRootSignature, win32::Windows::Win32::Graphics::Direct3D12::D3D_ROOT_SIGNATURE_VERSION Version, win32::Windows::Win32::Graphics::Direct3D11::ID3DBlob** ppBlob, win32::Windows::Win32::Graphics::Direct3D11::ID3DBlob** ppErrorBlob) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pRootSignature);
        ORBIT_TRACK_PARAM(Version);
        ORBIT_TRACK_PARAM(ppBlob);
        ORBIT_TRACK_PARAM(ppErrorBlob);

        auto win32_impl_result = g_api_table.D3D12SerializeRootSignature(pRootSignature, Version, ppBlob, ppErrorBlob);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3D12CreateRootSignatureDeserializer(void* pSrcData, size_t SrcDataSizeInBytes, ::win32::guid* pRootSignatureDeserializerInterface, void** ppRootSignatureDeserializer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSrcData);
        ORBIT_TRACK_PARAM(SrcDataSizeInBytes);
        ORBIT_TRACK_PARAM(pRootSignatureDeserializerInterface);
        ORBIT_TRACK_PARAM(ppRootSignatureDeserializer);

        auto win32_impl_result = g_api_table.D3D12CreateRootSignatureDeserializer(pSrcData, SrcDataSizeInBytes, pRootSignatureDeserializerInterface, ppRootSignatureDeserializer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3D12SerializeVersionedRootSignature(win32::Windows::Win32::Graphics::Direct3D12::D3D12_VERSIONED_ROOT_SIGNATURE_DESC* pRootSignature, win32::Windows::Win32::Graphics::Direct3D11::ID3DBlob** ppBlob, win32::Windows::Win32::Graphics::Direct3D11::ID3DBlob** ppErrorBlob) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pRootSignature);
        ORBIT_TRACK_PARAM(ppBlob);
        ORBIT_TRACK_PARAM(ppErrorBlob);

        auto win32_impl_result = g_api_table.D3D12SerializeVersionedRootSignature(pRootSignature, ppBlob, ppErrorBlob);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3D12CreateVersionedRootSignatureDeserializer(void* pSrcData, size_t SrcDataSizeInBytes, ::win32::guid* pRootSignatureDeserializerInterface, void** ppRootSignatureDeserializer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSrcData);
        ORBIT_TRACK_PARAM(SrcDataSizeInBytes);
        ORBIT_TRACK_PARAM(pRootSignatureDeserializerInterface);
        ORBIT_TRACK_PARAM(ppRootSignatureDeserializer);

        auto win32_impl_result = g_api_table.D3D12CreateVersionedRootSignatureDeserializer(pSrcData, SrcDataSizeInBytes, pRootSignatureDeserializerInterface, ppRootSignatureDeserializer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3D12CreateDevice(win32::Windows::Win32::System::Com::IUnknown* pAdapter, win32::Windows::Win32::Graphics::Direct3D11::D3D_FEATURE_LEVEL MinimumFeatureLevel, ::win32::guid* riid, void** ppDevice) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAdapter);
        ORBIT_TRACK_PARAM(MinimumFeatureLevel);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppDevice);

        auto win32_impl_result = g_api_table.D3D12CreateDevice(pAdapter, MinimumFeatureLevel, riid, ppDevice);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3D12GetDebugInterface(::win32::guid* riid, void** ppvDebug) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppvDebug);

        auto win32_impl_result = g_api_table.D3D12GetDebugInterface(riid, ppvDebug);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3D12EnableExperimentalFeatures(uint32_t NumFeatures, ::win32::guid* pIIDs, void* pConfigurationStructs, uint32_t* pConfigurationStructSizes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NumFeatures);
        ORBIT_TRACK_PARAM(pIIDs);
        ORBIT_TRACK_PARAM(pConfigurationStructs);
        ORBIT_TRACK_PARAM(pConfigurationStructSizes);

        auto win32_impl_result = g_api_table.D3D12EnableExperimentalFeatures(NumFeatures, pIIDs, pConfigurationStructs, pConfigurationStructSizes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3D12GetInterface(::win32::guid* rclsid, ::win32::guid* riid, void** ppvDebug) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rclsid);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppvDebug);

        auto win32_impl_result = g_api_table.D3D12GetInterface(rclsid, riid, ppvDebug);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_D3D11On12CreateDevice(win32::Windows::Win32::System::Com::IUnknown* pDevice, uint32_t Flags, win32::Windows::Win32::Graphics::Direct3D11::D3D_FEATURE_LEVEL* pFeatureLevels, uint32_t FeatureLevels, win32::Windows::Win32::System::Com::IUnknown** ppCommandQueues, uint32_t NumQueues, uint32_t NodeMask, win32::Windows::Win32::Graphics::Direct3D11::ID3D11Device** ppDevice, win32::Windows::Win32::Graphics::Direct3D11::ID3D11DeviceContext** ppImmediateContext, win32::Windows::Win32::Graphics::Direct3D11::D3D_FEATURE_LEVEL* pChosenFeatureLevel) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDevice);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(pFeatureLevels);
        ORBIT_TRACK_PARAM(FeatureLevels);
        ORBIT_TRACK_PARAM(ppCommandQueues);
        ORBIT_TRACK_PARAM(NumQueues);
        ORBIT_TRACK_PARAM(NodeMask);
        ORBIT_TRACK_PARAM(ppDevice);
        ORBIT_TRACK_PARAM(ppImmediateContext);
        ORBIT_TRACK_PARAM(pChosenFeatureLevel);

        auto win32_impl_result = g_api_table.D3D11On12CreateDevice(pDevice, Flags, pFeatureLevels, FeatureLevels, ppCommandQueues, NumQueues, NodeMask, ppDevice, ppImmediateContext, pChosenFeatureLevel);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_Direct3DCreate9On12Ex(uint32_t SDKVersion, win32::Windows::Win32::Graphics::Direct3D12::D3D9ON12_ARGS* pOverrideList, uint32_t NumOverrideEntries, win32::Windows::Win32::Graphics::Direct3D9::IDirect3D9Ex** ppOutputInterface) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SDKVersion);
        ORBIT_TRACK_PARAM(pOverrideList);
        ORBIT_TRACK_PARAM(NumOverrideEntries);
        ORBIT_TRACK_PARAM(ppOutputInterface);

        auto win32_impl_result = g_api_table.Direct3DCreate9On12Ex(SDKVersion, pOverrideList, NumOverrideEntries, ppOutputInterface);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Graphics::Direct3D9::IDirect3D9* __stdcall ORBIT_IMPL_Direct3DCreate9On12(uint32_t SDKVersion, win32::Windows::Win32::Graphics::Direct3D12::D3D9ON12_ARGS* pOverrideList, uint32_t NumOverrideEntries) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SDKVersion);
        ORBIT_TRACK_PARAM(pOverrideList);
        ORBIT_TRACK_PARAM(NumOverrideEntries);

        auto win32_impl_result = g_api_table.Direct3DCreate9On12(SDKVersion, pOverrideList, NumOverrideEntries);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_MFCreateD3D12SynchronizationObject(win32::Windows::Win32::Graphics::Direct3D12::ID3D12Device* pDevice, ::win32::guid* riid, void** ppvSyncObject) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDevice);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppvSyncObject);

        auto win32_impl_result = g_api_table.MFCreateD3D12SynchronizationObject(pDevice, riid, ppvSyncObject);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
