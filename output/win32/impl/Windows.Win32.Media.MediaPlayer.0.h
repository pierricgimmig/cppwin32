// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Media_MediaPlayer_0_H
#define WIN32_Windows_Win32_Media_MediaPlayer_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Media::MediaPlayer
{
#pragma region enums
    enum class FEEDS_BACKGROUNDSYNC_ACTION : int32_t
    {
        FBSA_DISABLE = 0,
        FBSA_ENABLE = 1,
        FBSA_RUNNOW = 2,
    };
    enum class FEEDS_BACKGROUNDSYNC_STATUS : int32_t
    {
        FBSS_DISABLED = 0,
        FBSS_ENABLED = 1,
    };
    enum class FEEDS_DOWNLOAD_ERROR : int32_t
    {
        FDE_NONE = 0,
        FDE_DOWNLOAD_FAILED = 1,
        FDE_INVALID_FEED_FORMAT = 2,
        FDE_NORMALIZATION_FAILED = 3,
        FDE_PERSISTENCE_FAILED = 4,
        FDE_DOWNLOAD_BLOCKED = 5,
        FDE_CANCELED = 6,
        FDE_UNSUPPORTED_AUTH = 7,
        FDE_BACKGROUND_DOWNLOAD_DISABLED = 8,
        FDE_NOT_EXIST = 9,
        FDE_UNSUPPORTED_MSXML = 10,
        FDE_UNSUPPORTED_DTD = 11,
        FDE_DOWNLOAD_SIZE_LIMIT_EXCEEDED = 12,
        FDE_ACCESS_DENIED = 13,
        FDE_AUTH_FAILED = 14,
        FDE_INVALID_AUTH = 15,
    };
    enum class FEEDS_DOWNLOAD_STATUS : int32_t
    {
        FDS_NONE = 0,
        FDS_PENDING = 1,
        FDS_DOWNLOADING = 2,
        FDS_DOWNLOADED = 3,
        FDS_DOWNLOAD_FAILED = 4,
    };
    enum class FEEDS_ERROR_CODE : int32_t
    {
        FEC_E_ERRORBASE = -1073479168,
        FEC_E_INVALIDMSXMLPROPERTY = -1073479168,
        FEC_E_DOWNLOADSIZELIMITEXCEEDED = -1073479167,
    };
    enum class FEEDS_EVENTS_ITEM_COUNT_FLAGS : int32_t
    {
        FEICF_READ_ITEM_COUNT_CHANGED = 1,
        FEICF_UNREAD_ITEM_COUNT_CHANGED = 2,
    };
    enum class FEEDS_EVENTS_MASK : int32_t
    {
        FEM_FOLDEREVENTS = 1,
        FEM_FEEDEVENTS = 2,
    };
    enum class FEEDS_EVENTS_SCOPE : int32_t
    {
        FES_ALL = 0,
        FES_SELF_ONLY = 1,
        FES_SELF_AND_CHILDREN_ONLY = 2,
    };
    enum class FEEDS_SYNC_SETTING : int32_t
    {
        FSS_DEFAULT = 0,
        FSS_INTERVAL = 1,
        FSS_MANUAL = 2,
        FSS_SUGGESTED = 3,
    };
    enum class FEEDS_XML_FILTER_FLAGS : int32_t
    {
        FXFF_ALL = 0,
        FXFF_UNREAD = 1,
        FXFF_READ = 2,
    };
    enum class FEEDS_XML_INCLUDE_FLAGS : int32_t
    {
        FXIF_NONE = 0,
        FXIF_CF_EXTENSIONS = 1,
    };
    enum class FEEDS_XML_SORT_ORDER : int32_t
    {
        FXSO_NONE = 0,
        FXSO_ASCENDING = 1,
        FXSO_DESCENDING = 2,
    };
    enum class FEEDS_XML_SORT_PROPERTY : int32_t
    {
        FXSP_NONE = 0,
        FXSP_PUBDATE = 1,
        FXSP_DOWNLOADTIME = 2,
    };
    enum class PlayerState : int32_t
    {
        stop_state = 0,
        pause_state = 1,
        play_state = 2,
    };
    enum class WMPAccountType : int32_t
    {
        wmpatBuyOnly = 1,
        wmpatSubscription = 2,
        wmpatJanus = 3,
    };
    enum class WMPBurnFormat : int32_t
    {
        wmpbfAudioCD = 0,
        wmpbfDataCD = 1,
    };
    enum class WMPBurnState : int32_t
    {
        wmpbsUnknown = 0,
        wmpbsBusy = 1,
        wmpbsReady = 2,
        wmpbsWaitingForDisc = 3,
        wmpbsRefreshStatusPending = 4,
        wmpbsPreparingToBurn = 5,
        wmpbsBurning = 6,
        wmpbsStopped = 7,
        wmpbsErasing = 8,
        wmpbsDownloading = 9,
    };
    enum class WMPCallbackNotification : int32_t
    {
        wmpcnLoginStateChange = 1,
        wmpcnAuthResult = 2,
        wmpcnLicenseUpdated = 3,
        wmpcnNewCatalogAvailable = 4,
        wmpcnNewPluginAvailable = 5,
        wmpcnDisableRadioSkipping = 6,
    };
    enum class WMPDeviceStatus : int32_t
    {
        wmpdsUnknown = 0,
        wmpdsPartnershipExists = 1,
        wmpdsPartnershipDeclined = 2,
        wmpdsPartnershipAnother = 3,
        wmpdsManualDevice = 4,
        wmpdsNewDevice = 5,
        wmpdsLast = 6,
    };
    enum class WMPFolderScanState : int32_t
    {
        wmpfssUnknown = 0,
        wmpfssScanning = 1,
        wmpfssUpdating = 2,
        wmpfssStopped = 3,
    };
    enum class WMPLibraryType : int32_t
    {
        wmpltUnknown = 0,
        wmpltAll = 1,
        wmpltLocal = 2,
        wmpltRemote = 3,
        wmpltDisc = 4,
        wmpltPortableDevice = 5,
    };
    enum class WMPOpenState : int32_t
    {
        wmposUndefined = 0,
        wmposPlaylistChanging = 1,
        wmposPlaylistLocating = 2,
        wmposPlaylistConnecting = 3,
        wmposPlaylistLoading = 4,
        wmposPlaylistOpening = 5,
        wmposPlaylistOpenNoMedia = 6,
        wmposPlaylistChanged = 7,
        wmposMediaChanging = 8,
        wmposMediaLocating = 9,
        wmposMediaConnecting = 10,
        wmposMediaLoading = 11,
        wmposMediaOpening = 12,
        wmposMediaOpen = 13,
        wmposBeginCodecAcquisition = 14,
        wmposEndCodecAcquisition = 15,
        wmposBeginLicenseAcquisition = 16,
        wmposEndLicenseAcquisition = 17,
        wmposBeginIndividualization = 18,
        wmposEndIndividualization = 19,
        wmposMediaWaiting = 20,
        wmposOpeningUnknownURL = 21,
    };
    enum class WMPPartnerNotification : int32_t
    {
        wmpsnBackgroundProcessingBegin = 1,
        wmpsnBackgroundProcessingEnd = 2,
        wmpsnCatalogDownloadFailure = 3,
        wmpsnCatalogDownloadComplete = 4,
    };
    enum class WMPPlayState : int32_t
    {
        wmppsUndefined = 0,
        wmppsStopped = 1,
        wmppsPaused = 2,
        wmppsPlaying = 3,
        wmppsScanForward = 4,
        wmppsScanReverse = 5,
        wmppsBuffering = 6,
        wmppsWaiting = 7,
        wmppsMediaEnded = 8,
        wmppsTransitioning = 9,
        wmppsReady = 10,
        wmppsReconnecting = 11,
        wmppsLast = 12,
    };
    enum class WMPPlaylistChangeEventType : int32_t
    {
        wmplcUnknown = 0,
        wmplcClear = 1,
        wmplcInfoChange = 2,
        wmplcMove = 3,
        wmplcDelete = 4,
        wmplcInsert = 5,
        wmplcAppend = 6,
        wmplcPrivate = 7,
        wmplcNameChange = 8,
        wmplcMorph = 9,
        wmplcSort = 10,
        wmplcLast = 11,
    };
    enum class WMPPlugin_Caps : int32_t
    {
        WMPPlugin_Caps_CannotConvertFormats = 1,
    };
    enum class WMPRipState : int32_t
    {
        wmprsUnknown = 0,
        wmprsRipping = 1,
        wmprsStopped = 2,
    };
    enum class WMPServices_StreamState : int32_t
    {
        WMPServices_StreamState_Stop = 0,
        WMPServices_StreamState_Pause = 1,
        WMPServices_StreamState_Play = 2,
    };
    enum class WMPStreamingType : int32_t
    {
        wmpstUnknown = 0,
        wmpstMusic = 1,
        wmpstVideo = 2,
        wmpstRadio = 3,
    };
    enum class WMPStringCollectionChangeEventType : int32_t
    {
        wmpsccetUnknown = 0,
        wmpsccetInsert = 1,
        wmpsccetChange = 2,
        wmpsccetDelete = 3,
        wmpsccetClear = 4,
        wmpsccetBeginUpdates = 5,
        wmpsccetEndUpdates = 6,
    };
    enum class WMPSubscriptionDownloadState : int32_t
    {
        wmpsdlsDownloading = 0,
        wmpsdlsPaused = 1,
        wmpsdlsProcessing = 2,
        wmpsdlsCompleted = 3,
        wmpsdlsCancelled = 4,
    };
    enum class WMPSubscriptionServiceEvent : int32_t
    {
        wmpsseCurrentBegin = 1,
        wmpsseCurrentEnd = 2,
        wmpsseFullBegin = 3,
        wmpsseFullEnd = 4,
    };
    enum class WMPSyncState : int32_t
    {
        wmpssUnknown = 0,
        wmpssSynchronizing = 1,
        wmpssStopped = 2,
        wmpssEstimating = 3,
        wmpssLast = 4,
    };
    enum class WMPTaskType : int32_t
    {
        wmpttBrowse = 1,
        wmpttSync = 2,
        wmpttBurn = 3,
        wmpttCurrent = 4,
    };
    enum class WMPTemplateSize : int32_t
    {
        wmptsSmall = 0,
        wmptsMedium = 1,
        wmptsLarge = 2,
    };
    enum class WMPTransactionType : int32_t
    {
        wmpttNoTransaction = 0,
        wmpttDownload = 1,
        wmpttBuy = 2,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct FeedFolderWatcher;
    struct FeedWatcher;
    struct FeedsManager;
    struct TimedLevel;
    struct WMPContextMenuInfo;
    struct WMPLib;
    struct WMPRemoteMediaServices;
    struct WMP_WMDM_METADATA_ROUND_TRIP_DEVICE2PC;
    struct WMP_WMDM_METADATA_ROUND_TRIP_PC2DEVICE;
    struct WindowsMediaPlayer;
    struct IFeed;
    struct IFeed2;
    struct IFeedEnclosure;
    struct IFeedEvents;
    struct IFeedFolder;
    struct IFeedFolderEvents;
    struct IFeedItem;
    struct IFeedItem2;
    struct IFeedsEnum;
    struct IFeedsManager;
    struct IWMPAudioRenderConfig;
    struct IWMPCdrom;
    struct IWMPCdromBurn;
    struct IWMPCdromCollection;
    struct IWMPCdromRip;
    struct IWMPClosedCaption;
    struct IWMPClosedCaption2;
    struct IWMPContentContainer;
    struct IWMPContentContainerList;
    struct IWMPContentPartner;
    struct IWMPContentPartnerCallback;
    struct IWMPControls;
    struct IWMPControls2;
    struct IWMPControls3;
    struct IWMPConvert;
    struct IWMPCore;
    struct IWMPCore2;
    struct IWMPCore3;
    struct IWMPDVD;
    struct IWMPDownloadCollection;
    struct IWMPDownloadItem;
    struct IWMPDownloadItem2;
    struct IWMPDownloadManager;
    struct IWMPEffects;
    struct IWMPEffects2;
    struct IWMPError;
    struct IWMPErrorItem;
    struct IWMPErrorItem2;
    struct IWMPEvents;
    struct IWMPEvents2;
    struct IWMPEvents3;
    struct IWMPEvents4;
    struct IWMPFolderMonitorServices;
    struct IWMPGraphCreation;
    struct IWMPLibrary;
    struct IWMPLibrary2;
    struct IWMPLibraryServices;
    struct IWMPLibrarySharingServices;
    struct IWMPMedia;
    struct IWMPMedia2;
    struct IWMPMedia3;
    struct IWMPMediaCollection;
    struct IWMPMediaCollection2;
    struct IWMPMediaPluginRegistrar;
    struct IWMPMetadataPicture;
    struct IWMPMetadataText;
    struct IWMPNetwork;
    struct IWMPNodeRealEstate;
    struct IWMPNodeRealEstateHost;
    struct IWMPNodeWindowed;
    struct IWMPNodeWindowedHost;
    struct IWMPNodeWindowless;
    struct IWMPNodeWindowlessHost;
    struct IWMPPlayer;
    struct IWMPPlayer2;
    struct IWMPPlayer3;
    struct IWMPPlayer4;
    struct IWMPPlayerApplication;
    struct IWMPPlayerServices;
    struct IWMPPlayerServices2;
    struct IWMPPlaylist;
    struct IWMPPlaylistArray;
    struct IWMPPlaylistCollection;
    struct IWMPPlugin;
    struct IWMPPluginEnable;
    struct IWMPPluginUI;
    struct IWMPQuery;
    struct IWMPRemoteMediaServices;
    struct IWMPRenderConfig;
    struct IWMPServices;
    struct IWMPSettings;
    struct IWMPSettings2;
    struct IWMPSkinManager;
    struct IWMPStringCollection;
    struct IWMPStringCollection2;
    struct IWMPSubscriptionService;
    struct IWMPSubscriptionService2;
    struct IWMPSubscriptionServiceCallback;
    struct IWMPSyncDevice;
    struct IWMPSyncDevice2;
    struct IWMPSyncDevice3;
    struct IWMPSyncServices;
    struct IWMPTranscodePolicy;
    struct IWMPUserEventSink;
    struct IWMPVideoRenderConfig;
    struct IWMPWindowMessageSink;
    struct IXFeed;
    struct IXFeed2;
    struct IXFeedEnclosure;
    struct IXFeedEvents;
    struct IXFeedFolder;
    struct IXFeedFolderEvents;
    struct IXFeedItem;
    struct IXFeedItem2;
    struct IXFeedsEnum;
    struct IXFeedsManager;
    struct _WMPOCXEvents;
#pragma endregion forward_declarations

#pragma region delegates
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
