// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Data_Xml_MsXml_0_H
#define WIN32_Windows_Win32_Data_Xml_MsXml_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Data::Xml::MsXml
{
#pragma region enums
    enum class DOMNodeType : int32_t
    {
        NODE_INVALID = 0,
        NODE_ELEMENT = 1,
        NODE_ATTRIBUTE = 2,
        NODE_TEXT = 3,
        NODE_CDATA_SECTION = 4,
        NODE_ENTITY_REFERENCE = 5,
        NODE_ENTITY = 6,
        NODE_PROCESSING_INSTRUCTION = 7,
        NODE_COMMENT = 8,
        NODE_DOCUMENT = 9,
        NODE_DOCUMENT_TYPE = 10,
        NODE_DOCUMENT_FRAGMENT = 11,
        NODE_NOTATION = 12,
    };
    enum class SCHEMACONTENTTYPE : int32_t
    {
        SCHEMACONTENTTYPE_EMPTY = 0,
        SCHEMACONTENTTYPE_TEXTONLY = 1,
        SCHEMACONTENTTYPE_ELEMENTONLY = 2,
        SCHEMACONTENTTYPE_MIXED = 3,
    };
    enum class SCHEMADERIVATIONMETHOD : int32_t
    {
        SCHEMADERIVATIONMETHOD_EMPTY = 0,
        SCHEMADERIVATIONMETHOD_SUBSTITUTION = 1,
        SCHEMADERIVATIONMETHOD_EXTENSION = 2,
        SCHEMADERIVATIONMETHOD_RESTRICTION = 4,
        SCHEMADERIVATIONMETHOD_LIST = 8,
        SCHEMADERIVATIONMETHOD_UNION = 16,
        SCHEMADERIVATIONMETHOD_ALL = 255,
        SCHEMADERIVATIONMETHOD_NONE = 256,
    };
    enum class SCHEMAPROCESSCONTENTS : int32_t
    {
        SCHEMAPROCESSCONTENTS_NONE = 0,
        SCHEMAPROCESSCONTENTS_SKIP = 1,
        SCHEMAPROCESSCONTENTS_LAX = 2,
        SCHEMAPROCESSCONTENTS_STRICT = 3,
    };
    enum class SCHEMATYPEVARIETY : int32_t
    {
        SCHEMATYPEVARIETY_NONE = -1,
        SCHEMATYPEVARIETY_ATOMIC = 0,
        SCHEMATYPEVARIETY_LIST = 1,
        SCHEMATYPEVARIETY_UNION = 2,
    };
    enum class SCHEMAUSE : int32_t
    {
        SCHEMAUSE_OPTIONAL = 0,
        SCHEMAUSE_PROHIBITED = 1,
        SCHEMAUSE_REQUIRED = 2,
    };
    enum class SCHEMAWHITESPACE : int32_t
    {
        SCHEMAWHITESPACE_NONE = -1,
        SCHEMAWHITESPACE_PRESERVE = 0,
        SCHEMAWHITESPACE_REPLACE = 1,
        SCHEMAWHITESPACE_COLLAPSE = 2,
    };
    enum class SERVERXMLHTTP_OPTION : int32_t
    {
        SXH_OPTION_URL = -1,
        SXH_OPTION_URL_CODEPAGE = 0,
        SXH_OPTION_ESCAPE_PERCENT_IN_URL = 1,
        SXH_OPTION_IGNORE_SERVER_SSL_CERT_ERROR_FLAGS = 2,
        SXH_OPTION_SELECT_CLIENT_SSL_CERT = 3,
    };
    enum class SOMITEMTYPE : int32_t
    {
        SOMITEM_SCHEMA = 4096,
        SOMITEM_ATTRIBUTE = 4097,
        SOMITEM_ATTRIBUTEGROUP = 4098,
        SOMITEM_NOTATION = 4099,
        SOMITEM_ANNOTATION = 4100,
        SOMITEM_IDENTITYCONSTRAINT = 4352,
        SOMITEM_KEY = 4353,
        SOMITEM_KEYREF = 4354,
        SOMITEM_UNIQUE = 4355,
        SOMITEM_ANYTYPE = 8192,
        SOMITEM_DATATYPE = 8448,
        SOMITEM_DATATYPE_ANYTYPE = 8449,
        SOMITEM_DATATYPE_ANYURI = 8450,
        SOMITEM_DATATYPE_BASE64BINARY = 8451,
        SOMITEM_DATATYPE_BOOLEAN = 8452,
        SOMITEM_DATATYPE_BYTE = 8453,
        SOMITEM_DATATYPE_DATE = 8454,
        SOMITEM_DATATYPE_DATETIME = 8455,
        SOMITEM_DATATYPE_DAY = 8456,
        SOMITEM_DATATYPE_DECIMAL = 8457,
        SOMITEM_DATATYPE_DOUBLE = 8458,
        SOMITEM_DATATYPE_DURATION = 8459,
        SOMITEM_DATATYPE_ENTITIES = 8460,
        SOMITEM_DATATYPE_ENTITY = 8461,
        SOMITEM_DATATYPE_FLOAT = 8462,
        SOMITEM_DATATYPE_HEXBINARY = 8463,
        SOMITEM_DATATYPE_ID = 8464,
        SOMITEM_DATATYPE_IDREF = 8465,
        SOMITEM_DATATYPE_IDREFS = 8466,
        SOMITEM_DATATYPE_INT = 8467,
        SOMITEM_DATATYPE_INTEGER = 8468,
        SOMITEM_DATATYPE_LANGUAGE = 8469,
        SOMITEM_DATATYPE_LONG = 8470,
        SOMITEM_DATATYPE_MONTH = 8471,
        SOMITEM_DATATYPE_MONTHDAY = 8472,
        SOMITEM_DATATYPE_NAME = 8473,
        SOMITEM_DATATYPE_NCNAME = 8474,
        SOMITEM_DATATYPE_NEGATIVEINTEGER = 8475,
        SOMITEM_DATATYPE_NMTOKEN = 8476,
        SOMITEM_DATATYPE_NMTOKENS = 8477,
        SOMITEM_DATATYPE_NONNEGATIVEINTEGER = 8478,
        SOMITEM_DATATYPE_NONPOSITIVEINTEGER = 8479,
        SOMITEM_DATATYPE_NORMALIZEDSTRING = 8480,
        SOMITEM_DATATYPE_NOTATION = 8481,
        SOMITEM_DATATYPE_POSITIVEINTEGER = 8482,
        SOMITEM_DATATYPE_QNAME = 8483,
        SOMITEM_DATATYPE_SHORT = 8484,
        SOMITEM_DATATYPE_STRING = 8485,
        SOMITEM_DATATYPE_TIME = 8486,
        SOMITEM_DATATYPE_TOKEN = 8487,
        SOMITEM_DATATYPE_UNSIGNEDBYTE = 8488,
        SOMITEM_DATATYPE_UNSIGNEDINT = 8489,
        SOMITEM_DATATYPE_UNSIGNEDLONG = 8490,
        SOMITEM_DATATYPE_UNSIGNEDSHORT = 8491,
        SOMITEM_DATATYPE_YEAR = 8492,
        SOMITEM_DATATYPE_YEARMONTH = 8493,
        SOMITEM_DATATYPE_ANYSIMPLETYPE = 8703,
        SOMITEM_SIMPLETYPE = 8704,
        SOMITEM_COMPLEXTYPE = 9216,
        SOMITEM_PARTICLE = 16384,
        SOMITEM_ANY = 16385,
        SOMITEM_ANYATTRIBUTE = 16386,
        SOMITEM_ELEMENT = 16387,
        SOMITEM_GROUP = 16640,
        SOMITEM_ALL = 16641,
        SOMITEM_CHOICE = 16642,
        SOMITEM_SEQUENCE = 16643,
        SOMITEM_EMPTYPARTICLE = 16644,
        SOMITEM_NULL = 2048,
        SOMITEM_NULL_TYPE = 10240,
        SOMITEM_NULL_ANY = 18433,
        SOMITEM_NULL_ANYATTRIBUTE = 18434,
        SOMITEM_NULL_ELEMENT = 18435,
    };
    enum class SXH_PROXY_SETTING : int32_t
    {
        SXH_PROXY_SET_DEFAULT = 0,
        SXH_PROXY_SET_PRECONFIG = 0,
        SXH_PROXY_SET_DIRECT = 1,
        SXH_PROXY_SET_PROXY = 2,
    };
    enum class SXH_SERVER_CERT_OPTION : int32_t
    {
        SXH_SERVER_CERT_IGNORE_UNKNOWN_CA = 256,
        SXH_SERVER_CERT_IGNORE_WRONG_USAGE = 512,
        SXH_SERVER_CERT_IGNORE_CERT_CN_INVALID = 4096,
        SXH_SERVER_CERT_IGNORE_CERT_DATE_INVALID = 8192,
        SXH_SERVER_CERT_IGNORE_ALL_SERVER_ERRORS = 13056,
    };
    enum class XHR_AUTH : int32_t
    {
        XHR_AUTH_ALL = 0,
        XHR_AUTH_NONE = 1,
        XHR_AUTH_PROXY = 2,
    };
    enum class XHR_CERT_ERROR_FLAG : uint32_t
    {
        XHR_CERT_ERROR_REVOCATION_FAILED = 0x800000,
        XHR_CERT_ERROR_UNKNOWN_CA = 0x1000000,
        XHR_CERT_ERROR_CERT_CN_INVALID = 0x2000000,
        XHR_CERT_ERROR_CERT_DATE_INVALID = 0x4000000,
        XHR_CERT_ERROR_ALL_SERVER_ERRORS = 0x7800000,
    };
    enum class XHR_CERT_IGNORE_FLAG : uint32_t
    {
        XHR_CERT_IGNORE_REVOCATION_FAILED = 0x80,
        XHR_CERT_IGNORE_UNKNOWN_CA = 0x100,
        XHR_CERT_IGNORE_CERT_CN_INVALID = 0x1000,
        XHR_CERT_IGNORE_CERT_DATE_INVALID = 0x2000,
        XHR_CERT_IGNORE_ALL_SERVER_ERRORS = 0x3180,
    };
    enum class XHR_COOKIE_FLAG : int32_t
    {
        XHR_COOKIE_IS_SECURE = 1,
        XHR_COOKIE_IS_SESSION = 2,
        XHR_COOKIE_THIRD_PARTY = 16,
        XHR_COOKIE_PROMPT_REQUIRED = 32,
        XHR_COOKIE_EVALUATE_P3P = 64,
        XHR_COOKIE_APPLY_P3P = 128,
        XHR_COOKIE_P3P_ENABLED = 256,
        XHR_COOKIE_IS_RESTRICTED = 512,
        XHR_COOKIE_IE6 = 1024,
        XHR_COOKIE_IS_LEGACY = 2048,
        XHR_COOKIE_NON_SCRIPT = 4096,
        XHR_COOKIE_HTTPONLY = 8192,
    };
    enum class XHR_COOKIE_STATE : int32_t
    {
        XHR_COOKIE_STATE_UNKNOWN = 0,
        XHR_COOKIE_STATE_ACCEPT = 1,
        XHR_COOKIE_STATE_PROMPT = 2,
        XHR_COOKIE_STATE_LEASH = 3,
        XHR_COOKIE_STATE_DOWNGRADE = 4,
        XHR_COOKIE_STATE_REJECT = 5,
    };
    enum class XHR_CRED_PROMPT : int32_t
    {
        XHR_CRED_PROMPT_ALL = 0,
        XHR_CRED_PROMPT_NONE = 1,
        XHR_CRED_PROMPT_PROXY = 2,
    };
    enum class XHR_PROPERTY : int32_t
    {
        XHR_PROP_NO_CRED_PROMPT = 0,
        XHR_PROP_NO_AUTH = 1,
        XHR_PROP_TIMEOUT = 2,
        XHR_PROP_NO_DEFAULT_HEADERS = 3,
        XHR_PROP_REPORT_REDIRECT_STATUS = 4,
        XHR_PROP_NO_CACHE = 5,
        XHR_PROP_EXTENDED_ERROR = 6,
        XHR_PROP_QUERY_STRING_UTF8 = 7,
        XHR_PROP_IGNORE_CERT_ERRORS = 8,
        XHR_PROP_ONDATA_THRESHOLD = 9,
        XHR_PROP_SET_ENTERPRISEID = 10,
        XHR_PROP_MAX_CONNECTIONS = 11,
    };
    enum class XMLEMEM_TYPE : int32_t
    {
        XMLELEMTYPE_ELEMENT = 0,
        XMLELEMTYPE_TEXT = 1,
        XMLELEMTYPE_COMMENT = 2,
        XMLELEMTYPE_DOCUMENT = 3,
        XMLELEMTYPE_DTD = 4,
        XMLELEMTYPE_PI = 5,
        XMLELEMTYPE_OTHER = 6,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct DOMDocument;
    struct DOMDocument60;
    struct DOMFreeThreadedDocument;
    struct FreeThreadedDOMDocument60;
    struct FreeThreadedXMLHTTP60;
    struct MXHTMLWriter60;
    struct MXNamespaceManager60;
    struct MXXMLWriter60;
    struct SAXAttributes60;
    struct SAXXMLReader60;
    struct ServerXMLHTTP60;
    struct XHR_CERT;
    struct XHR_COOKIE;
    struct XMLDSOControl;
    struct XMLDocument;
    struct XMLHTTP60;
    struct XMLHTTPRequest;
    struct XMLSchemaCache60;
    struct XML_ERROR;
    struct XSLTemplate60;
    struct __msxml6_ReferenceRemainingTypes__;
    struct IMXAttributes;
    struct IMXNamespaceManager;
    struct IMXNamespacePrefixes;
    struct IMXReaderControl;
    struct IMXSchemaDeclHandler;
    struct IMXWriter;
    struct IMXXMLFilter;
    struct ISAXAttributes;
    struct ISAXContentHandler;
    struct ISAXDTDHandler;
    struct ISAXDeclHandler;
    struct ISAXEntityResolver;
    struct ISAXErrorHandler;
    struct ISAXLexicalHandler;
    struct ISAXLocator;
    struct ISAXXMLFilter;
    struct ISAXXMLReader;
    struct ISchema;
    struct ISchemaAny;
    struct ISchemaAttribute;
    struct ISchemaAttributeGroup;
    struct ISchemaComplexType;
    struct ISchemaElement;
    struct ISchemaIdentityConstraint;
    struct ISchemaItem;
    struct ISchemaItemCollection;
    struct ISchemaModelGroup;
    struct ISchemaNotation;
    struct ISchemaParticle;
    struct ISchemaStringCollection;
    struct ISchemaType;
    struct IServerXMLHTTPRequest;
    struct IServerXMLHTTPRequest2;
    struct IVBMXNamespaceManager;
    struct IVBSAXAttributes;
    struct IVBSAXContentHandler;
    struct IVBSAXDTDHandler;
    struct IVBSAXDeclHandler;
    struct IVBSAXEntityResolver;
    struct IVBSAXErrorHandler;
    struct IVBSAXLexicalHandler;
    struct IVBSAXLocator;
    struct IVBSAXXMLFilter;
    struct IVBSAXXMLReader;
    struct IXMLAttribute;
    struct IXMLDOMAttribute;
    struct IXMLDOMCDATASection;
    struct IXMLDOMCharacterData;
    struct IXMLDOMComment;
    struct IXMLDOMDocument;
    struct IXMLDOMDocument2;
    struct IXMLDOMDocument3;
    struct IXMLDOMDocumentFragment;
    struct IXMLDOMDocumentType;
    struct IXMLDOMElement;
    struct IXMLDOMEntity;
    struct IXMLDOMEntityReference;
    struct IXMLDOMImplementation;
    struct IXMLDOMNamedNodeMap;
    struct IXMLDOMNode;
    struct IXMLDOMNodeList;
    struct IXMLDOMNotation;
    struct IXMLDOMParseError;
    struct IXMLDOMParseError2;
    struct IXMLDOMParseErrorCollection;
    struct IXMLDOMProcessingInstruction;
    struct IXMLDOMSchemaCollection;
    struct IXMLDOMSchemaCollection2;
    struct IXMLDOMSelection;
    struct IXMLDOMText;
    struct IXMLDSOControl;
    struct IXMLDocument;
    struct IXMLDocument2;
    struct IXMLElement;
    struct IXMLElement2;
    struct IXMLElementCollection;
    struct IXMLError;
    struct IXMLHTTPRequest;
    struct IXMLHTTPRequest2;
    struct IXMLHTTPRequest2Callback;
    struct IXMLHTTPRequest3;
    struct IXMLHTTPRequest3Callback;
    struct IXMLHttpRequest;
    struct IXSLProcessor;
    struct IXSLTemplate;
    struct IXTLRuntime;
    struct XMLDOMDocumentEvents;
#pragma endregion forward_declarations

#pragma region delegates
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
