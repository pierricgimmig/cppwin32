// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_JobObjects_2_H
#define WIN32_Windows_Win32_System_JobObjects_2_H
#include "win32/Windows.Win32.System.JobObjects.h"
#include "win32/impl/Windows.Win32.System.JobObjects.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::System::JobObjects
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsProcessInJob(win32::Windows::Win32::Foundation::HANDLE ProcessHandle, win32::Windows::Win32::Foundation::HANDLE JobHandle, win32::Windows::Win32::Foundation::BOOL* Result) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ProcessHandle);
        ORBIT_TRACK_PARAM(JobHandle);
        ORBIT_TRACK_PARAM(Result);

        auto win32_impl_result = g_api_table.IsProcessInJob(ProcessHandle, JobHandle, Result);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_CreateJobObjectW(win32::Windows::Win32::Security::SECURITY_ATTRIBUTES* lpJobAttributes, win32::Windows::Win32::Foundation::PWSTR lpName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpJobAttributes);
        ORBIT_TRACK_PARAM(lpName);

        auto win32_impl_result = g_api_table.CreateJobObjectW(lpJobAttributes, lpName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_FreeMemoryJobObject(void* Buffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Buffer);

        g_api_table.FreeMemoryJobObject(Buffer);
        
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_OpenJobObjectW(uint32_t dwDesiredAccess, win32::Windows::Win32::Foundation::BOOL bInheritHandle, win32::Windows::Win32::Foundation::PWSTR lpName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDesiredAccess);
        ORBIT_TRACK_PARAM(bInheritHandle);
        ORBIT_TRACK_PARAM(lpName);

        auto win32_impl_result = g_api_table.OpenJobObjectW(dwDesiredAccess, bInheritHandle, lpName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AssignProcessToJobObject(win32::Windows::Win32::Foundation::HANDLE hJob, win32::Windows::Win32::Foundation::HANDLE hProcess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hJob);
        ORBIT_TRACK_PARAM(hProcess);

        auto win32_impl_result = g_api_table.AssignProcessToJobObject(hJob, hProcess);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_TerminateJobObject(win32::Windows::Win32::Foundation::HANDLE hJob, uint32_t uExitCode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hJob);
        ORBIT_TRACK_PARAM(uExitCode);

        auto win32_impl_result = g_api_table.TerminateJobObject(hJob, uExitCode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetInformationJobObject(win32::Windows::Win32::Foundation::HANDLE hJob, win32::Windows::Win32::System::SystemServices::JOBOBJECTINFOCLASS JobObjectInformationClass, void* lpJobObjectInformation, uint32_t cbJobObjectInformationLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hJob);
        ORBIT_TRACK_PARAM(JobObjectInformationClass);
        ORBIT_TRACK_PARAM(lpJobObjectInformation);
        ORBIT_TRACK_PARAM(cbJobObjectInformationLength);

        auto win32_impl_result = g_api_table.SetInformationJobObject(hJob, JobObjectInformationClass, lpJobObjectInformation, cbJobObjectInformationLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetIoRateControlInformationJobObject(win32::Windows::Win32::Foundation::HANDLE hJob, win32::Windows::Win32::System::JobObjects::JOBOBJECT_IO_RATE_CONTROL_INFORMATION* IoRateControlInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hJob);
        ORBIT_TRACK_PARAM(IoRateControlInfo);

        auto win32_impl_result = g_api_table.SetIoRateControlInformationJobObject(hJob, IoRateControlInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_QueryInformationJobObject(win32::Windows::Win32::Foundation::HANDLE hJob, win32::Windows::Win32::System::SystemServices::JOBOBJECTINFOCLASS JobObjectInformationClass, void* lpJobObjectInformation, uint32_t cbJobObjectInformationLength, uint32_t* lpReturnLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hJob);
        ORBIT_TRACK_PARAM(JobObjectInformationClass);
        ORBIT_TRACK_PARAM(lpJobObjectInformation);
        ORBIT_TRACK_PARAM(cbJobObjectInformationLength);
        ORBIT_TRACK_PARAM(lpReturnLength);

        auto win32_impl_result = g_api_table.QueryInformationJobObject(hJob, JobObjectInformationClass, lpJobObjectInformation, cbJobObjectInformationLength, lpReturnLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_QueryIoRateControlInformationJobObject(win32::Windows::Win32::Foundation::HANDLE hJob, win32::Windows::Win32::Foundation::PWSTR VolumeName, win32::Windows::Win32::System::JobObjects::JOBOBJECT_IO_RATE_CONTROL_INFORMATION** InfoBlocks, uint32_t* InfoBlockCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hJob);
        ORBIT_TRACK_PARAM(VolumeName);
        ORBIT_TRACK_PARAM(InfoBlocks);
        ORBIT_TRACK_PARAM(InfoBlockCount);

        auto win32_impl_result = g_api_table.QueryIoRateControlInformationJobObject(hJob, VolumeName, InfoBlocks, InfoBlockCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UserHandleGrantAccess(win32::Windows::Win32::Foundation::HANDLE hUserHandle, win32::Windows::Win32::Foundation::HANDLE hJob, win32::Windows::Win32::Foundation::BOOL bGrant) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hUserHandle);
        ORBIT_TRACK_PARAM(hJob);
        ORBIT_TRACK_PARAM(bGrant);

        auto win32_impl_result = g_api_table.UserHandleGrantAccess(hUserHandle, hJob, bGrant);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_CreateJobObjectA(win32::Windows::Win32::Security::SECURITY_ATTRIBUTES* lpJobAttributes, win32::Windows::Win32::Foundation::PSTR lpName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpJobAttributes);
        ORBIT_TRACK_PARAM(lpName);

        auto win32_impl_result = g_api_table.CreateJobObjectA(lpJobAttributes, lpName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_OpenJobObjectA(uint32_t dwDesiredAccess, win32::Windows::Win32::Foundation::BOOL bInheritHandle, win32::Windows::Win32::Foundation::PSTR lpName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwDesiredAccess);
        ORBIT_TRACK_PARAM(bInheritHandle);
        ORBIT_TRACK_PARAM(lpName);

        auto win32_impl_result = g_api_table.OpenJobObjectA(dwDesiredAccess, bInheritHandle, lpName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
