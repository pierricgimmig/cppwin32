// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Media_Audio_DirectMusic_2_H
#define WIN32_Windows_Win32_Media_Audio_DirectMusic_2_H
#include "win32/Windows.Win32.Media.Audio.DirectMusic.h"
#include "win32/impl/Windows.Win32.Media.Audio.DirectMusic.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::Media::Audio::DirectMusic
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DirectSoundCreate(::win32::guid* pcGuidDevice, win32::Windows::Win32::Media::Audio::DirectMusic::IDirectSound** ppDS, win32::Windows::Win32::System::Com::IUnknown* pUnkOuter) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pcGuidDevice);
        ORBIT_TRACK_PARAM(ppDS);
        ORBIT_TRACK_PARAM(pUnkOuter);

        auto win32_impl_result = g_api_table.DirectSoundCreate(pcGuidDevice, ppDS, pUnkOuter);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DirectSoundEnumerateA(win32::Windows::Win32::Media::Audio::DirectMusic::LPDSENUMCALLBACKA* pDSEnumCallback, void* pContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDSEnumCallback);
        ORBIT_TRACK_PARAM(pContext);

        auto win32_impl_result = g_api_table.DirectSoundEnumerateA(pDSEnumCallback, pContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DirectSoundEnumerateW(win32::Windows::Win32::Media::Audio::DirectMusic::LPDSENUMCALLBACKW* pDSEnumCallback, void* pContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDSEnumCallback);
        ORBIT_TRACK_PARAM(pContext);

        auto win32_impl_result = g_api_table.DirectSoundEnumerateW(pDSEnumCallback, pContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DirectSoundCaptureCreate(::win32::guid* pcGuidDevice, win32::Windows::Win32::Media::Audio::DirectMusic::IDirectSoundCapture** ppDSC, win32::Windows::Win32::System::Com::IUnknown* pUnkOuter) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pcGuidDevice);
        ORBIT_TRACK_PARAM(ppDSC);
        ORBIT_TRACK_PARAM(pUnkOuter);

        auto win32_impl_result = g_api_table.DirectSoundCaptureCreate(pcGuidDevice, ppDSC, pUnkOuter);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DirectSoundCaptureEnumerateA(win32::Windows::Win32::Media::Audio::DirectMusic::LPDSENUMCALLBACKA* pDSEnumCallback, void* pContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDSEnumCallback);
        ORBIT_TRACK_PARAM(pContext);

        auto win32_impl_result = g_api_table.DirectSoundCaptureEnumerateA(pDSEnumCallback, pContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DirectSoundCaptureEnumerateW(win32::Windows::Win32::Media::Audio::DirectMusic::LPDSENUMCALLBACKW* pDSEnumCallback, void* pContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDSEnumCallback);
        ORBIT_TRACK_PARAM(pContext);

        auto win32_impl_result = g_api_table.DirectSoundCaptureEnumerateW(pDSEnumCallback, pContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DirectSoundCreate8(::win32::guid* pcGuidDevice, win32::Windows::Win32::Media::Audio::DirectMusic::IDirectSound8** ppDS8, win32::Windows::Win32::System::Com::IUnknown* pUnkOuter) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pcGuidDevice);
        ORBIT_TRACK_PARAM(ppDS8);
        ORBIT_TRACK_PARAM(pUnkOuter);

        auto win32_impl_result = g_api_table.DirectSoundCreate8(pcGuidDevice, ppDS8, pUnkOuter);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DirectSoundCaptureCreate8(::win32::guid* pcGuidDevice, win32::Windows::Win32::Media::Audio::DirectMusic::IDirectSoundCapture** ppDSC8, win32::Windows::Win32::System::Com::IUnknown* pUnkOuter) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pcGuidDevice);
        ORBIT_TRACK_PARAM(ppDSC8);
        ORBIT_TRACK_PARAM(pUnkOuter);

        auto win32_impl_result = g_api_table.DirectSoundCaptureCreate8(pcGuidDevice, ppDSC8, pUnkOuter);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DirectSoundFullDuplexCreate(::win32::guid* pcGuidCaptureDevice, ::win32::guid* pcGuidRenderDevice, win32::Windows::Win32::Media::Audio::DirectMusic::DSCBUFFERDESC* pcDSCBufferDesc, win32::Windows::Win32::Media::Audio::DirectMusic::DSBUFFERDESC* pcDSBufferDesc, win32::Windows::Win32::Foundation::HWND hWnd, uint32_t dwLevel, win32::Windows::Win32::Media::Audio::DirectMusic::IDirectSoundFullDuplex** ppDSFD, win32::Windows::Win32::Media::Audio::DirectMusic::IDirectSoundCaptureBuffer8** ppDSCBuffer8, win32::Windows::Win32::Media::Audio::DirectMusic::IDirectSoundBuffer8** ppDSBuffer8, win32::Windows::Win32::System::Com::IUnknown* pUnkOuter) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pcGuidCaptureDevice);
        ORBIT_TRACK_PARAM(pcGuidRenderDevice);
        ORBIT_TRACK_PARAM(pcDSCBufferDesc);
        ORBIT_TRACK_PARAM(pcDSBufferDesc);
        ORBIT_TRACK_PARAM(hWnd);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(ppDSFD);
        ORBIT_TRACK_PARAM(ppDSCBuffer8);
        ORBIT_TRACK_PARAM(ppDSBuffer8);
        ORBIT_TRACK_PARAM(pUnkOuter);

        auto win32_impl_result = g_api_table.DirectSoundFullDuplexCreate(pcGuidCaptureDevice, pcGuidRenderDevice, pcDSCBufferDesc, pcDSBufferDesc, hWnd, dwLevel, ppDSFD, ppDSCBuffer8, ppDSBuffer8, pUnkOuter);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetDeviceID(::win32::guid* pGuidSrc, ::win32::guid* pGuidDest) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pGuidSrc);
        ORBIT_TRACK_PARAM(pGuidDest);

        auto win32_impl_result = g_api_table.GetDeviceID(pGuidSrc, pGuidDest);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
