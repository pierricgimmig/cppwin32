// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Storage_VirtualDiskService_0_H
#define WIN32_Windows_Win32_Storage_VirtualDiskService_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Storage::VirtualDiskService
{
#pragma region enums
    enum class VDS_ASYNC_OUTPUT_TYPE : int32_t
    {
        VDS_ASYNCOUT_UNKNOWN = 0,
        VDS_ASYNCOUT_CREATEVOLUME = 1,
        VDS_ASYNCOUT_EXTENDVOLUME = 2,
        VDS_ASYNCOUT_SHRINKVOLUME = 3,
        VDS_ASYNCOUT_ADDVOLUMEPLEX = 4,
        VDS_ASYNCOUT_BREAKVOLUMEPLEX = 5,
        VDS_ASYNCOUT_REMOVEVOLUMEPLEX = 6,
        VDS_ASYNCOUT_REPAIRVOLUMEPLEX = 7,
        VDS_ASYNCOUT_RECOVERPACK = 8,
        VDS_ASYNCOUT_REPLACEDISK = 9,
        VDS_ASYNCOUT_CREATEPARTITION = 10,
        VDS_ASYNCOUT_CLEAN = 11,
        VDS_ASYNCOUT_CREATELUN = 50,
        VDS_ASYNCOUT_ADDLUNPLEX = 52,
        VDS_ASYNCOUT_REMOVELUNPLEX = 53,
        VDS_ASYNCOUT_EXTENDLUN = 54,
        VDS_ASYNCOUT_SHRINKLUN = 55,
        VDS_ASYNCOUT_RECOVERLUN = 56,
        VDS_ASYNCOUT_LOGINTOTARGET = 60,
        VDS_ASYNCOUT_LOGOUTFROMTARGET = 61,
        VDS_ASYNCOUT_CREATETARGET = 62,
        VDS_ASYNCOUT_CREATEPORTALGROUP = 63,
        VDS_ASYNCOUT_DELETETARGET = 64,
        VDS_ASYNCOUT_ADDPORTAL = 65,
        VDS_ASYNCOUT_REMOVEPORTAL = 66,
        VDS_ASYNCOUT_DELETEPORTALGROUP = 67,
        VDS_ASYNCOUT_FORMAT = 101,
        VDS_ASYNCOUT_CREATE_VDISK = 200,
        VDS_ASYNCOUT_ATTACH_VDISK = 201,
        VDS_ASYNCOUT_COMPACT_VDISK = 202,
        VDS_ASYNCOUT_MERGE_VDISK = 203,
        VDS_ASYNCOUT_EXPAND_VDISK = 204,
    };
    enum class VDS_CONTROLLER_STATUS : int32_t
    {
        VDS_CS_UNKNOWN = 0,
        VDS_CS_ONLINE = 1,
        VDS_CS_NOT_READY = 2,
        VDS_CS_OFFLINE = 4,
        VDS_CS_FAILED = 5,
        VDS_CS_REMOVED = 8,
    };
    enum class VDS_DRIVE_FLAG : int32_t
    {
        VDS_DRF_HOTSPARE = 1,
        VDS_DRF_ASSIGNED = 2,
        VDS_DRF_UNASSIGNED = 4,
        VDS_DRF_HOTSPARE_IN_USE = 8,
        VDS_DRF_HOTSPARE_STANDBY = 16,
    };
    enum class VDS_DRIVE_STATUS : int32_t
    {
        VDS_DRS_UNKNOWN = 0,
        VDS_DRS_ONLINE = 1,
        VDS_DRS_NOT_READY = 2,
        VDS_DRS_OFFLINE = 4,
        VDS_DRS_FAILED = 5,
        VDS_DRS_REMOVED = 8,
    };
    enum class VDS_FILE_SYSTEM_TYPE : int32_t
    {
        VDS_FST_UNKNOWN = 0,
        VDS_FST_RAW = 1,
        VDS_FST_FAT = 2,
        VDS_FST_FAT32 = 3,
        VDS_FST_NTFS = 4,
        VDS_FST_CDFS = 5,
        VDS_FST_UDF = 6,
        VDS_FST_EXFAT = 7,
        VDS_FST_CSVFS = 8,
        VDS_FST_REFS = 9,
    };
    enum class VDS_HBAPORT_SPEED_FLAG : int32_t
    {
        VDS_HSF_UNKNOWN = 0,
        VDS_HSF_1GBIT = 1,
        VDS_HSF_2GBIT = 2,
        VDS_HSF_10GBIT = 4,
        VDS_HSF_4GBIT = 8,
        VDS_HSF_NOT_NEGOTIATED = 32768,
    };
    enum class VDS_HBAPORT_STATUS : int32_t
    {
        VDS_HPS_UNKNOWN = 1,
        VDS_HPS_ONLINE = 2,
        VDS_HPS_OFFLINE = 3,
        VDS_HPS_BYPASSED = 4,
        VDS_HPS_DIAGNOSTICS = 5,
        VDS_HPS_LINKDOWN = 6,
        VDS_HPS_ERROR = 7,
        VDS_HPS_LOOPBACK = 8,
    };
    enum class VDS_HBAPORT_TYPE : int32_t
    {
        VDS_HPT_UNKNOWN = 1,
        VDS_HPT_OTHER = 2,
        VDS_HPT_NOTPRESENT = 3,
        VDS_HPT_NPORT = 5,
        VDS_HPT_NLPORT = 6,
        VDS_HPT_FLPORT = 7,
        VDS_HPT_FPORT = 8,
        VDS_HPT_EPORT = 9,
        VDS_HPT_GPORT = 10,
        VDS_HPT_LPORT = 20,
        VDS_HPT_PTP = 21,
    };
    enum class VDS_HEALTH : int32_t
    {
        VDS_H_UNKNOWN = 0,
        VDS_H_HEALTHY = 1,
        VDS_H_REBUILDING = 2,
        VDS_H_STALE = 3,
        VDS_H_FAILING = 4,
        VDS_H_FAILING_REDUNDANCY = 5,
        VDS_H_FAILED_REDUNDANCY = 6,
        VDS_H_FAILED_REDUNDANCY_FAILING = 7,
        VDS_H_FAILED = 8,
        VDS_H_REPLACED = 9,
        VDS_H_PENDING_FAILURE = 10,
        VDS_H_DEGRADED = 11,
    };
    enum class VDS_HWPROVIDER_TYPE : int32_t
    {
        VDS_HWT_UNKNOWN = 0,
        VDS_HWT_PCI_RAID = 1,
        VDS_HWT_FIBRE_CHANNEL = 2,
        VDS_HWT_ISCSI = 3,
        VDS_HWT_SAS = 4,
        VDS_HWT_HYBRID = 5,
    };
    enum class VDS_INTERCONNECT_ADDRESS_TYPE : int32_t
    {
        VDS_IA_UNKNOWN = 0,
        VDS_IA_FCFS = 1,
        VDS_IA_FCPH = 2,
        VDS_IA_FCPH3 = 3,
        VDS_IA_MAC = 4,
        VDS_IA_SCSI = 5,
    };
    enum class VDS_INTERCONNECT_FLAG : int32_t
    {
        VDS_ITF_PCI_RAID = 1,
        VDS_ITF_FIBRE_CHANNEL = 2,
        VDS_ITF_ISCSI = 4,
        VDS_ITF_SAS = 8,
    };
    enum class VDS_IPADDRESS_TYPE : int32_t
    {
        VDS_IPT_TEXT = 0,
        VDS_IPT_IPV4 = 1,
        VDS_IPT_IPV6 = 2,
        VDS_IPT_EMPTY = 3,
    };
    enum class VDS_ISCSI_AUTH_TYPE : int32_t
    {
        VDS_IAT_NONE = 0,
        VDS_IAT_CHAP = 1,
        VDS_IAT_MUTUAL_CHAP = 2,
    };
    enum class VDS_ISCSI_IPSEC_FLAG : int32_t
    {
        VDS_IIF_VALID = 1,
        VDS_IIF_IKE = 2,
        VDS_IIF_MAIN_MODE = 4,
        VDS_IIF_AGGRESSIVE_MODE = 8,
        VDS_IIF_PFS_ENABLE = 16,
        VDS_IIF_TRANSPORT_MODE_PREFERRED = 32,
        VDS_IIF_TUNNEL_MODE_PREFERRED = 64,
    };
    enum class VDS_ISCSI_LOGIN_FLAG : int32_t
    {
        VDS_ILF_REQUIRE_IPSEC = 1,
        VDS_ILF_MULTIPATH_ENABLED = 2,
    };
    enum class VDS_ISCSI_LOGIN_TYPE : int32_t
    {
        VDS_ILT_MANUAL = 0,
        VDS_ILT_PERSISTENT = 1,
        VDS_ILT_BOOT = 2,
    };
    enum class VDS_ISCSI_PORTAL_STATUS : int32_t
    {
        VDS_IPS_UNKNOWN = 0,
        VDS_IPS_ONLINE = 1,
        VDS_IPS_NOT_READY = 2,
        VDS_IPS_OFFLINE = 4,
        VDS_IPS_FAILED = 5,
    };
    enum class VDS_LOADBALANCE_POLICY_ENUM : int32_t
    {
        VDS_LBP_UNKNOWN = 0,
        VDS_LBP_FAILOVER = 1,
        VDS_LBP_ROUND_ROBIN = 2,
        VDS_LBP_ROUND_ROBIN_WITH_SUBSET = 3,
        VDS_LBP_DYN_LEAST_QUEUE_DEPTH = 4,
        VDS_LBP_WEIGHTED_PATHS = 5,
        VDS_LBP_LEAST_BLOCKS = 6,
        VDS_LBP_VENDOR_SPECIFIC = 7,
    };
    enum class VDS_LUN_FLAG : int32_t
    {
        VDS_LF_LBN_REMAP_ENABLED = 1,
        VDS_LF_READ_BACK_VERIFY_ENABLED = 2,
        VDS_LF_WRITE_THROUGH_CACHING_ENABLED = 4,
        VDS_LF_HARDWARE_CHECKSUM_ENABLED = 8,
        VDS_LF_READ_CACHE_ENABLED = 16,
        VDS_LF_WRITE_CACHE_ENABLED = 32,
        VDS_LF_MEDIA_SCAN_ENABLED = 64,
        VDS_LF_CONSISTENCY_CHECK_ENABLED = 128,
        VDS_LF_SNAPSHOT = 256,
    };
    enum class VDS_LUN_PLEX_FLAG : int32_t
    {
        VDS_LPF_LBN_REMAP_ENABLED = 1,
    };
    enum class VDS_LUN_PLEX_STATUS : int32_t
    {
        VDS_LPS_UNKNOWN = 0,
        VDS_LPS_ONLINE = 1,
        VDS_LPS_NOT_READY = 2,
        VDS_LPS_OFFLINE = 4,
        VDS_LPS_FAILED = 5,
    };
    enum class VDS_LUN_PLEX_TYPE : int32_t
    {
        VDS_LPT_UNKNOWN = 0,
        VDS_LPT_SIMPLE = 10,
        VDS_LPT_SPAN = 11,
        VDS_LPT_STRIPE = 12,
        VDS_LPT_PARITY = 14,
        VDS_LPT_RAID2 = 15,
        VDS_LPT_RAID3 = 16,
        VDS_LPT_RAID4 = 17,
        VDS_LPT_RAID5 = 18,
        VDS_LPT_RAID6 = 19,
        VDS_LPT_RAID03 = 21,
        VDS_LPT_RAID05 = 22,
        VDS_LPT_RAID10 = 23,
        VDS_LPT_RAID15 = 24,
        VDS_LPT_RAID30 = 25,
        VDS_LPT_RAID50 = 26,
        VDS_LPT_RAID53 = 28,
        VDS_LPT_RAID60 = 29,
    };
    enum class VDS_LUN_STATUS : int32_t
    {
        VDS_LS_UNKNOWN = 0,
        VDS_LS_ONLINE = 1,
        VDS_LS_NOT_READY = 2,
        VDS_LS_OFFLINE = 4,
        VDS_LS_FAILED = 5,
    };
    enum class VDS_LUN_TYPE : int32_t
    {
        VDS_LT_UNKNOWN = 0,
        VDS_LT_DEFAULT = 1,
        VDS_LT_FAULT_TOLERANT = 2,
        VDS_LT_NON_FAULT_TOLERANT = 3,
        VDS_LT_SIMPLE = 10,
        VDS_LT_SPAN = 11,
        VDS_LT_STRIPE = 12,
        VDS_LT_MIRROR = 13,
        VDS_LT_PARITY = 14,
        VDS_LT_RAID2 = 15,
        VDS_LT_RAID3 = 16,
        VDS_LT_RAID4 = 17,
        VDS_LT_RAID5 = 18,
        VDS_LT_RAID6 = 19,
        VDS_LT_RAID01 = 20,
        VDS_LT_RAID03 = 21,
        VDS_LT_RAID05 = 22,
        VDS_LT_RAID10 = 23,
        VDS_LT_RAID15 = 24,
        VDS_LT_RAID30 = 25,
        VDS_LT_RAID50 = 26,
        VDS_LT_RAID51 = 27,
        VDS_LT_RAID53 = 28,
        VDS_LT_RAID60 = 29,
        VDS_LT_RAID61 = 30,
    };
    enum class VDS_MAINTENANCE_OPERATION : int32_t
    {
        BlinkLight = 1,
        BeepAlarm = 2,
        SpinDown = 3,
        SpinUp = 4,
        Ping = 5,
    };
    enum class VDS_NF_CONTROLLER : uint32_t
    {
        VDS_NF_CONTROLLER_ARRIVE = 0x67,
        VDS_NF_CONTROLLER_DEPART = 0x68,
        VDS_NF_CONTROLLER_MODIFY = 0x15e,
        VDS_NF_CONTROLLER_REMOVED = 0x15f,
    };
    enum class VDS_NF_DISK : uint32_t
    {
        VDS_NF_DISK_ARRIVE = 0x8,
        VDS_NF_DISK_DEPART = 0x9,
        VDS_NF_DISK_MODIFY = 0xa,
    };
    enum class VDS_NF_DRIVE : uint32_t
    {
        VDS_NF_DRIVE_ARRIVE = 0x69,
        VDS_NF_DRIVE_DEPART = 0x6a,
        VDS_NF_DRIVE_MODIFY = 0x6b,
        VDS_NF_DRIVE_REMOVED = 0x162,
    };
    enum class VDS_NF_FILE_SYSTEM : uint32_t
    {
        VDS_NF_FILE_SYSTEM_MODIFY = 0xcb,
        VDS_NF_FILE_SYSTEM_FORMAT_PROGRESS = 0xcc,
    };
    enum class VDS_NF_LUN : uint32_t
    {
        VDS_NF_LUN_ARRIVE = 0x6c,
        VDS_NF_LUN_DEPART = 0x6d,
        VDS_NF_LUN_MODIFY = 0x6e,
    };
    enum class VDS_NF_PACK : uint32_t
    {
        VDS_NF_PACK_ARRIVE = 0x1,
        VDS_NF_PACK_DEPART = 0x2,
        VDS_NF_PACK_MODIFY = 0x3,
    };
    enum class VDS_NF_PORT : uint32_t
    {
        VDS_NF_PORT_ARRIVE = 0x79,
        VDS_NF_PORT_DEPART = 0x7a,
        VDS_NF_PORT_MODIFY = 0x160,
        VDS_NF_PORT_REMOVED = 0x161,
    };
    enum class VDS_NOTIFICATION_TARGET_TYPE : int32_t
    {
        VDS_NTT_UNKNOWN = 0,
        VDS_NTT_PACK = 10,
        VDS_NTT_VOLUME = 11,
        VDS_NTT_DISK = 13,
        VDS_NTT_PARTITION = 60,
        VDS_NTT_DRIVE_LETTER = 61,
        VDS_NTT_FILE_SYSTEM = 62,
        VDS_NTT_MOUNT_POINT = 63,
        VDS_NTT_SUB_SYSTEM = 30,
        VDS_NTT_CONTROLLER = 31,
        VDS_NTT_DRIVE = 32,
        VDS_NTT_LUN = 33,
        VDS_NTT_PORT = 35,
        VDS_NTT_PORTAL = 36,
        VDS_NTT_TARGET = 37,
        VDS_NTT_PORTAL_GROUP = 38,
        VDS_NTT_SERVICE = 200,
    };
    enum class VDS_OBJECT_TYPE : int32_t
    {
        VDS_OT_UNKNOWN = 0,
        VDS_OT_PROVIDER = 1,
        VDS_OT_PACK = 10,
        VDS_OT_VOLUME = 11,
        VDS_OT_VOLUME_PLEX = 12,
        VDS_OT_DISK = 13,
        VDS_OT_SUB_SYSTEM = 30,
        VDS_OT_CONTROLLER = 31,
        VDS_OT_DRIVE = 32,
        VDS_OT_LUN = 33,
        VDS_OT_LUN_PLEX = 34,
        VDS_OT_PORT = 35,
        VDS_OT_PORTAL = 36,
        VDS_OT_TARGET = 37,
        VDS_OT_PORTAL_GROUP = 38,
        VDS_OT_STORAGE_POOL = 39,
        VDS_OT_HBAPORT = 90,
        VDS_OT_INIT_ADAPTER = 91,
        VDS_OT_INIT_PORTAL = 92,
        VDS_OT_ASYNC = 100,
        VDS_OT_ENUM = 101,
        VDS_OT_VDISK = 200,
        VDS_OT_OPEN_VDISK = 201,
    };
    enum class VDS_PATH_STATUS : int32_t
    {
        VDS_MPS_UNKNOWN = 0,
        VDS_MPS_ONLINE = 1,
        VDS_MPS_FAILED = 5,
        VDS_MPS_STANDBY = 7,
    };
    enum class VDS_PORT_STATUS : int32_t
    {
        VDS_PRS_UNKNOWN = 0,
        VDS_PRS_ONLINE = 1,
        VDS_PRS_NOT_READY = 2,
        VDS_PRS_OFFLINE = 4,
        VDS_PRS_FAILED = 5,
        VDS_PRS_REMOVED = 8,
    };
    enum class VDS_PROVIDER_FLAG : int32_t
    {
        VDS_PF_DYNAMIC = 1,
        VDS_PF_INTERNAL_HARDWARE_PROVIDER = 2,
        VDS_PF_ONE_DISK_ONLY_PER_PACK = 4,
        VDS_PF_ONE_PACK_ONLINE_ONLY = 8,
        VDS_PF_VOLUME_SPACE_MUST_BE_CONTIGUOUS = 16,
        VDS_PF_SUPPORT_DYNAMIC = -2147483648,
        VDS_PF_SUPPORT_FAULT_TOLERANT = 1073741824,
        VDS_PF_SUPPORT_DYNAMIC_1394 = 536870912,
        VDS_PF_SUPPORT_MIRROR = 32,
        VDS_PF_SUPPORT_RAID5 = 64,
    };
    enum class VDS_PROVIDER_LBSUPPORT_FLAG : int32_t
    {
        VDS_LBF_FAILOVER = 1,
        VDS_LBF_ROUND_ROBIN = 2,
        VDS_LBF_ROUND_ROBIN_WITH_SUBSET = 4,
        VDS_LBF_DYN_LEAST_QUEUE_DEPTH = 8,
        VDS_LBF_WEIGHTED_PATHS = 16,
        VDS_LBF_LEAST_BLOCKS = 32,
        VDS_LBF_VENDOR_SPECIFIC = 64,
    };
    enum class VDS_PROVIDER_TYPE : int32_t
    {
        VDS_PT_UNKNOWN = 0,
        VDS_PT_SOFTWARE = 1,
        VDS_PT_HARDWARE = 2,
        VDS_PT_VIRTUALDISK = 3,
        VDS_PT_MAX = 4,
    };
    enum class VDS_RAID_TYPE : int32_t
    {
        VDS_RT_UNKNOWN = 0,
        VDS_RT_RAID0 = 10,
        VDS_RT_RAID1 = 11,
        VDS_RT_RAID2 = 12,
        VDS_RT_RAID3 = 13,
        VDS_RT_RAID4 = 14,
        VDS_RT_RAID5 = 15,
        VDS_RT_RAID6 = 16,
        VDS_RT_RAID01 = 17,
        VDS_RT_RAID03 = 18,
        VDS_RT_RAID05 = 19,
        VDS_RT_RAID10 = 20,
        VDS_RT_RAID15 = 21,
        VDS_RT_RAID30 = 22,
        VDS_RT_RAID50 = 23,
        VDS_RT_RAID51 = 24,
        VDS_RT_RAID53 = 25,
        VDS_RT_RAID60 = 26,
        VDS_RT_RAID61 = 27,
    };
    enum class VDS_RECOVER_ACTION : int32_t
    {
        VDS_RA_UNKNOWN = 0,
        VDS_RA_REFRESH = 1,
        VDS_RA_RESTART = 2,
    };
    enum class VDS_STORAGE_BUS_TYPE : int32_t
    {
        VDSBusTypeUnknown = 0,
        VDSBusTypeScsi = 1,
        VDSBusTypeAtapi = 2,
        VDSBusTypeAta = 3,
        VDSBusType1394 = 4,
        VDSBusTypeSsa = 5,
        VDSBusTypeFibre = 6,
        VDSBusTypeUsb = 7,
        VDSBusTypeRAID = 8,
        VDSBusTypeiScsi = 9,
        VDSBusTypeSas = 10,
        VDSBusTypeSata = 11,
        VDSBusTypeSd = 12,
        VDSBusTypeMmc = 13,
        VDSBusTypeMax = 14,
        VDSBusTypeVirtual = 14,
        VDSBusTypeFileBackedVirtual = 15,
        VDSBusTypeSpaces = 16,
        VDSBusTypeNVMe = 17,
        VDSBusTypeScm = 18,
        VDSBusTypeUfs = 19,
        VDSBusTypeMaxReserved = 127,
    };
    enum class VDS_STORAGE_IDENTIFIER_CODE_SET : int32_t
    {
        VDSStorageIdCodeSetReserved = 0,
        VDSStorageIdCodeSetBinary = 1,
        VDSStorageIdCodeSetAscii = 2,
        VDSStorageIdCodeSetUtf8 = 3,
    };
    enum class VDS_STORAGE_IDENTIFIER_TYPE : int32_t
    {
        VDSStorageIdTypeVendorSpecific = 0,
        VDSStorageIdTypeVendorId = 1,
        VDSStorageIdTypeEUI64 = 2,
        VDSStorageIdTypeFCPHName = 3,
        VDSStorageIdTypePortRelative = 4,
        VDSStorageIdTypeTargetPortGroup = 5,
        VDSStorageIdTypeLogicalUnitGroup = 6,
        VDSStorageIdTypeMD5LogicalUnitIdentifier = 7,
        VDSStorageIdTypeScsiNameString = 8,
    };
    enum class VDS_STORAGE_POOL_STATUS : int32_t
    {
        VDS_SPS_UNKNOWN = 0,
        VDS_SPS_ONLINE = 1,
        VDS_SPS_NOT_READY = 2,
        VDS_SPS_OFFLINE = 4,
    };
    enum class VDS_STORAGE_POOL_TYPE : int32_t
    {
        VDS_SPT_UNKNOWN = 0,
        VDS_SPT_PRIMORDIAL = 1,
        VDS_SPT_CONCRETE = 2,
    };
    enum class VDS_SUB_SYSTEM_FLAG : int32_t
    {
        VDS_SF_LUN_MASKING_CAPABLE = 1,
        VDS_SF_LUN_PLEXING_CAPABLE = 2,
        VDS_SF_LUN_REMAPPING_CAPABLE = 4,
        VDS_SF_DRIVE_EXTENT_CAPABLE = 8,
        VDS_SF_HARDWARE_CHECKSUM_CAPABLE = 16,
        VDS_SF_RADIUS_CAPABLE = 32,
        VDS_SF_READ_BACK_VERIFY_CAPABLE = 64,
        VDS_SF_WRITE_THROUGH_CACHING_CAPABLE = 128,
        VDS_SF_SUPPORTS_FAULT_TOLERANT_LUNS = 512,
        VDS_SF_SUPPORTS_NON_FAULT_TOLERANT_LUNS = 1024,
        VDS_SF_SUPPORTS_SIMPLE_LUNS = 2048,
        VDS_SF_SUPPORTS_SPAN_LUNS = 4096,
        VDS_SF_SUPPORTS_STRIPE_LUNS = 8192,
        VDS_SF_SUPPORTS_MIRROR_LUNS = 16384,
        VDS_SF_SUPPORTS_PARITY_LUNS = 32768,
        VDS_SF_SUPPORTS_AUTH_CHAP = 65536,
        VDS_SF_SUPPORTS_AUTH_MUTUAL_CHAP = 131072,
        VDS_SF_SUPPORTS_SIMPLE_TARGET_CONFIG = 262144,
        VDS_SF_SUPPORTS_LUN_NUMBER = 524288,
        VDS_SF_SUPPORTS_MIRRORED_CACHE = 1048576,
        VDS_SF_READ_CACHING_CAPABLE = 2097152,
        VDS_SF_WRITE_CACHING_CAPABLE = 4194304,
        VDS_SF_MEDIA_SCAN_CAPABLE = 8388608,
        VDS_SF_CONSISTENCY_CHECK_CAPABLE = 16777216,
    };
    enum class VDS_SUB_SYSTEM_STATUS : int32_t
    {
        VDS_SSS_UNKNOWN = 0,
        VDS_SSS_ONLINE = 1,
        VDS_SSS_NOT_READY = 2,
        VDS_SSS_OFFLINE = 4,
        VDS_SSS_FAILED = 5,
        VDS_SSS_PARTIALLY_MANAGED = 9,
    };
    enum class VDS_SUB_SYSTEM_SUPPORTED_RAID_TYPE_FLAG : int32_t
    {
        VDS_SF_SUPPORTS_RAID2_LUNS = 1,
        VDS_SF_SUPPORTS_RAID3_LUNS = 2,
        VDS_SF_SUPPORTS_RAID4_LUNS = 4,
        VDS_SF_SUPPORTS_RAID5_LUNS = 8,
        VDS_SF_SUPPORTS_RAID6_LUNS = 16,
        VDS_SF_SUPPORTS_RAID01_LUNS = 32,
        VDS_SF_SUPPORTS_RAID03_LUNS = 64,
        VDS_SF_SUPPORTS_RAID05_LUNS = 128,
        VDS_SF_SUPPORTS_RAID10_LUNS = 256,
        VDS_SF_SUPPORTS_RAID15_LUNS = 512,
        VDS_SF_SUPPORTS_RAID30_LUNS = 1024,
        VDS_SF_SUPPORTS_RAID50_LUNS = 2048,
        VDS_SF_SUPPORTS_RAID51_LUNS = 4096,
        VDS_SF_SUPPORTS_RAID53_LUNS = 8192,
        VDS_SF_SUPPORTS_RAID60_LUNS = 16384,
        VDS_SF_SUPPORTS_RAID61_LUNS = 32768,
    };
    enum class VDS_TRANSITION_STATE : int32_t
    {
        VDS_TS_UNKNOWN = 0,
        VDS_TS_STABLE = 1,
        VDS_TS_EXTENDING = 2,
        VDS_TS_SHRINKING = 3,
        VDS_TS_RECONFIGING = 4,
        VDS_TS_RESTRIPING = 5,
    };
    enum class VDS_VERSION_SUPPORT_FLAG : int32_t
    {
        VDS_VSF_1_0 = 1,
        VDS_VSF_1_1 = 2,
        VDS_VSF_2_0 = 4,
        VDS_VSF_2_1 = 8,
        VDS_VSF_3_0 = 16,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct VDS_ASYNC_OUTPUT;
    struct VDS_CONTROLLER_NOTIFICATION;
    struct VDS_CONTROLLER_PROP;
    struct VDS_DISK_NOTIFICATION;
    struct VDS_DRIVE_EXTENT;
    struct VDS_DRIVE_LETTER_NOTIFICATION;
    struct VDS_DRIVE_NOTIFICATION;
    struct VDS_DRIVE_PROP;
    struct VDS_DRIVE_PROP2;
    struct VDS_FILE_SYSTEM_NOTIFICATION;
    struct VDS_HBAPORT_PROP;
    struct VDS_HINTS;
    struct VDS_HINTS2;
    struct VDS_INTERCONNECT;
    struct VDS_IPADDRESS;
    struct VDS_ISCSI_INITIATOR_ADAPTER_PROP;
    struct VDS_ISCSI_INITIATOR_PORTAL_PROP;
    struct VDS_ISCSI_IPSEC_KEY;
    struct VDS_ISCSI_PORTALGROUP_PROP;
    struct VDS_ISCSI_PORTAL_PROP;
    struct VDS_ISCSI_SHARED_SECRET;
    struct VDS_ISCSI_TARGET_PROP;
    struct VDS_LUN_INFORMATION;
    struct VDS_LUN_NOTIFICATION;
    struct VDS_LUN_PLEX_PROP;
    struct VDS_LUN_PROP;
    struct VDS_MOUNT_POINT_NOTIFICATION;
    struct VDS_NOTIFICATION;
    struct VDS_PACK_NOTIFICATION;
    struct VDS_PARTITION_NOTIFICATION;
    struct VDS_PATH_ID;
    struct VDS_PATH_INFO;
    struct VDS_PATH_POLICY;
    struct VDS_POOL_ATTRIBUTES;
    struct VDS_POOL_CUSTOM_ATTRIBUTES;
    struct VDS_PORTAL_GROUP_NOTIFICATION;
    struct VDS_PORTAL_NOTIFICATION;
    struct VDS_PORT_NOTIFICATION;
    struct VDS_PORT_PROP;
    struct VDS_PROVIDER_PROP;
    struct VDS_SERVICE_NOTIFICATION;
    struct VDS_STORAGE_DEVICE_ID_DESCRIPTOR;
    struct VDS_STORAGE_IDENTIFIER;
    struct VDS_STORAGE_POOL_DRIVE_EXTENT;
    struct VDS_STORAGE_POOL_PROP;
    struct VDS_SUB_SYSTEM_NOTIFICATION;
    struct VDS_SUB_SYSTEM_PROP;
    struct VDS_SUB_SYSTEM_PROP2;
    struct VDS_TARGET_NOTIFICATION;
    struct VDS_VOLUME_NOTIFICATION;
    struct VDS_WWN;
    struct IEnumVdsObject;
    struct IVdsAdmin;
    struct IVdsAdviseSink;
    struct IVdsAsync;
    struct IVdsController;
    struct IVdsControllerControllerPort;
    struct IVdsControllerPort;
    struct IVdsDrive;
    struct IVdsDrive2;
    struct IVdsHwProvider;
    struct IVdsHwProviderPrivate;
    struct IVdsHwProviderPrivateMpio;
    struct IVdsHwProviderStoragePools;
    struct IVdsHwProviderType;
    struct IVdsHwProviderType2;
    struct IVdsIscsiPortal;
    struct IVdsIscsiPortalGroup;
    struct IVdsIscsiTarget;
    struct IVdsLun;
    struct IVdsLun2;
    struct IVdsLunControllerPorts;
    struct IVdsLunIscsi;
    struct IVdsLunMpio;
    struct IVdsLunNaming;
    struct IVdsLunNumber;
    struct IVdsLunPlex;
    struct IVdsMaintenance;
    struct IVdsProvider;
    struct IVdsProviderPrivate;
    struct IVdsProviderSupport;
    struct IVdsStoragePool;
    struct IVdsSubSystem;
    struct IVdsSubSystem2;
    struct IVdsSubSystemInterconnect;
    struct IVdsSubSystemIscsi;
    struct IVdsSubSystemNaming;
#pragma endregion forward_declarations

#pragma region delegates
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
