// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Networking_WinHttp_2_H
#define WIN32_Windows_Win32_Networking_WinHttp_2_H
#include "win32/Windows.Win32.Networking.WinHttp.h"
#include "win32/impl/Windows.Win32.Networking.WinHttp.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::Networking::WinHttp
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Networking::WinHttp::WINHTTP_STATUS_CALLBACK* __stdcall ORBIT_IMPL_WinHttpSetStatusCallback(void* hInternet, win32::Windows::Win32::Networking::WinHttp::WINHTTP_STATUS_CALLBACK* lpfnInternetCallback, uint32_t dwNotificationFlags, size_t dwReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hInternet);
        ORBIT_TRACK_PARAM(lpfnInternetCallback);
        ORBIT_TRACK_PARAM(dwNotificationFlags);
        ORBIT_TRACK_PARAM(dwReserved);

        auto win32_impl_result = g_api_table.WinHttpSetStatusCallback(hInternet, lpfnInternetCallback, dwNotificationFlags, dwReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpTimeFromSystemTime(win32::Windows::Win32::Foundation::SYSTEMTIME* pst, win32::Windows::Win32::Foundation::PWSTR pwszTime) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pst);
        ORBIT_TRACK_PARAM(pwszTime);

        auto win32_impl_result = g_api_table.WinHttpTimeFromSystemTime(pst, pwszTime);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpTimeToSystemTime(win32::Windows::Win32::Foundation::PWSTR pwszTime, win32::Windows::Win32::Foundation::SYSTEMTIME* pst) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pwszTime);
        ORBIT_TRACK_PARAM(pst);

        auto win32_impl_result = g_api_table.WinHttpTimeToSystemTime(pwszTime, pst);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpCrackUrl(win32::Windows::Win32::Foundation::PWSTR pwszUrl, uint32_t dwUrlLength, uint32_t dwFlags, win32::Windows::Win32::Networking::WinHttp::URL_COMPONENTS* lpUrlComponents) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pwszUrl);
        ORBIT_TRACK_PARAM(dwUrlLength);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(lpUrlComponents);

        auto win32_impl_result = g_api_table.WinHttpCrackUrl(pwszUrl, dwUrlLength, dwFlags, lpUrlComponents);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpCreateUrl(win32::Windows::Win32::Networking::WinHttp::URL_COMPONENTS* lpUrlComponents, win32::Windows::Win32::Networking::WinHttp::WIN_HTTP_CREATE_URL_FLAGS dwFlags, win32::Windows::Win32::Foundation::PWSTR pwszUrl, uint32_t* pdwUrlLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpUrlComponents);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(pwszUrl);
        ORBIT_TRACK_PARAM(pdwUrlLength);

        auto win32_impl_result = g_api_table.WinHttpCreateUrl(lpUrlComponents, dwFlags, pwszUrl, pdwUrlLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpCheckPlatform() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.WinHttpCheckPlatform();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpGetDefaultProxyConfiguration(win32::Windows::Win32::Networking::WinHttp::WINHTTP_PROXY_INFO* pProxyInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProxyInfo);

        auto win32_impl_result = g_api_table.WinHttpGetDefaultProxyConfiguration(pProxyInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpSetDefaultProxyConfiguration(win32::Windows::Win32::Networking::WinHttp::WINHTTP_PROXY_INFO* pProxyInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProxyInfo);

        auto win32_impl_result = g_api_table.WinHttpSetDefaultProxyConfiguration(pProxyInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_WinHttpOpen(win32::Windows::Win32::Foundation::PWSTR pszAgentW, win32::Windows::Win32::Networking::WinHttp::WINHTTP_ACCESS_TYPE dwAccessType, win32::Windows::Win32::Foundation::PWSTR pszProxyW, win32::Windows::Win32::Foundation::PWSTR pszProxyBypassW, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszAgentW);
        ORBIT_TRACK_PARAM(dwAccessType);
        ORBIT_TRACK_PARAM(pszProxyW);
        ORBIT_TRACK_PARAM(pszProxyBypassW);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.WinHttpOpen(pszAgentW, dwAccessType, pszProxyW, pszProxyBypassW, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpCloseHandle(void* hInternet) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hInternet);

        auto win32_impl_result = g_api_table.WinHttpCloseHandle(hInternet);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_WinHttpConnect(void* hSession, win32::Windows::Win32::Foundation::PWSTR pswzServerName, win32::Windows::Win32::Networking::WinHttp::INTERNET_PORT nServerPort, uint32_t dwReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSession);
        ORBIT_TRACK_PARAM(pswzServerName);
        ORBIT_TRACK_PARAM(nServerPort);
        ORBIT_TRACK_PARAM(dwReserved);

        auto win32_impl_result = g_api_table.WinHttpConnect(hSession, pswzServerName, nServerPort, dwReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpReadData(void* hRequest, void* lpBuffer, uint32_t dwNumberOfBytesToRead, uint32_t* lpdwNumberOfBytesRead) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRequest);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(dwNumberOfBytesToRead);
        ORBIT_TRACK_PARAM(lpdwNumberOfBytesRead);

        auto win32_impl_result = g_api_table.WinHttpReadData(hRequest, lpBuffer, dwNumberOfBytesToRead, lpdwNumberOfBytesRead);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpReadDataEx(void* hRequest, void* lpBuffer, uint32_t dwNumberOfBytesToRead, uint32_t* lpdwNumberOfBytesRead, uint64_t ullFlags, uint32_t cbProperty, void* pvProperty) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRequest);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(dwNumberOfBytesToRead);
        ORBIT_TRACK_PARAM(lpdwNumberOfBytesRead);
        ORBIT_TRACK_PARAM(ullFlags);
        ORBIT_TRACK_PARAM(cbProperty);
        ORBIT_TRACK_PARAM(pvProperty);

        auto win32_impl_result = g_api_table.WinHttpReadDataEx(hRequest, lpBuffer, dwNumberOfBytesToRead, lpdwNumberOfBytesRead, ullFlags, cbProperty, pvProperty);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpWriteData(void* hRequest, void* lpBuffer, uint32_t dwNumberOfBytesToWrite, uint32_t* lpdwNumberOfBytesWritten) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRequest);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(dwNumberOfBytesToWrite);
        ORBIT_TRACK_PARAM(lpdwNumberOfBytesWritten);

        auto win32_impl_result = g_api_table.WinHttpWriteData(hRequest, lpBuffer, dwNumberOfBytesToWrite, lpdwNumberOfBytesWritten);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpQueryDataAvailable(void* hRequest, uint32_t* lpdwNumberOfBytesAvailable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRequest);
        ORBIT_TRACK_PARAM(lpdwNumberOfBytesAvailable);

        auto win32_impl_result = g_api_table.WinHttpQueryDataAvailable(hRequest, lpdwNumberOfBytesAvailable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpQueryOption(void* hInternet, uint32_t dwOption, void* lpBuffer, uint32_t* lpdwBufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hInternet);
        ORBIT_TRACK_PARAM(dwOption);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(lpdwBufferLength);

        auto win32_impl_result = g_api_table.WinHttpQueryOption(hInternet, dwOption, lpBuffer, lpdwBufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpSetOption(void* hInternet, uint32_t dwOption, void* lpBuffer, uint32_t dwBufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hInternet);
        ORBIT_TRACK_PARAM(dwOption);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(dwBufferLength);

        auto win32_impl_result = g_api_table.WinHttpSetOption(hInternet, dwOption, lpBuffer, dwBufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpSetTimeouts(void* hInternet, int32_t nResolveTimeout, int32_t nConnectTimeout, int32_t nSendTimeout, int32_t nReceiveTimeout) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hInternet);
        ORBIT_TRACK_PARAM(nResolveTimeout);
        ORBIT_TRACK_PARAM(nConnectTimeout);
        ORBIT_TRACK_PARAM(nSendTimeout);
        ORBIT_TRACK_PARAM(nReceiveTimeout);

        auto win32_impl_result = g_api_table.WinHttpSetTimeouts(hInternet, nResolveTimeout, nConnectTimeout, nSendTimeout, nReceiveTimeout);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_WinHttpOpenRequest(void* hConnect, win32::Windows::Win32::Foundation::PWSTR pwszVerb, win32::Windows::Win32::Foundation::PWSTR pwszObjectName, win32::Windows::Win32::Foundation::PWSTR pwszVersion, win32::Windows::Win32::Foundation::PWSTR pwszReferrer, win32::Windows::Win32::Foundation::PWSTR* ppwszAcceptTypes, win32::Windows::Win32::Networking::WinHttp::WINHTTP_OPEN_REQUEST_FLAGS dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hConnect);
        ORBIT_TRACK_PARAM(pwszVerb);
        ORBIT_TRACK_PARAM(pwszObjectName);
        ORBIT_TRACK_PARAM(pwszVersion);
        ORBIT_TRACK_PARAM(pwszReferrer);
        ORBIT_TRACK_PARAM(ppwszAcceptTypes);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.WinHttpOpenRequest(hConnect, pwszVerb, pwszObjectName, pwszVersion, pwszReferrer, ppwszAcceptTypes, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpAddRequestHeaders(void* hRequest, win32::Windows::Win32::Foundation::PWSTR lpszHeaders, uint32_t dwHeadersLength, uint32_t dwModifiers) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRequest);
        ORBIT_TRACK_PARAM(lpszHeaders);
        ORBIT_TRACK_PARAM(dwHeadersLength);
        ORBIT_TRACK_PARAM(dwModifiers);

        auto win32_impl_result = g_api_table.WinHttpAddRequestHeaders(hRequest, lpszHeaders, dwHeadersLength, dwModifiers);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpAddRequestHeadersEx(void* hRequest, uint32_t dwModifiers, uint64_t ullFlags, uint64_t ullExtra, uint32_t cHeaders, win32::Windows::Win32::Networking::WinHttp::WINHTTP_EXTENDED_HEADER* pHeaders) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRequest);
        ORBIT_TRACK_PARAM(dwModifiers);
        ORBIT_TRACK_PARAM(ullFlags);
        ORBIT_TRACK_PARAM(ullExtra);
        ORBIT_TRACK_PARAM(cHeaders);
        ORBIT_TRACK_PARAM(pHeaders);

        auto win32_impl_result = g_api_table.WinHttpAddRequestHeadersEx(hRequest, dwModifiers, ullFlags, ullExtra, cHeaders, pHeaders);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpSendRequest(void* hRequest, win32::Windows::Win32::Foundation::PWSTR lpszHeaders, uint32_t dwHeadersLength, void* lpOptional, uint32_t dwOptionalLength, uint32_t dwTotalLength, size_t dwContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRequest);
        ORBIT_TRACK_PARAM(lpszHeaders);
        ORBIT_TRACK_PARAM(dwHeadersLength);
        ORBIT_TRACK_PARAM(lpOptional);
        ORBIT_TRACK_PARAM(dwOptionalLength);
        ORBIT_TRACK_PARAM(dwTotalLength);
        ORBIT_TRACK_PARAM(dwContext);

        auto win32_impl_result = g_api_table.WinHttpSendRequest(hRequest, lpszHeaders, dwHeadersLength, lpOptional, dwOptionalLength, dwTotalLength, dwContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpSetCredentials(void* hRequest, uint32_t AuthTargets, uint32_t AuthScheme, win32::Windows::Win32::Foundation::PWSTR pwszUserName, win32::Windows::Win32::Foundation::PWSTR pwszPassword, void* pAuthParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRequest);
        ORBIT_TRACK_PARAM(AuthTargets);
        ORBIT_TRACK_PARAM(AuthScheme);
        ORBIT_TRACK_PARAM(pwszUserName);
        ORBIT_TRACK_PARAM(pwszPassword);
        ORBIT_TRACK_PARAM(pAuthParams);

        auto win32_impl_result = g_api_table.WinHttpSetCredentials(hRequest, AuthTargets, AuthScheme, pwszUserName, pwszPassword, pAuthParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpQueryAuthSchemes(void* hRequest, uint32_t* lpdwSupportedSchemes, uint32_t* lpdwFirstScheme, uint32_t* pdwAuthTarget) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRequest);
        ORBIT_TRACK_PARAM(lpdwSupportedSchemes);
        ORBIT_TRACK_PARAM(lpdwFirstScheme);
        ORBIT_TRACK_PARAM(pdwAuthTarget);

        auto win32_impl_result = g_api_table.WinHttpQueryAuthSchemes(hRequest, lpdwSupportedSchemes, lpdwFirstScheme, pdwAuthTarget);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpReceiveResponse(void* hRequest, void* lpReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRequest);
        ORBIT_TRACK_PARAM(lpReserved);

        auto win32_impl_result = g_api_table.WinHttpReceiveResponse(hRequest, lpReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpQueryHeaders(void* hRequest, uint32_t dwInfoLevel, win32::Windows::Win32::Foundation::PWSTR pwszName, void* lpBuffer, uint32_t* lpdwBufferLength, uint32_t* lpdwIndex) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRequest);
        ORBIT_TRACK_PARAM(dwInfoLevel);
        ORBIT_TRACK_PARAM(pwszName);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(lpdwBufferLength);
        ORBIT_TRACK_PARAM(lpdwIndex);

        auto win32_impl_result = g_api_table.WinHttpQueryHeaders(hRequest, dwInfoLevel, pwszName, lpBuffer, lpdwBufferLength, lpdwIndex);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpQueryHeadersEx(void* hRequest, uint32_t dwInfoLevel, uint64_t ullFlags, uint32_t uiCodePage, uint32_t* pdwIndex, win32::Windows::Win32::Networking::WinHttp::WINHTTP_HEADER_NAME* pHeaderName, void* pBuffer, uint32_t* pdwBufferLength, win32::Windows::Win32::Networking::WinHttp::WINHTTP_EXTENDED_HEADER** ppHeaders, uint32_t* pdwHeadersCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRequest);
        ORBIT_TRACK_PARAM(dwInfoLevel);
        ORBIT_TRACK_PARAM(ullFlags);
        ORBIT_TRACK_PARAM(uiCodePage);
        ORBIT_TRACK_PARAM(pdwIndex);
        ORBIT_TRACK_PARAM(pHeaderName);
        ORBIT_TRACK_PARAM(pBuffer);
        ORBIT_TRACK_PARAM(pdwBufferLength);
        ORBIT_TRACK_PARAM(ppHeaders);
        ORBIT_TRACK_PARAM(pdwHeadersCount);

        auto win32_impl_result = g_api_table.WinHttpQueryHeadersEx(hRequest, dwInfoLevel, ullFlags, uiCodePage, pdwIndex, pHeaderName, pBuffer, pdwBufferLength, ppHeaders, pdwHeadersCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpQueryConnectionGroup(void* hInternet, ::win32::guid* pGuidConnection, uint64_t ullFlags, win32::Windows::Win32::Networking::WinHttp::WINHTTP_QUERY_CONNECTION_GROUP_RESULT** ppResult) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hInternet);
        ORBIT_TRACK_PARAM(pGuidConnection);
        ORBIT_TRACK_PARAM(ullFlags);
        ORBIT_TRACK_PARAM(ppResult);

        auto win32_impl_result = g_api_table.WinHttpQueryConnectionGroup(hInternet, pGuidConnection, ullFlags, ppResult);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_WinHttpFreeQueryConnectionGroupResult(win32::Windows::Win32::Networking::WinHttp::WINHTTP_QUERY_CONNECTION_GROUP_RESULT* pResult) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pResult);

        g_api_table.WinHttpFreeQueryConnectionGroupResult(pResult);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpDetectAutoProxyConfigUrl(uint32_t dwAutoDetectFlags, win32::Windows::Win32::Foundation::PWSTR* ppwstrAutoConfigUrl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwAutoDetectFlags);
        ORBIT_TRACK_PARAM(ppwstrAutoConfigUrl);

        auto win32_impl_result = g_api_table.WinHttpDetectAutoProxyConfigUrl(dwAutoDetectFlags, ppwstrAutoConfigUrl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpGetProxyForUrl(void* hSession, win32::Windows::Win32::Foundation::PWSTR lpcwszUrl, win32::Windows::Win32::Networking::WinHttp::WINHTTP_AUTOPROXY_OPTIONS* pAutoProxyOptions, win32::Windows::Win32::Networking::WinHttp::WINHTTP_PROXY_INFO* pProxyInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSession);
        ORBIT_TRACK_PARAM(lpcwszUrl);
        ORBIT_TRACK_PARAM(pAutoProxyOptions);
        ORBIT_TRACK_PARAM(pProxyInfo);

        auto win32_impl_result = g_api_table.WinHttpGetProxyForUrl(hSession, lpcwszUrl, pAutoProxyOptions, pProxyInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpCreateProxyResolver(void* hSession, void** phResolver) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSession);
        ORBIT_TRACK_PARAM(phResolver);

        auto win32_impl_result = g_api_table.WinHttpCreateProxyResolver(hSession, phResolver);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpGetProxyForUrlEx(void* hResolver, win32::Windows::Win32::Foundation::PWSTR pcwszUrl, win32::Windows::Win32::Networking::WinHttp::WINHTTP_AUTOPROXY_OPTIONS* pAutoProxyOptions, size_t pContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hResolver);
        ORBIT_TRACK_PARAM(pcwszUrl);
        ORBIT_TRACK_PARAM(pAutoProxyOptions);
        ORBIT_TRACK_PARAM(pContext);

        auto win32_impl_result = g_api_table.WinHttpGetProxyForUrlEx(hResolver, pcwszUrl, pAutoProxyOptions, pContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpGetProxyForUrlEx2(void* hResolver, win32::Windows::Win32::Foundation::PWSTR pcwszUrl, win32::Windows::Win32::Networking::WinHttp::WINHTTP_AUTOPROXY_OPTIONS* pAutoProxyOptions, uint32_t cbInterfaceSelectionContext, uint8_t* pInterfaceSelectionContext, size_t pContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hResolver);
        ORBIT_TRACK_PARAM(pcwszUrl);
        ORBIT_TRACK_PARAM(pAutoProxyOptions);
        ORBIT_TRACK_PARAM(cbInterfaceSelectionContext);
        ORBIT_TRACK_PARAM(pInterfaceSelectionContext);
        ORBIT_TRACK_PARAM(pContext);

        auto win32_impl_result = g_api_table.WinHttpGetProxyForUrlEx2(hResolver, pcwszUrl, pAutoProxyOptions, cbInterfaceSelectionContext, pInterfaceSelectionContext, pContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpGetProxyResult(void* hResolver, win32::Windows::Win32::Networking::WinHttp::WINHTTP_PROXY_RESULT* pProxyResult) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hResolver);
        ORBIT_TRACK_PARAM(pProxyResult);

        auto win32_impl_result = g_api_table.WinHttpGetProxyResult(hResolver, pProxyResult);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpGetProxyResultEx(void* hResolver, win32::Windows::Win32::Networking::WinHttp::WINHTTP_PROXY_RESULT_EX* pProxyResultEx) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hResolver);
        ORBIT_TRACK_PARAM(pProxyResultEx);

        auto win32_impl_result = g_api_table.WinHttpGetProxyResultEx(hResolver, pProxyResultEx);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_WinHttpFreeProxyResult(win32::Windows::Win32::Networking::WinHttp::WINHTTP_PROXY_RESULT* pProxyResult) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProxyResult);

        g_api_table.WinHttpFreeProxyResult(pProxyResult);
        
    }

    void __stdcall ORBIT_IMPL_WinHttpFreeProxyResultEx(win32::Windows::Win32::Networking::WinHttp::WINHTTP_PROXY_RESULT_EX* pProxyResultEx) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProxyResultEx);

        g_api_table.WinHttpFreeProxyResultEx(pProxyResultEx);
        
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpResetAutoProxy(void* hSession, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSession);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.WinHttpResetAutoProxy(hSession, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_WinHttpGetIEProxyConfigForCurrentUser(win32::Windows::Win32::Networking::WinHttp::WINHTTP_CURRENT_USER_IE_PROXY_CONFIG* pProxyConfig) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProxyConfig);

        auto win32_impl_result = g_api_table.WinHttpGetIEProxyConfigForCurrentUser(pProxyConfig);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpWriteProxySettings(void* hSession, win32::Windows::Win32::Foundation::BOOL fForceUpdate, win32::Windows::Win32::Networking::WinHttp::WINHTTP_PROXY_SETTINGS* pWinHttpProxySettings) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSession);
        ORBIT_TRACK_PARAM(fForceUpdate);
        ORBIT_TRACK_PARAM(pWinHttpProxySettings);

        auto win32_impl_result = g_api_table.WinHttpWriteProxySettings(hSession, fForceUpdate, pWinHttpProxySettings);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpReadProxySettings(void* hSession, win32::Windows::Win32::Foundation::PWSTR pcwszConnectionName, win32::Windows::Win32::Foundation::BOOL fFallBackToDefaultSettings, win32::Windows::Win32::Foundation::BOOL fSetAutoDiscoverForDefaultSettings, uint32_t* pdwSettingsVersion, win32::Windows::Win32::Foundation::BOOL* pfDefaultSettingsAreReturned, win32::Windows::Win32::Networking::WinHttp::WINHTTP_PROXY_SETTINGS* pWinHttpProxySettings) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSession);
        ORBIT_TRACK_PARAM(pcwszConnectionName);
        ORBIT_TRACK_PARAM(fFallBackToDefaultSettings);
        ORBIT_TRACK_PARAM(fSetAutoDiscoverForDefaultSettings);
        ORBIT_TRACK_PARAM(pdwSettingsVersion);
        ORBIT_TRACK_PARAM(pfDefaultSettingsAreReturned);
        ORBIT_TRACK_PARAM(pWinHttpProxySettings);

        auto win32_impl_result = g_api_table.WinHttpReadProxySettings(hSession, pcwszConnectionName, fFallBackToDefaultSettings, fSetAutoDiscoverForDefaultSettings, pdwSettingsVersion, pfDefaultSettingsAreReturned, pWinHttpProxySettings);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_WinHttpFreeProxySettings(win32::Windows::Win32::Networking::WinHttp::WINHTTP_PROXY_SETTINGS* pWinHttpProxySettings) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pWinHttpProxySettings);

        g_api_table.WinHttpFreeProxySettings(pWinHttpProxySettings);
        
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpGetProxySettingsVersion(void* hSession, uint32_t* pdwProxySettingsVersion) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSession);
        ORBIT_TRACK_PARAM(pdwProxySettingsVersion);

        auto win32_impl_result = g_api_table.WinHttpGetProxySettingsVersion(hSession, pdwProxySettingsVersion);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpSetProxySettingsPerUser(win32::Windows::Win32::Foundation::BOOL fProxySettingsPerUser) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(fProxySettingsPerUser);

        auto win32_impl_result = g_api_table.WinHttpSetProxySettingsPerUser(fProxySettingsPerUser);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_WinHttpWebSocketCompleteUpgrade(void* hRequest, size_t pContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hRequest);
        ORBIT_TRACK_PARAM(pContext);

        auto win32_impl_result = g_api_table.WinHttpWebSocketCompleteUpgrade(hRequest, pContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpWebSocketSend(void* hWebSocket, win32::Windows::Win32::Networking::WinHttp::WINHTTP_WEB_SOCKET_BUFFER_TYPE eBufferType, void* pvBuffer, uint32_t dwBufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWebSocket);
        ORBIT_TRACK_PARAM(eBufferType);
        ORBIT_TRACK_PARAM(pvBuffer);
        ORBIT_TRACK_PARAM(dwBufferLength);

        auto win32_impl_result = g_api_table.WinHttpWebSocketSend(hWebSocket, eBufferType, pvBuffer, dwBufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpWebSocketReceive(void* hWebSocket, void* pvBuffer, uint32_t dwBufferLength, uint32_t* pdwBytesRead, win32::Windows::Win32::Networking::WinHttp::WINHTTP_WEB_SOCKET_BUFFER_TYPE* peBufferType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWebSocket);
        ORBIT_TRACK_PARAM(pvBuffer);
        ORBIT_TRACK_PARAM(dwBufferLength);
        ORBIT_TRACK_PARAM(pdwBytesRead);
        ORBIT_TRACK_PARAM(peBufferType);

        auto win32_impl_result = g_api_table.WinHttpWebSocketReceive(hWebSocket, pvBuffer, dwBufferLength, pdwBytesRead, peBufferType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpWebSocketShutdown(void* hWebSocket, uint16_t usStatus, void* pvReason, uint32_t dwReasonLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWebSocket);
        ORBIT_TRACK_PARAM(usStatus);
        ORBIT_TRACK_PARAM(pvReason);
        ORBIT_TRACK_PARAM(dwReasonLength);

        auto win32_impl_result = g_api_table.WinHttpWebSocketShutdown(hWebSocket, usStatus, pvReason, dwReasonLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpWebSocketClose(void* hWebSocket, uint16_t usStatus, void* pvReason, uint32_t dwReasonLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWebSocket);
        ORBIT_TRACK_PARAM(usStatus);
        ORBIT_TRACK_PARAM(pvReason);
        ORBIT_TRACK_PARAM(dwReasonLength);

        auto win32_impl_result = g_api_table.WinHttpWebSocketClose(hWebSocket, usStatus, pvReason, dwReasonLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WinHttpWebSocketQueryCloseStatus(void* hWebSocket, uint16_t* pusStatus, void* pvReason, uint32_t dwReasonLength, uint32_t* pdwReasonLengthConsumed) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWebSocket);
        ORBIT_TRACK_PARAM(pusStatus);
        ORBIT_TRACK_PARAM(pvReason);
        ORBIT_TRACK_PARAM(dwReasonLength);
        ORBIT_TRACK_PARAM(pdwReasonLengthConsumed);

        auto win32_impl_result = g_api_table.WinHttpWebSocketQueryCloseStatus(hWebSocket, pusStatus, pvReason, dwReasonLength, pdwReasonLengthConsumed);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
