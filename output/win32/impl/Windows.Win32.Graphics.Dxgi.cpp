// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Graphics_Dxgi_2_H
#define WIN32_Windows_Win32_Graphics_Dxgi_2_H
#include "win32/Windows.Win32.Graphics.Dxgi.h"
#include "win32/impl/Windows.Win32.Graphics.Dxgi.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::Graphics::Dxgi
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateDXGIFactory(::win32::guid* riid, void** ppFactory) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppFactory);

        auto win32_impl_result = g_api_table.CreateDXGIFactory(riid, ppFactory);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateDXGIFactory1(::win32::guid* riid, void** ppFactory) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppFactory);

        auto win32_impl_result = g_api_table.CreateDXGIFactory1(riid, ppFactory);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateDXGIFactory2(uint32_t Flags, ::win32::guid* riid, void** ppFactory) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppFactory);

        auto win32_impl_result = g_api_table.CreateDXGIFactory2(Flags, riid, ppFactory);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DXGIGetDebugInterface1(uint32_t Flags, ::win32::guid* riid, void** pDebug) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(pDebug);

        auto win32_impl_result = g_api_table.DXGIGetDebugInterface1(Flags, riid, pDebug);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DXGIDeclareAdapterRemovalSupport() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.DXGIDeclareAdapterRemovalSupport();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
