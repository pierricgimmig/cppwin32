// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_UI_Accessibility_2_H
#define WIN32_Windows_Win32_UI_Accessibility_2_H
#include "win32/Windows.Win32.UI.Accessibility.h"
#include "win32/impl/Windows.Win32.UI.Accessibility.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::UI::Accessibility
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::LRESULT __stdcall ORBIT_IMPL_LresultFromObject(::win32::guid* riid, win32::Windows::Win32::Foundation::WPARAM wParam, win32::Windows::Win32::System::Com::IUnknown* punk) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(wParam);
        ORBIT_TRACK_PARAM(punk);

        auto win32_impl_result = g_api_table.LresultFromObject(riid, wParam, punk);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ObjectFromLresult(win32::Windows::Win32::Foundation::LRESULT lResult, ::win32::guid* riid, win32::Windows::Win32::Foundation::WPARAM wParam, void** ppvObject) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lResult);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(wParam);
        ORBIT_TRACK_PARAM(ppvObject);

        auto win32_impl_result = g_api_table.ObjectFromLresult(lResult, riid, wParam, ppvObject);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowFromAccessibleObject(win32::Windows::Win32::UI::Accessibility::IAccessible* param0, win32::Windows::Win32::Foundation::HWND* phwnd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);
        ORBIT_TRACK_PARAM(phwnd);

        auto win32_impl_result = g_api_table.WindowFromAccessibleObject(param0, phwnd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_AccessibleObjectFromWindow(win32::Windows::Win32::Foundation::HWND hwnd, uint32_t dwId, ::win32::guid* riid, void** ppvObject) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(dwId);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppvObject);

        auto win32_impl_result = g_api_table.AccessibleObjectFromWindow(hwnd, dwId, riid, ppvObject);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_AccessibleObjectFromEvent(win32::Windows::Win32::Foundation::HWND hwnd, uint32_t dwId, uint32_t dwChildId, win32::Windows::Win32::UI::Accessibility::IAccessible** ppacc, win32::Windows::Win32::System::Com::VARIANT* pvarChild) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(dwId);
        ORBIT_TRACK_PARAM(dwChildId);
        ORBIT_TRACK_PARAM(ppacc);
        ORBIT_TRACK_PARAM(pvarChild);

        auto win32_impl_result = g_api_table.AccessibleObjectFromEvent(hwnd, dwId, dwChildId, ppacc, pvarChild);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_AccessibleObjectFromPoint(win32::Windows::Win32::Foundation::POINT ptScreen, win32::Windows::Win32::UI::Accessibility::IAccessible** ppacc, win32::Windows::Win32::System::Com::VARIANT* pvarChild) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ptScreen);
        ORBIT_TRACK_PARAM(ppacc);
        ORBIT_TRACK_PARAM(pvarChild);

        auto win32_impl_result = g_api_table.AccessibleObjectFromPoint(ptScreen, ppacc, pvarChild);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_AccessibleChildren(win32::Windows::Win32::UI::Accessibility::IAccessible* paccContainer, int32_t iChildStart, int32_t cChildren, win32::Windows::Win32::System::Com::VARIANT* rgvarChildren, int32_t* pcObtained) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(paccContainer);
        ORBIT_TRACK_PARAM(iChildStart);
        ORBIT_TRACK_PARAM(cChildren);
        ORBIT_TRACK_PARAM(rgvarChildren);
        ORBIT_TRACK_PARAM(pcObtained);

        auto win32_impl_result = g_api_table.AccessibleChildren(paccContainer, iChildStart, cChildren, rgvarChildren, pcObtained);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetRoleTextA(uint32_t lRole, win32::Windows::Win32::Foundation::PSTR lpszRole, uint32_t cchRoleMax) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lRole);
        ORBIT_TRACK_PARAM(lpszRole);
        ORBIT_TRACK_PARAM(cchRoleMax);

        auto win32_impl_result = g_api_table.GetRoleTextA(lRole, lpszRole, cchRoleMax);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetRoleTextW(uint32_t lRole, win32::Windows::Win32::Foundation::PWSTR lpszRole, uint32_t cchRoleMax) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lRole);
        ORBIT_TRACK_PARAM(lpszRole);
        ORBIT_TRACK_PARAM(cchRoleMax);

        auto win32_impl_result = g_api_table.GetRoleTextW(lRole, lpszRole, cchRoleMax);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetStateTextA(uint32_t lStateBit, win32::Windows::Win32::Foundation::PSTR lpszState, uint32_t cchState) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lStateBit);
        ORBIT_TRACK_PARAM(lpszState);
        ORBIT_TRACK_PARAM(cchState);

        auto win32_impl_result = g_api_table.GetStateTextA(lStateBit, lpszState, cchState);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetStateTextW(uint32_t lStateBit, win32::Windows::Win32::Foundation::PWSTR lpszState, uint32_t cchState) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lStateBit);
        ORBIT_TRACK_PARAM(lpszState);
        ORBIT_TRACK_PARAM(cchState);

        auto win32_impl_result = g_api_table.GetStateTextW(lStateBit, lpszState, cchState);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_GetOleaccVersionInfo(uint32_t* pVer, uint32_t* pBuild) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pVer);
        ORBIT_TRACK_PARAM(pBuild);

        g_api_table.GetOleaccVersionInfo(pVer, pBuild);
        
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateStdAccessibleObject(win32::Windows::Win32::Foundation::HWND hwnd, int32_t idObject, ::win32::guid* riid, void** ppvObject) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(idObject);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppvObject);

        auto win32_impl_result = g_api_table.CreateStdAccessibleObject(hwnd, idObject, riid, ppvObject);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateStdAccessibleProxyA(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::PSTR pClassName, int32_t idObject, ::win32::guid* riid, void** ppvObject) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(pClassName);
        ORBIT_TRACK_PARAM(idObject);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppvObject);

        auto win32_impl_result = g_api_table.CreateStdAccessibleProxyA(hwnd, pClassName, idObject, riid, ppvObject);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateStdAccessibleProxyW(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::PWSTR pClassName, int32_t idObject, ::win32::guid* riid, void** ppvObject) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(pClassName);
        ORBIT_TRACK_PARAM(idObject);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppvObject);

        auto win32_impl_result = g_api_table.CreateStdAccessibleProxyW(hwnd, pClassName, idObject, riid, ppvObject);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_AccSetRunningUtilityState(win32::Windows::Win32::Foundation::HWND hwndApp, uint32_t dwUtilityStateMask, win32::Windows::Win32::UI::Accessibility::ACC_UTILITY_STATE_FLAGS dwUtilityState) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndApp);
        ORBIT_TRACK_PARAM(dwUtilityStateMask);
        ORBIT_TRACK_PARAM(dwUtilityState);

        auto win32_impl_result = g_api_table.AccSetRunningUtilityState(hwndApp, dwUtilityStateMask, dwUtilityState);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_AccNotifyTouchInteraction(win32::Windows::Win32::Foundation::HWND hwndApp, win32::Windows::Win32::Foundation::HWND hwndTarget, win32::Windows::Win32::Foundation::POINT ptTarget) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndApp);
        ORBIT_TRACK_PARAM(hwndTarget);
        ORBIT_TRACK_PARAM(ptTarget);

        auto win32_impl_result = g_api_table.AccNotifyTouchInteraction(hwndApp, hwndTarget, ptTarget);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UiaGetErrorDescription(win32::Windows::Win32::Foundation::BSTR* pDescription) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDescription);

        auto win32_impl_result = g_api_table.UiaGetErrorDescription(pDescription);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaHUiaNodeFromVariant(win32::Windows::Win32::System::Com::VARIANT* pvar, win32::Windows::Win32::UI::Accessibility::HUIANODE* phnode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pvar);
        ORBIT_TRACK_PARAM(phnode);

        auto win32_impl_result = g_api_table.UiaHUiaNodeFromVariant(pvar, phnode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaHPatternObjectFromVariant(win32::Windows::Win32::System::Com::VARIANT* pvar, win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT* phobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pvar);
        ORBIT_TRACK_PARAM(phobj);

        auto win32_impl_result = g_api_table.UiaHPatternObjectFromVariant(pvar, phobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaHTextRangeFromVariant(win32::Windows::Win32::System::Com::VARIANT* pvar, win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE* phtextrange) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pvar);
        ORBIT_TRACK_PARAM(phtextrange);

        auto win32_impl_result = g_api_table.UiaHTextRangeFromVariant(pvar, phtextrange);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UiaNodeRelease(win32::Windows::Win32::UI::Accessibility::HUIANODE hnode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hnode);

        auto win32_impl_result = g_api_table.UiaNodeRelease(hnode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaGetPropertyValue(win32::Windows::Win32::UI::Accessibility::HUIANODE hnode, int32_t propertyId, win32::Windows::Win32::System::Com::VARIANT* pValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hnode);
        ORBIT_TRACK_PARAM(propertyId);
        ORBIT_TRACK_PARAM(pValue);

        auto win32_impl_result = g_api_table.UiaGetPropertyValue(hnode, propertyId, pValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaGetPatternProvider(win32::Windows::Win32::UI::Accessibility::HUIANODE hnode, int32_t patternId, win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT* phobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hnode);
        ORBIT_TRACK_PARAM(patternId);
        ORBIT_TRACK_PARAM(phobj);

        auto win32_impl_result = g_api_table.UiaGetPatternProvider(hnode, patternId, phobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaGetRuntimeId(win32::Windows::Win32::UI::Accessibility::HUIANODE hnode, win32::Windows::Win32::System::Com::SAFEARRAY** pruntimeId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hnode);
        ORBIT_TRACK_PARAM(pruntimeId);

        auto win32_impl_result = g_api_table.UiaGetRuntimeId(hnode, pruntimeId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaSetFocus(win32::Windows::Win32::UI::Accessibility::HUIANODE hnode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hnode);

        auto win32_impl_result = g_api_table.UiaSetFocus(hnode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaNavigate(win32::Windows::Win32::UI::Accessibility::HUIANODE hnode, win32::Windows::Win32::UI::Accessibility::NavigateDirection direction, win32::Windows::Win32::UI::Accessibility::UiaCondition* pCondition, win32::Windows::Win32::UI::Accessibility::UiaCacheRequest* pRequest, win32::Windows::Win32::System::Com::SAFEARRAY** ppRequestedData, win32::Windows::Win32::Foundation::BSTR* ppTreeStructure) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hnode);
        ORBIT_TRACK_PARAM(direction);
        ORBIT_TRACK_PARAM(pCondition);
        ORBIT_TRACK_PARAM(pRequest);
        ORBIT_TRACK_PARAM(ppRequestedData);
        ORBIT_TRACK_PARAM(ppTreeStructure);

        auto win32_impl_result = g_api_table.UiaNavigate(hnode, direction, pCondition, pRequest, ppRequestedData, ppTreeStructure);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaGetUpdatedCache(win32::Windows::Win32::UI::Accessibility::HUIANODE hnode, win32::Windows::Win32::UI::Accessibility::UiaCacheRequest* pRequest, win32::Windows::Win32::UI::Accessibility::NormalizeState normalizeState, win32::Windows::Win32::UI::Accessibility::UiaCondition* pNormalizeCondition, win32::Windows::Win32::System::Com::SAFEARRAY** ppRequestedData, win32::Windows::Win32::Foundation::BSTR* ppTreeStructure) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hnode);
        ORBIT_TRACK_PARAM(pRequest);
        ORBIT_TRACK_PARAM(normalizeState);
        ORBIT_TRACK_PARAM(pNormalizeCondition);
        ORBIT_TRACK_PARAM(ppRequestedData);
        ORBIT_TRACK_PARAM(ppTreeStructure);

        auto win32_impl_result = g_api_table.UiaGetUpdatedCache(hnode, pRequest, normalizeState, pNormalizeCondition, ppRequestedData, ppTreeStructure);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaFind(win32::Windows::Win32::UI::Accessibility::HUIANODE hnode, win32::Windows::Win32::UI::Accessibility::UiaFindParams* pParams, win32::Windows::Win32::UI::Accessibility::UiaCacheRequest* pRequest, win32::Windows::Win32::System::Com::SAFEARRAY** ppRequestedData, win32::Windows::Win32::System::Com::SAFEARRAY** ppOffsets, win32::Windows::Win32::System::Com::SAFEARRAY** ppTreeStructures) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hnode);
        ORBIT_TRACK_PARAM(pParams);
        ORBIT_TRACK_PARAM(pRequest);
        ORBIT_TRACK_PARAM(ppRequestedData);
        ORBIT_TRACK_PARAM(ppOffsets);
        ORBIT_TRACK_PARAM(ppTreeStructures);

        auto win32_impl_result = g_api_table.UiaFind(hnode, pParams, pRequest, ppRequestedData, ppOffsets, ppTreeStructures);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaNodeFromPoint(double x, double y, win32::Windows::Win32::UI::Accessibility::UiaCacheRequest* pRequest, win32::Windows::Win32::System::Com::SAFEARRAY** ppRequestedData, win32::Windows::Win32::Foundation::BSTR* ppTreeStructure) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(x);
        ORBIT_TRACK_PARAM(y);
        ORBIT_TRACK_PARAM(pRequest);
        ORBIT_TRACK_PARAM(ppRequestedData);
        ORBIT_TRACK_PARAM(ppTreeStructure);

        auto win32_impl_result = g_api_table.UiaNodeFromPoint(x, y, pRequest, ppRequestedData, ppTreeStructure);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaNodeFromFocus(win32::Windows::Win32::UI::Accessibility::UiaCacheRequest* pRequest, win32::Windows::Win32::System::Com::SAFEARRAY** ppRequestedData, win32::Windows::Win32::Foundation::BSTR* ppTreeStructure) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pRequest);
        ORBIT_TRACK_PARAM(ppRequestedData);
        ORBIT_TRACK_PARAM(ppTreeStructure);

        auto win32_impl_result = g_api_table.UiaNodeFromFocus(pRequest, ppRequestedData, ppTreeStructure);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaNodeFromHandle(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::UI::Accessibility::HUIANODE* phnode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(phnode);

        auto win32_impl_result = g_api_table.UiaNodeFromHandle(hwnd, phnode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaNodeFromProvider(win32::Windows::Win32::UI::Accessibility::IRawElementProviderSimple* pProvider, win32::Windows::Win32::UI::Accessibility::HUIANODE* phnode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProvider);
        ORBIT_TRACK_PARAM(phnode);

        auto win32_impl_result = g_api_table.UiaNodeFromProvider(pProvider, phnode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaGetRootNode(win32::Windows::Win32::UI::Accessibility::HUIANODE* phnode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phnode);

        auto win32_impl_result = g_api_table.UiaGetRootNode(phnode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_UiaRegisterProviderCallback(win32::Windows::Win32::UI::Accessibility::UiaProviderCallback** pCallback) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pCallback);

        g_api_table.UiaRegisterProviderCallback(pCallback);
        
    }

    int32_t __stdcall ORBIT_IMPL_UiaLookupId(win32::Windows::Win32::UI::Accessibility::AutomationIdentifierType type, ::win32::guid* pGuid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(type);
        ORBIT_TRACK_PARAM(pGuid);

        auto win32_impl_result = g_api_table.UiaLookupId(type, pGuid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaGetReservedNotSupportedValue(win32::Windows::Win32::System::Com::IUnknown** punkNotSupportedValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(punkNotSupportedValue);

        auto win32_impl_result = g_api_table.UiaGetReservedNotSupportedValue(punkNotSupportedValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaGetReservedMixedAttributeValue(win32::Windows::Win32::System::Com::IUnknown** punkMixedAttributeValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(punkMixedAttributeValue);

        auto win32_impl_result = g_api_table.UiaGetReservedMixedAttributeValue(punkMixedAttributeValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UiaClientsAreListening() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.UiaClientsAreListening();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaRaiseAutomationPropertyChangedEvent(win32::Windows::Win32::UI::Accessibility::IRawElementProviderSimple* pProvider, int32_t id, win32::Windows::Win32::System::Com::VARIANT oldValue, win32::Windows::Win32::System::Com::VARIANT newValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProvider);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(oldValue);
        ORBIT_TRACK_PARAM(newValue);

        auto win32_impl_result = g_api_table.UiaRaiseAutomationPropertyChangedEvent(pProvider, id, oldValue, newValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaRaiseAutomationEvent(win32::Windows::Win32::UI::Accessibility::IRawElementProviderSimple* pProvider, int32_t id) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProvider);
        ORBIT_TRACK_PARAM(id);

        auto win32_impl_result = g_api_table.UiaRaiseAutomationEvent(pProvider, id);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaRaiseStructureChangedEvent(win32::Windows::Win32::UI::Accessibility::IRawElementProviderSimple* pProvider, win32::Windows::Win32::UI::Accessibility::StructureChangeType structureChangeType, int32_t* pRuntimeId, int32_t cRuntimeIdLen) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProvider);
        ORBIT_TRACK_PARAM(structureChangeType);
        ORBIT_TRACK_PARAM(pRuntimeId);
        ORBIT_TRACK_PARAM(cRuntimeIdLen);

        auto win32_impl_result = g_api_table.UiaRaiseStructureChangedEvent(pProvider, structureChangeType, pRuntimeId, cRuntimeIdLen);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaRaiseAsyncContentLoadedEvent(win32::Windows::Win32::UI::Accessibility::IRawElementProviderSimple* pProvider, win32::Windows::Win32::UI::Accessibility::AsyncContentLoadedState asyncContentLoadedState, double percentComplete) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProvider);
        ORBIT_TRACK_PARAM(asyncContentLoadedState);
        ORBIT_TRACK_PARAM(percentComplete);

        auto win32_impl_result = g_api_table.UiaRaiseAsyncContentLoadedEvent(pProvider, asyncContentLoadedState, percentComplete);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaRaiseTextEditTextChangedEvent(win32::Windows::Win32::UI::Accessibility::IRawElementProviderSimple* pProvider, win32::Windows::Win32::UI::Accessibility::TextEditChangeType textEditChangeType, win32::Windows::Win32::System::Com::SAFEARRAY* pChangedData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProvider);
        ORBIT_TRACK_PARAM(textEditChangeType);
        ORBIT_TRACK_PARAM(pChangedData);

        auto win32_impl_result = g_api_table.UiaRaiseTextEditTextChangedEvent(pProvider, textEditChangeType, pChangedData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaRaiseChangesEvent(win32::Windows::Win32::UI::Accessibility::IRawElementProviderSimple* pProvider, int32_t eventIdCount, win32::Windows::Win32::UI::Accessibility::UiaChangeInfo* pUiaChanges) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProvider);
        ORBIT_TRACK_PARAM(eventIdCount);
        ORBIT_TRACK_PARAM(pUiaChanges);

        auto win32_impl_result = g_api_table.UiaRaiseChangesEvent(pProvider, eventIdCount, pUiaChanges);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaRaiseNotificationEvent(win32::Windows::Win32::UI::Accessibility::IRawElementProviderSimple* provider, win32::Windows::Win32::UI::Accessibility::NotificationKind notificationKind, win32::Windows::Win32::UI::Accessibility::NotificationProcessing notificationProcessing, win32::Windows::Win32::Foundation::BSTR displayString, win32::Windows::Win32::Foundation::BSTR activityId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(provider);
        ORBIT_TRACK_PARAM(notificationKind);
        ORBIT_TRACK_PARAM(notificationProcessing);
        ORBIT_TRACK_PARAM(displayString);
        ORBIT_TRACK_PARAM(activityId);

        auto win32_impl_result = g_api_table.UiaRaiseNotificationEvent(provider, notificationKind, notificationProcessing, displayString, activityId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaRaiseActiveTextPositionChangedEvent(win32::Windows::Win32::UI::Accessibility::IRawElementProviderSimple* provider, win32::Windows::Win32::UI::Accessibility::ITextRangeProvider* textRange) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(provider);
        ORBIT_TRACK_PARAM(textRange);

        auto win32_impl_result = g_api_table.UiaRaiseActiveTextPositionChangedEvent(provider, textRange);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaAddEvent(win32::Windows::Win32::UI::Accessibility::HUIANODE hnode, int32_t eventId, win32::Windows::Win32::UI::Accessibility::UiaEventCallback** pCallback, win32::Windows::Win32::UI::Accessibility::TreeScope scope, int32_t* pProperties, int32_t cProperties, win32::Windows::Win32::UI::Accessibility::UiaCacheRequest* pRequest, win32::Windows::Win32::UI::Accessibility::HUIAEVENT* phEvent) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hnode);
        ORBIT_TRACK_PARAM(eventId);
        ORBIT_TRACK_PARAM(pCallback);
        ORBIT_TRACK_PARAM(scope);
        ORBIT_TRACK_PARAM(pProperties);
        ORBIT_TRACK_PARAM(cProperties);
        ORBIT_TRACK_PARAM(pRequest);
        ORBIT_TRACK_PARAM(phEvent);

        auto win32_impl_result = g_api_table.UiaAddEvent(hnode, eventId, pCallback, scope, pProperties, cProperties, pRequest, phEvent);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaRemoveEvent(win32::Windows::Win32::UI::Accessibility::HUIAEVENT hEvent) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hEvent);

        auto win32_impl_result = g_api_table.UiaRemoveEvent(hEvent);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaEventAddWindow(win32::Windows::Win32::UI::Accessibility::HUIAEVENT hEvent, win32::Windows::Win32::Foundation::HWND hwnd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hEvent);
        ORBIT_TRACK_PARAM(hwnd);

        auto win32_impl_result = g_api_table.UiaEventAddWindow(hEvent, hwnd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaEventRemoveWindow(win32::Windows::Win32::UI::Accessibility::HUIAEVENT hEvent, win32::Windows::Win32::Foundation::HWND hwnd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hEvent);
        ORBIT_TRACK_PARAM(hwnd);

        auto win32_impl_result = g_api_table.UiaEventRemoveWindow(hEvent, hwnd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DockPattern_SetDockPosition(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, win32::Windows::Win32::UI::Accessibility::DockPosition dockPosition) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(dockPosition);

        auto win32_impl_result = g_api_table.DockPattern_SetDockPosition(hobj, dockPosition);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ExpandCollapsePattern_Collapse(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);

        auto win32_impl_result = g_api_table.ExpandCollapsePattern_Collapse(hobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ExpandCollapsePattern_Expand(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);

        auto win32_impl_result = g_api_table.ExpandCollapsePattern_Expand(hobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GridPattern_GetItem(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, int32_t row, int32_t column, win32::Windows::Win32::UI::Accessibility::HUIANODE* pResult) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(row);
        ORBIT_TRACK_PARAM(column);
        ORBIT_TRACK_PARAM(pResult);

        auto win32_impl_result = g_api_table.GridPattern_GetItem(hobj, row, column, pResult);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_InvokePattern_Invoke(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);

        auto win32_impl_result = g_api_table.InvokePattern_Invoke(hobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_MultipleViewPattern_GetViewName(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, int32_t viewId, win32::Windows::Win32::Foundation::BSTR* ppStr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(viewId);
        ORBIT_TRACK_PARAM(ppStr);

        auto win32_impl_result = g_api_table.MultipleViewPattern_GetViewName(hobj, viewId, ppStr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_MultipleViewPattern_SetCurrentView(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, int32_t viewId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(viewId);

        auto win32_impl_result = g_api_table.MultipleViewPattern_SetCurrentView(hobj, viewId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RangeValuePattern_SetValue(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, double val) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(val);

        auto win32_impl_result = g_api_table.RangeValuePattern_SetValue(hobj, val);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ScrollItemPattern_ScrollIntoView(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);

        auto win32_impl_result = g_api_table.ScrollItemPattern_ScrollIntoView(hobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ScrollPattern_Scroll(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, win32::Windows::Win32::UI::Accessibility::ScrollAmount horizontalAmount, win32::Windows::Win32::UI::Accessibility::ScrollAmount verticalAmount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(horizontalAmount);
        ORBIT_TRACK_PARAM(verticalAmount);

        auto win32_impl_result = g_api_table.ScrollPattern_Scroll(hobj, horizontalAmount, verticalAmount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ScrollPattern_SetScrollPercent(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, double horizontalPercent, double verticalPercent) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(horizontalPercent);
        ORBIT_TRACK_PARAM(verticalPercent);

        auto win32_impl_result = g_api_table.ScrollPattern_SetScrollPercent(hobj, horizontalPercent, verticalPercent);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SelectionItemPattern_AddToSelection(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);

        auto win32_impl_result = g_api_table.SelectionItemPattern_AddToSelection(hobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SelectionItemPattern_RemoveFromSelection(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);

        auto win32_impl_result = g_api_table.SelectionItemPattern_RemoveFromSelection(hobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SelectionItemPattern_Select(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);

        auto win32_impl_result = g_api_table.SelectionItemPattern_Select(hobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TogglePattern_Toggle(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);

        auto win32_impl_result = g_api_table.TogglePattern_Toggle(hobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TransformPattern_Move(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, double x, double y) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(x);
        ORBIT_TRACK_PARAM(y);

        auto win32_impl_result = g_api_table.TransformPattern_Move(hobj, x, y);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TransformPattern_Resize(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, double width, double height) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(width);
        ORBIT_TRACK_PARAM(height);

        auto win32_impl_result = g_api_table.TransformPattern_Resize(hobj, width, height);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TransformPattern_Rotate(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, double degrees) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(degrees);

        auto win32_impl_result = g_api_table.TransformPattern_Rotate(hobj, degrees);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ValuePattern_SetValue(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, win32::Windows::Win32::Foundation::PWSTR pVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(pVal);

        auto win32_impl_result = g_api_table.ValuePattern_SetValue(hobj, pVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowPattern_Close(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);

        auto win32_impl_result = g_api_table.WindowPattern_Close(hobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowPattern_SetWindowVisualState(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, win32::Windows::Win32::UI::Accessibility::WindowVisualState state) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(state);

        auto win32_impl_result = g_api_table.WindowPattern_SetWindowVisualState(hobj, state);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_WindowPattern_WaitForInputIdle(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, int32_t milliseconds, win32::Windows::Win32::Foundation::BOOL* pResult) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(milliseconds);
        ORBIT_TRACK_PARAM(pResult);

        auto win32_impl_result = g_api_table.WindowPattern_WaitForInputIdle(hobj, milliseconds, pResult);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextPattern_GetSelection(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, win32::Windows::Win32::System::Com::SAFEARRAY** pRetVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(pRetVal);

        auto win32_impl_result = g_api_table.TextPattern_GetSelection(hobj, pRetVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextPattern_GetVisibleRanges(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, win32::Windows::Win32::System::Com::SAFEARRAY** pRetVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(pRetVal);

        auto win32_impl_result = g_api_table.TextPattern_GetVisibleRanges(hobj, pRetVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextPattern_RangeFromChild(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, win32::Windows::Win32::UI::Accessibility::HUIANODE hnodeChild, win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE* pRetVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(hnodeChild);
        ORBIT_TRACK_PARAM(pRetVal);

        auto win32_impl_result = g_api_table.TextPattern_RangeFromChild(hobj, hnodeChild, pRetVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextPattern_RangeFromPoint(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, win32::Windows::Win32::UI::Accessibility::UiaPoint point, win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE* pRetVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(point);
        ORBIT_TRACK_PARAM(pRetVal);

        auto win32_impl_result = g_api_table.TextPattern_RangeFromPoint(hobj, point, pRetVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextPattern_get_DocumentRange(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE* pRetVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(pRetVal);

        auto win32_impl_result = g_api_table.TextPattern_get_DocumentRange(hobj, pRetVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextPattern_get_SupportedTextSelection(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, win32::Windows::Win32::UI::Accessibility::SupportedTextSelection* pRetVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(pRetVal);

        auto win32_impl_result = g_api_table.TextPattern_get_SupportedTextSelection(hobj, pRetVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextRange_Clone(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj, win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE* pRetVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(pRetVal);

        auto win32_impl_result = g_api_table.TextRange_Clone(hobj, pRetVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextRange_Compare(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj, win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE range, win32::Windows::Win32::Foundation::BOOL* pRetVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(range);
        ORBIT_TRACK_PARAM(pRetVal);

        auto win32_impl_result = g_api_table.TextRange_Compare(hobj, range, pRetVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextRange_CompareEndpoints(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj, win32::Windows::Win32::UI::Accessibility::TextPatternRangeEndpoint endpoint, win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE targetRange, win32::Windows::Win32::UI::Accessibility::TextPatternRangeEndpoint targetEndpoint, int32_t* pRetVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(endpoint);
        ORBIT_TRACK_PARAM(targetRange);
        ORBIT_TRACK_PARAM(targetEndpoint);
        ORBIT_TRACK_PARAM(pRetVal);

        auto win32_impl_result = g_api_table.TextRange_CompareEndpoints(hobj, endpoint, targetRange, targetEndpoint, pRetVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextRange_ExpandToEnclosingUnit(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj, win32::Windows::Win32::UI::Accessibility::TextUnit unit) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(unit);

        auto win32_impl_result = g_api_table.TextRange_ExpandToEnclosingUnit(hobj, unit);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextRange_GetAttributeValue(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj, int32_t attributeId, win32::Windows::Win32::System::Com::VARIANT* pRetVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(attributeId);
        ORBIT_TRACK_PARAM(pRetVal);

        auto win32_impl_result = g_api_table.TextRange_GetAttributeValue(hobj, attributeId, pRetVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextRange_FindAttribute(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj, int32_t attributeId, win32::Windows::Win32::System::Com::VARIANT val, win32::Windows::Win32::Foundation::BOOL backward, win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE* pRetVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(attributeId);
        ORBIT_TRACK_PARAM(val);
        ORBIT_TRACK_PARAM(backward);
        ORBIT_TRACK_PARAM(pRetVal);

        auto win32_impl_result = g_api_table.TextRange_FindAttribute(hobj, attributeId, val, backward, pRetVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextRange_FindText(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj, win32::Windows::Win32::Foundation::BSTR text, win32::Windows::Win32::Foundation::BOOL backward, win32::Windows::Win32::Foundation::BOOL ignoreCase, win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE* pRetVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(text);
        ORBIT_TRACK_PARAM(backward);
        ORBIT_TRACK_PARAM(ignoreCase);
        ORBIT_TRACK_PARAM(pRetVal);

        auto win32_impl_result = g_api_table.TextRange_FindText(hobj, text, backward, ignoreCase, pRetVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextRange_GetBoundingRectangles(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj, win32::Windows::Win32::System::Com::SAFEARRAY** pRetVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(pRetVal);

        auto win32_impl_result = g_api_table.TextRange_GetBoundingRectangles(hobj, pRetVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextRange_GetEnclosingElement(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj, win32::Windows::Win32::UI::Accessibility::HUIANODE* pRetVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(pRetVal);

        auto win32_impl_result = g_api_table.TextRange_GetEnclosingElement(hobj, pRetVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextRange_GetText(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj, int32_t maxLength, win32::Windows::Win32::Foundation::BSTR* pRetVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(maxLength);
        ORBIT_TRACK_PARAM(pRetVal);

        auto win32_impl_result = g_api_table.TextRange_GetText(hobj, maxLength, pRetVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextRange_Move(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj, win32::Windows::Win32::UI::Accessibility::TextUnit unit, int32_t count, int32_t* pRetVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(unit);
        ORBIT_TRACK_PARAM(count);
        ORBIT_TRACK_PARAM(pRetVal);

        auto win32_impl_result = g_api_table.TextRange_Move(hobj, unit, count, pRetVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextRange_MoveEndpointByUnit(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj, win32::Windows::Win32::UI::Accessibility::TextPatternRangeEndpoint endpoint, win32::Windows::Win32::UI::Accessibility::TextUnit unit, int32_t count, int32_t* pRetVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(endpoint);
        ORBIT_TRACK_PARAM(unit);
        ORBIT_TRACK_PARAM(count);
        ORBIT_TRACK_PARAM(pRetVal);

        auto win32_impl_result = g_api_table.TextRange_MoveEndpointByUnit(hobj, endpoint, unit, count, pRetVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextRange_MoveEndpointByRange(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj, win32::Windows::Win32::UI::Accessibility::TextPatternRangeEndpoint endpoint, win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE targetRange, win32::Windows::Win32::UI::Accessibility::TextPatternRangeEndpoint targetEndpoint) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(endpoint);
        ORBIT_TRACK_PARAM(targetRange);
        ORBIT_TRACK_PARAM(targetEndpoint);

        auto win32_impl_result = g_api_table.TextRange_MoveEndpointByRange(hobj, endpoint, targetRange, targetEndpoint);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextRange_Select(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);

        auto win32_impl_result = g_api_table.TextRange_Select(hobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextRange_AddToSelection(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);

        auto win32_impl_result = g_api_table.TextRange_AddToSelection(hobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextRange_RemoveFromSelection(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);

        auto win32_impl_result = g_api_table.TextRange_RemoveFromSelection(hobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextRange_ScrollIntoView(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj, win32::Windows::Win32::Foundation::BOOL alignToTop) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(alignToTop);

        auto win32_impl_result = g_api_table.TextRange_ScrollIntoView(hobj, alignToTop);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_TextRange_GetChildren(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj, win32::Windows::Win32::System::Com::SAFEARRAY** pRetVal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(pRetVal);

        auto win32_impl_result = g_api_table.TextRange_GetChildren(hobj, pRetVal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ItemContainerPattern_FindItemByProperty(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, win32::Windows::Win32::UI::Accessibility::HUIANODE hnodeStartAfter, int32_t propertyId, win32::Windows::Win32::System::Com::VARIANT value, win32::Windows::Win32::UI::Accessibility::HUIANODE* pFound) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(hnodeStartAfter);
        ORBIT_TRACK_PARAM(propertyId);
        ORBIT_TRACK_PARAM(value);
        ORBIT_TRACK_PARAM(pFound);

        auto win32_impl_result = g_api_table.ItemContainerPattern_FindItemByProperty(hobj, hnodeStartAfter, propertyId, value, pFound);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_LegacyIAccessiblePattern_Select(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, int32_t flagsSelect) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(flagsSelect);

        auto win32_impl_result = g_api_table.LegacyIAccessiblePattern_Select(hobj, flagsSelect);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_LegacyIAccessiblePattern_DoDefaultAction(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);

        auto win32_impl_result = g_api_table.LegacyIAccessiblePattern_DoDefaultAction(hobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_LegacyIAccessiblePattern_SetValue(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, win32::Windows::Win32::Foundation::PWSTR szValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(szValue);

        auto win32_impl_result = g_api_table.LegacyIAccessiblePattern_SetValue(hobj, szValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_LegacyIAccessiblePattern_GetIAccessible(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, win32::Windows::Win32::UI::Accessibility::IAccessible** pAccessible) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(pAccessible);

        auto win32_impl_result = g_api_table.LegacyIAccessiblePattern_GetIAccessible(hobj, pAccessible);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SynchronizedInputPattern_StartListening(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj, win32::Windows::Win32::UI::Accessibility::SynchronizedInputType inputType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);
        ORBIT_TRACK_PARAM(inputType);

        auto win32_impl_result = g_api_table.SynchronizedInputPattern_StartListening(hobj, inputType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SynchronizedInputPattern_Cancel(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);

        auto win32_impl_result = g_api_table.SynchronizedInputPattern_Cancel(hobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_VirtualizedItemPattern_Realize(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);

        auto win32_impl_result = g_api_table.VirtualizedItemPattern_Realize(hobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UiaPatternRelease(win32::Windows::Win32::UI::Accessibility::HUIAPATTERNOBJECT hobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);

        auto win32_impl_result = g_api_table.UiaPatternRelease(hobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UiaTextRangeRelease(win32::Windows::Win32::UI::Accessibility::HUIATEXTRANGE hobj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hobj);

        auto win32_impl_result = g_api_table.UiaTextRangeRelease(hobj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::LRESULT __stdcall ORBIT_IMPL_UiaReturnRawElementProvider(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::WPARAM wParam, win32::Windows::Win32::Foundation::LPARAM lParam, win32::Windows::Win32::UI::Accessibility::IRawElementProviderSimple* el) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(wParam);
        ORBIT_TRACK_PARAM(lParam);
        ORBIT_TRACK_PARAM(el);

        auto win32_impl_result = g_api_table.UiaReturnRawElementProvider(hwnd, wParam, lParam, el);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaHostProviderFromHwnd(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::UI::Accessibility::IRawElementProviderSimple** ppProvider) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(ppProvider);

        auto win32_impl_result = g_api_table.UiaHostProviderFromHwnd(hwnd, ppProvider);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaProviderForNonClient(win32::Windows::Win32::Foundation::HWND hwnd, int32_t idObject, int32_t idChild, win32::Windows::Win32::UI::Accessibility::IRawElementProviderSimple** ppProvider) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(idObject);
        ORBIT_TRACK_PARAM(idChild);
        ORBIT_TRACK_PARAM(ppProvider);

        auto win32_impl_result = g_api_table.UiaProviderForNonClient(hwnd, idObject, idChild, ppProvider);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaIAccessibleFromProvider(win32::Windows::Win32::UI::Accessibility::IRawElementProviderSimple* pProvider, uint32_t dwFlags, win32::Windows::Win32::UI::Accessibility::IAccessible** ppAccessible, win32::Windows::Win32::System::Com::VARIANT* pvarChild) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProvider);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(ppAccessible);
        ORBIT_TRACK_PARAM(pvarChild);

        auto win32_impl_result = g_api_table.UiaIAccessibleFromProvider(pProvider, dwFlags, ppAccessible, pvarChild);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaProviderFromIAccessible(win32::Windows::Win32::UI::Accessibility::IAccessible* pAccessible, int32_t idChild, uint32_t dwFlags, win32::Windows::Win32::UI::Accessibility::IRawElementProviderSimple** ppProvider) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAccessible);
        ORBIT_TRACK_PARAM(idChild);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(ppProvider);

        auto win32_impl_result = g_api_table.UiaProviderFromIAccessible(pAccessible, idChild, dwFlags, ppProvider);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaDisconnectAllProviders() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.UiaDisconnectAllProviders();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_UiaDisconnectProvider(win32::Windows::Win32::UI::Accessibility::IRawElementProviderSimple* pProvider) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProvider);

        auto win32_impl_result = g_api_table.UiaDisconnectProvider(pProvider);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UiaHasServerSideProvider(win32::Windows::Win32::Foundation::HWND hwnd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);

        auto win32_impl_result = g_api_table.UiaHasServerSideProvider(hwnd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RegisterPointerInputTarget(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::UI::WindowsAndMessaging::POINTER_INPUT_TYPE pointerType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(pointerType);

        auto win32_impl_result = g_api_table.RegisterPointerInputTarget(hwnd, pointerType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UnregisterPointerInputTarget(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::UI::WindowsAndMessaging::POINTER_INPUT_TYPE pointerType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(pointerType);

        auto win32_impl_result = g_api_table.UnregisterPointerInputTarget(hwnd, pointerType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RegisterPointerInputTargetEx(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::UI::WindowsAndMessaging::POINTER_INPUT_TYPE pointerType, win32::Windows::Win32::Foundation::BOOL fObserve) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(pointerType);
        ORBIT_TRACK_PARAM(fObserve);

        auto win32_impl_result = g_api_table.RegisterPointerInputTargetEx(hwnd, pointerType, fObserve);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UnregisterPointerInputTargetEx(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::UI::WindowsAndMessaging::POINTER_INPUT_TYPE pointerType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(pointerType);

        auto win32_impl_result = g_api_table.UnregisterPointerInputTargetEx(hwnd, pointerType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_NotifyWinEvent(uint32_t event, win32::Windows::Win32::Foundation::HWND hwnd, int32_t idObject, int32_t idChild) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(event);
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(idObject);
        ORBIT_TRACK_PARAM(idChild);

        g_api_table.NotifyWinEvent(event, hwnd, idObject, idChild);
        
    }

    win32::Windows::Win32::UI::Accessibility::HWINEVENTHOOK __stdcall ORBIT_IMPL_SetWinEventHook(uint32_t eventMin, uint32_t eventMax, win32::Windows::Win32::Foundation::HINSTANCE hmodWinEventProc, win32::Windows::Win32::UI::Accessibility::WINEVENTPROC* pfnWinEventProc, uint32_t idProcess, uint32_t idThread, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(eventMin);
        ORBIT_TRACK_PARAM(eventMax);
        ORBIT_TRACK_PARAM(hmodWinEventProc);
        ORBIT_TRACK_PARAM(pfnWinEventProc);
        ORBIT_TRACK_PARAM(idProcess);
        ORBIT_TRACK_PARAM(idThread);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.SetWinEventHook(eventMin, eventMax, hmodWinEventProc, pfnWinEventProc, idProcess, idThread, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsWinEventHookInstalled(uint32_t event) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(event);

        auto win32_impl_result = g_api_table.IsWinEventHookInstalled(event);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UnhookWinEvent(win32::Windows::Win32::UI::Accessibility::HWINEVENTHOOK hWinEventHook) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWinEventHook);

        auto win32_impl_result = g_api_table.UnhookWinEvent(hWinEventHook);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
