// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Media_Multimedia_0_H
#define WIN32_Windows_Win32_Media_Multimedia_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct BOOL;
    struct HWND;
    struct LPARAM;
    struct LRESULT;
    struct PSTR;
    struct PWSTR;
}
WIN32_EXPORT namespace win32::Windows::Win32::Media::Audio
{
    struct WAVEHDR;
}
WIN32_EXPORT namespace win32::Windows::Win32::System::IO
{
    struct OVERLAPPED;
}
WIN32_EXPORT namespace win32::Windows::Win32::UI::Controls
{
    using LPFNSVADDPROPSHEETPAGE = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::UI::Controls::HPROPSHEETPAGE, Windows::Win32::Foundation::LPARAM);
}
WIN32_EXPORT namespace win32::Windows::Win32::Media::Multimedia
{
#pragma region enums
#pragma endregion enums

#pragma region forward_declarations
    struct ADPCMCOEFSET;
    struct ADPCMEWAVEFORMAT;
    struct ADPCMWAVEFORMAT;
    struct APTXWAVEFORMAT;
    struct AUDIOFILE_AF10WAVEFORMAT;
    struct AUDIOFILE_AF36WAVEFORMAT;
    struct AVICOMPRESSOPTIONS;
    struct AVIFILEINFOA;
    struct AVIFILEINFOW;
    struct AVISTREAMINFOA;
    struct AVISTREAMINFOW;
    struct CAPDRIVERCAPS;
    struct CAPINFOCHUNK;
    struct CAPSTATUS;
    struct CAPTUREPARMS;
    struct CHANNEL_CAPS;
    struct COMPVARS;
    struct CONTRESCR10WAVEFORMAT;
    struct CONTRESVQLPCWAVEFORMAT;
    struct CREATIVEADPCMWAVEFORMAT;
    struct CREATIVEFASTSPEECH10WAVEFORMAT;
    struct CREATIVEFASTSPEECH8WAVEFORMAT;
    struct CSIMAADPCMWAVEFORMAT;
    struct DIALOGICOKIADPCMWAVEFORMAT;
    struct DIGIADPCMWAVEFORMAT;
    struct DIGIFIXWAVEFORMAT;
    struct DIGIREALWAVEFORMAT;
    struct DIGISTDWAVEFORMAT;
    struct DOLBYAC2WAVEFORMAT;
    struct DRAWDIBTIME;
    struct DRMWAVEFORMAT;
    struct DRVCONFIGINFO;
    struct DRVCONFIGINFOEX;
    struct DRVM_IOCTL_DATA;
    struct DVIADPCMWAVEFORMAT;
    struct ECHOSC1WAVEFORMAT;
    struct EXBMINFOHEADER;
    struct FMTOWNS_SND_WAVEFORMAT;
    struct G721_ADPCMWAVEFORMAT;
    struct G723_ADPCMWAVEFORMAT;
    struct GSM610WAVEFORMAT;
    struct HDRVR;
    struct HIC;
    struct HMMIO;
    struct HVIDEO;
    struct ICCOMPRESS;
    struct ICCOMPRESSFRAMES;
    struct ICDECOMPRESS;
    struct ICDECOMPRESSEX;
    struct ICDRAW;
    struct ICDRAWBEGIN;
    struct ICDRAWSUGGEST;
    struct ICINFO;
    struct ICOPEN;
    struct ICPALETTE;
    struct ICSETSTATUSPROC;
    struct IMAADPCMWAVEFORMAT;
    struct JOYCAPS2A;
    struct JOYCAPS2W;
    struct JOYCAPSA;
    struct JOYCAPSW;
    struct JOYINFO;
    struct JOYINFOEX;
    struct JPEGINFOHEADER;
    struct KSDATAFORMAT_SUBTYPE_IEEE_FLOAT;
    struct MCI_ANIM_OPEN_PARMSA;
    struct MCI_ANIM_OPEN_PARMSW;
    struct MCI_ANIM_PLAY_PARMS;
    struct MCI_ANIM_RECT_PARMS;
    struct MCI_ANIM_STEP_PARMS;
    struct MCI_ANIM_UPDATE_PARMS;
    struct MCI_ANIM_WINDOW_PARMSA;
    struct MCI_ANIM_WINDOW_PARMSW;
    struct MCI_BREAK_PARMS;
    struct MCI_DGV_CAPTURE_PARMSA;
    struct MCI_DGV_CAPTURE_PARMSW;
    struct MCI_DGV_COPY_PARMS;
    struct MCI_DGV_CUE_PARMS;
    struct MCI_DGV_CUT_PARMS;
    struct MCI_DGV_DELETE_PARMS;
    struct MCI_DGV_INFO_PARMSA;
    struct MCI_DGV_INFO_PARMSW;
    struct MCI_DGV_LIST_PARMSA;
    struct MCI_DGV_LIST_PARMSW;
    struct MCI_DGV_MONITOR_PARMS;
    struct MCI_DGV_OPEN_PARMSA;
    struct MCI_DGV_OPEN_PARMSW;
    struct MCI_DGV_PASTE_PARMS;
    struct MCI_DGV_QUALITY_PARMSA;
    struct MCI_DGV_QUALITY_PARMSW;
    struct MCI_DGV_RECORD_PARMS;
    struct MCI_DGV_RECT_PARMS;
    struct MCI_DGV_RESERVE_PARMSA;
    struct MCI_DGV_RESERVE_PARMSW;
    struct MCI_DGV_RESTORE_PARMSA;
    struct MCI_DGV_RESTORE_PARMSW;
    struct MCI_DGV_SAVE_PARMSA;
    struct MCI_DGV_SAVE_PARMSW;
    struct MCI_DGV_SETAUDIO_PARMSA;
    struct MCI_DGV_SETAUDIO_PARMSW;
    struct MCI_DGV_SETVIDEO_PARMSA;
    struct MCI_DGV_SETVIDEO_PARMSW;
    struct MCI_DGV_SET_PARMS;
    struct MCI_DGV_SIGNAL_PARMS;
    struct MCI_DGV_STATUS_PARMSA;
    struct MCI_DGV_STATUS_PARMSW;
    struct MCI_DGV_STEP_PARMS;
    struct MCI_DGV_UPDATE_PARMS;
    struct MCI_DGV_WINDOW_PARMSA;
    struct MCI_DGV_WINDOW_PARMSW;
    struct MCI_GENERIC_PARMS;
    struct MCI_GETDEVCAPS_PARMS;
    struct MCI_INFO_PARMSA;
    struct MCI_INFO_PARMSW;
    struct MCI_LOAD_PARMSA;
    struct MCI_LOAD_PARMSW;
    struct MCI_OPEN_DRIVER_PARMS;
    struct MCI_OPEN_PARMSA;
    struct MCI_OPEN_PARMSW;
    struct MCI_OVLY_LOAD_PARMSA;
    struct MCI_OVLY_LOAD_PARMSW;
    struct MCI_OVLY_OPEN_PARMSA;
    struct MCI_OVLY_OPEN_PARMSW;
    struct MCI_OVLY_RECT_PARMS;
    struct MCI_OVLY_SAVE_PARMSA;
    struct MCI_OVLY_SAVE_PARMSW;
    struct MCI_OVLY_WINDOW_PARMSA;
    struct MCI_OVLY_WINDOW_PARMSW;
    struct MCI_PLAY_PARMS;
    struct MCI_RECORD_PARMS;
    struct MCI_SAVE_PARMSA;
    struct MCI_SAVE_PARMSW;
    struct MCI_SEEK_PARMS;
    struct MCI_SEQ_SET_PARMS;
    struct MCI_SET_PARMS;
    struct MCI_STATUS_PARMS;
    struct MCI_SYSINFO_PARMSA;
    struct MCI_SYSINFO_PARMSW;
    struct MCI_VD_ESCAPE_PARMSA;
    struct MCI_VD_ESCAPE_PARMSW;
    struct MCI_VD_PLAY_PARMS;
    struct MCI_VD_STEP_PARMS;
    struct MCI_WAVE_DELETE_PARMS;
    struct MCI_WAVE_OPEN_PARMSA;
    struct MCI_WAVE_OPEN_PARMSW;
    struct MCI_WAVE_SET_PARMS;
    struct MEDIASPACEADPCMWAVEFORMAT;
    struct MIDIOPENSTRMID;
    struct MIXEROPENDESC;
    struct MMCKINFO;
    struct MMIOINFO;
    struct MSAUDIO1WAVEFORMAT;
    struct NMS_VBXADPCMWAVEFORMAT;
    struct OLIADPCMWAVEFORMAT;
    struct OLICELPWAVEFORMAT;
    struct OLIGSMWAVEFORMAT;
    struct OLIOPRWAVEFORMAT;
    struct OLISBCWAVEFORMAT;
    struct SIERRAADPCMWAVEFORMAT;
    struct SONARCWAVEFORMAT;
    struct TIMEREVENT;
    struct TRUESPEECHWAVEFORMAT;
    struct VIDEOHDR;
    struct WAVEOPENDESC;
    struct WMAUDIO2WAVEFORMAT;
    struct WMAUDIO3WAVEFORMAT;
    struct YAMAHA_ADPCMWAVEFORMAT;
    struct s_RIFFWAVE_inst;
    struct IAVIEditStream;
    struct IAVIFile;
    struct IAVIPersistFile;
    struct IAVIStream;
    struct IAVIStreaming;
    struct IGetFrame;
#pragma endregion forward_declarations

#pragma region delegates
    using YIELDPROC = uint32_t __stdcall(uint32_t, uint32_t);
    using DRIVERPROC = Windows::Win32::Foundation::LRESULT __stdcall(size_t, Windows::Win32::Media::Multimedia::HDRVR, uint32_t, Windows::Win32::Foundation::LPARAM, Windows::Win32::Foundation::LPARAM);
    using DRIVERMSGPROC = uint32_t __stdcall(uint32_t, uint32_t, size_t, size_t, size_t);
    using LPMMIOPROC = Windows::Win32::Foundation::LRESULT __stdcall(Windows::Win32::Foundation::PSTR, uint32_t, Windows::Win32::Foundation::LPARAM, Windows::Win32::Foundation::LPARAM);
    using AVISAVECALLBACK = Windows::Win32::Foundation::BOOL __stdcall(int32_t);
    using CAPYIELDCALLBACK = Windows::Win32::Foundation::LRESULT __stdcall(Windows::Win32::Foundation::HWND);
    using CAPSTATUSCALLBACKW = Windows::Win32::Foundation::LRESULT __stdcall(Windows::Win32::Foundation::HWND, int32_t, Windows::Win32::Foundation::PWSTR);
    using CAPERRORCALLBACKW = Windows::Win32::Foundation::LRESULT __stdcall(Windows::Win32::Foundation::HWND, int32_t, Windows::Win32::Foundation::PWSTR);
    using CAPSTATUSCALLBACKA = Windows::Win32::Foundation::LRESULT __stdcall(Windows::Win32::Foundation::HWND, int32_t, Windows::Win32::Foundation::PSTR);
    using CAPERRORCALLBACKA = Windows::Win32::Foundation::LRESULT __stdcall(Windows::Win32::Foundation::HWND, int32_t, Windows::Win32::Foundation::PSTR);
    using CAPVIDEOCALLBACK = Windows::Win32::Foundation::LRESULT __stdcall(Windows::Win32::Foundation::HWND, Windows::Win32::Media::Multimedia::VIDEOHDR*);
    using CAPWAVECALLBACK = Windows::Win32::Foundation::LRESULT __stdcall(Windows::Win32::Foundation::HWND, Windows::Win32::Media::Audio::WAVEHDR*);
    using CAPCONTROLCALLBACK = Windows::Win32::Foundation::LRESULT __stdcall(Windows::Win32::Foundation::HWND, int32_t);
    using LPTASKCALLBACK = void __stdcall(size_t);
    using VFWWDMExtensionProc = uint32_t __stdcall(void*, Windows::Win32::UI::Controls::LPFNSVADDPROPSHEETPAGE*, Windows::Win32::Foundation::LPARAM);
    using LPFNEXTDEVIO = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::LPARAM, uint32_t, uint32_t, void*, uint32_t, void*, uint32_t, uint32_t*, Windows::Win32::System::IO::OVERLAPPED*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
