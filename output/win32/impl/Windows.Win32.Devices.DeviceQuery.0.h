// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Devices_DeviceQuery_0_H
#define WIN32_Windows_Win32_Devices_DeviceQuery_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Devices::DeviceQuery
{
#pragma region enums
    enum class DEVPROP_OPERATOR : uint32_t
    {
        DEVPROP_OPERATOR_MODIFIER_NOT = 0x10000,
        DEVPROP_OPERATOR_MODIFIER_IGNORE_CASE = 0x20000,
        DEVPROP_OPERATOR_NONE = 0x0,
        DEVPROP_OPERATOR_EXISTS = 0x1,
        DEVPROP_OPERATOR_NOT_EXISTS = 0x10001,
        DEVPROP_OPERATOR_EQUALS = 0x2,
        DEVPROP_OPERATOR_NOT_EQUALS = 0x10002,
        DEVPROP_OPERATOR_GREATER_THAN = 0x3,
        DEVPROP_OPERATOR_LESS_THAN = 0x4,
        DEVPROP_OPERATOR_GREATER_THAN_EQUALS = 0x5,
        DEVPROP_OPERATOR_LESS_THAN_EQUALS = 0x6,
        DEVPROP_OPERATOR_EQUALS_IGNORE_CASE = 0x20002,
        DEVPROP_OPERATOR_NOT_EQUALS_IGNORE_CASE = 0x30002,
        DEVPROP_OPERATOR_BITWISE_AND = 0x7,
        DEVPROP_OPERATOR_BITWISE_OR = 0x8,
        DEVPROP_OPERATOR_BEGINS_WITH = 0x9,
        DEVPROP_OPERATOR_ENDS_WITH = 0xa,
        DEVPROP_OPERATOR_CONTAINS = 0xb,
        DEVPROP_OPERATOR_BEGINS_WITH_IGNORE_CASE = 0x20009,
        DEVPROP_OPERATOR_ENDS_WITH_IGNORE_CASE = 0x2000a,
        DEVPROP_OPERATOR_CONTAINS_IGNORE_CASE = 0x2000b,
        DEVPROP_OPERATOR_LIST_CONTAINS = 0x1000,
        DEVPROP_OPERATOR_LIST_ELEMENT_BEGINS_WITH = 0x2000,
        DEVPROP_OPERATOR_LIST_ELEMENT_ENDS_WITH = 0x3000,
        DEVPROP_OPERATOR_LIST_ELEMENT_CONTAINS = 0x4000,
        DEVPROP_OPERATOR_LIST_CONTAINS_IGNORE_CASE = 0x21000,
        DEVPROP_OPERATOR_LIST_ELEMENT_BEGINS_WITH_IGNORE_CASE = 0x22000,
        DEVPROP_OPERATOR_LIST_ELEMENT_ENDS_WITH_IGNORE_CASE = 0x23000,
        DEVPROP_OPERATOR_LIST_ELEMENT_CONTAINS_IGNORE_CASE = 0x24000,
        DEVPROP_OPERATOR_AND_OPEN = 0x100000,
        DEVPROP_OPERATOR_AND_CLOSE = 0x200000,
        DEVPROP_OPERATOR_OR_OPEN = 0x300000,
        DEVPROP_OPERATOR_OR_CLOSE = 0x400000,
        DEVPROP_OPERATOR_NOT_OPEN = 0x500000,
        DEVPROP_OPERATOR_NOT_CLOSE = 0x600000,
        DEVPROP_OPERATOR_ARRAY_CONTAINS = 0x10000000,
        DEVPROP_OPERATOR_MASK_EVAL = 0xfff,
        DEVPROP_OPERATOR_MASK_LIST = 0xf000,
        DEVPROP_OPERATOR_MASK_MODIFIER = 0xf0000,
        DEVPROP_OPERATOR_MASK_NOT_LOGICAL = 0xf00fffff,
        DEVPROP_OPERATOR_MASK_LOGICAL = 0xff00000,
        DEVPROP_OPERATOR_MASK_ARRAY = 0xf0000000,
    };
    enum class DEV_OBJECT_TYPE : int32_t
    {
        DevObjectTypeUnknown = 0,
        DevObjectTypeDeviceInterface = 1,
        DevObjectTypeDeviceContainer = 2,
        DevObjectTypeDevice = 3,
        DevObjectTypeDeviceInterfaceClass = 4,
        DevObjectTypeAEP = 5,
        DevObjectTypeAEPContainer = 6,
        DevObjectTypeDeviceInstallerClass = 7,
        DevObjectTypeDeviceInterfaceDisplay = 8,
        DevObjectTypeDeviceContainerDisplay = 9,
        DevObjectTypeAEPService = 10,
        DevObjectTypeDevicePanel = 11,
    };
    enum class DEV_QUERY_FLAGS : int32_t
    {
        DevQueryFlagNone = 0,
        DevQueryFlagUpdateResults = 1,
        DevQueryFlagAllProperties = 2,
        DevQueryFlagLocalize = 4,
        DevQueryFlagAsyncClose = 8,
    };
    enum class DEV_QUERY_RESULT_ACTION : int32_t
    {
        DevQueryResultStateChange = 0,
        DevQueryResultAdd = 1,
        DevQueryResultUpdate = 2,
        DevQueryResultRemove = 3,
    };
    enum class DEV_QUERY_STATE : int32_t
    {
        DevQueryStateInitialized = 0,
        DevQueryStateEnumCompleted = 1,
        DevQueryStateAborted = 2,
        DevQueryStateClosed = 3,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct DEVPROP_FILTER_EXPRESSION;
    struct DEV_OBJECT;
    struct DEV_QUERY_PARAMETER;
    struct DEV_QUERY_RESULT_ACTION_DATA;
    struct HDEVQUERY__;
#pragma endregion forward_declarations

#pragma region delegates
    using PDEV_QUERY_RESULT_CALLBACK = void __stdcall(Windows::Win32::Devices::DeviceQuery::HDEVQUERY__*, void*, Windows::Win32::Devices::DeviceQuery::DEV_QUERY_RESULT_ACTION_DATA*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
