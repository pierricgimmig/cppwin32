// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_Console_0_H
#define WIN32_Windows_Win32_System_Console_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct BOOL;
}
WIN32_EXPORT namespace win32::Windows::Win32::System::Console
{
#pragma region enums
    enum class CONSOLE_MODE : uint32_t
    {
        ENABLE_PROCESSED_INPUT = 0x1,
        ENABLE_LINE_INPUT = 0x2,
        ENABLE_ECHO_INPUT = 0x4,
        ENABLE_WINDOW_INPUT = 0x8,
        ENABLE_MOUSE_INPUT = 0x10,
        ENABLE_INSERT_MODE = 0x20,
        ENABLE_QUICK_EDIT_MODE = 0x40,
        ENABLE_EXTENDED_FLAGS = 0x80,
        ENABLE_AUTO_POSITION = 0x100,
        ENABLE_VIRTUAL_TERMINAL_INPUT = 0x200,
        ENABLE_PROCESSED_OUTPUT = 0x1,
        ENABLE_WRAP_AT_EOL_OUTPUT = 0x2,
        ENABLE_VIRTUAL_TERMINAL_PROCESSING = 0x4,
        DISABLE_NEWLINE_AUTO_RETURN = 0x8,
        ENABLE_LVB_GRID_WORLDWIDE = 0x10,
    };
    enum class STD_HANDLE : uint32_t
    {
        STD_INPUT_HANDLE = 0xfffffff6,
        STD_OUTPUT_HANDLE = 0xfffffff5,
        STD_ERROR_HANDLE = 0xfffffff4,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct CHAR_INFO;
    struct CONSOLE_CURSOR_INFO;
    struct CONSOLE_FONT_INFO;
    struct CONSOLE_FONT_INFOEX;
    struct CONSOLE_HISTORY_INFO;
    struct CONSOLE_READCONSOLE_CONTROL;
    struct CONSOLE_SCREEN_BUFFER_INFO;
    struct CONSOLE_SCREEN_BUFFER_INFOEX;
    struct CONSOLE_SELECTION_INFO;
    struct COORD;
    struct FOCUS_EVENT_RECORD;
    struct HPCON;
    struct INPUT_RECORD;
    struct KEY_EVENT_RECORD;
    struct MENU_EVENT_RECORD;
    struct MOUSE_EVENT_RECORD;
    struct SMALL_RECT;
    struct WINDOW_BUFFER_SIZE_RECORD;
#pragma endregion forward_declarations

#pragma region delegates
    using PHANDLER_ROUTINE = Windows::Win32::Foundation::BOOL __stdcall(uint32_t);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
