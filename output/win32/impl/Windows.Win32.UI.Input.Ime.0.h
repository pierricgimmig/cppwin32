// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_UI_Input_Ime_0_H
#define WIN32_Windows_Win32_UI_Input_Ime_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct BOOL;
    struct HRESULT;
    struct LPARAM;
    struct PSTR;
    struct PWSTR;
}
WIN32_EXPORT namespace win32::Windows::Win32::Globalization
{
    struct HIMC;
}
WIN32_EXPORT namespace win32::Windows::Win32::UI::Input::Ime
{
#pragma region enums
    enum class GET_CONVERSION_LIST_FLAG : uint32_t
    {
        GCL_CONVERSION = 0x1,
        GCL_REVERSECONVERSION = 0x2,
        GCL_REVERSE_LENGTH = 0x3,
    };
    enum class GET_GUIDE_LINE_TYPE : uint32_t
    {
        GGL_LEVEL = 0x1,
        GGL_INDEX = 0x2,
        GGL_STRING = 0x3,
        GGL_PRIVATE = 0x4,
    };
    enum class IMEFMT : int32_t
    {
        IFED_UNKNOWN = 0,
        IFED_MSIME2_BIN_SYSTEM = 1,
        IFED_MSIME2_BIN_USER = 2,
        IFED_MSIME2_TEXT_USER = 3,
        IFED_MSIME95_BIN_SYSTEM = 4,
        IFED_MSIME95_BIN_USER = 5,
        IFED_MSIME95_TEXT_USER = 6,
        IFED_MSIME97_BIN_SYSTEM = 7,
        IFED_MSIME97_BIN_USER = 8,
        IFED_MSIME97_TEXT_USER = 9,
        IFED_MSIME98_BIN_SYSTEM = 10,
        IFED_MSIME98_BIN_USER = 11,
        IFED_MSIME98_TEXT_USER = 12,
        IFED_ACTIVE_DICT = 13,
        IFED_ATOK9 = 14,
        IFED_ATOK10 = 15,
        IFED_NEC_AI_ = 16,
        IFED_WX_II = 17,
        IFED_WX_III = 18,
        IFED_VJE_20 = 19,
        IFED_MSIME98_SYSTEM_CE = 20,
        IFED_MSIME_BIN_SYSTEM = 21,
        IFED_MSIME_BIN_USER = 22,
        IFED_MSIME_TEXT_USER = 23,
        IFED_PIME2_BIN_USER = 24,
        IFED_PIME2_BIN_SYSTEM = 25,
        IFED_PIME2_BIN_STANDARD_SYSTEM = 26,
    };
    enum class IMEREG : int32_t
    {
        IFED_REG_HEAD = 0,
        IFED_REG_TAIL = 1,
        IFED_REG_DEL = 2,
    };
    enum class IMEREL : int32_t
    {
        IFED_REL_NONE = 0,
        IFED_REL_NO = 1,
        IFED_REL_GA = 2,
        IFED_REL_WO = 3,
        IFED_REL_NI = 4,
        IFED_REL_DE = 5,
        IFED_REL_YORI = 6,
        IFED_REL_KARA = 7,
        IFED_REL_MADE = 8,
        IFED_REL_HE = 9,
        IFED_REL_TO = 10,
        IFED_REL_IDEOM = 11,
        IFED_REL_FUKU_YOUGEN = 12,
        IFED_REL_KEIYOU_YOUGEN = 13,
        IFED_REL_KEIDOU1_YOUGEN = 14,
        IFED_REL_KEIDOU2_YOUGEN = 15,
        IFED_REL_TAIGEN = 16,
        IFED_REL_YOUGEN = 17,
        IFED_REL_RENTAI_MEI = 18,
        IFED_REL_RENSOU = 19,
        IFED_REL_KEIYOU_TO_YOUGEN = 20,
        IFED_REL_KEIYOU_TARU_YOUGEN = 21,
        IFED_REL_UNKNOWN1 = 22,
        IFED_REL_UNKNOWN2 = 23,
        IFED_REL_ALL = 24,
    };
    enum class IMEUCT : int32_t
    {
        IFED_UCT_NONE = 0,
        IFED_UCT_STRING_SJIS = 1,
        IFED_UCT_STRING_UNICODE = 2,
        IFED_UCT_USER_DEFINED = 3,
        IFED_UCT_MAX = 4,
    };
    enum class IME_PAD_REQUEST_FLAGS : uint32_t
    {
        IMEPADREQ_INSERTSTRING = 0x1001,
        IMEPADREQ_SENDCONTROL = 0x1004,
        IMEPADREQ_SETAPPLETSIZE = 0x1008,
        IMEPADREQ_GETCOMPOSITIONSTRING = 0x1006,
        IMEPADREQ_GETCOMPOSITIONSTRINGINFO = 0x100c,
        IMEPADREQ_DELETESTRING = 0x1010,
        IMEPADREQ_CHANGESTRING = 0x1011,
        IMEPADREQ_GETAPPLHWND = 0x1014,
        IMEPADREQ_FORCEIMEPADWINDOWSHOW = 0x1015,
        IMEPADREQ_POSTMODALNOTIFY = 0x1016,
        IMEPADREQ_GETDEFAULTUILANGID = 0x1017,
        IMEPADREQ_GETAPPLETUISTYLE = 0x1019,
        IMEPADREQ_SETAPPLETUISTYLE = 0x101a,
        IMEPADREQ_ISAPPLETACTIVE = 0x101b,
        IMEPADREQ_ISIMEPADWINDOWVISIBLE = 0x101c,
        IMEPADREQ_SETAPPLETMINMAXSIZE = 0x101d,
        IMEPADREQ_GETCONVERSIONSTATUS = 0x101e,
        IMEPADREQ_GETVERSION = 0x101f,
        IMEPADREQ_GETCURRENTIMEINFO = 0x1020,
    };
    enum class NOTIFY_IME_ACTION : uint32_t
    {
        NI_CHANGECANDIDATELIST = 0x13,
        NI_CLOSECANDIDATE = 0x11,
        NI_COMPOSITIONSTR = 0x15,
        NI_IMEMENUSELECTED = 0x18,
        NI_OPENCANDIDATE = 0x10,
        NI_SELECTCANDIDATESTR = 0x12,
        NI_SETCANDIDATE_PAGESIZE = 0x17,
        NI_SETCANDIDATE_PAGESTART = 0x16,
    };
    enum class NOTIFY_IME_INDEX : uint32_t
    {
        CPS_CANCEL = 0x4,
        CPS_COMPLETE = 0x1,
        CPS_CONVERT = 0x2,
        CPS_REVERT = 0x3,
    };
    enum class SET_COMPOSITION_STRING_TYPE : uint32_t
    {
        SCS_SETSTR = 0x9,
        SCS_CHANGEATTR = 0x12,
        SCS_CHANGECLAUSE = 0x24,
        SCS_SETRECONVERTSTRING = 0x10000,
        SCS_QUERYRECONVERTSTRING = 0x20000,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct APPLETIDLIST;
    struct APPLYCANDEXPARAM;
    struct CANDIDATEFORM;
    struct CANDIDATEINFO;
    struct CANDIDATELIST;
    struct CActiveIMM;
    struct COMPOSITIONFORM;
    struct COMPOSITIONSTRING;
    struct GUIDELINE;
    struct IMEAPPLETCFG;
    struct IMEAPPLETUI;
    struct IMECHARINFO;
    struct IMECHARPOSITION;
    struct IMECOMPOSITIONSTRINGINFO;
    struct IMEDLG;
    struct IMEDP;
    struct IMEINFO;
    struct IMEITEM;
    struct IMEITEMCANDIDATE;
    struct IMEKMS;
    struct IMEKMSFUNCDESC;
    struct IMEKMSINIT;
    struct IMEKMSINVK;
    struct IMEKMSKEY;
    struct IMEKMSKMP;
    struct IMEKMSNTFY;
    struct IMEMENUITEMINFOA;
    struct IMEMENUITEMINFOW;
    struct IMESHF;
    struct IMESTRINGCANDIDATE;
    struct IMESTRINGCANDIDATEINFO;
    struct IMEWRD;
    struct INPUTCONTEXT;
    struct MORRSLT;
    struct POSTBL;
    struct RECONVERTSTRING;
    struct REGISTERWORDA;
    struct REGISTERWORDW;
    struct SOFTKBDDATA;
    struct STYLEBUFA;
    struct STYLEBUFW;
    struct TRANSMSG;
    struct TRANSMSGLIST;
    struct WDD;
    struct tabIMEFAREASTINFO;
    struct tabIMESTRINGINFO;
    struct IActiveIME;
    struct IActiveIME2;
    struct IActiveIMMApp;
    struct IActiveIMMIME;
    struct IActiveIMMMessagePumpOwner;
    struct IActiveIMMRegistrar;
    struct IEnumInputContext;
    struct IEnumRegisterWordA;
    struct IEnumRegisterWordW;
    struct IFEClassFactory;
    struct IFECommon;
    struct IFEDictionary;
    struct IFELanguage;
    struct IImePad;
    struct IImePadApplet;
    struct IImePlugInDictDictionaryList;
    struct IImeSpecifyApplets;
#pragma endregion forward_declarations

#pragma region delegates
    using IMCENUMPROC = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Globalization::HIMC, Windows::Win32::Foundation::LPARAM);
    using REGISTERWORDENUMPROCA = int32_t __stdcall(Windows::Win32::Foundation::PSTR, uint32_t, Windows::Win32::Foundation::PSTR, void*);
    using REGISTERWORDENUMPROCW = int32_t __stdcall(Windows::Win32::Foundation::PWSTR, uint32_t, Windows::Win32::Foundation::PWSTR, void*);
    using PFNLOG = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::UI::Input::Ime::IMEDP*, Windows::Win32::Foundation::HRESULT);
    using fpCreateIFECommonInstanceType = Windows::Win32::Foundation::HRESULT __stdcall(void**);
    using fpCreateIFELanguageInstanceType = Windows::Win32::Foundation::HRESULT __stdcall(::win32::guid*, void**);
    using fpCreateIFEDictionaryInstanceType = Windows::Win32::Foundation::HRESULT __stdcall(void**);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
