// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_DeploymentServices_0_H
#define WIN32_Windows_Win32_System_DeploymentServices_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct HANDLE;
    struct LPARAM;
    struct PWSTR;
    union ULARGE_INTEGER;
    struct WPARAM;
}
WIN32_EXPORT namespace win32::Windows::Win32::System::DeploymentServices
{
#pragma region enums
    enum class CPU_ARCHITECTURE : uint32_t
    {
        CPU_ARCHITECTURE_AMD64 = 0x9,
        CPU_ARCHITECTURE_IA64 = 0x6,
        CPU_ARCHITECTURE_INTEL = 0x0,
    };
    enum class PFN_WDS_CLI_CALLBACK_MESSAGE_ID : uint32_t
    {
        WDS_CLI_MSG_START = 0x0,
        WDS_CLI_MSG_COMPLETE = 0x1,
        WDS_CLI_MSG_PROGRESS = 0x2,
        WDS_CLI_MSG_TEXT = 0x3,
    };
    enum class TRANSPORTCLIENT_CALLBACK_ID : int32_t
    {
        WDS_TRANSPORTCLIENT_SESSION_START = 0,
        WDS_TRANSPORTCLIENT_RECEIVE_CONTENTS = 1,
        WDS_TRANSPORTCLIENT_SESSION_COMPLETE = 2,
        WDS_TRANSPORTCLIENT_RECEIVE_METADATA = 3,
        WDS_TRANSPORTCLIENT_SESSION_STARTEX = 4,
        WDS_TRANSPORTCLIENT_SESSION_NEGOTIATE = 5,
        WDS_TRANSPORTCLIENT_MAX_CALLBACKS = 6,
    };
    enum class TRANSPORTPROVIDER_CALLBACK_ID : int32_t
    {
        WDS_TRANSPORTPROVIDER_CREATE_INSTANCE = 0,
        WDS_TRANSPORTPROVIDER_COMPARE_CONTENT = 1,
        WDS_TRANSPORTPROVIDER_OPEN_CONTENT = 2,
        WDS_TRANSPORTPROVIDER_USER_ACCESS_CHECK = 3,
        WDS_TRANSPORTPROVIDER_GET_CONTENT_SIZE = 4,
        WDS_TRANSPORTPROVIDER_READ_CONTENT = 5,
        WDS_TRANSPORTPROVIDER_CLOSE_CONTENT = 6,
        WDS_TRANSPORTPROVIDER_CLOSE_INSTANCE = 7,
        WDS_TRANSPORTPROVIDER_SHUTDOWN = 8,
        WDS_TRANSPORTPROVIDER_DUMP_STATE = 9,
        WDS_TRANSPORTPROVIDER_REFRESH_SETTINGS = 10,
        WDS_TRANSPORTPROVIDER_GET_CONTENT_METADATA = 11,
        WDS_TRANSPORTPROVIDER_MAX_CALLBACKS = 12,
    };
    enum class WDSTRANSPORT_DIAGNOSTICS_COMPONENT_FLAGS : int32_t
    {
        WdsTptDiagnosticsComponentPxe = 1,
        WdsTptDiagnosticsComponentTftp = 2,
        WdsTptDiagnosticsComponentImageServer = 4,
        WdsTptDiagnosticsComponentMulticast = 8,
    };
    enum class WDSTRANSPORT_DISCONNECT_TYPE : int32_t
    {
        WdsTptDisconnectUnknown = 0,
        WdsTptDisconnectFallback = 1,
        WdsTptDisconnectAbort = 2,
    };
    enum class WDSTRANSPORT_FEATURE_FLAGS : int32_t
    {
        WdsTptFeatureAdminPack = 1,
        WdsTptFeatureTransportServer = 2,
        WdsTptFeatureDeploymentServer = 4,
    };
    enum class WDSTRANSPORT_IP_ADDRESS_SOURCE_TYPE : int32_t
    {
        WdsTptIpAddressSourceUnknown = 0,
        WdsTptIpAddressSourceDhcp = 1,
        WdsTptIpAddressSourceRange = 2,
    };
    enum class WDSTRANSPORT_IP_ADDRESS_TYPE : int32_t
    {
        WdsTptIpAddressUnknown = 0,
        WdsTptIpAddressIpv4 = 1,
        WdsTptIpAddressIpv6 = 2,
    };
    enum class WDSTRANSPORT_NAMESPACE_TYPE : int32_t
    {
        WdsTptNamespaceTypeUnknown = 0,
        WdsTptNamespaceTypeAutoCast = 1,
        WdsTptNamespaceTypeScheduledCastManualStart = 2,
        WdsTptNamespaceTypeScheduledCastAutoStart = 3,
    };
    enum class WDSTRANSPORT_NETWORK_PROFILE_TYPE : int32_t
    {
        WdsTptNetworkProfileUnknown = 0,
        WdsTptNetworkProfileCustom = 1,
        WdsTptNetworkProfile10Mbps = 2,
        WdsTptNetworkProfile100Mbps = 3,
        WdsTptNetworkProfile1Gbps = 4,
    };
    enum class WDSTRANSPORT_PROTOCOL_FLAGS : int32_t
    {
        WdsTptProtocolUnicast = 1,
        WdsTptProtocolMulticast = 2,
    };
    enum class WDSTRANSPORT_SERVICE_NOTIFICATION : int32_t
    {
        WdsTptServiceNotifyUnknown = 0,
        WdsTptServiceNotifyReadSettings = 1,
    };
    enum class WDSTRANSPORT_SLOW_CLIENT_HANDLING_TYPE : int32_t
    {
        WdsTptSlowClientHandlingUnknown = 0,
        WdsTptSlowClientHandlingNone = 1,
        WdsTptSlowClientHandlingAutoDisconnect = 2,
        WdsTptSlowClientHandlingMultistream = 3,
    };
    enum class WDSTRANSPORT_TFTP_CAPABILITY : int32_t
    {
        WdsTptTftpCapMaximumBlockSize = 1,
        WdsTptTftpCapVariableWindow = 2,
    };
    enum class WDSTRANSPORT_UDP_PORT_POLICY : int32_t
    {
        WdsTptUdpPortPolicyDynamic = 0,
        WdsTptUdpPortPolicyFixed = 1,
    };
    enum class WDS_CLI_FIRMWARE_TYPE : int32_t
    {
        WDS_CLI_FIRMWARE_UNKNOWN = 0,
        WDS_CLI_FIRMWARE_BIOS = 1,
        WDS_CLI_FIRMWARE_EFI = 2,
    };
    enum class WDS_CLI_IMAGE_PARAM_TYPE : int32_t
    {
        WDS_CLI_IMAGE_PARAM_UNKNOWN = 0,
        WDS_CLI_IMAGE_PARAM_SPARSE_FILE = 1,
        WDS_CLI_IMAGE_PARAM_SUPPORTED_FIRMWARES = 2,
    };
    enum class WDS_CLI_IMAGE_TYPE : int32_t
    {
        WDS_CLI_IMAGE_TYPE_UNKNOWN = 0,
        WDS_CLI_IMAGE_TYPE_WIM = 1,
        WDS_CLI_IMAGE_TYPE_VHD = 2,
        WDS_CLI_IMAGE_TYPE_VHDX = 3,
    };
    enum class WDS_TRANSPORTCLIENT_REQUEST_AUTH_LEVEL : uint32_t
    {
        WDS_TRANSPORTCLIENT_AUTH = 0x1,
        WDS_TRANSPORTCLIENT_NO_AUTH = 0x2,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct PXE_ADDRESS;
    struct PXE_DHCPV6_MESSAGE;
    struct PXE_DHCPV6_MESSAGE_HEADER;
    struct PXE_DHCPV6_NESTED_RELAY_MESSAGE;
    struct PXE_DHCPV6_OPTION;
    struct PXE_DHCPV6_RELAY_MESSAGE;
    struct PXE_DHCP_MESSAGE;
    struct PXE_DHCP_OPTION;
    struct PXE_PROVIDER;
    struct TRANSPORTCLIENT_SESSION_INFO;
    struct WDS_CLI_CRED;
    struct WDS_TRANSPORTCLIENT_CALLBACKS;
    struct WDS_TRANSPORTCLIENT_REQUEST;
    struct WDS_TRANSPORTPROVIDER_INIT_PARAMS;
    struct WDS_TRANSPORTPROVIDER_SETTINGS;
    struct WdsTransportCacheable;
    struct WdsTransportClient;
    struct WdsTransportCollection;
    struct WdsTransportConfigurationManager;
    struct WdsTransportContent;
    struct WdsTransportContentProvider;
    struct WdsTransportDiagnosticsPolicy;
    struct WdsTransportManager;
    struct WdsTransportMulticastSessionPolicy;
    struct WdsTransportNamespace;
    struct WdsTransportNamespaceAutoCast;
    struct WdsTransportNamespaceManager;
    struct WdsTransportNamespaceScheduledCast;
    struct WdsTransportNamespaceScheduledCastAutoStart;
    struct WdsTransportNamespaceScheduledCastManualStart;
    struct WdsTransportServer;
    struct WdsTransportServicePolicy;
    struct WdsTransportSession;
    struct WdsTransportSetupManager;
    struct WdsTransportTftpClient;
    struct WdsTransportTftpManager;
    struct IWdsTransportCacheable;
    struct IWdsTransportClient;
    struct IWdsTransportCollection;
    struct IWdsTransportConfigurationManager;
    struct IWdsTransportConfigurationManager2;
    struct IWdsTransportContent;
    struct IWdsTransportContentProvider;
    struct IWdsTransportDiagnosticsPolicy;
    struct IWdsTransportManager;
    struct IWdsTransportMulticastSessionPolicy;
    struct IWdsTransportNamespace;
    struct IWdsTransportNamespaceAutoCast;
    struct IWdsTransportNamespaceManager;
    struct IWdsTransportNamespaceScheduledCast;
    struct IWdsTransportNamespaceScheduledCastAutoStart;
    struct IWdsTransportNamespaceScheduledCastManualStart;
    struct IWdsTransportServer;
    struct IWdsTransportServer2;
    struct IWdsTransportServicePolicy;
    struct IWdsTransportServicePolicy2;
    struct IWdsTransportSession;
    struct IWdsTransportSetupManager;
    struct IWdsTransportSetupManager2;
    struct IWdsTransportTftpClient;
    struct IWdsTransportTftpManager;
#pragma endregion forward_declarations

#pragma region delegates
    using PFN_WdsCliTraceFunction = void __stdcall(Windows::Win32::Foundation::PWSTR, int8_t*);
    using PFN_WdsCliCallback = void __stdcall(Windows::Win32::System::DeploymentServices::PFN_WDS_CLI_CALLBACK_MESSAGE_ID, Windows::Win32::Foundation::WPARAM, Windows::Win32::Foundation::LPARAM, void*);
    using PFN_WdsTransportClientSessionStart = void __stdcall(Windows::Win32::Foundation::HANDLE, void*, Windows::Win32::Foundation::ULARGE_INTEGER*);
    using PFN_WdsTransportClientSessionStartEx = void __stdcall(Windows::Win32::Foundation::HANDLE, void*, Windows::Win32::System::DeploymentServices::TRANSPORTCLIENT_SESSION_INFO*);
    using PFN_WdsTransportClientReceiveMetadata = void __stdcall(Windows::Win32::Foundation::HANDLE, void*, void*, uint32_t);
    using PFN_WdsTransportClientReceiveContents = void __stdcall(Windows::Win32::Foundation::HANDLE, void*, void*, uint32_t, Windows::Win32::Foundation::ULARGE_INTEGER*);
    using PFN_WdsTransportClientSessionComplete = void __stdcall(Windows::Win32::Foundation::HANDLE, void*, uint32_t);
    using PFN_WdsTransportClientSessionNegotiate = void __stdcall(Windows::Win32::Foundation::HANDLE, void*, Windows::Win32::System::DeploymentServices::TRANSPORTCLIENT_SESSION_INFO*, Windows::Win32::Foundation::HANDLE);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
