// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Security_Cryptography_Catalog_2_H
#define WIN32_Windows_Win32_Security_Cryptography_Catalog_2_H
#include "win32/Windows.Win32.Security.Cryptography.Catalog.h"
#include "win32/impl/Windows.Win32.Security.Cryptography.Catalog.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::Security::Cryptography::Catalog
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_CryptCATOpen(win32::Windows::Win32::Foundation::PWSTR pwszFileName, win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCAT_OPEN_FLAGS fdwOpenFlags, size_t hProv, win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCAT_VERSION dwPublicVersion, uint32_t dwEncodingType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pwszFileName);
        ORBIT_TRACK_PARAM(fdwOpenFlags);
        ORBIT_TRACK_PARAM(hProv);
        ORBIT_TRACK_PARAM(dwPublicVersion);
        ORBIT_TRACK_PARAM(dwEncodingType);

        auto win32_impl_result = g_api_table.CryptCATOpen(pwszFileName, fdwOpenFlags, hProv, dwPublicVersion, dwEncodingType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CryptCATClose(win32::Windows::Win32::Foundation::HANDLE hCatalog) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatalog);

        auto win32_impl_result = g_api_table.CryptCATClose(hCatalog);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATSTORE* __stdcall ORBIT_IMPL_CryptCATStoreFromHandle(win32::Windows::Win32::Foundation::HANDLE hCatalog) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatalog);

        auto win32_impl_result = g_api_table.CryptCATStoreFromHandle(hCatalog);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_CryptCATHandleFromStore(win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATSTORE* pCatStore) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pCatStore);

        auto win32_impl_result = g_api_table.CryptCATHandleFromStore(pCatStore);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CryptCATPersistStore(win32::Windows::Win32::Foundation::HANDLE hCatalog) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatalog);

        auto win32_impl_result = g_api_table.CryptCATPersistStore(hCatalog);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATATTRIBUTE* __stdcall ORBIT_IMPL_CryptCATGetCatAttrInfo(win32::Windows::Win32::Foundation::HANDLE hCatalog, win32::Windows::Win32::Foundation::PWSTR pwszReferenceTag) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatalog);
        ORBIT_TRACK_PARAM(pwszReferenceTag);

        auto win32_impl_result = g_api_table.CryptCATGetCatAttrInfo(hCatalog, pwszReferenceTag);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATATTRIBUTE* __stdcall ORBIT_IMPL_CryptCATPutCatAttrInfo(win32::Windows::Win32::Foundation::HANDLE hCatalog, win32::Windows::Win32::Foundation::PWSTR pwszReferenceTag, uint32_t dwAttrTypeAndAction, uint32_t cbData, uint8_t* pbData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatalog);
        ORBIT_TRACK_PARAM(pwszReferenceTag);
        ORBIT_TRACK_PARAM(dwAttrTypeAndAction);
        ORBIT_TRACK_PARAM(cbData);
        ORBIT_TRACK_PARAM(pbData);

        auto win32_impl_result = g_api_table.CryptCATPutCatAttrInfo(hCatalog, pwszReferenceTag, dwAttrTypeAndAction, cbData, pbData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATATTRIBUTE* __stdcall ORBIT_IMPL_CryptCATEnumerateCatAttr(win32::Windows::Win32::Foundation::HANDLE hCatalog, win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATATTRIBUTE* pPrevAttr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatalog);
        ORBIT_TRACK_PARAM(pPrevAttr);

        auto win32_impl_result = g_api_table.CryptCATEnumerateCatAttr(hCatalog, pPrevAttr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATMEMBER* __stdcall ORBIT_IMPL_CryptCATGetMemberInfo(win32::Windows::Win32::Foundation::HANDLE hCatalog, win32::Windows::Win32::Foundation::PWSTR pwszReferenceTag) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatalog);
        ORBIT_TRACK_PARAM(pwszReferenceTag);

        auto win32_impl_result = g_api_table.CryptCATGetMemberInfo(hCatalog, pwszReferenceTag);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATMEMBER* __stdcall ORBIT_IMPL_CryptCATAllocSortedMemberInfo(win32::Windows::Win32::Foundation::HANDLE hCatalog, win32::Windows::Win32::Foundation::PWSTR pwszReferenceTag) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatalog);
        ORBIT_TRACK_PARAM(pwszReferenceTag);

        auto win32_impl_result = g_api_table.CryptCATAllocSortedMemberInfo(hCatalog, pwszReferenceTag);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_CryptCATFreeSortedMemberInfo(win32::Windows::Win32::Foundation::HANDLE hCatalog, win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATMEMBER* pCatMember) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatalog);
        ORBIT_TRACK_PARAM(pCatMember);

        g_api_table.CryptCATFreeSortedMemberInfo(hCatalog, pCatMember);
        
    }

    win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATATTRIBUTE* __stdcall ORBIT_IMPL_CryptCATGetAttrInfo(win32::Windows::Win32::Foundation::HANDLE hCatalog, win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATMEMBER* pCatMember, win32::Windows::Win32::Foundation::PWSTR pwszReferenceTag) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatalog);
        ORBIT_TRACK_PARAM(pCatMember);
        ORBIT_TRACK_PARAM(pwszReferenceTag);

        auto win32_impl_result = g_api_table.CryptCATGetAttrInfo(hCatalog, pCatMember, pwszReferenceTag);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATMEMBER* __stdcall ORBIT_IMPL_CryptCATPutMemberInfo(win32::Windows::Win32::Foundation::HANDLE hCatalog, win32::Windows::Win32::Foundation::PWSTR pwszFileName, win32::Windows::Win32::Foundation::PWSTR pwszReferenceTag, ::win32::guid* pgSubjectType, uint32_t dwCertVersion, uint32_t cbSIPIndirectData, uint8_t* pbSIPIndirectData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatalog);
        ORBIT_TRACK_PARAM(pwszFileName);
        ORBIT_TRACK_PARAM(pwszReferenceTag);
        ORBIT_TRACK_PARAM(pgSubjectType);
        ORBIT_TRACK_PARAM(dwCertVersion);
        ORBIT_TRACK_PARAM(cbSIPIndirectData);
        ORBIT_TRACK_PARAM(pbSIPIndirectData);

        auto win32_impl_result = g_api_table.CryptCATPutMemberInfo(hCatalog, pwszFileName, pwszReferenceTag, pgSubjectType, dwCertVersion, cbSIPIndirectData, pbSIPIndirectData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATATTRIBUTE* __stdcall ORBIT_IMPL_CryptCATPutAttrInfo(win32::Windows::Win32::Foundation::HANDLE hCatalog, win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATMEMBER* pCatMember, win32::Windows::Win32::Foundation::PWSTR pwszReferenceTag, uint32_t dwAttrTypeAndAction, uint32_t cbData, uint8_t* pbData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatalog);
        ORBIT_TRACK_PARAM(pCatMember);
        ORBIT_TRACK_PARAM(pwszReferenceTag);
        ORBIT_TRACK_PARAM(dwAttrTypeAndAction);
        ORBIT_TRACK_PARAM(cbData);
        ORBIT_TRACK_PARAM(pbData);

        auto win32_impl_result = g_api_table.CryptCATPutAttrInfo(hCatalog, pCatMember, pwszReferenceTag, dwAttrTypeAndAction, cbData, pbData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATMEMBER* __stdcall ORBIT_IMPL_CryptCATEnumerateMember(win32::Windows::Win32::Foundation::HANDLE hCatalog, win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATMEMBER* pPrevMember) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatalog);
        ORBIT_TRACK_PARAM(pPrevMember);

        auto win32_impl_result = g_api_table.CryptCATEnumerateMember(hCatalog, pPrevMember);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATATTRIBUTE* __stdcall ORBIT_IMPL_CryptCATEnumerateAttr(win32::Windows::Win32::Foundation::HANDLE hCatalog, win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATMEMBER* pCatMember, win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATATTRIBUTE* pPrevAttr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatalog);
        ORBIT_TRACK_PARAM(pCatMember);
        ORBIT_TRACK_PARAM(pPrevAttr);

        auto win32_impl_result = g_api_table.CryptCATEnumerateAttr(hCatalog, pCatMember, pPrevAttr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATCDF* __stdcall ORBIT_IMPL_CryptCATCDFOpen(win32::Windows::Win32::Foundation::PWSTR pwszFilePath, win32::Windows::Win32::Security::Cryptography::Catalog::PFN_CDF_PARSE_ERROR_CALLBACK* pfnParseError) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pwszFilePath);
        ORBIT_TRACK_PARAM(pfnParseError);

        auto win32_impl_result = g_api_table.CryptCATCDFOpen(pwszFilePath, pfnParseError);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CryptCATCDFClose(win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATCDF* pCDF) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pCDF);

        auto win32_impl_result = g_api_table.CryptCATCDFClose(pCDF);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATATTRIBUTE* __stdcall ORBIT_IMPL_CryptCATCDFEnumCatAttributes(win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATCDF* pCDF, win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATATTRIBUTE* pPrevAttr, win32::Windows::Win32::Security::Cryptography::Catalog::PFN_CDF_PARSE_ERROR_CALLBACK* pfnParseError) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pCDF);
        ORBIT_TRACK_PARAM(pPrevAttr);
        ORBIT_TRACK_PARAM(pfnParseError);

        auto win32_impl_result = g_api_table.CryptCATCDFEnumCatAttributes(pCDF, pPrevAttr, pfnParseError);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATMEMBER* __stdcall ORBIT_IMPL_CryptCATCDFEnumMembers(win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATCDF* pCDF, win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATMEMBER* pPrevMember, win32::Windows::Win32::Security::Cryptography::Catalog::PFN_CDF_PARSE_ERROR_CALLBACK* pfnParseError) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pCDF);
        ORBIT_TRACK_PARAM(pPrevMember);
        ORBIT_TRACK_PARAM(pfnParseError);

        auto win32_impl_result = g_api_table.CryptCATCDFEnumMembers(pCDF, pPrevMember, pfnParseError);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATATTRIBUTE* __stdcall ORBIT_IMPL_CryptCATCDFEnumAttributes(win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATCDF* pCDF, win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATMEMBER* pMember, win32::Windows::Win32::Security::Cryptography::Catalog::CRYPTCATATTRIBUTE* pPrevAttr, win32::Windows::Win32::Security::Cryptography::Catalog::PFN_CDF_PARSE_ERROR_CALLBACK* pfnParseError) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pCDF);
        ORBIT_TRACK_PARAM(pMember);
        ORBIT_TRACK_PARAM(pPrevAttr);
        ORBIT_TRACK_PARAM(pfnParseError);

        auto win32_impl_result = g_api_table.CryptCATCDFEnumAttributes(pCDF, pMember, pPrevAttr, pfnParseError);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsCatalogFile(win32::Windows::Win32::Foundation::HANDLE hFile, win32::Windows::Win32::Foundation::PWSTR pwszFileName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hFile);
        ORBIT_TRACK_PARAM(pwszFileName);

        auto win32_impl_result = g_api_table.IsCatalogFile(hFile, pwszFileName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CryptCATAdminAcquireContext(intptr_t* phCatAdmin, ::win32::guid* pgSubsystem, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phCatAdmin);
        ORBIT_TRACK_PARAM(pgSubsystem);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.CryptCATAdminAcquireContext(phCatAdmin, pgSubsystem, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CryptCATAdminAcquireContext2(intptr_t* phCatAdmin, ::win32::guid* pgSubsystem, win32::Windows::Win32::Foundation::PWSTR pwszHashAlgorithm, win32::Windows::Win32::Security::Cryptography::CERT_STRONG_SIGN_PARA* pStrongHashPolicy, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phCatAdmin);
        ORBIT_TRACK_PARAM(pgSubsystem);
        ORBIT_TRACK_PARAM(pwszHashAlgorithm);
        ORBIT_TRACK_PARAM(pStrongHashPolicy);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.CryptCATAdminAcquireContext2(phCatAdmin, pgSubsystem, pwszHashAlgorithm, pStrongHashPolicy, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CryptCATAdminReleaseContext(intptr_t hCatAdmin, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatAdmin);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.CryptCATAdminReleaseContext(hCatAdmin, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CryptCATAdminReleaseCatalogContext(intptr_t hCatAdmin, intptr_t hCatInfo, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatAdmin);
        ORBIT_TRACK_PARAM(hCatInfo);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.CryptCATAdminReleaseCatalogContext(hCatAdmin, hCatInfo, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    intptr_t __stdcall ORBIT_IMPL_CryptCATAdminEnumCatalogFromHash(intptr_t hCatAdmin, uint8_t* pbHash, uint32_t cbHash, uint32_t dwFlags, intptr_t* phPrevCatInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatAdmin);
        ORBIT_TRACK_PARAM(pbHash);
        ORBIT_TRACK_PARAM(cbHash);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(phPrevCatInfo);

        auto win32_impl_result = g_api_table.CryptCATAdminEnumCatalogFromHash(hCatAdmin, pbHash, cbHash, dwFlags, phPrevCatInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CryptCATAdminCalcHashFromFileHandle(win32::Windows::Win32::Foundation::HANDLE hFile, uint32_t* pcbHash, uint8_t* pbHash, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hFile);
        ORBIT_TRACK_PARAM(pcbHash);
        ORBIT_TRACK_PARAM(pbHash);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.CryptCATAdminCalcHashFromFileHandle(hFile, pcbHash, pbHash, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CryptCATAdminCalcHashFromFileHandle2(intptr_t hCatAdmin, win32::Windows::Win32::Foundation::HANDLE hFile, uint32_t* pcbHash, uint8_t* pbHash, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatAdmin);
        ORBIT_TRACK_PARAM(hFile);
        ORBIT_TRACK_PARAM(pcbHash);
        ORBIT_TRACK_PARAM(pbHash);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.CryptCATAdminCalcHashFromFileHandle2(hCatAdmin, hFile, pcbHash, pbHash, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    intptr_t __stdcall ORBIT_IMPL_CryptCATAdminAddCatalog(intptr_t hCatAdmin, win32::Windows::Win32::Foundation::PWSTR pwszCatalogFile, win32::Windows::Win32::Foundation::PWSTR pwszSelectBaseName, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatAdmin);
        ORBIT_TRACK_PARAM(pwszCatalogFile);
        ORBIT_TRACK_PARAM(pwszSelectBaseName);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.CryptCATAdminAddCatalog(hCatAdmin, pwszCatalogFile, pwszSelectBaseName, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CryptCATAdminRemoveCatalog(intptr_t hCatAdmin, win32::Windows::Win32::Foundation::PWSTR pwszCatalogFile, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatAdmin);
        ORBIT_TRACK_PARAM(pwszCatalogFile);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.CryptCATAdminRemoveCatalog(hCatAdmin, pwszCatalogFile, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CryptCATCatalogInfoFromContext(intptr_t hCatInfo, win32::Windows::Win32::Security::Cryptography::Catalog::CATALOG_INFO* psCatInfo, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatInfo);
        ORBIT_TRACK_PARAM(psCatInfo);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.CryptCATCatalogInfoFromContext(hCatInfo, psCatInfo, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CryptCATAdminResolveCatalogPath(intptr_t hCatAdmin, win32::Windows::Win32::Foundation::PWSTR pwszCatalogFile, win32::Windows::Win32::Security::Cryptography::Catalog::CATALOG_INFO* psCatInfo, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCatAdmin);
        ORBIT_TRACK_PARAM(pwszCatalogFile);
        ORBIT_TRACK_PARAM(psCatInfo);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.CryptCATAdminResolveCatalogPath(hCatAdmin, pwszCatalogFile, psCatInfo, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CryptCATAdminPauseServiceForBackup(uint32_t dwFlags, win32::Windows::Win32::Foundation::BOOL fResume) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(fResume);

        auto win32_impl_result = g_api_table.CryptCATAdminPauseServiceForBackup(dwFlags, fResume);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
