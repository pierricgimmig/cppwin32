// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_NetworkManagement_WebDav_2_H
#define WIN32_Windows_Win32_NetworkManagement_WebDav_2_H
#include "win32/Windows.Win32.NetworkManagement.WebDav.h"
#include "win32/impl/Windows.Win32.NetworkManagement.WebDav.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::NetworkManagement::WebDav
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    uint32_t __stdcall ORBIT_IMPL_DavAddConnection(win32::Windows::Win32::Foundation::HANDLE* ConnectionHandle, win32::Windows::Win32::Foundation::PWSTR RemoteName, win32::Windows::Win32::Foundation::PWSTR UserName, win32::Windows::Win32::Foundation::PWSTR Password, uint8_t* ClientCert, uint32_t CertSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ConnectionHandle);
        ORBIT_TRACK_PARAM(RemoteName);
        ORBIT_TRACK_PARAM(UserName);
        ORBIT_TRACK_PARAM(Password);
        ORBIT_TRACK_PARAM(ClientCert);
        ORBIT_TRACK_PARAM(CertSize);

        auto win32_impl_result = g_api_table.DavAddConnection(ConnectionHandle, RemoteName, UserName, Password, ClientCert, CertSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DavDeleteConnection(win32::Windows::Win32::Foundation::HANDLE ConnectionHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ConnectionHandle);

        auto win32_impl_result = g_api_table.DavDeleteConnection(ConnectionHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DavGetUNCFromHTTPPath(win32::Windows::Win32::Foundation::PWSTR Url, win32::Windows::Win32::Foundation::PWSTR UncPath, uint32_t* lpSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Url);
        ORBIT_TRACK_PARAM(UncPath);
        ORBIT_TRACK_PARAM(lpSize);

        auto win32_impl_result = g_api_table.DavGetUNCFromHTTPPath(Url, UncPath, lpSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DavGetHTTPFromUNCPath(win32::Windows::Win32::Foundation::PWSTR UncPath, win32::Windows::Win32::Foundation::PWSTR Url, uint32_t* lpSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(UncPath);
        ORBIT_TRACK_PARAM(Url);
        ORBIT_TRACK_PARAM(lpSize);

        auto win32_impl_result = g_api_table.DavGetHTTPFromUNCPath(UncPath, Url, lpSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DavGetTheLockOwnerOfTheFile(win32::Windows::Win32::Foundation::PWSTR FileName, win32::Windows::Win32::Foundation::PWSTR LockOwnerName, uint32_t* LockOwnerNameLengthInBytes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(LockOwnerName);
        ORBIT_TRACK_PARAM(LockOwnerNameLengthInBytes);

        auto win32_impl_result = g_api_table.DavGetTheLockOwnerOfTheFile(FileName, LockOwnerName, LockOwnerNameLengthInBytes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DavGetExtendedError(win32::Windows::Win32::Foundation::HANDLE hFile, uint32_t* ExtError, win32::Windows::Win32::Foundation::PWSTR ExtErrorString, uint32_t* cChSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hFile);
        ORBIT_TRACK_PARAM(ExtError);
        ORBIT_TRACK_PARAM(ExtErrorString);
        ORBIT_TRACK_PARAM(cChSize);

        auto win32_impl_result = g_api_table.DavGetExtendedError(hFile, ExtError, ExtErrorString, cChSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DavFlushFile(win32::Windows::Win32::Foundation::HANDLE hFile) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hFile);

        auto win32_impl_result = g_api_table.DavFlushFile(hFile);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DavInvalidateCache(win32::Windows::Win32::Foundation::PWSTR URLName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(URLName);

        auto win32_impl_result = g_api_table.DavInvalidateCache(URLName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DavCancelConnectionsToServer(win32::Windows::Win32::Foundation::PWSTR lpName, win32::Windows::Win32::Foundation::BOOL fForce) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(fForce);

        auto win32_impl_result = g_api_table.DavCancelConnectionsToServer(lpName, fForce);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DavRegisterAuthCallback(win32::Windows::Win32::NetworkManagement::WebDav::PFNDAVAUTHCALLBACK* CallBack, uint32_t Version) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CallBack);
        ORBIT_TRACK_PARAM(Version);

        auto win32_impl_result = g_api_table.DavRegisterAuthCallback(CallBack, Version);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_DavUnregisterAuthCallback(uint32_t hCallback) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCallback);

        g_api_table.DavUnregisterAuthCallback(hCallback);
        
    }

}

#pragma endregion abi_methods

}
#endif
