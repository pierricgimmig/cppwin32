// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Security_Authentication_Identity_2_H
#define WIN32_Windows_Win32_Security_Authentication_Identity_2_H
#include "win32/Windows.Win32.Security.Authentication.Identity.h"
#include "win32/impl/Windows.Win32.Security.Authentication.Identity.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::Security::Authentication::Identity
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaRegisterLogonProcess(win32::Windows::Win32::System::Kernel::STRING* LogonProcessName, win32::Windows::Win32::Security::Authentication::Identity::LsaHandle* LsaHandle, uint32_t* SecurityMode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LogonProcessName);
        ORBIT_TRACK_PARAM(LsaHandle);
        ORBIT_TRACK_PARAM(SecurityMode);

        auto win32_impl_result = g_api_table.LsaRegisterLogonProcess(LogonProcessName, LsaHandle, SecurityMode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaLogonUser(win32::Windows::Win32::Foundation::HANDLE LsaHandle, win32::Windows::Win32::System::Kernel::STRING* OriginName, win32::Windows::Win32::Security::Authentication::Identity::SECURITY_LOGON_TYPE LogonType, uint32_t AuthenticationPackage, void* AuthenticationInformation, uint32_t AuthenticationInformationLength, win32::Windows::Win32::Security::TOKEN_GROUPS* LocalGroups, win32::Windows::Win32::Security::TOKEN_SOURCE* SourceContext, void** ProfileBuffer, uint32_t* ProfileBufferLength, win32::Windows::Win32::Foundation::LUID* LogonId, win32::Windows::Win32::Foundation::HANDLE* Token, win32::Windows::Win32::Security::QUOTA_LIMITS* Quotas, int32_t* SubStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LsaHandle);
        ORBIT_TRACK_PARAM(OriginName);
        ORBIT_TRACK_PARAM(LogonType);
        ORBIT_TRACK_PARAM(AuthenticationPackage);
        ORBIT_TRACK_PARAM(AuthenticationInformation);
        ORBIT_TRACK_PARAM(AuthenticationInformationLength);
        ORBIT_TRACK_PARAM(LocalGroups);
        ORBIT_TRACK_PARAM(SourceContext);
        ORBIT_TRACK_PARAM(ProfileBuffer);
        ORBIT_TRACK_PARAM(ProfileBufferLength);
        ORBIT_TRACK_PARAM(LogonId);
        ORBIT_TRACK_PARAM(Token);
        ORBIT_TRACK_PARAM(Quotas);
        ORBIT_TRACK_PARAM(SubStatus);

        auto win32_impl_result = g_api_table.LsaLogonUser(LsaHandle, OriginName, LogonType, AuthenticationPackage, AuthenticationInformation, AuthenticationInformationLength, LocalGroups, SourceContext, ProfileBuffer, ProfileBufferLength, LogonId, Token, Quotas, SubStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaLookupAuthenticationPackage(win32::Windows::Win32::Foundation::HANDLE LsaHandle, win32::Windows::Win32::System::Kernel::STRING* PackageName, uint32_t* AuthenticationPackage) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LsaHandle);
        ORBIT_TRACK_PARAM(PackageName);
        ORBIT_TRACK_PARAM(AuthenticationPackage);

        auto win32_impl_result = g_api_table.LsaLookupAuthenticationPackage(LsaHandle, PackageName, AuthenticationPackage);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaFreeReturnBuffer(void* Buffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Buffer);

        auto win32_impl_result = g_api_table.LsaFreeReturnBuffer(Buffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaCallAuthenticationPackage(win32::Windows::Win32::Foundation::HANDLE LsaHandle, uint32_t AuthenticationPackage, void* ProtocolSubmitBuffer, uint32_t SubmitBufferLength, void** ProtocolReturnBuffer, uint32_t* ReturnBufferLength, int32_t* ProtocolStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LsaHandle);
        ORBIT_TRACK_PARAM(AuthenticationPackage);
        ORBIT_TRACK_PARAM(ProtocolSubmitBuffer);
        ORBIT_TRACK_PARAM(SubmitBufferLength);
        ORBIT_TRACK_PARAM(ProtocolReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferLength);
        ORBIT_TRACK_PARAM(ProtocolStatus);

        auto win32_impl_result = g_api_table.LsaCallAuthenticationPackage(LsaHandle, AuthenticationPackage, ProtocolSubmitBuffer, SubmitBufferLength, ProtocolReturnBuffer, ReturnBufferLength, ProtocolStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaDeregisterLogonProcess(win32::Windows::Win32::Security::Authentication::Identity::LsaHandle LsaHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LsaHandle);

        auto win32_impl_result = g_api_table.LsaDeregisterLogonProcess(LsaHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaConnectUntrusted(win32::Windows::Win32::Foundation::HANDLE* LsaHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LsaHandle);

        auto win32_impl_result = g_api_table.LsaConnectUntrusted(LsaHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaFreeMemory(void* Buffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Buffer);

        auto win32_impl_result = g_api_table.LsaFreeMemory(Buffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaClose(void* ObjectHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ObjectHandle);

        auto win32_impl_result = g_api_table.LsaClose(ObjectHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaEnumerateLogonSessions(uint32_t* LogonSessionCount, win32::Windows::Win32::Foundation::LUID** LogonSessionList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LogonSessionCount);
        ORBIT_TRACK_PARAM(LogonSessionList);

        auto win32_impl_result = g_api_table.LsaEnumerateLogonSessions(LogonSessionCount, LogonSessionList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaGetLogonSessionData(win32::Windows::Win32::Foundation::LUID* LogonId, win32::Windows::Win32::Security::Authentication::Identity::SECURITY_LOGON_SESSION_DATA** ppLogonSessionData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LogonId);
        ORBIT_TRACK_PARAM(ppLogonSessionData);

        auto win32_impl_result = g_api_table.LsaGetLogonSessionData(LogonId, ppLogonSessionData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaOpenPolicy(win32::Windows::Win32::Foundation::UNICODE_STRING* SystemName, win32::Windows::Win32::System::WindowsProgramming::OBJECT_ATTRIBUTES* ObjectAttributes, uint32_t DesiredAccess, void** PolicyHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SystemName);
        ORBIT_TRACK_PARAM(ObjectAttributes);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(PolicyHandle);

        auto win32_impl_result = g_api_table.LsaOpenPolicy(SystemName, ObjectAttributes, DesiredAccess, PolicyHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaSetCAPs(win32::Windows::Win32::Foundation::UNICODE_STRING* CAPDNs, uint32_t CAPDNCount, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CAPDNs);
        ORBIT_TRACK_PARAM(CAPDNCount);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.LsaSetCAPs(CAPDNs, CAPDNCount, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaGetAppliedCAPIDs(win32::Windows::Win32::Foundation::UNICODE_STRING* SystemName, win32::Windows::Win32::Foundation::PSID** CAPIDs, uint32_t* CAPIDCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SystemName);
        ORBIT_TRACK_PARAM(CAPIDs);
        ORBIT_TRACK_PARAM(CAPIDCount);

        auto win32_impl_result = g_api_table.LsaGetAppliedCAPIDs(SystemName, CAPIDs, CAPIDCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaQueryCAPs(win32::Windows::Win32::Foundation::PSID* CAPIDs, uint32_t CAPIDCount, win32::Windows::Win32::Security::Authentication::Identity::CENTRAL_ACCESS_POLICY** CAPs, uint32_t* CAPCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CAPIDs);
        ORBIT_TRACK_PARAM(CAPIDCount);
        ORBIT_TRACK_PARAM(CAPs);
        ORBIT_TRACK_PARAM(CAPCount);

        auto win32_impl_result = g_api_table.LsaQueryCAPs(CAPIDs, CAPIDCount, CAPs, CAPCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaQueryInformationPolicy(void* PolicyHandle, win32::Windows::Win32::Security::Authentication::Identity::POLICY_INFORMATION_CLASS InformationClass, void** Buffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(InformationClass);
        ORBIT_TRACK_PARAM(Buffer);

        auto win32_impl_result = g_api_table.LsaQueryInformationPolicy(PolicyHandle, InformationClass, Buffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaSetInformationPolicy(void* PolicyHandle, win32::Windows::Win32::Security::Authentication::Identity::POLICY_INFORMATION_CLASS InformationClass, void* Buffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(InformationClass);
        ORBIT_TRACK_PARAM(Buffer);

        auto win32_impl_result = g_api_table.LsaSetInformationPolicy(PolicyHandle, InformationClass, Buffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaQueryDomainInformationPolicy(void* PolicyHandle, win32::Windows::Win32::Security::Authentication::Identity::POLICY_DOMAIN_INFORMATION_CLASS InformationClass, void** Buffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(InformationClass);
        ORBIT_TRACK_PARAM(Buffer);

        auto win32_impl_result = g_api_table.LsaQueryDomainInformationPolicy(PolicyHandle, InformationClass, Buffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaSetDomainInformationPolicy(void* PolicyHandle, win32::Windows::Win32::Security::Authentication::Identity::POLICY_DOMAIN_INFORMATION_CLASS InformationClass, void* Buffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(InformationClass);
        ORBIT_TRACK_PARAM(Buffer);

        auto win32_impl_result = g_api_table.LsaSetDomainInformationPolicy(PolicyHandle, InformationClass, Buffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaRegisterPolicyChangeNotification(win32::Windows::Win32::Security::Authentication::Identity::POLICY_NOTIFICATION_INFORMATION_CLASS InformationClass, win32::Windows::Win32::Foundation::HANDLE NotificationEventHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InformationClass);
        ORBIT_TRACK_PARAM(NotificationEventHandle);

        auto win32_impl_result = g_api_table.LsaRegisterPolicyChangeNotification(InformationClass, NotificationEventHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaUnregisterPolicyChangeNotification(win32::Windows::Win32::Security::Authentication::Identity::POLICY_NOTIFICATION_INFORMATION_CLASS InformationClass, win32::Windows::Win32::Foundation::HANDLE NotificationEventHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InformationClass);
        ORBIT_TRACK_PARAM(NotificationEventHandle);

        auto win32_impl_result = g_api_table.LsaUnregisterPolicyChangeNotification(InformationClass, NotificationEventHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaEnumerateTrustedDomains(void* PolicyHandle, uint32_t* EnumerationContext, void** Buffer, uint32_t PreferedMaximumLength, uint32_t* CountReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(EnumerationContext);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(PreferedMaximumLength);
        ORBIT_TRACK_PARAM(CountReturned);

        auto win32_impl_result = g_api_table.LsaEnumerateTrustedDomains(PolicyHandle, EnumerationContext, Buffer, PreferedMaximumLength, CountReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaLookupNames(void* PolicyHandle, uint32_t Count, win32::Windows::Win32::Foundation::UNICODE_STRING* Names, win32::Windows::Win32::Security::Authentication::Identity::LSA_REFERENCED_DOMAIN_LIST** ReferencedDomains, win32::Windows::Win32::Security::Authentication::Identity::LSA_TRANSLATED_SID** Sids) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(Count);
        ORBIT_TRACK_PARAM(Names);
        ORBIT_TRACK_PARAM(ReferencedDomains);
        ORBIT_TRACK_PARAM(Sids);

        auto win32_impl_result = g_api_table.LsaLookupNames(PolicyHandle, Count, Names, ReferencedDomains, Sids);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaLookupNames2(void* PolicyHandle, uint32_t Flags, uint32_t Count, win32::Windows::Win32::Foundation::UNICODE_STRING* Names, win32::Windows::Win32::Security::Authentication::Identity::LSA_REFERENCED_DOMAIN_LIST** ReferencedDomains, win32::Windows::Win32::Security::Authentication::Identity::LSA_TRANSLATED_SID2** Sids) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Count);
        ORBIT_TRACK_PARAM(Names);
        ORBIT_TRACK_PARAM(ReferencedDomains);
        ORBIT_TRACK_PARAM(Sids);

        auto win32_impl_result = g_api_table.LsaLookupNames2(PolicyHandle, Flags, Count, Names, ReferencedDomains, Sids);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaLookupSids(void* PolicyHandle, uint32_t Count, win32::Windows::Win32::Foundation::PSID* Sids, win32::Windows::Win32::Security::Authentication::Identity::LSA_REFERENCED_DOMAIN_LIST** ReferencedDomains, win32::Windows::Win32::Security::Authentication::Identity::LSA_TRANSLATED_NAME** Names) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(Count);
        ORBIT_TRACK_PARAM(Sids);
        ORBIT_TRACK_PARAM(ReferencedDomains);
        ORBIT_TRACK_PARAM(Names);

        auto win32_impl_result = g_api_table.LsaLookupSids(PolicyHandle, Count, Sids, ReferencedDomains, Names);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaLookupSids2(void* PolicyHandle, uint32_t LookupOptions, uint32_t Count, win32::Windows::Win32::Foundation::PSID* Sids, win32::Windows::Win32::Security::Authentication::Identity::LSA_REFERENCED_DOMAIN_LIST** ReferencedDomains, win32::Windows::Win32::Security::Authentication::Identity::LSA_TRANSLATED_NAME** Names) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(LookupOptions);
        ORBIT_TRACK_PARAM(Count);
        ORBIT_TRACK_PARAM(Sids);
        ORBIT_TRACK_PARAM(ReferencedDomains);
        ORBIT_TRACK_PARAM(Names);

        auto win32_impl_result = g_api_table.LsaLookupSids2(PolicyHandle, LookupOptions, Count, Sids, ReferencedDomains, Names);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaEnumerateAccountsWithUserRight(void* PolicyHandle, win32::Windows::Win32::Foundation::UNICODE_STRING* UserRight, void** Buffer, uint32_t* CountReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(UserRight);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(CountReturned);

        auto win32_impl_result = g_api_table.LsaEnumerateAccountsWithUserRight(PolicyHandle, UserRight, Buffer, CountReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaEnumerateAccountRights(void* PolicyHandle, win32::Windows::Win32::Foundation::PSID AccountSid, win32::Windows::Win32::Foundation::UNICODE_STRING** UserRights, uint32_t* CountOfRights) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(AccountSid);
        ORBIT_TRACK_PARAM(UserRights);
        ORBIT_TRACK_PARAM(CountOfRights);

        auto win32_impl_result = g_api_table.LsaEnumerateAccountRights(PolicyHandle, AccountSid, UserRights, CountOfRights);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaAddAccountRights(void* PolicyHandle, win32::Windows::Win32::Foundation::PSID AccountSid, win32::Windows::Win32::Foundation::UNICODE_STRING* UserRights, uint32_t CountOfRights) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(AccountSid);
        ORBIT_TRACK_PARAM(UserRights);
        ORBIT_TRACK_PARAM(CountOfRights);

        auto win32_impl_result = g_api_table.LsaAddAccountRights(PolicyHandle, AccountSid, UserRights, CountOfRights);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaRemoveAccountRights(void* PolicyHandle, win32::Windows::Win32::Foundation::PSID AccountSid, win32::Windows::Win32::Foundation::BOOLEAN AllRights, win32::Windows::Win32::Foundation::UNICODE_STRING* UserRights, uint32_t CountOfRights) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(AccountSid);
        ORBIT_TRACK_PARAM(AllRights);
        ORBIT_TRACK_PARAM(UserRights);
        ORBIT_TRACK_PARAM(CountOfRights);

        auto win32_impl_result = g_api_table.LsaRemoveAccountRights(PolicyHandle, AccountSid, AllRights, UserRights, CountOfRights);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaOpenTrustedDomainByName(void* PolicyHandle, win32::Windows::Win32::Foundation::UNICODE_STRING* TrustedDomainName, uint32_t DesiredAccess, void** TrustedDomainHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(TrustedDomainName);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(TrustedDomainHandle);

        auto win32_impl_result = g_api_table.LsaOpenTrustedDomainByName(PolicyHandle, TrustedDomainName, DesiredAccess, TrustedDomainHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaQueryTrustedDomainInfo(void* PolicyHandle, win32::Windows::Win32::Foundation::PSID TrustedDomainSid, win32::Windows::Win32::Security::Authentication::Identity::TRUSTED_INFORMATION_CLASS InformationClass, void** Buffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(TrustedDomainSid);
        ORBIT_TRACK_PARAM(InformationClass);
        ORBIT_TRACK_PARAM(Buffer);

        auto win32_impl_result = g_api_table.LsaQueryTrustedDomainInfo(PolicyHandle, TrustedDomainSid, InformationClass, Buffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaSetTrustedDomainInformation(void* PolicyHandle, win32::Windows::Win32::Foundation::PSID TrustedDomainSid, win32::Windows::Win32::Security::Authentication::Identity::TRUSTED_INFORMATION_CLASS InformationClass, void* Buffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(TrustedDomainSid);
        ORBIT_TRACK_PARAM(InformationClass);
        ORBIT_TRACK_PARAM(Buffer);

        auto win32_impl_result = g_api_table.LsaSetTrustedDomainInformation(PolicyHandle, TrustedDomainSid, InformationClass, Buffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaDeleteTrustedDomain(void* PolicyHandle, win32::Windows::Win32::Foundation::PSID TrustedDomainSid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(TrustedDomainSid);

        auto win32_impl_result = g_api_table.LsaDeleteTrustedDomain(PolicyHandle, TrustedDomainSid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaQueryTrustedDomainInfoByName(void* PolicyHandle, win32::Windows::Win32::Foundation::UNICODE_STRING* TrustedDomainName, win32::Windows::Win32::Security::Authentication::Identity::TRUSTED_INFORMATION_CLASS InformationClass, void** Buffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(TrustedDomainName);
        ORBIT_TRACK_PARAM(InformationClass);
        ORBIT_TRACK_PARAM(Buffer);

        auto win32_impl_result = g_api_table.LsaQueryTrustedDomainInfoByName(PolicyHandle, TrustedDomainName, InformationClass, Buffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaSetTrustedDomainInfoByName(void* PolicyHandle, win32::Windows::Win32::Foundation::UNICODE_STRING* TrustedDomainName, win32::Windows::Win32::Security::Authentication::Identity::TRUSTED_INFORMATION_CLASS InformationClass, void* Buffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(TrustedDomainName);
        ORBIT_TRACK_PARAM(InformationClass);
        ORBIT_TRACK_PARAM(Buffer);

        auto win32_impl_result = g_api_table.LsaSetTrustedDomainInfoByName(PolicyHandle, TrustedDomainName, InformationClass, Buffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaEnumerateTrustedDomainsEx(void* PolicyHandle, uint32_t* EnumerationContext, void** Buffer, uint32_t PreferedMaximumLength, uint32_t* CountReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(EnumerationContext);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(PreferedMaximumLength);
        ORBIT_TRACK_PARAM(CountReturned);

        auto win32_impl_result = g_api_table.LsaEnumerateTrustedDomainsEx(PolicyHandle, EnumerationContext, Buffer, PreferedMaximumLength, CountReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaCreateTrustedDomainEx(void* PolicyHandle, win32::Windows::Win32::Security::Authentication::Identity::TRUSTED_DOMAIN_INFORMATION_EX* TrustedDomainInformation, win32::Windows::Win32::Security::Authentication::Identity::TRUSTED_DOMAIN_AUTH_INFORMATION* AuthenticationInformation, uint32_t DesiredAccess, void** TrustedDomainHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(TrustedDomainInformation);
        ORBIT_TRACK_PARAM(AuthenticationInformation);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(TrustedDomainHandle);

        auto win32_impl_result = g_api_table.LsaCreateTrustedDomainEx(PolicyHandle, TrustedDomainInformation, AuthenticationInformation, DesiredAccess, TrustedDomainHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaQueryForestTrustInformation(void* PolicyHandle, win32::Windows::Win32::Foundation::UNICODE_STRING* TrustedDomainName, win32::Windows::Win32::Security::Authentication::Identity::LSA_FOREST_TRUST_INFORMATION** ForestTrustInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(TrustedDomainName);
        ORBIT_TRACK_PARAM(ForestTrustInfo);

        auto win32_impl_result = g_api_table.LsaQueryForestTrustInformation(PolicyHandle, TrustedDomainName, ForestTrustInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaSetForestTrustInformation(void* PolicyHandle, win32::Windows::Win32::Foundation::UNICODE_STRING* TrustedDomainName, win32::Windows::Win32::Security::Authentication::Identity::LSA_FOREST_TRUST_INFORMATION* ForestTrustInfo, win32::Windows::Win32::Foundation::BOOLEAN CheckOnly, win32::Windows::Win32::Security::Authentication::Identity::LSA_FOREST_TRUST_COLLISION_INFORMATION** CollisionInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(TrustedDomainName);
        ORBIT_TRACK_PARAM(ForestTrustInfo);
        ORBIT_TRACK_PARAM(CheckOnly);
        ORBIT_TRACK_PARAM(CollisionInfo);

        auto win32_impl_result = g_api_table.LsaSetForestTrustInformation(PolicyHandle, TrustedDomainName, ForestTrustInfo, CheckOnly, CollisionInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaStorePrivateData(void* PolicyHandle, win32::Windows::Win32::Foundation::UNICODE_STRING* KeyName, win32::Windows::Win32::Foundation::UNICODE_STRING* PrivateData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(KeyName);
        ORBIT_TRACK_PARAM(PrivateData);

        auto win32_impl_result = g_api_table.LsaStorePrivateData(PolicyHandle, KeyName, PrivateData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_LsaRetrievePrivateData(void* PolicyHandle, win32::Windows::Win32::Foundation::UNICODE_STRING* KeyName, win32::Windows::Win32::Foundation::UNICODE_STRING** PrivateData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyHandle);
        ORBIT_TRACK_PARAM(KeyName);
        ORBIT_TRACK_PARAM(PrivateData);

        auto win32_impl_result = g_api_table.LsaRetrievePrivateData(PolicyHandle, KeyName, PrivateData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_LsaNtStatusToWinError(win32::Windows::Win32::Foundation::NTSTATUS Status) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Status);

        auto win32_impl_result = g_api_table.LsaNtStatusToWinError(Status);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_SystemFunction036(void* RandomBuffer, uint32_t RandomBufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RandomBuffer);
        ORBIT_TRACK_PARAM(RandomBufferLength);

        auto win32_impl_result = g_api_table.SystemFunction036(RandomBuffer, RandomBufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_SystemFunction040(void* Memory, uint32_t MemorySize, uint32_t OptionFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Memory);
        ORBIT_TRACK_PARAM(MemorySize);
        ORBIT_TRACK_PARAM(OptionFlags);

        auto win32_impl_result = g_api_table.SystemFunction040(Memory, MemorySize, OptionFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_SystemFunction041(void* Memory, uint32_t MemorySize, uint32_t OptionFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Memory);
        ORBIT_TRACK_PARAM(MemorySize);
        ORBIT_TRACK_PARAM(OptionFlags);

        auto win32_impl_result = g_api_table.SystemFunction041(Memory, MemorySize, OptionFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditSetSystemPolicy(win32::Windows::Win32::Security::Authentication::Identity::AUDIT_POLICY_INFORMATION* pAuditPolicy, uint32_t dwPolicyCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAuditPolicy);
        ORBIT_TRACK_PARAM(dwPolicyCount);

        auto win32_impl_result = g_api_table.AuditSetSystemPolicy(pAuditPolicy, dwPolicyCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditSetPerUserPolicy(win32::Windows::Win32::Foundation::PSID pSid, win32::Windows::Win32::Security::Authentication::Identity::AUDIT_POLICY_INFORMATION* pAuditPolicy, uint32_t dwPolicyCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSid);
        ORBIT_TRACK_PARAM(pAuditPolicy);
        ORBIT_TRACK_PARAM(dwPolicyCount);

        auto win32_impl_result = g_api_table.AuditSetPerUserPolicy(pSid, pAuditPolicy, dwPolicyCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditQuerySystemPolicy(::win32::guid* pSubCategoryGuids, uint32_t dwPolicyCount, win32::Windows::Win32::Security::Authentication::Identity::AUDIT_POLICY_INFORMATION** ppAuditPolicy) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSubCategoryGuids);
        ORBIT_TRACK_PARAM(dwPolicyCount);
        ORBIT_TRACK_PARAM(ppAuditPolicy);

        auto win32_impl_result = g_api_table.AuditQuerySystemPolicy(pSubCategoryGuids, dwPolicyCount, ppAuditPolicy);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditQueryPerUserPolicy(win32::Windows::Win32::Foundation::PSID pSid, ::win32::guid* pSubCategoryGuids, uint32_t dwPolicyCount, win32::Windows::Win32::Security::Authentication::Identity::AUDIT_POLICY_INFORMATION** ppAuditPolicy) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSid);
        ORBIT_TRACK_PARAM(pSubCategoryGuids);
        ORBIT_TRACK_PARAM(dwPolicyCount);
        ORBIT_TRACK_PARAM(ppAuditPolicy);

        auto win32_impl_result = g_api_table.AuditQueryPerUserPolicy(pSid, pSubCategoryGuids, dwPolicyCount, ppAuditPolicy);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditEnumeratePerUserPolicy(win32::Windows::Win32::Security::Authentication::Identity::POLICY_AUDIT_SID_ARRAY** ppAuditSidArray) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ppAuditSidArray);

        auto win32_impl_result = g_api_table.AuditEnumeratePerUserPolicy(ppAuditSidArray);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditComputeEffectivePolicyBySid(win32::Windows::Win32::Foundation::PSID pSid, ::win32::guid* pSubCategoryGuids, uint32_t dwPolicyCount, win32::Windows::Win32::Security::Authentication::Identity::AUDIT_POLICY_INFORMATION** ppAuditPolicy) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSid);
        ORBIT_TRACK_PARAM(pSubCategoryGuids);
        ORBIT_TRACK_PARAM(dwPolicyCount);
        ORBIT_TRACK_PARAM(ppAuditPolicy);

        auto win32_impl_result = g_api_table.AuditComputeEffectivePolicyBySid(pSid, pSubCategoryGuids, dwPolicyCount, ppAuditPolicy);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditComputeEffectivePolicyByToken(win32::Windows::Win32::Foundation::HANDLE hTokenHandle, ::win32::guid* pSubCategoryGuids, uint32_t dwPolicyCount, win32::Windows::Win32::Security::Authentication::Identity::AUDIT_POLICY_INFORMATION** ppAuditPolicy) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hTokenHandle);
        ORBIT_TRACK_PARAM(pSubCategoryGuids);
        ORBIT_TRACK_PARAM(dwPolicyCount);
        ORBIT_TRACK_PARAM(ppAuditPolicy);

        auto win32_impl_result = g_api_table.AuditComputeEffectivePolicyByToken(hTokenHandle, pSubCategoryGuids, dwPolicyCount, ppAuditPolicy);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditEnumerateCategories(::win32::guid** ppAuditCategoriesArray, uint32_t* pdwCountReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ppAuditCategoriesArray);
        ORBIT_TRACK_PARAM(pdwCountReturned);

        auto win32_impl_result = g_api_table.AuditEnumerateCategories(ppAuditCategoriesArray, pdwCountReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditEnumerateSubCategories(::win32::guid* pAuditCategoryGuid, win32::Windows::Win32::Foundation::BOOLEAN bRetrieveAllSubCategories, ::win32::guid** ppAuditSubCategoriesArray, uint32_t* pdwCountReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAuditCategoryGuid);
        ORBIT_TRACK_PARAM(bRetrieveAllSubCategories);
        ORBIT_TRACK_PARAM(ppAuditSubCategoriesArray);
        ORBIT_TRACK_PARAM(pdwCountReturned);

        auto win32_impl_result = g_api_table.AuditEnumerateSubCategories(pAuditCategoryGuid, bRetrieveAllSubCategories, ppAuditSubCategoriesArray, pdwCountReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditLookupCategoryNameW(::win32::guid* pAuditCategoryGuid, win32::Windows::Win32::Foundation::PWSTR* ppszCategoryName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAuditCategoryGuid);
        ORBIT_TRACK_PARAM(ppszCategoryName);

        auto win32_impl_result = g_api_table.AuditLookupCategoryNameW(pAuditCategoryGuid, ppszCategoryName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditLookupCategoryNameA(::win32::guid* pAuditCategoryGuid, win32::Windows::Win32::Foundation::PSTR* ppszCategoryName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAuditCategoryGuid);
        ORBIT_TRACK_PARAM(ppszCategoryName);

        auto win32_impl_result = g_api_table.AuditLookupCategoryNameA(pAuditCategoryGuid, ppszCategoryName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditLookupSubCategoryNameW(::win32::guid* pAuditSubCategoryGuid, win32::Windows::Win32::Foundation::PWSTR* ppszSubCategoryName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAuditSubCategoryGuid);
        ORBIT_TRACK_PARAM(ppszSubCategoryName);

        auto win32_impl_result = g_api_table.AuditLookupSubCategoryNameW(pAuditSubCategoryGuid, ppszSubCategoryName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditLookupSubCategoryNameA(::win32::guid* pAuditSubCategoryGuid, win32::Windows::Win32::Foundation::PSTR* ppszSubCategoryName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAuditSubCategoryGuid);
        ORBIT_TRACK_PARAM(ppszSubCategoryName);

        auto win32_impl_result = g_api_table.AuditLookupSubCategoryNameA(pAuditSubCategoryGuid, ppszSubCategoryName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditLookupCategoryIdFromCategoryGuid(::win32::guid* pAuditCategoryGuid, win32::Windows::Win32::Security::Authentication::Identity::POLICY_AUDIT_EVENT_TYPE* pAuditCategoryId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAuditCategoryGuid);
        ORBIT_TRACK_PARAM(pAuditCategoryId);

        auto win32_impl_result = g_api_table.AuditLookupCategoryIdFromCategoryGuid(pAuditCategoryGuid, pAuditCategoryId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditLookupCategoryGuidFromCategoryId(win32::Windows::Win32::Security::Authentication::Identity::POLICY_AUDIT_EVENT_TYPE AuditCategoryId, ::win32::guid* pAuditCategoryGuid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AuditCategoryId);
        ORBIT_TRACK_PARAM(pAuditCategoryGuid);

        auto win32_impl_result = g_api_table.AuditLookupCategoryGuidFromCategoryId(AuditCategoryId, pAuditCategoryGuid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditSetSecurity(uint32_t SecurityInformation, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SecurityInformation);
        ORBIT_TRACK_PARAM(pSecurityDescriptor);

        auto win32_impl_result = g_api_table.AuditSetSecurity(SecurityInformation, pSecurityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditQuerySecurity(uint32_t SecurityInformation, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** ppSecurityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SecurityInformation);
        ORBIT_TRACK_PARAM(ppSecurityDescriptor);

        auto win32_impl_result = g_api_table.AuditQuerySecurity(SecurityInformation, ppSecurityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditSetGlobalSaclW(win32::Windows::Win32::Foundation::PWSTR ObjectTypeName, win32::Windows::Win32::Security::ACL* Acl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ObjectTypeName);
        ORBIT_TRACK_PARAM(Acl);

        auto win32_impl_result = g_api_table.AuditSetGlobalSaclW(ObjectTypeName, Acl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditSetGlobalSaclA(win32::Windows::Win32::Foundation::PSTR ObjectTypeName, win32::Windows::Win32::Security::ACL* Acl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ObjectTypeName);
        ORBIT_TRACK_PARAM(Acl);

        auto win32_impl_result = g_api_table.AuditSetGlobalSaclA(ObjectTypeName, Acl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditQueryGlobalSaclW(win32::Windows::Win32::Foundation::PWSTR ObjectTypeName, win32::Windows::Win32::Security::ACL** Acl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ObjectTypeName);
        ORBIT_TRACK_PARAM(Acl);

        auto win32_impl_result = g_api_table.AuditQueryGlobalSaclW(ObjectTypeName, Acl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_AuditQueryGlobalSaclA(win32::Windows::Win32::Foundation::PSTR ObjectTypeName, win32::Windows::Win32::Security::ACL** Acl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ObjectTypeName);
        ORBIT_TRACK_PARAM(Acl);

        auto win32_impl_result = g_api_table.AuditQueryGlobalSaclA(ObjectTypeName, Acl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_AuditFree(void* Buffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Buffer);

        g_api_table.AuditFree(Buffer);
        
    }

    int32_t __stdcall ORBIT_IMPL_AcquireCredentialsHandleW(win32::Windows::Win32::Foundation::PWSTR pszPrincipal, win32::Windows::Win32::Foundation::PWSTR pszPackage, win32::Windows::Win32::Security::Authentication::Identity::SECPKG_CRED fCredentialUse, void* pvLogonId, void* pAuthData, win32::Windows::Win32::Security::Authentication::Identity::SEC_GET_KEY_FN* pGetKeyFn, void* pvGetKeyArgument, win32::Windows::Win32::Security::Credentials::SecHandle* phCredential, win32::Windows::Win32::Foundation::LARGE_INTEGER* ptsExpiry) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPrincipal);
        ORBIT_TRACK_PARAM(pszPackage);
        ORBIT_TRACK_PARAM(fCredentialUse);
        ORBIT_TRACK_PARAM(pvLogonId);
        ORBIT_TRACK_PARAM(pAuthData);
        ORBIT_TRACK_PARAM(pGetKeyFn);
        ORBIT_TRACK_PARAM(pvGetKeyArgument);
        ORBIT_TRACK_PARAM(phCredential);
        ORBIT_TRACK_PARAM(ptsExpiry);

        auto win32_impl_result = g_api_table.AcquireCredentialsHandleW(pszPrincipal, pszPackage, fCredentialUse, pvLogonId, pAuthData, pGetKeyFn, pvGetKeyArgument, phCredential, ptsExpiry);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_AcquireCredentialsHandleA(win32::Windows::Win32::Foundation::PSTR pszPrincipal, win32::Windows::Win32::Foundation::PSTR pszPackage, win32::Windows::Win32::Security::Authentication::Identity::SECPKG_CRED fCredentialUse, void* pvLogonId, void* pAuthData, win32::Windows::Win32::Security::Authentication::Identity::SEC_GET_KEY_FN* pGetKeyFn, void* pvGetKeyArgument, win32::Windows::Win32::Security::Credentials::SecHandle* phCredential, win32::Windows::Win32::Foundation::LARGE_INTEGER* ptsExpiry) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPrincipal);
        ORBIT_TRACK_PARAM(pszPackage);
        ORBIT_TRACK_PARAM(fCredentialUse);
        ORBIT_TRACK_PARAM(pvLogonId);
        ORBIT_TRACK_PARAM(pAuthData);
        ORBIT_TRACK_PARAM(pGetKeyFn);
        ORBIT_TRACK_PARAM(pvGetKeyArgument);
        ORBIT_TRACK_PARAM(phCredential);
        ORBIT_TRACK_PARAM(ptsExpiry);

        auto win32_impl_result = g_api_table.AcquireCredentialsHandleA(pszPrincipal, pszPackage, fCredentialUse, pvLogonId, pAuthData, pGetKeyFn, pvGetKeyArgument, phCredential, ptsExpiry);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_FreeCredentialsHandle(win32::Windows::Win32::Security::Credentials::SecHandle* phCredential) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phCredential);

        auto win32_impl_result = g_api_table.FreeCredentialsHandle(phCredential);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_AddCredentialsW(win32::Windows::Win32::Security::Credentials::SecHandle* hCredentials, win32::Windows::Win32::Foundation::PWSTR pszPrincipal, win32::Windows::Win32::Foundation::PWSTR pszPackage, uint32_t fCredentialUse, void* pAuthData, win32::Windows::Win32::Security::Authentication::Identity::SEC_GET_KEY_FN* pGetKeyFn, void* pvGetKeyArgument, win32::Windows::Win32::Foundation::LARGE_INTEGER* ptsExpiry) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCredentials);
        ORBIT_TRACK_PARAM(pszPrincipal);
        ORBIT_TRACK_PARAM(pszPackage);
        ORBIT_TRACK_PARAM(fCredentialUse);
        ORBIT_TRACK_PARAM(pAuthData);
        ORBIT_TRACK_PARAM(pGetKeyFn);
        ORBIT_TRACK_PARAM(pvGetKeyArgument);
        ORBIT_TRACK_PARAM(ptsExpiry);

        auto win32_impl_result = g_api_table.AddCredentialsW(hCredentials, pszPrincipal, pszPackage, fCredentialUse, pAuthData, pGetKeyFn, pvGetKeyArgument, ptsExpiry);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_AddCredentialsA(win32::Windows::Win32::Security::Credentials::SecHandle* hCredentials, win32::Windows::Win32::Foundation::PSTR pszPrincipal, win32::Windows::Win32::Foundation::PSTR pszPackage, uint32_t fCredentialUse, void* pAuthData, win32::Windows::Win32::Security::Authentication::Identity::SEC_GET_KEY_FN* pGetKeyFn, void* pvGetKeyArgument, win32::Windows::Win32::Foundation::LARGE_INTEGER* ptsExpiry) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCredentials);
        ORBIT_TRACK_PARAM(pszPrincipal);
        ORBIT_TRACK_PARAM(pszPackage);
        ORBIT_TRACK_PARAM(fCredentialUse);
        ORBIT_TRACK_PARAM(pAuthData);
        ORBIT_TRACK_PARAM(pGetKeyFn);
        ORBIT_TRACK_PARAM(pvGetKeyArgument);
        ORBIT_TRACK_PARAM(ptsExpiry);

        auto win32_impl_result = g_api_table.AddCredentialsA(hCredentials, pszPrincipal, pszPackage, fCredentialUse, pAuthData, pGetKeyFn, pvGetKeyArgument, ptsExpiry);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_ChangeAccountPasswordW(uint16_t* pszPackageName, uint16_t* pszDomainName, uint16_t* pszAccountName, uint16_t* pszOldPassword, uint16_t* pszNewPassword, win32::Windows::Win32::Foundation::BOOLEAN bImpersonating, uint32_t dwReserved, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pOutput) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPackageName);
        ORBIT_TRACK_PARAM(pszDomainName);
        ORBIT_TRACK_PARAM(pszAccountName);
        ORBIT_TRACK_PARAM(pszOldPassword);
        ORBIT_TRACK_PARAM(pszNewPassword);
        ORBIT_TRACK_PARAM(bImpersonating);
        ORBIT_TRACK_PARAM(dwReserved);
        ORBIT_TRACK_PARAM(pOutput);

        auto win32_impl_result = g_api_table.ChangeAccountPasswordW(pszPackageName, pszDomainName, pszAccountName, pszOldPassword, pszNewPassword, bImpersonating, dwReserved, pOutput);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_ChangeAccountPasswordA(int8_t* pszPackageName, int8_t* pszDomainName, int8_t* pszAccountName, int8_t* pszOldPassword, int8_t* pszNewPassword, win32::Windows::Win32::Foundation::BOOLEAN bImpersonating, uint32_t dwReserved, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pOutput) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPackageName);
        ORBIT_TRACK_PARAM(pszDomainName);
        ORBIT_TRACK_PARAM(pszAccountName);
        ORBIT_TRACK_PARAM(pszOldPassword);
        ORBIT_TRACK_PARAM(pszNewPassword);
        ORBIT_TRACK_PARAM(bImpersonating);
        ORBIT_TRACK_PARAM(dwReserved);
        ORBIT_TRACK_PARAM(pOutput);

        auto win32_impl_result = g_api_table.ChangeAccountPasswordA(pszPackageName, pszDomainName, pszAccountName, pszOldPassword, pszNewPassword, bImpersonating, dwReserved, pOutput);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_InitializeSecurityContextW(win32::Windows::Win32::Security::Credentials::SecHandle* phCredential, win32::Windows::Win32::Security::Credentials::SecHandle* phContext, uint16_t* pszTargetName, uint32_t fContextReq, uint32_t Reserved1, uint32_t TargetDataRep, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pInput, uint32_t Reserved2, win32::Windows::Win32::Security::Credentials::SecHandle* phNewContext, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pOutput, uint32_t* pfContextAttr, win32::Windows::Win32::Foundation::LARGE_INTEGER* ptsExpiry) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phCredential);
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(pszTargetName);
        ORBIT_TRACK_PARAM(fContextReq);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(TargetDataRep);
        ORBIT_TRACK_PARAM(pInput);
        ORBIT_TRACK_PARAM(Reserved2);
        ORBIT_TRACK_PARAM(phNewContext);
        ORBIT_TRACK_PARAM(pOutput);
        ORBIT_TRACK_PARAM(pfContextAttr);
        ORBIT_TRACK_PARAM(ptsExpiry);

        auto win32_impl_result = g_api_table.InitializeSecurityContextW(phCredential, phContext, pszTargetName, fContextReq, Reserved1, TargetDataRep, pInput, Reserved2, phNewContext, pOutput, pfContextAttr, ptsExpiry);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_InitializeSecurityContextA(win32::Windows::Win32::Security::Credentials::SecHandle* phCredential, win32::Windows::Win32::Security::Credentials::SecHandle* phContext, int8_t* pszTargetName, uint32_t fContextReq, uint32_t Reserved1, uint32_t TargetDataRep, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pInput, uint32_t Reserved2, win32::Windows::Win32::Security::Credentials::SecHandle* phNewContext, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pOutput, uint32_t* pfContextAttr, win32::Windows::Win32::Foundation::LARGE_INTEGER* ptsExpiry) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phCredential);
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(pszTargetName);
        ORBIT_TRACK_PARAM(fContextReq);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(TargetDataRep);
        ORBIT_TRACK_PARAM(pInput);
        ORBIT_TRACK_PARAM(Reserved2);
        ORBIT_TRACK_PARAM(phNewContext);
        ORBIT_TRACK_PARAM(pOutput);
        ORBIT_TRACK_PARAM(pfContextAttr);
        ORBIT_TRACK_PARAM(ptsExpiry);

        auto win32_impl_result = g_api_table.InitializeSecurityContextA(phCredential, phContext, pszTargetName, fContextReq, Reserved1, TargetDataRep, pInput, Reserved2, phNewContext, pOutput, pfContextAttr, ptsExpiry);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_AcceptSecurityContext(win32::Windows::Win32::Security::Credentials::SecHandle* phCredential, win32::Windows::Win32::Security::Credentials::SecHandle* phContext, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pInput, win32::Windows::Win32::Security::Authentication::Identity::ACCEPT_SECURITY_CONTEXT_CONTEXT_REQ fContextReq, uint32_t TargetDataRep, win32::Windows::Win32::Security::Credentials::SecHandle* phNewContext, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pOutput, uint32_t* pfContextAttr, win32::Windows::Win32::Foundation::LARGE_INTEGER* ptsExpiry) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phCredential);
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(pInput);
        ORBIT_TRACK_PARAM(fContextReq);
        ORBIT_TRACK_PARAM(TargetDataRep);
        ORBIT_TRACK_PARAM(phNewContext);
        ORBIT_TRACK_PARAM(pOutput);
        ORBIT_TRACK_PARAM(pfContextAttr);
        ORBIT_TRACK_PARAM(ptsExpiry);

        auto win32_impl_result = g_api_table.AcceptSecurityContext(phCredential, phContext, pInput, fContextReq, TargetDataRep, phNewContext, pOutput, pfContextAttr, ptsExpiry);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_CompleteAuthToken(win32::Windows::Win32::Security::Credentials::SecHandle* phContext, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pToken) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(pToken);

        auto win32_impl_result = g_api_table.CompleteAuthToken(phContext, pToken);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_ImpersonateSecurityContext(win32::Windows::Win32::Security::Credentials::SecHandle* phContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phContext);

        auto win32_impl_result = g_api_table.ImpersonateSecurityContext(phContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_RevertSecurityContext(win32::Windows::Win32::Security::Credentials::SecHandle* phContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phContext);

        auto win32_impl_result = g_api_table.RevertSecurityContext(phContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_QuerySecurityContextToken(win32::Windows::Win32::Security::Credentials::SecHandle* phContext, void** Token) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(Token);

        auto win32_impl_result = g_api_table.QuerySecurityContextToken(phContext, Token);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DeleteSecurityContext(win32::Windows::Win32::Security::Credentials::SecHandle* phContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phContext);

        auto win32_impl_result = g_api_table.DeleteSecurityContext(phContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_ApplyControlToken(win32::Windows::Win32::Security::Credentials::SecHandle* phContext, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pInput) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(pInput);

        auto win32_impl_result = g_api_table.ApplyControlToken(phContext, pInput);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_QueryContextAttributesW(win32::Windows::Win32::Security::Credentials::SecHandle* phContext, win32::Windows::Win32::Security::Authentication::Identity::SECPKG_ATTR ulAttribute, void* pBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(ulAttribute);
        ORBIT_TRACK_PARAM(pBuffer);

        auto win32_impl_result = g_api_table.QueryContextAttributesW(phContext, ulAttribute, pBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_QueryContextAttributesExW(win32::Windows::Win32::Security::Credentials::SecHandle* phContext, win32::Windows::Win32::Security::Authentication::Identity::SECPKG_ATTR ulAttribute, void* pBuffer, uint32_t cbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(ulAttribute);
        ORBIT_TRACK_PARAM(pBuffer);
        ORBIT_TRACK_PARAM(cbBuffer);

        auto win32_impl_result = g_api_table.QueryContextAttributesExW(phContext, ulAttribute, pBuffer, cbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_QueryContextAttributesA(win32::Windows::Win32::Security::Credentials::SecHandle* phContext, win32::Windows::Win32::Security::Authentication::Identity::SECPKG_ATTR ulAttribute, void* pBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(ulAttribute);
        ORBIT_TRACK_PARAM(pBuffer);

        auto win32_impl_result = g_api_table.QueryContextAttributesA(phContext, ulAttribute, pBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_QueryContextAttributesExA(win32::Windows::Win32::Security::Credentials::SecHandle* phContext, win32::Windows::Win32::Security::Authentication::Identity::SECPKG_ATTR ulAttribute, void* pBuffer, uint32_t cbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(ulAttribute);
        ORBIT_TRACK_PARAM(pBuffer);
        ORBIT_TRACK_PARAM(cbBuffer);

        auto win32_impl_result = g_api_table.QueryContextAttributesExA(phContext, ulAttribute, pBuffer, cbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SetContextAttributesW(win32::Windows::Win32::Security::Credentials::SecHandle* phContext, win32::Windows::Win32::Security::Authentication::Identity::SECPKG_ATTR ulAttribute, void* pBuffer, uint32_t cbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(ulAttribute);
        ORBIT_TRACK_PARAM(pBuffer);
        ORBIT_TRACK_PARAM(cbBuffer);

        auto win32_impl_result = g_api_table.SetContextAttributesW(phContext, ulAttribute, pBuffer, cbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SetContextAttributesA(win32::Windows::Win32::Security::Credentials::SecHandle* phContext, win32::Windows::Win32::Security::Authentication::Identity::SECPKG_ATTR ulAttribute, void* pBuffer, uint32_t cbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(ulAttribute);
        ORBIT_TRACK_PARAM(pBuffer);
        ORBIT_TRACK_PARAM(cbBuffer);

        auto win32_impl_result = g_api_table.SetContextAttributesA(phContext, ulAttribute, pBuffer, cbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_QueryCredentialsAttributesW(win32::Windows::Win32::Security::Credentials::SecHandle* phCredential, uint32_t ulAttribute, void* pBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phCredential);
        ORBIT_TRACK_PARAM(ulAttribute);
        ORBIT_TRACK_PARAM(pBuffer);

        auto win32_impl_result = g_api_table.QueryCredentialsAttributesW(phCredential, ulAttribute, pBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_QueryCredentialsAttributesExW(win32::Windows::Win32::Security::Credentials::SecHandle* phCredential, uint32_t ulAttribute, void* pBuffer, uint32_t cbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phCredential);
        ORBIT_TRACK_PARAM(ulAttribute);
        ORBIT_TRACK_PARAM(pBuffer);
        ORBIT_TRACK_PARAM(cbBuffer);

        auto win32_impl_result = g_api_table.QueryCredentialsAttributesExW(phCredential, ulAttribute, pBuffer, cbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_QueryCredentialsAttributesA(win32::Windows::Win32::Security::Credentials::SecHandle* phCredential, uint32_t ulAttribute, void* pBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phCredential);
        ORBIT_TRACK_PARAM(ulAttribute);
        ORBIT_TRACK_PARAM(pBuffer);

        auto win32_impl_result = g_api_table.QueryCredentialsAttributesA(phCredential, ulAttribute, pBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_QueryCredentialsAttributesExA(win32::Windows::Win32::Security::Credentials::SecHandle* phCredential, uint32_t ulAttribute, void* pBuffer, uint32_t cbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phCredential);
        ORBIT_TRACK_PARAM(ulAttribute);
        ORBIT_TRACK_PARAM(pBuffer);
        ORBIT_TRACK_PARAM(cbBuffer);

        auto win32_impl_result = g_api_table.QueryCredentialsAttributesExA(phCredential, ulAttribute, pBuffer, cbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SetCredentialsAttributesW(win32::Windows::Win32::Security::Credentials::SecHandle* phCredential, uint32_t ulAttribute, void* pBuffer, uint32_t cbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phCredential);
        ORBIT_TRACK_PARAM(ulAttribute);
        ORBIT_TRACK_PARAM(pBuffer);
        ORBIT_TRACK_PARAM(cbBuffer);

        auto win32_impl_result = g_api_table.SetCredentialsAttributesW(phCredential, ulAttribute, pBuffer, cbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SetCredentialsAttributesA(win32::Windows::Win32::Security::Credentials::SecHandle* phCredential, uint32_t ulAttribute, void* pBuffer, uint32_t cbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phCredential);
        ORBIT_TRACK_PARAM(ulAttribute);
        ORBIT_TRACK_PARAM(pBuffer);
        ORBIT_TRACK_PARAM(cbBuffer);

        auto win32_impl_result = g_api_table.SetCredentialsAttributesA(phCredential, ulAttribute, pBuffer, cbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_FreeContextBuffer(void* pvContextBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pvContextBuffer);

        auto win32_impl_result = g_api_table.FreeContextBuffer(pvContextBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_MakeSignature(win32::Windows::Win32::Security::Credentials::SecHandle* phContext, uint32_t fQOP, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pMessage, uint32_t MessageSeqNo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(fQOP);
        ORBIT_TRACK_PARAM(pMessage);
        ORBIT_TRACK_PARAM(MessageSeqNo);

        auto win32_impl_result = g_api_table.MakeSignature(phContext, fQOP, pMessage, MessageSeqNo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_VerifySignature(win32::Windows::Win32::Security::Credentials::SecHandle* phContext, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pMessage, uint32_t MessageSeqNo, uint32_t* pfQOP) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(pMessage);
        ORBIT_TRACK_PARAM(MessageSeqNo);
        ORBIT_TRACK_PARAM(pfQOP);

        auto win32_impl_result = g_api_table.VerifySignature(phContext, pMessage, MessageSeqNo, pfQOP);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_EncryptMessage(win32::Windows::Win32::Security::Credentials::SecHandle* phContext, uint32_t fQOP, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pMessage, uint32_t MessageSeqNo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(fQOP);
        ORBIT_TRACK_PARAM(pMessage);
        ORBIT_TRACK_PARAM(MessageSeqNo);

        auto win32_impl_result = g_api_table.EncryptMessage(phContext, fQOP, pMessage, MessageSeqNo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DecryptMessage(win32::Windows::Win32::Security::Credentials::SecHandle* phContext, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pMessage, uint32_t MessageSeqNo, uint32_t* pfQOP) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(pMessage);
        ORBIT_TRACK_PARAM(MessageSeqNo);
        ORBIT_TRACK_PARAM(pfQOP);

        auto win32_impl_result = g_api_table.DecryptMessage(phContext, pMessage, MessageSeqNo, pfQOP);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_EnumerateSecurityPackagesW(uint32_t* pcPackages, win32::Windows::Win32::Security::Authentication::Identity::SecPkgInfoW** ppPackageInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pcPackages);
        ORBIT_TRACK_PARAM(ppPackageInfo);

        auto win32_impl_result = g_api_table.EnumerateSecurityPackagesW(pcPackages, ppPackageInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_EnumerateSecurityPackagesA(uint32_t* pcPackages, win32::Windows::Win32::Security::Authentication::Identity::SecPkgInfoA** ppPackageInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pcPackages);
        ORBIT_TRACK_PARAM(ppPackageInfo);

        auto win32_impl_result = g_api_table.EnumerateSecurityPackagesA(pcPackages, ppPackageInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_QuerySecurityPackageInfoW(win32::Windows::Win32::Foundation::PWSTR pszPackageName, win32::Windows::Win32::Security::Authentication::Identity::SecPkgInfoW** ppPackageInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPackageName);
        ORBIT_TRACK_PARAM(ppPackageInfo);

        auto win32_impl_result = g_api_table.QuerySecurityPackageInfoW(pszPackageName, ppPackageInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_QuerySecurityPackageInfoA(win32::Windows::Win32::Foundation::PSTR pszPackageName, win32::Windows::Win32::Security::Authentication::Identity::SecPkgInfoA** ppPackageInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPackageName);
        ORBIT_TRACK_PARAM(ppPackageInfo);

        auto win32_impl_result = g_api_table.QuerySecurityPackageInfoA(pszPackageName, ppPackageInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_ExportSecurityContext(win32::Windows::Win32::Security::Credentials::SecHandle* phContext, win32::Windows::Win32::Security::Authentication::Identity::EXPORT_SECURITY_CONTEXT_FLAGS fFlags, win32::Windows::Win32::Security::Authentication::Identity::SecBuffer* pPackedContext, void** pToken) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(fFlags);
        ORBIT_TRACK_PARAM(pPackedContext);
        ORBIT_TRACK_PARAM(pToken);

        auto win32_impl_result = g_api_table.ExportSecurityContext(phContext, fFlags, pPackedContext, pToken);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_ImportSecurityContextW(win32::Windows::Win32::Foundation::PWSTR pszPackage, win32::Windows::Win32::Security::Authentication::Identity::SecBuffer* pPackedContext, void* Token, win32::Windows::Win32::Security::Credentials::SecHandle* phContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPackage);
        ORBIT_TRACK_PARAM(pPackedContext);
        ORBIT_TRACK_PARAM(Token);
        ORBIT_TRACK_PARAM(phContext);

        auto win32_impl_result = g_api_table.ImportSecurityContextW(pszPackage, pPackedContext, Token, phContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_ImportSecurityContextA(win32::Windows::Win32::Foundation::PSTR pszPackage, win32::Windows::Win32::Security::Authentication::Identity::SecBuffer* pPackedContext, void* Token, win32::Windows::Win32::Security::Credentials::SecHandle* phContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPackage);
        ORBIT_TRACK_PARAM(pPackedContext);
        ORBIT_TRACK_PARAM(Token);
        ORBIT_TRACK_PARAM(phContext);

        auto win32_impl_result = g_api_table.ImportSecurityContextA(pszPackage, pPackedContext, Token, phContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::Authentication::Identity::SecurityFunctionTableA* __stdcall ORBIT_IMPL_InitSecurityInterfaceA() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.InitSecurityInterfaceA();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::Authentication::Identity::SecurityFunctionTableW* __stdcall ORBIT_IMPL_InitSecurityInterfaceW() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.InitSecurityInterfaceW();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SaslEnumerateProfilesA(win32::Windows::Win32::Foundation::PSTR* ProfileList, uint32_t* ProfileCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ProfileList);
        ORBIT_TRACK_PARAM(ProfileCount);

        auto win32_impl_result = g_api_table.SaslEnumerateProfilesA(ProfileList, ProfileCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SaslEnumerateProfilesW(win32::Windows::Win32::Foundation::PWSTR* ProfileList, uint32_t* ProfileCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ProfileList);
        ORBIT_TRACK_PARAM(ProfileCount);

        auto win32_impl_result = g_api_table.SaslEnumerateProfilesW(ProfileList, ProfileCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SaslGetProfilePackageA(win32::Windows::Win32::Foundation::PSTR ProfileName, win32::Windows::Win32::Security::Authentication::Identity::SecPkgInfoA** PackageInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ProfileName);
        ORBIT_TRACK_PARAM(PackageInfo);

        auto win32_impl_result = g_api_table.SaslGetProfilePackageA(ProfileName, PackageInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SaslGetProfilePackageW(win32::Windows::Win32::Foundation::PWSTR ProfileName, win32::Windows::Win32::Security::Authentication::Identity::SecPkgInfoW** PackageInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ProfileName);
        ORBIT_TRACK_PARAM(PackageInfo);

        auto win32_impl_result = g_api_table.SaslGetProfilePackageW(ProfileName, PackageInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SaslIdentifyPackageA(win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pInput, win32::Windows::Win32::Security::Authentication::Identity::SecPkgInfoA** PackageInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pInput);
        ORBIT_TRACK_PARAM(PackageInfo);

        auto win32_impl_result = g_api_table.SaslIdentifyPackageA(pInput, PackageInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SaslIdentifyPackageW(win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pInput, win32::Windows::Win32::Security::Authentication::Identity::SecPkgInfoW** PackageInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pInput);
        ORBIT_TRACK_PARAM(PackageInfo);

        auto win32_impl_result = g_api_table.SaslIdentifyPackageW(pInput, PackageInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SaslInitializeSecurityContextW(win32::Windows::Win32::Security::Credentials::SecHandle* phCredential, win32::Windows::Win32::Security::Credentials::SecHandle* phContext, win32::Windows::Win32::Foundation::PWSTR pszTargetName, uint32_t fContextReq, uint32_t Reserved1, uint32_t TargetDataRep, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pInput, uint32_t Reserved2, win32::Windows::Win32::Security::Credentials::SecHandle* phNewContext, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pOutput, uint32_t* pfContextAttr, win32::Windows::Win32::Foundation::LARGE_INTEGER* ptsExpiry) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phCredential);
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(pszTargetName);
        ORBIT_TRACK_PARAM(fContextReq);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(TargetDataRep);
        ORBIT_TRACK_PARAM(pInput);
        ORBIT_TRACK_PARAM(Reserved2);
        ORBIT_TRACK_PARAM(phNewContext);
        ORBIT_TRACK_PARAM(pOutput);
        ORBIT_TRACK_PARAM(pfContextAttr);
        ORBIT_TRACK_PARAM(ptsExpiry);

        auto win32_impl_result = g_api_table.SaslInitializeSecurityContextW(phCredential, phContext, pszTargetName, fContextReq, Reserved1, TargetDataRep, pInput, Reserved2, phNewContext, pOutput, pfContextAttr, ptsExpiry);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SaslInitializeSecurityContextA(win32::Windows::Win32::Security::Credentials::SecHandle* phCredential, win32::Windows::Win32::Security::Credentials::SecHandle* phContext, win32::Windows::Win32::Foundation::PSTR pszTargetName, uint32_t fContextReq, uint32_t Reserved1, uint32_t TargetDataRep, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pInput, uint32_t Reserved2, win32::Windows::Win32::Security::Credentials::SecHandle* phNewContext, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pOutput, uint32_t* pfContextAttr, win32::Windows::Win32::Foundation::LARGE_INTEGER* ptsExpiry) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phCredential);
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(pszTargetName);
        ORBIT_TRACK_PARAM(fContextReq);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(TargetDataRep);
        ORBIT_TRACK_PARAM(pInput);
        ORBIT_TRACK_PARAM(Reserved2);
        ORBIT_TRACK_PARAM(phNewContext);
        ORBIT_TRACK_PARAM(pOutput);
        ORBIT_TRACK_PARAM(pfContextAttr);
        ORBIT_TRACK_PARAM(ptsExpiry);

        auto win32_impl_result = g_api_table.SaslInitializeSecurityContextA(phCredential, phContext, pszTargetName, fContextReq, Reserved1, TargetDataRep, pInput, Reserved2, phNewContext, pOutput, pfContextAttr, ptsExpiry);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SaslAcceptSecurityContext(win32::Windows::Win32::Security::Credentials::SecHandle* phCredential, win32::Windows::Win32::Security::Credentials::SecHandle* phContext, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pInput, uint32_t fContextReq, uint32_t TargetDataRep, win32::Windows::Win32::Security::Credentials::SecHandle* phNewContext, win32::Windows::Win32::Security::Authentication::Identity::SecBufferDesc* pOutput, uint32_t* pfContextAttr, win32::Windows::Win32::Foundation::LARGE_INTEGER* ptsExpiry) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phCredential);
        ORBIT_TRACK_PARAM(phContext);
        ORBIT_TRACK_PARAM(pInput);
        ORBIT_TRACK_PARAM(fContextReq);
        ORBIT_TRACK_PARAM(TargetDataRep);
        ORBIT_TRACK_PARAM(phNewContext);
        ORBIT_TRACK_PARAM(pOutput);
        ORBIT_TRACK_PARAM(pfContextAttr);
        ORBIT_TRACK_PARAM(ptsExpiry);

        auto win32_impl_result = g_api_table.SaslAcceptSecurityContext(phCredential, phContext, pInput, fContextReq, TargetDataRep, phNewContext, pOutput, pfContextAttr, ptsExpiry);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SaslSetContextOption(win32::Windows::Win32::Security::Credentials::SecHandle* ContextHandle, uint32_t Option, void* Value, uint32_t Size) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ContextHandle);
        ORBIT_TRACK_PARAM(Option);
        ORBIT_TRACK_PARAM(Value);
        ORBIT_TRACK_PARAM(Size);

        auto win32_impl_result = g_api_table.SaslSetContextOption(ContextHandle, Option, Value, Size);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SaslGetContextOption(win32::Windows::Win32::Security::Credentials::SecHandle* ContextHandle, uint32_t Option, void* Value, uint32_t Size, uint32_t* Needed) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ContextHandle);
        ORBIT_TRACK_PARAM(Option);
        ORBIT_TRACK_PARAM(Value);
        ORBIT_TRACK_PARAM(Size);
        ORBIT_TRACK_PARAM(Needed);

        auto win32_impl_result = g_api_table.SaslGetContextOption(ContextHandle, Option, Value, Size, Needed);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SspiPromptForCredentialsW(win32::Windows::Win32::Foundation::PWSTR pszTargetName, void* pUiInfo, uint32_t dwAuthError, win32::Windows::Win32::Foundation::PWSTR pszPackage, void* pInputAuthIdentity, void** ppAuthIdentity, int32_t* pfSave, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszTargetName);
        ORBIT_TRACK_PARAM(pUiInfo);
        ORBIT_TRACK_PARAM(dwAuthError);
        ORBIT_TRACK_PARAM(pszPackage);
        ORBIT_TRACK_PARAM(pInputAuthIdentity);
        ORBIT_TRACK_PARAM(ppAuthIdentity);
        ORBIT_TRACK_PARAM(pfSave);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.SspiPromptForCredentialsW(pszTargetName, pUiInfo, dwAuthError, pszPackage, pInputAuthIdentity, ppAuthIdentity, pfSave, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SspiPromptForCredentialsA(win32::Windows::Win32::Foundation::PSTR pszTargetName, void* pUiInfo, uint32_t dwAuthError, win32::Windows::Win32::Foundation::PSTR pszPackage, void* pInputAuthIdentity, void** ppAuthIdentity, int32_t* pfSave, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszTargetName);
        ORBIT_TRACK_PARAM(pUiInfo);
        ORBIT_TRACK_PARAM(dwAuthError);
        ORBIT_TRACK_PARAM(pszPackage);
        ORBIT_TRACK_PARAM(pInputAuthIdentity);
        ORBIT_TRACK_PARAM(ppAuthIdentity);
        ORBIT_TRACK_PARAM(pfSave);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.SspiPromptForCredentialsA(pszTargetName, pUiInfo, dwAuthError, pszPackage, pInputAuthIdentity, ppAuthIdentity, pfSave, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SspiPrepareForCredRead(void* AuthIdentity, win32::Windows::Win32::Foundation::PWSTR pszTargetName, uint32_t* pCredmanCredentialType, win32::Windows::Win32::Foundation::PWSTR* ppszCredmanTargetName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AuthIdentity);
        ORBIT_TRACK_PARAM(pszTargetName);
        ORBIT_TRACK_PARAM(pCredmanCredentialType);
        ORBIT_TRACK_PARAM(ppszCredmanTargetName);

        auto win32_impl_result = g_api_table.SspiPrepareForCredRead(AuthIdentity, pszTargetName, pCredmanCredentialType, ppszCredmanTargetName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SspiPrepareForCredWrite(void* AuthIdentity, win32::Windows::Win32::Foundation::PWSTR pszTargetName, uint32_t* pCredmanCredentialType, win32::Windows::Win32::Foundation::PWSTR* ppszCredmanTargetName, win32::Windows::Win32::Foundation::PWSTR* ppszCredmanUserName, uint8_t** ppCredentialBlob, uint32_t* pCredentialBlobSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AuthIdentity);
        ORBIT_TRACK_PARAM(pszTargetName);
        ORBIT_TRACK_PARAM(pCredmanCredentialType);
        ORBIT_TRACK_PARAM(ppszCredmanTargetName);
        ORBIT_TRACK_PARAM(ppszCredmanUserName);
        ORBIT_TRACK_PARAM(ppCredentialBlob);
        ORBIT_TRACK_PARAM(pCredentialBlobSize);

        auto win32_impl_result = g_api_table.SspiPrepareForCredWrite(AuthIdentity, pszTargetName, pCredmanCredentialType, ppszCredmanTargetName, ppszCredmanUserName, ppCredentialBlob, pCredentialBlobSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SspiEncryptAuthIdentity(void* AuthData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AuthData);

        auto win32_impl_result = g_api_table.SspiEncryptAuthIdentity(AuthData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SspiEncryptAuthIdentityEx(uint32_t Options, void* AuthData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Options);
        ORBIT_TRACK_PARAM(AuthData);

        auto win32_impl_result = g_api_table.SspiEncryptAuthIdentityEx(Options, AuthData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SspiDecryptAuthIdentity(void* EncryptedAuthData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(EncryptedAuthData);

        auto win32_impl_result = g_api_table.SspiDecryptAuthIdentity(EncryptedAuthData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SspiDecryptAuthIdentityEx(uint32_t Options, void* EncryptedAuthData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Options);
        ORBIT_TRACK_PARAM(EncryptedAuthData);

        auto win32_impl_result = g_api_table.SspiDecryptAuthIdentityEx(Options, EncryptedAuthData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_SspiIsAuthIdentityEncrypted(void* EncryptedAuthData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(EncryptedAuthData);

        auto win32_impl_result = g_api_table.SspiIsAuthIdentityEncrypted(EncryptedAuthData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SspiEncodeAuthIdentityAsStrings(void* pAuthIdentity, win32::Windows::Win32::Foundation::PWSTR* ppszUserName, win32::Windows::Win32::Foundation::PWSTR* ppszDomainName, win32::Windows::Win32::Foundation::PWSTR* ppszPackedCredentialsString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAuthIdentity);
        ORBIT_TRACK_PARAM(ppszUserName);
        ORBIT_TRACK_PARAM(ppszDomainName);
        ORBIT_TRACK_PARAM(ppszPackedCredentialsString);

        auto win32_impl_result = g_api_table.SspiEncodeAuthIdentityAsStrings(pAuthIdentity, ppszUserName, ppszDomainName, ppszPackedCredentialsString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SspiValidateAuthIdentity(void* AuthData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AuthData);

        auto win32_impl_result = g_api_table.SspiValidateAuthIdentity(AuthData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SspiCopyAuthIdentity(void* AuthData, void** AuthDataCopy) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AuthData);
        ORBIT_TRACK_PARAM(AuthDataCopy);

        auto win32_impl_result = g_api_table.SspiCopyAuthIdentity(AuthData, AuthDataCopy);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_SspiFreeAuthIdentity(void* AuthData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AuthData);

        g_api_table.SspiFreeAuthIdentity(AuthData);
        
    }

    void __stdcall ORBIT_IMPL_SspiZeroAuthIdentity(void* AuthData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AuthData);

        g_api_table.SspiZeroAuthIdentity(AuthData);
        
    }

    void __stdcall ORBIT_IMPL_SspiLocalFree(void* DataBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DataBuffer);

        g_api_table.SspiLocalFree(DataBuffer);
        
    }

    int32_t __stdcall ORBIT_IMPL_SspiEncodeStringsAsAuthIdentity(win32::Windows::Win32::Foundation::PWSTR pszUserName, win32::Windows::Win32::Foundation::PWSTR pszDomainName, win32::Windows::Win32::Foundation::PWSTR pszPackedCredentialsString, void** ppAuthIdentity) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszUserName);
        ORBIT_TRACK_PARAM(pszDomainName);
        ORBIT_TRACK_PARAM(pszPackedCredentialsString);
        ORBIT_TRACK_PARAM(ppAuthIdentity);

        auto win32_impl_result = g_api_table.SspiEncodeStringsAsAuthIdentity(pszUserName, pszDomainName, pszPackedCredentialsString, ppAuthIdentity);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SspiCompareAuthIdentities(void* AuthIdentity1, void* AuthIdentity2, win32::Windows::Win32::Foundation::BOOLEAN* SameSuppliedUser, win32::Windows::Win32::Foundation::BOOLEAN* SameSuppliedIdentity) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AuthIdentity1);
        ORBIT_TRACK_PARAM(AuthIdentity2);
        ORBIT_TRACK_PARAM(SameSuppliedUser);
        ORBIT_TRACK_PARAM(SameSuppliedIdentity);

        auto win32_impl_result = g_api_table.SspiCompareAuthIdentities(AuthIdentity1, AuthIdentity2, SameSuppliedUser, SameSuppliedIdentity);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SspiMarshalAuthIdentity(void* AuthIdentity, uint32_t* AuthIdentityLength, int8_t** AuthIdentityByteArray) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AuthIdentity);
        ORBIT_TRACK_PARAM(AuthIdentityLength);
        ORBIT_TRACK_PARAM(AuthIdentityByteArray);

        auto win32_impl_result = g_api_table.SspiMarshalAuthIdentity(AuthIdentity, AuthIdentityLength, AuthIdentityByteArray);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SspiUnmarshalAuthIdentity(uint32_t AuthIdentityLength, win32::Windows::Win32::Foundation::PSTR AuthIdentityByteArray, void** ppAuthIdentity) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AuthIdentityLength);
        ORBIT_TRACK_PARAM(AuthIdentityByteArray);
        ORBIT_TRACK_PARAM(ppAuthIdentity);

        auto win32_impl_result = g_api_table.SspiUnmarshalAuthIdentity(AuthIdentityLength, AuthIdentityByteArray, ppAuthIdentity);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_SspiIsPromptingNeeded(uint32_t ErrorOrNtStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ErrorOrNtStatus);

        auto win32_impl_result = g_api_table.SspiIsPromptingNeeded(ErrorOrNtStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SspiGetTargetHostName(win32::Windows::Win32::Foundation::PWSTR pszTargetName, win32::Windows::Win32::Foundation::PWSTR* pszHostName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszTargetName);
        ORBIT_TRACK_PARAM(pszHostName);

        auto win32_impl_result = g_api_table.SspiGetTargetHostName(pszTargetName, pszHostName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SspiExcludePackage(void* AuthIdentity, win32::Windows::Win32::Foundation::PWSTR pszPackageName, void** ppNewAuthIdentity) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AuthIdentity);
        ORBIT_TRACK_PARAM(pszPackageName);
        ORBIT_TRACK_PARAM(ppNewAuthIdentity);

        auto win32_impl_result = g_api_table.SspiExcludePackage(AuthIdentity, pszPackageName, ppNewAuthIdentity);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_AddSecurityPackageA(win32::Windows::Win32::Foundation::PSTR pszPackageName, win32::Windows::Win32::Security::Authentication::Identity::SECURITY_PACKAGE_OPTIONS* pOptions) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPackageName);
        ORBIT_TRACK_PARAM(pOptions);

        auto win32_impl_result = g_api_table.AddSecurityPackageA(pszPackageName, pOptions);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_AddSecurityPackageW(win32::Windows::Win32::Foundation::PWSTR pszPackageName, win32::Windows::Win32::Security::Authentication::Identity::SECURITY_PACKAGE_OPTIONS* pOptions) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPackageName);
        ORBIT_TRACK_PARAM(pOptions);

        auto win32_impl_result = g_api_table.AddSecurityPackageW(pszPackageName, pOptions);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DeleteSecurityPackageA(win32::Windows::Win32::Foundation::PSTR pszPackageName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPackageName);

        auto win32_impl_result = g_api_table.DeleteSecurityPackageA(pszPackageName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DeleteSecurityPackageW(win32::Windows::Win32::Foundation::PWSTR pszPackageName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszPackageName);

        auto win32_impl_result = g_api_table.DeleteSecurityPackageW(pszPackageName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_CredMarshalTargetInfo(win32::Windows::Win32::Security::Credentials::CREDENTIAL_TARGET_INFORMATIONW* InTargetInfo, uint16_t** Buffer, uint32_t* BufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InTargetInfo);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferSize);

        auto win32_impl_result = g_api_table.CredMarshalTargetInfo(InTargetInfo, Buffer, BufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_CredUnmarshalTargetInfo(uint16_t* Buffer, uint32_t BufferSize, win32::Windows::Win32::Security::Credentials::CREDENTIAL_TARGET_INFORMATIONW** RetTargetInfo, uint32_t* RetActualSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferSize);
        ORBIT_TRACK_PARAM(RetTargetInfo);
        ORBIT_TRACK_PARAM(RetActualSize);

        auto win32_impl_result = g_api_table.CredUnmarshalTargetInfo(Buffer, BufferSize, RetTargetInfo, RetActualSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SslEmptyCacheA(win32::Windows::Win32::Foundation::PSTR pszTargetName, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszTargetName);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.SslEmptyCacheA(pszTargetName, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SslEmptyCacheW(win32::Windows::Win32::Foundation::PWSTR pszTargetName, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszTargetName);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.SslEmptyCacheW(pszTargetName, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_SslGenerateRandomBits(uint8_t* pRandomData, int32_t cRandomData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pRandomData);
        ORBIT_TRACK_PARAM(cRandomData);

        g_api_table.SslGenerateRandomBits(pRandomData, cRandomData);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SslCrackCertificate(uint8_t* pbCertificate, uint32_t cbCertificate, uint32_t dwFlags, win32::Windows::Win32::Security::Authentication::Identity::X509Certificate** ppCertificate) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pbCertificate);
        ORBIT_TRACK_PARAM(cbCertificate);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(ppCertificate);

        auto win32_impl_result = g_api_table.SslCrackCertificate(pbCertificate, cbCertificate, dwFlags, ppCertificate);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_SslFreeCertificate(win32::Windows::Win32::Security::Authentication::Identity::X509Certificate* pCertificate) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pCertificate);

        g_api_table.SslFreeCertificate(pCertificate);
        
    }

    uint32_t __stdcall ORBIT_IMPL_SslGetMaximumKeySize(uint32_t Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SslGetMaximumKeySize(Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SslGetServerIdentity(uint8_t* ClientHello, uint32_t ClientHelloSize, uint8_t** ServerIdentity, uint32_t* ServerIdentitySize, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClientHello);
        ORBIT_TRACK_PARAM(ClientHelloSize);
        ORBIT_TRACK_PARAM(ServerIdentity);
        ORBIT_TRACK_PARAM(ServerIdentitySize);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SslGetServerIdentity(ClientHello, ClientHelloSize, ServerIdentity, ServerIdentitySize, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SslGetExtensions(uint8_t* clientHello, uint32_t clientHelloByteSize, win32::Windows::Win32::Security::Authentication::Identity::SCH_EXTENSION_DATA* genericExtensions, uint8_t genericExtensionsCount, uint32_t* bytesToRead, win32::Windows::Win32::Security::Authentication::Identity::SchGetExtensionsOptions flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(clientHello);
        ORBIT_TRACK_PARAM(clientHelloByteSize);
        ORBIT_TRACK_PARAM(genericExtensions);
        ORBIT_TRACK_PARAM(genericExtensionsCount);
        ORBIT_TRACK_PARAM(bytesToRead);
        ORBIT_TRACK_PARAM(flags);

        auto win32_impl_result = g_api_table.SslGetExtensions(clientHello, clientHelloByteSize, genericExtensions, genericExtensionsCount, bytesToRead, flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_TokenBindingGenerateBinding(win32::Windows::Win32::Security::Authentication::Identity::TOKENBINDING_KEY_PARAMETERS_TYPE keyType, win32::Windows::Win32::Foundation::PWSTR targetURL, win32::Windows::Win32::Security::Authentication::Identity::TOKENBINDING_TYPE bindingType, void* tlsEKM, uint32_t tlsEKMSize, win32::Windows::Win32::Security::Authentication::Identity::TOKENBINDING_EXTENSION_FORMAT extensionFormat, void* extensionData, void** tokenBinding, uint32_t* tokenBindingSize, win32::Windows::Win32::Security::Authentication::Identity::TOKENBINDING_RESULT_DATA** resultData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(keyType);
        ORBIT_TRACK_PARAM(targetURL);
        ORBIT_TRACK_PARAM(bindingType);
        ORBIT_TRACK_PARAM(tlsEKM);
        ORBIT_TRACK_PARAM(tlsEKMSize);
        ORBIT_TRACK_PARAM(extensionFormat);
        ORBIT_TRACK_PARAM(extensionData);
        ORBIT_TRACK_PARAM(tokenBinding);
        ORBIT_TRACK_PARAM(tokenBindingSize);
        ORBIT_TRACK_PARAM(resultData);

        auto win32_impl_result = g_api_table.TokenBindingGenerateBinding(keyType, targetURL, bindingType, tlsEKM, tlsEKMSize, extensionFormat, extensionData, tokenBinding, tokenBindingSize, resultData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_TokenBindingGenerateMessage(void** tokenBindings, uint32_t* tokenBindingsSize, uint32_t tokenBindingsCount, void** tokenBindingMessage, uint32_t* tokenBindingMessageSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(tokenBindings);
        ORBIT_TRACK_PARAM(tokenBindingsSize);
        ORBIT_TRACK_PARAM(tokenBindingsCount);
        ORBIT_TRACK_PARAM(tokenBindingMessage);
        ORBIT_TRACK_PARAM(tokenBindingMessageSize);

        auto win32_impl_result = g_api_table.TokenBindingGenerateMessage(tokenBindings, tokenBindingsSize, tokenBindingsCount, tokenBindingMessage, tokenBindingMessageSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_TokenBindingVerifyMessage(void* tokenBindingMessage, uint32_t tokenBindingMessageSize, win32::Windows::Win32::Security::Authentication::Identity::TOKENBINDING_KEY_PARAMETERS_TYPE keyType, void* tlsEKM, uint32_t tlsEKMSize, win32::Windows::Win32::Security::Authentication::Identity::TOKENBINDING_RESULT_LIST** resultList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(tokenBindingMessage);
        ORBIT_TRACK_PARAM(tokenBindingMessageSize);
        ORBIT_TRACK_PARAM(keyType);
        ORBIT_TRACK_PARAM(tlsEKM);
        ORBIT_TRACK_PARAM(tlsEKMSize);
        ORBIT_TRACK_PARAM(resultList);

        auto win32_impl_result = g_api_table.TokenBindingVerifyMessage(tokenBindingMessage, tokenBindingMessageSize, keyType, tlsEKM, tlsEKMSize, resultList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_TokenBindingGetKeyTypesClient(win32::Windows::Win32::Security::Authentication::Identity::TOKENBINDING_KEY_TYPES** keyTypes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(keyTypes);

        auto win32_impl_result = g_api_table.TokenBindingGetKeyTypesClient(keyTypes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_TokenBindingGetKeyTypesServer(win32::Windows::Win32::Security::Authentication::Identity::TOKENBINDING_KEY_TYPES** keyTypes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(keyTypes);

        auto win32_impl_result = g_api_table.TokenBindingGetKeyTypesServer(keyTypes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_TokenBindingDeleteBinding(win32::Windows::Win32::Foundation::PWSTR targetURL) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(targetURL);

        auto win32_impl_result = g_api_table.TokenBindingDeleteBinding(targetURL);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_TokenBindingDeleteAllBindings() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.TokenBindingDeleteAllBindings();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_TokenBindingGenerateID(win32::Windows::Win32::Security::Authentication::Identity::TOKENBINDING_KEY_PARAMETERS_TYPE keyType, void* publicKey, uint32_t publicKeySize, win32::Windows::Win32::Security::Authentication::Identity::TOKENBINDING_RESULT_DATA** resultData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(keyType);
        ORBIT_TRACK_PARAM(publicKey);
        ORBIT_TRACK_PARAM(publicKeySize);
        ORBIT_TRACK_PARAM(resultData);

        auto win32_impl_result = g_api_table.TokenBindingGenerateID(keyType, publicKey, publicKeySize, resultData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_TokenBindingGenerateIDForUri(win32::Windows::Win32::Security::Authentication::Identity::TOKENBINDING_KEY_PARAMETERS_TYPE keyType, win32::Windows::Win32::Foundation::PWSTR targetUri, win32::Windows::Win32::Security::Authentication::Identity::TOKENBINDING_RESULT_DATA** resultData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(keyType);
        ORBIT_TRACK_PARAM(targetUri);
        ORBIT_TRACK_PARAM(resultData);

        auto win32_impl_result = g_api_table.TokenBindingGenerateIDForUri(keyType, targetUri, resultData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_TokenBindingGetHighestSupportedVersion(uint8_t* majorVersion, uint8_t* minorVersion) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(majorVersion);
        ORBIT_TRACK_PARAM(minorVersion);

        auto win32_impl_result = g_api_table.TokenBindingGetHighestSupportedVersion(majorVersion, minorVersion);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_GetUserNameExA(win32::Windows::Win32::Security::Authentication::Identity::EXTENDED_NAME_FORMAT NameFormat, win32::Windows::Win32::Foundation::PSTR lpNameBuffer, uint32_t* nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NameFormat);
        ORBIT_TRACK_PARAM(lpNameBuffer);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.GetUserNameExA(NameFormat, lpNameBuffer, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_GetUserNameExW(win32::Windows::Win32::Security::Authentication::Identity::EXTENDED_NAME_FORMAT NameFormat, win32::Windows::Win32::Foundation::PWSTR lpNameBuffer, uint32_t* nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NameFormat);
        ORBIT_TRACK_PARAM(lpNameBuffer);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.GetUserNameExW(NameFormat, lpNameBuffer, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_GetComputerObjectNameA(win32::Windows::Win32::Security::Authentication::Identity::EXTENDED_NAME_FORMAT NameFormat, win32::Windows::Win32::Foundation::PSTR lpNameBuffer, uint32_t* nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NameFormat);
        ORBIT_TRACK_PARAM(lpNameBuffer);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.GetComputerObjectNameA(NameFormat, lpNameBuffer, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_GetComputerObjectNameW(win32::Windows::Win32::Security::Authentication::Identity::EXTENDED_NAME_FORMAT NameFormat, win32::Windows::Win32::Foundation::PWSTR lpNameBuffer, uint32_t* nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NameFormat);
        ORBIT_TRACK_PARAM(lpNameBuffer);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.GetComputerObjectNameW(NameFormat, lpNameBuffer, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_TranslateNameA(win32::Windows::Win32::Foundation::PSTR lpAccountName, win32::Windows::Win32::Security::Authentication::Identity::EXTENDED_NAME_FORMAT AccountNameFormat, win32::Windows::Win32::Security::Authentication::Identity::EXTENDED_NAME_FORMAT DesiredNameFormat, win32::Windows::Win32::Foundation::PSTR lpTranslatedName, uint32_t* nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAccountName);
        ORBIT_TRACK_PARAM(AccountNameFormat);
        ORBIT_TRACK_PARAM(DesiredNameFormat);
        ORBIT_TRACK_PARAM(lpTranslatedName);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.TranslateNameA(lpAccountName, AccountNameFormat, DesiredNameFormat, lpTranslatedName, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOLEAN __stdcall ORBIT_IMPL_TranslateNameW(win32::Windows::Win32::Foundation::PWSTR lpAccountName, win32::Windows::Win32::Security::Authentication::Identity::EXTENDED_NAME_FORMAT AccountNameFormat, win32::Windows::Win32::Security::Authentication::Identity::EXTENDED_NAME_FORMAT DesiredNameFormat, win32::Windows::Win32::Foundation::PWSTR lpTranslatedName, uint32_t* nSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpAccountName);
        ORBIT_TRACK_PARAM(AccountNameFormat);
        ORBIT_TRACK_PARAM(DesiredNameFormat);
        ORBIT_TRACK_PARAM(lpTranslatedName);
        ORBIT_TRACK_PARAM(nSize);

        auto win32_impl_result = g_api_table.TranslateNameW(lpAccountName, AccountNameFormat, DesiredNameFormat, lpTranslatedName, nSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLOpen(void** phSLC) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(phSLC);

        auto win32_impl_result = g_api_table.SLOpen(phSLC);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLClose(void* hSLC) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);

        auto win32_impl_result = g_api_table.SLClose(hSLC);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLInstallProofOfPurchase(void* hSLC, win32::Windows::Win32::Foundation::PWSTR pwszPKeyAlgorithm, win32::Windows::Win32::Foundation::PWSTR pwszPKeyString, uint32_t cbPKeySpecificData, uint8_t* pbPKeySpecificData, ::win32::guid* pPkeyId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pwszPKeyAlgorithm);
        ORBIT_TRACK_PARAM(pwszPKeyString);
        ORBIT_TRACK_PARAM(cbPKeySpecificData);
        ORBIT_TRACK_PARAM(pbPKeySpecificData);
        ORBIT_TRACK_PARAM(pPkeyId);

        auto win32_impl_result = g_api_table.SLInstallProofOfPurchase(hSLC, pwszPKeyAlgorithm, pwszPKeyString, cbPKeySpecificData, pbPKeySpecificData, pPkeyId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLUninstallProofOfPurchase(void* hSLC, ::win32::guid* pPKeyId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pPKeyId);

        auto win32_impl_result = g_api_table.SLUninstallProofOfPurchase(hSLC, pPKeyId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLInstallLicense(void* hSLC, uint32_t cbLicenseBlob, uint8_t* pbLicenseBlob, ::win32::guid* pLicenseFileId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(cbLicenseBlob);
        ORBIT_TRACK_PARAM(pbLicenseBlob);
        ORBIT_TRACK_PARAM(pLicenseFileId);

        auto win32_impl_result = g_api_table.SLInstallLicense(hSLC, cbLicenseBlob, pbLicenseBlob, pLicenseFileId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLUninstallLicense(void* hSLC, ::win32::guid* pLicenseFileId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pLicenseFileId);

        auto win32_impl_result = g_api_table.SLUninstallLicense(hSLC, pLicenseFileId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLConsumeRight(void* hSLC, ::win32::guid* pAppId, ::win32::guid* pProductSkuId, win32::Windows::Win32::Foundation::PWSTR pwszRightName, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pAppId);
        ORBIT_TRACK_PARAM(pProductSkuId);
        ORBIT_TRACK_PARAM(pwszRightName);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.SLConsumeRight(hSLC, pAppId, pProductSkuId, pwszRightName, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGetProductSkuInformation(void* hSLC, ::win32::guid* pProductSkuId, win32::Windows::Win32::Foundation::PWSTR pwszValueName, win32::Windows::Win32::Security::Authentication::Identity::SLDATATYPE* peDataType, uint32_t* pcbValue, uint8_t** ppbValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pProductSkuId);
        ORBIT_TRACK_PARAM(pwszValueName);
        ORBIT_TRACK_PARAM(peDataType);
        ORBIT_TRACK_PARAM(pcbValue);
        ORBIT_TRACK_PARAM(ppbValue);

        auto win32_impl_result = g_api_table.SLGetProductSkuInformation(hSLC, pProductSkuId, pwszValueName, peDataType, pcbValue, ppbValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGetPKeyInformation(void* hSLC, ::win32::guid* pPKeyId, win32::Windows::Win32::Foundation::PWSTR pwszValueName, win32::Windows::Win32::Security::Authentication::Identity::SLDATATYPE* peDataType, uint32_t* pcbValue, uint8_t** ppbValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pPKeyId);
        ORBIT_TRACK_PARAM(pwszValueName);
        ORBIT_TRACK_PARAM(peDataType);
        ORBIT_TRACK_PARAM(pcbValue);
        ORBIT_TRACK_PARAM(ppbValue);

        auto win32_impl_result = g_api_table.SLGetPKeyInformation(hSLC, pPKeyId, pwszValueName, peDataType, pcbValue, ppbValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGetLicenseInformation(void* hSLC, ::win32::guid* pSLLicenseId, win32::Windows::Win32::Foundation::PWSTR pwszValueName, win32::Windows::Win32::Security::Authentication::Identity::SLDATATYPE* peDataType, uint32_t* pcbValue, uint8_t** ppbValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pSLLicenseId);
        ORBIT_TRACK_PARAM(pwszValueName);
        ORBIT_TRACK_PARAM(peDataType);
        ORBIT_TRACK_PARAM(pcbValue);
        ORBIT_TRACK_PARAM(ppbValue);

        auto win32_impl_result = g_api_table.SLGetLicenseInformation(hSLC, pSLLicenseId, pwszValueName, peDataType, pcbValue, ppbValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGetLicensingStatusInformation(void* hSLC, ::win32::guid* pAppID, ::win32::guid* pProductSkuId, win32::Windows::Win32::Foundation::PWSTR pwszRightName, uint32_t* pnStatusCount, win32::Windows::Win32::Security::Authentication::Identity::SL_LICENSING_STATUS** ppLicensingStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pAppID);
        ORBIT_TRACK_PARAM(pProductSkuId);
        ORBIT_TRACK_PARAM(pwszRightName);
        ORBIT_TRACK_PARAM(pnStatusCount);
        ORBIT_TRACK_PARAM(ppLicensingStatus);

        auto win32_impl_result = g_api_table.SLGetLicensingStatusInformation(hSLC, pAppID, pProductSkuId, pwszRightName, pnStatusCount, ppLicensingStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGetPolicyInformation(void* hSLC, win32::Windows::Win32::Foundation::PWSTR pwszValueName, win32::Windows::Win32::Security::Authentication::Identity::SLDATATYPE* peDataType, uint32_t* pcbValue, uint8_t** ppbValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pwszValueName);
        ORBIT_TRACK_PARAM(peDataType);
        ORBIT_TRACK_PARAM(pcbValue);
        ORBIT_TRACK_PARAM(ppbValue);

        auto win32_impl_result = g_api_table.SLGetPolicyInformation(hSLC, pwszValueName, peDataType, pcbValue, ppbValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGetPolicyInformationDWORD(void* hSLC, win32::Windows::Win32::Foundation::PWSTR pwszValueName, uint32_t* pdwValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pwszValueName);
        ORBIT_TRACK_PARAM(pdwValue);

        auto win32_impl_result = g_api_table.SLGetPolicyInformationDWORD(hSLC, pwszValueName, pdwValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGetServiceInformation(void* hSLC, win32::Windows::Win32::Foundation::PWSTR pwszValueName, win32::Windows::Win32::Security::Authentication::Identity::SLDATATYPE* peDataType, uint32_t* pcbValue, uint8_t** ppbValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pwszValueName);
        ORBIT_TRACK_PARAM(peDataType);
        ORBIT_TRACK_PARAM(pcbValue);
        ORBIT_TRACK_PARAM(ppbValue);

        auto win32_impl_result = g_api_table.SLGetServiceInformation(hSLC, pwszValueName, peDataType, pcbValue, ppbValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGetApplicationInformation(void* hSLC, ::win32::guid* pApplicationId, win32::Windows::Win32::Foundation::PWSTR pwszValueName, win32::Windows::Win32::Security::Authentication::Identity::SLDATATYPE* peDataType, uint32_t* pcbValue, uint8_t** ppbValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pApplicationId);
        ORBIT_TRACK_PARAM(pwszValueName);
        ORBIT_TRACK_PARAM(peDataType);
        ORBIT_TRACK_PARAM(pcbValue);
        ORBIT_TRACK_PARAM(ppbValue);

        auto win32_impl_result = g_api_table.SLGetApplicationInformation(hSLC, pApplicationId, pwszValueName, peDataType, pcbValue, ppbValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLActivateProduct(void* hSLC, ::win32::guid* pProductSkuId, uint32_t cbAppSpecificData, void* pvAppSpecificData, win32::Windows::Win32::Security::Authentication::Identity::SL_ACTIVATION_INFO_HEADER* pActivationInfo, win32::Windows::Win32::Foundation::PWSTR pwszProxyServer, uint16_t wProxyPort) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pProductSkuId);
        ORBIT_TRACK_PARAM(cbAppSpecificData);
        ORBIT_TRACK_PARAM(pvAppSpecificData);
        ORBIT_TRACK_PARAM(pActivationInfo);
        ORBIT_TRACK_PARAM(pwszProxyServer);
        ORBIT_TRACK_PARAM(wProxyPort);

        auto win32_impl_result = g_api_table.SLActivateProduct(hSLC, pProductSkuId, cbAppSpecificData, pvAppSpecificData, pActivationInfo, pwszProxyServer, wProxyPort);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGetServerStatus(win32::Windows::Win32::Foundation::PWSTR pwszServerURL, win32::Windows::Win32::Foundation::PWSTR pwszAcquisitionType, win32::Windows::Win32::Foundation::PWSTR pwszProxyServer, uint16_t wProxyPort, win32::Windows::Win32::Foundation::HRESULT* phrStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pwszServerURL);
        ORBIT_TRACK_PARAM(pwszAcquisitionType);
        ORBIT_TRACK_PARAM(pwszProxyServer);
        ORBIT_TRACK_PARAM(wProxyPort);
        ORBIT_TRACK_PARAM(phrStatus);

        auto win32_impl_result = g_api_table.SLGetServerStatus(pwszServerURL, pwszAcquisitionType, pwszProxyServer, wProxyPort, phrStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGenerateOfflineInstallationId(void* hSLC, ::win32::guid* pProductSkuId, win32::Windows::Win32::Foundation::PWSTR* ppwszInstallationId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pProductSkuId);
        ORBIT_TRACK_PARAM(ppwszInstallationId);

        auto win32_impl_result = g_api_table.SLGenerateOfflineInstallationId(hSLC, pProductSkuId, ppwszInstallationId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGenerateOfflineInstallationIdEx(void* hSLC, ::win32::guid* pProductSkuId, win32::Windows::Win32::Security::Authentication::Identity::SL_ACTIVATION_INFO_HEADER* pActivationInfo, win32::Windows::Win32::Foundation::PWSTR* ppwszInstallationId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pProductSkuId);
        ORBIT_TRACK_PARAM(pActivationInfo);
        ORBIT_TRACK_PARAM(ppwszInstallationId);

        auto win32_impl_result = g_api_table.SLGenerateOfflineInstallationIdEx(hSLC, pProductSkuId, pActivationInfo, ppwszInstallationId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLDepositOfflineConfirmationId(void* hSLC, ::win32::guid* pProductSkuId, win32::Windows::Win32::Foundation::PWSTR pwszInstallationId, win32::Windows::Win32::Foundation::PWSTR pwszConfirmationId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pProductSkuId);
        ORBIT_TRACK_PARAM(pwszInstallationId);
        ORBIT_TRACK_PARAM(pwszConfirmationId);

        auto win32_impl_result = g_api_table.SLDepositOfflineConfirmationId(hSLC, pProductSkuId, pwszInstallationId, pwszConfirmationId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLDepositOfflineConfirmationIdEx(void* hSLC, ::win32::guid* pProductSkuId, win32::Windows::Win32::Security::Authentication::Identity::SL_ACTIVATION_INFO_HEADER* pActivationInfo, win32::Windows::Win32::Foundation::PWSTR pwszInstallationId, win32::Windows::Win32::Foundation::PWSTR pwszConfirmationId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pProductSkuId);
        ORBIT_TRACK_PARAM(pActivationInfo);
        ORBIT_TRACK_PARAM(pwszInstallationId);
        ORBIT_TRACK_PARAM(pwszConfirmationId);

        auto win32_impl_result = g_api_table.SLDepositOfflineConfirmationIdEx(hSLC, pProductSkuId, pActivationInfo, pwszInstallationId, pwszConfirmationId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGetPKeyId(void* hSLC, win32::Windows::Win32::Foundation::PWSTR pwszPKeyAlgorithm, win32::Windows::Win32::Foundation::PWSTR pwszPKeyString, uint32_t cbPKeySpecificData, uint8_t* pbPKeySpecificData, ::win32::guid* pPKeyId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pwszPKeyAlgorithm);
        ORBIT_TRACK_PARAM(pwszPKeyString);
        ORBIT_TRACK_PARAM(cbPKeySpecificData);
        ORBIT_TRACK_PARAM(pbPKeySpecificData);
        ORBIT_TRACK_PARAM(pPKeyId);

        auto win32_impl_result = g_api_table.SLGetPKeyId(hSLC, pwszPKeyAlgorithm, pwszPKeyString, cbPKeySpecificData, pbPKeySpecificData, pPKeyId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGetInstalledProductKeyIds(void* hSLC, ::win32::guid* pProductSkuId, uint32_t* pnProductKeyIds, ::win32::guid** ppProductKeyIds) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pProductSkuId);
        ORBIT_TRACK_PARAM(pnProductKeyIds);
        ORBIT_TRACK_PARAM(ppProductKeyIds);

        auto win32_impl_result = g_api_table.SLGetInstalledProductKeyIds(hSLC, pProductSkuId, pnProductKeyIds, ppProductKeyIds);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLSetCurrentProductKey(void* hSLC, ::win32::guid* pProductSkuId, ::win32::guid* pProductKeyId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pProductSkuId);
        ORBIT_TRACK_PARAM(pProductKeyId);

        auto win32_impl_result = g_api_table.SLSetCurrentProductKey(hSLC, pProductSkuId, pProductKeyId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGetSLIDList(void* hSLC, win32::Windows::Win32::Security::Authentication::Identity::SLIDTYPE eQueryIdType, ::win32::guid* pQueryId, win32::Windows::Win32::Security::Authentication::Identity::SLIDTYPE eReturnIdType, uint32_t* pnReturnIds, ::win32::guid** ppReturnIds) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(eQueryIdType);
        ORBIT_TRACK_PARAM(pQueryId);
        ORBIT_TRACK_PARAM(eReturnIdType);
        ORBIT_TRACK_PARAM(pnReturnIds);
        ORBIT_TRACK_PARAM(ppReturnIds);

        auto win32_impl_result = g_api_table.SLGetSLIDList(hSLC, eQueryIdType, pQueryId, eReturnIdType, pnReturnIds, ppReturnIds);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGetLicenseFileId(void* hSLC, uint32_t cbLicenseBlob, uint8_t* pbLicenseBlob, ::win32::guid* pLicenseFileId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(cbLicenseBlob);
        ORBIT_TRACK_PARAM(pbLicenseBlob);
        ORBIT_TRACK_PARAM(pLicenseFileId);

        auto win32_impl_result = g_api_table.SLGetLicenseFileId(hSLC, cbLicenseBlob, pbLicenseBlob, pLicenseFileId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGetLicense(void* hSLC, ::win32::guid* pLicenseFileId, uint32_t* pcbLicenseFile, uint8_t** ppbLicenseFile) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pLicenseFileId);
        ORBIT_TRACK_PARAM(pcbLicenseFile);
        ORBIT_TRACK_PARAM(ppbLicenseFile);

        auto win32_impl_result = g_api_table.SLGetLicense(hSLC, pLicenseFileId, pcbLicenseFile, ppbLicenseFile);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLFireEvent(void* hSLC, win32::Windows::Win32::Foundation::PWSTR pwszEventId, ::win32::guid* pApplicationId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pwszEventId);
        ORBIT_TRACK_PARAM(pApplicationId);

        auto win32_impl_result = g_api_table.SLFireEvent(hSLC, pwszEventId, pApplicationId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLRegisterEvent(void* hSLC, win32::Windows::Win32::Foundation::PWSTR pwszEventId, ::win32::guid* pApplicationId, win32::Windows::Win32::Foundation::HANDLE hEvent) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pwszEventId);
        ORBIT_TRACK_PARAM(pApplicationId);
        ORBIT_TRACK_PARAM(hEvent);

        auto win32_impl_result = g_api_table.SLRegisterEvent(hSLC, pwszEventId, pApplicationId, hEvent);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLUnregisterEvent(void* hSLC, win32::Windows::Win32::Foundation::PWSTR pwszEventId, ::win32::guid* pApplicationId, win32::Windows::Win32::Foundation::HANDLE hEvent) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(pwszEventId);
        ORBIT_TRACK_PARAM(pApplicationId);
        ORBIT_TRACK_PARAM(hEvent);

        auto win32_impl_result = g_api_table.SLUnregisterEvent(hSLC, pwszEventId, pApplicationId, hEvent);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGetWindowsInformation(win32::Windows::Win32::Foundation::PWSTR pwszValueName, win32::Windows::Win32::Security::Authentication::Identity::SLDATATYPE* peDataType, uint32_t* pcbValue, uint8_t** ppbValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pwszValueName);
        ORBIT_TRACK_PARAM(peDataType);
        ORBIT_TRACK_PARAM(pcbValue);
        ORBIT_TRACK_PARAM(ppbValue);

        auto win32_impl_result = g_api_table.SLGetWindowsInformation(pwszValueName, peDataType, pcbValue, ppbValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGetWindowsInformationDWORD(win32::Windows::Win32::Foundation::PWSTR pwszValueName, uint32_t* pdwValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pwszValueName);
        ORBIT_TRACK_PARAM(pdwValue);

        auto win32_impl_result = g_api_table.SLGetWindowsInformationDWORD(pwszValueName, pdwValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLIsGenuineLocal(::win32::guid* pAppId, win32::Windows::Win32::Security::Authentication::Identity::SL_GENUINE_STATE* pGenuineState, win32::Windows::Win32::Security::Authentication::Identity::SL_NONGENUINE_UI_OPTIONS* pUIOptions) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAppId);
        ORBIT_TRACK_PARAM(pGenuineState);
        ORBIT_TRACK_PARAM(pUIOptions);

        auto win32_impl_result = g_api_table.SLIsGenuineLocal(pAppId, pGenuineState, pUIOptions);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLAcquireGenuineTicket(void** ppTicketBlob, uint32_t* pcbTicketBlob, win32::Windows::Win32::Foundation::PWSTR pwszTemplateId, win32::Windows::Win32::Foundation::PWSTR pwszServerUrl, win32::Windows::Win32::Foundation::PWSTR pwszClientToken) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ppTicketBlob);
        ORBIT_TRACK_PARAM(pcbTicketBlob);
        ORBIT_TRACK_PARAM(pwszTemplateId);
        ORBIT_TRACK_PARAM(pwszServerUrl);
        ORBIT_TRACK_PARAM(pwszClientToken);

        auto win32_impl_result = g_api_table.SLAcquireGenuineTicket(ppTicketBlob, pcbTicketBlob, pwszTemplateId, pwszServerUrl, pwszClientToken);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLSetGenuineInformation(::win32::guid* pQueryId, win32::Windows::Win32::Foundation::PWSTR pwszValueName, win32::Windows::Win32::Security::Authentication::Identity::SLDATATYPE eDataType, uint32_t cbValue, uint8_t* pbValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pQueryId);
        ORBIT_TRACK_PARAM(pwszValueName);
        ORBIT_TRACK_PARAM(eDataType);
        ORBIT_TRACK_PARAM(cbValue);
        ORBIT_TRACK_PARAM(pbValue);

        auto win32_impl_result = g_api_table.SLSetGenuineInformation(pQueryId, pwszValueName, eDataType, cbValue, pbValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGetReferralInformation(void* hSLC, win32::Windows::Win32::Security::Authentication::Identity::SLREFERRALTYPE eReferralType, ::win32::guid* pSkuOrAppId, win32::Windows::Win32::Foundation::PWSTR pwszValueName, win32::Windows::Win32::Foundation::PWSTR* ppwszValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSLC);
        ORBIT_TRACK_PARAM(eReferralType);
        ORBIT_TRACK_PARAM(pSkuOrAppId);
        ORBIT_TRACK_PARAM(pwszValueName);
        ORBIT_TRACK_PARAM(ppwszValue);

        auto win32_impl_result = g_api_table.SLGetReferralInformation(hSLC, eReferralType, pSkuOrAppId, pwszValueName, ppwszValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLGetGenuineInformation(::win32::guid* pQueryId, win32::Windows::Win32::Foundation::PWSTR pwszValueName, win32::Windows::Win32::Security::Authentication::Identity::SLDATATYPE* peDataType, uint32_t* pcbValue, uint8_t** ppbValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pQueryId);
        ORBIT_TRACK_PARAM(pwszValueName);
        ORBIT_TRACK_PARAM(peDataType);
        ORBIT_TRACK_PARAM(pcbValue);
        ORBIT_TRACK_PARAM(ppbValue);

        auto win32_impl_result = g_api_table.SLGetGenuineInformation(pQueryId, pwszValueName, peDataType, pcbValue, ppbValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SLQueryLicenseValueFromApp(win32::Windows::Win32::Foundation::PWSTR valueName, uint32_t* valueType, void* dataBuffer, uint32_t dataSize, uint32_t* resultDataSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(valueName);
        ORBIT_TRACK_PARAM(valueType);
        ORBIT_TRACK_PARAM(dataBuffer);
        ORBIT_TRACK_PARAM(dataSize);
        ORBIT_TRACK_PARAM(resultDataSize);

        auto win32_impl_result = g_api_table.SLQueryLicenseValueFromApp(valueName, valueType, dataBuffer, dataSize, resultDataSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
