// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Globalization_0_H
#define WIN32_Windows_Win32_Globalization_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct BOOL;
    struct HRESULT;
    struct LPARAM;
    struct PSTR;
    struct PWSTR;
}
WIN32_EXPORT namespace win32::Windows::Win32::Globalization
{
#pragma region enums
    enum class COMPARE_STRING_FLAGS : uint32_t
    {
        LINGUISTIC_IGNORECASE = 0x10,
        LINGUISTIC_IGNOREDIACRITIC = 0x20,
        NORM_IGNORECASE = 0x1,
        NORM_IGNOREKANATYPE = 0x10000,
        NORM_IGNORENONSPACE = 0x2,
        NORM_IGNORESYMBOLS = 0x4,
        NORM_IGNOREWIDTH = 0x20000,
        NORM_LINGUISTIC_CASING = 0x8000000,
        SORT_DIGITSASNUMBERS = 0x8,
        SORT_STRINGSORT = 0x1000,
    };
    enum class CORRECTIVE_ACTION : int32_t
    {
        CORRECTIVE_ACTION_NONE = 0,
        CORRECTIVE_ACTION_GET_SUGGESTIONS = 1,
        CORRECTIVE_ACTION_REPLACE = 2,
        CORRECTIVE_ACTION_DELETE = 3,
    };
    enum class ENUM_DATE_FORMATS_FLAGS : uint32_t
    {
        DATE_SHORTDATE = 0x1,
        DATE_LONGDATE = 0x2,
        DATE_YEARMONTH = 0x8,
        DATE_MONTHDAY = 0x80,
        DATE_AUTOLAYOUT = 0x40,
        DATE_LTRREADING = 0x10,
        DATE_RTLREADING = 0x20,
        DATE_USE_ALT_CALENDAR = 0x4,
    };
    enum class ENUM_SYSTEM_CODE_PAGES_FLAGS : uint32_t
    {
        CP_INSTALLED = 0x1,
        CP_SUPPORTED = 0x2,
    };
    enum class ENUM_SYSTEM_LANGUAGE_GROUPS_FLAGS : uint32_t
    {
        LGRPID_INSTALLED = 0x1,
        LGRPID_SUPPORTED = 0x2,
    };
    enum class FOLD_STRING_MAP_FLAGS : uint32_t
    {
        MAP_COMPOSITE = 0x40,
        MAP_EXPAND_LIGATURES = 0x2000,
        MAP_FOLDCZONE = 0x10,
        MAP_FOLDDIGITS = 0x80,
        MAP_PRECOMPOSED = 0x20,
    };
    enum class IS_TEXT_UNICODE_RESULT : uint32_t
    {
        IS_TEXT_UNICODE_ASCII16 = 0x1,
        IS_TEXT_UNICODE_REVERSE_ASCII16 = 0x10,
        IS_TEXT_UNICODE_STATISTICS = 0x2,
        IS_TEXT_UNICODE_REVERSE_STATISTICS = 0x20,
        IS_TEXT_UNICODE_CONTROLS = 0x4,
        IS_TEXT_UNICODE_REVERSE_CONTROLS = 0x40,
        IS_TEXT_UNICODE_SIGNATURE = 0x8,
        IS_TEXT_UNICODE_REVERSE_SIGNATURE = 0x80,
        IS_TEXT_UNICODE_ILLEGAL_CHARS = 0x100,
        IS_TEXT_UNICODE_ODD_LENGTH = 0x200,
        IS_TEXT_UNICODE_NULL_BYTES = 0x1000,
        IS_TEXT_UNICODE_UNICODE_MASK = 0xf,
        IS_TEXT_UNICODE_REVERSE_MASK = 0xf0,
        IS_TEXT_UNICODE_NOT_UNICODE_MASK = 0xf00,
        IS_TEXT_UNICODE_NOT_ASCII_MASK = 0xf000,
    };
    enum class IS_VALID_LOCALE_FLAGS : uint32_t
    {
        LCID_INSTALLED = 0x1,
        LCID_SUPPORTED = 0x2,
    };
    enum class MIMECONTF : int32_t
    {
        MIMECONTF_MAILNEWS = 1,
        MIMECONTF_BROWSER = 2,
        MIMECONTF_MINIMAL = 4,
        MIMECONTF_IMPORT = 8,
        MIMECONTF_SAVABLE_MAILNEWS = 256,
        MIMECONTF_SAVABLE_BROWSER = 512,
        MIMECONTF_EXPORT = 1024,
        MIMECONTF_PRIVCONVERTER = 65536,
        MIMECONTF_VALID = 131072,
        MIMECONTF_VALID_NLS = 262144,
        MIMECONTF_MIME_IE4 = 268435456,
        MIMECONTF_MIME_LATEST = 536870912,
        MIMECONTF_MIME_REGISTRY = 1073741824,
    };
    enum class MLDETECTCP : int32_t
    {
        MLDETECTCP_NONE = 0,
        MLDETECTCP_7BIT = 1,
        MLDETECTCP_8BIT = 2,
        MLDETECTCP_DBCS = 4,
        MLDETECTCP_HTML = 8,
        MLDETECTCP_NUMBER = 16,
    };
    enum class MLSTR_FLAGS : int32_t
    {
        MLSTR_READ = 1,
        MLSTR_WRITE = 2,
    };
    enum class MULTI_BYTE_TO_WIDE_CHAR_FLAGS : uint32_t
    {
        MB_COMPOSITE = 0x2,
        MB_ERR_INVALID_CHARS = 0x8,
        MB_PRECOMPOSED = 0x1,
        MB_USEGLYPHCHARS = 0x4,
    };
    enum class NORM_FORM : int32_t
    {
        NormalizationOther = 0,
        NormalizationC = 1,
        NormalizationD = 2,
        NormalizationKC = 5,
        NormalizationKD = 6,
    };
    enum class SCRIPTCONTF : int32_t
    {
        sidDefault = 0,
        sidMerge = 1,
        sidAsciiSym = 2,
        sidAsciiLatin = 3,
        sidLatin = 4,
        sidGreek = 5,
        sidCyrillic = 6,
        sidArmenian = 7,
        sidHebrew = 8,
        sidArabic = 9,
        sidDevanagari = 10,
        sidBengali = 11,
        sidGurmukhi = 12,
        sidGujarati = 13,
        sidOriya = 14,
        sidTamil = 15,
        sidTelugu = 16,
        sidKannada = 17,
        sidMalayalam = 18,
        sidThai = 19,
        sidLao = 20,
        sidTibetan = 21,
        sidGeorgian = 22,
        sidHangul = 23,
        sidKana = 24,
        sidBopomofo = 25,
        sidHan = 26,
        sidEthiopic = 27,
        sidCanSyllabic = 28,
        sidCherokee = 29,
        sidYi = 30,
        sidBraille = 31,
        sidRunic = 32,
        sidOgham = 33,
        sidSinhala = 34,
        sidSyriac = 35,
        sidBurmese = 36,
        sidKhmer = 37,
        sidThaana = 38,
        sidMongolian = 39,
        sidUserDefined = 40,
        sidLim = 41,
        sidFEFirst = 23,
        sidFELast = 26,
    };
    enum class SCRIPTFONTCONTF : int32_t
    {
        SCRIPTCONTF_FIXED_FONT = 1,
        SCRIPTCONTF_PROPORTIONAL_FONT = 2,
        SCRIPTCONTF_SCRIPT_USER = 65536,
        SCRIPTCONTF_SCRIPT_HIDE = 131072,
        SCRIPTCONTF_SCRIPT_SYSTEM = 262144,
    };
    enum class SCRIPT_IS_COMPLEX_FLAGS : uint32_t
    {
        SIC_ASCIIDIGIT = 0x2,
        SIC_COMPLEX = 0x1,
        SIC_NEUTRAL = 0x4,
    };
    enum class SCRIPT_JUSTIFY : int32_t
    {
        SCRIPT_JUSTIFY_NONE = 0,
        SCRIPT_JUSTIFY_ARABIC_BLANK = 1,
        SCRIPT_JUSTIFY_CHARACTER = 2,
        SCRIPT_JUSTIFY_RESERVED1 = 3,
        SCRIPT_JUSTIFY_BLANK = 4,
        SCRIPT_JUSTIFY_RESERVED2 = 5,
        SCRIPT_JUSTIFY_RESERVED3 = 6,
        SCRIPT_JUSTIFY_ARABIC_NORMAL = 7,
        SCRIPT_JUSTIFY_ARABIC_KASHIDA = 8,
        SCRIPT_JUSTIFY_ARABIC_ALEF = 9,
        SCRIPT_JUSTIFY_ARABIC_HA = 10,
        SCRIPT_JUSTIFY_ARABIC_RA = 11,
        SCRIPT_JUSTIFY_ARABIC_BA = 12,
        SCRIPT_JUSTIFY_ARABIC_BARA = 13,
        SCRIPT_JUSTIFY_ARABIC_SEEN = 14,
        SCRIPT_JUSTIFY_ARABIC_SEEN_M = 15,
    };
    enum class SYSGEOCLASS : int32_t
    {
        GEOCLASS_NATION = 16,
        GEOCLASS_REGION = 14,
        GEOCLASS_ALL = 0,
    };
    enum class SYSGEOTYPE : int32_t
    {
        GEO_NATION = 1,
        GEO_LATITUDE = 2,
        GEO_LONGITUDE = 3,
        GEO_ISO2 = 4,
        GEO_ISO3 = 5,
        GEO_RFC1766 = 6,
        GEO_LCID = 7,
        GEO_FRIENDLYNAME = 8,
        GEO_OFFICIALNAME = 9,
        GEO_TIMEZONES = 10,
        GEO_OFFICIALLANGUAGES = 11,
        GEO_ISO_UN_NUMBER = 12,
        GEO_PARENT = 13,
        GEO_DIALINGCODE = 14,
        GEO_CURRENCYCODE = 15,
        GEO_CURRENCYSYMBOL = 16,
        GEO_NAME = 17,
        GEO_ID = 18,
    };
    enum class SYSNLS_FUNCTION : int32_t
    {
        COMPARE_STRING = 1,
    };
    enum class TIME_FORMAT_FLAGS : uint32_t
    {
        TIME_NOMINUTESORSECONDS = 0x1,
        TIME_NOSECONDS = 0x2,
        TIME_NOTIMEMARKER = 0x4,
        TIME_FORCE24HOURFORMAT = 0x8,
    };
    enum class TRANSLATE_CHARSET_INFO_FLAGS : uint32_t
    {
        TCI_SRCCHARSET = 0x1,
        TCI_SRCCODEPAGE = 0x2,
        TCI_SRCFONTSIG = 0x3,
        TCI_SRCLOCALE = 0x1000,
    };
    enum class UAcceptResult : int32_t
    {
        ULOC_ACCEPT_FAILED = 0,
        ULOC_ACCEPT_VALID = 1,
        ULOC_ACCEPT_FALLBACK = 2,
    };
    enum class UAlphabeticIndexLabelType : int32_t
    {
        U_ALPHAINDEX_NORMAL = 0,
        U_ALPHAINDEX_UNDERFLOW = 1,
        U_ALPHAINDEX_INFLOW = 2,
        U_ALPHAINDEX_OVERFLOW = 3,
    };
    enum class UBiDiDirection : int32_t
    {
        UBIDI_LTR = 0,
        UBIDI_RTL = 1,
        UBIDI_MIXED = 2,
        UBIDI_NEUTRAL = 3,
    };
    enum class UBiDiMirroring : int32_t
    {
        UBIDI_MIRRORING_OFF = 0,
        UBIDI_MIRRORING_ON = 1,
    };
    enum class UBiDiOrder : int32_t
    {
        UBIDI_LOGICAL = 0,
        UBIDI_VISUAL = 1,
    };
    enum class UBiDiReorderingMode : int32_t
    {
        UBIDI_REORDER_DEFAULT = 0,
        UBIDI_REORDER_NUMBERS_SPECIAL = 1,
        UBIDI_REORDER_GROUP_NUMBERS_WITH_R = 2,
        UBIDI_REORDER_RUNS_ONLY = 3,
        UBIDI_REORDER_INVERSE_NUMBERS_AS_L = 4,
        UBIDI_REORDER_INVERSE_LIKE_DIRECT = 5,
        UBIDI_REORDER_INVERSE_FOR_NUMBERS_SPECIAL = 6,
    };
    enum class UBiDiReorderingOption : int32_t
    {
        UBIDI_OPTION_DEFAULT = 0,
        UBIDI_OPTION_INSERT_MARKS = 1,
        UBIDI_OPTION_REMOVE_CONTROLS = 2,
        UBIDI_OPTION_STREAMING = 4,
    };
    enum class UBidiPairedBracketType : int32_t
    {
        U_BPT_NONE = 0,
        U_BPT_OPEN = 1,
        U_BPT_CLOSE = 2,
    };
    enum class UBlockCode : int32_t
    {
        UBLOCK_NO_BLOCK = 0,
        UBLOCK_BASIC_LATIN = 1,
        UBLOCK_LATIN_1_SUPPLEMENT = 2,
        UBLOCK_LATIN_EXTENDED_A = 3,
        UBLOCK_LATIN_EXTENDED_B = 4,
        UBLOCK_IPA_EXTENSIONS = 5,
        UBLOCK_SPACING_MODIFIER_LETTERS = 6,
        UBLOCK_COMBINING_DIACRITICAL_MARKS = 7,
        UBLOCK_GREEK = 8,
        UBLOCK_CYRILLIC = 9,
        UBLOCK_ARMENIAN = 10,
        UBLOCK_HEBREW = 11,
        UBLOCK_ARABIC = 12,
        UBLOCK_SYRIAC = 13,
        UBLOCK_THAANA = 14,
        UBLOCK_DEVANAGARI = 15,
        UBLOCK_BENGALI = 16,
        UBLOCK_GURMUKHI = 17,
        UBLOCK_GUJARATI = 18,
        UBLOCK_ORIYA = 19,
        UBLOCK_TAMIL = 20,
        UBLOCK_TELUGU = 21,
        UBLOCK_KANNADA = 22,
        UBLOCK_MALAYALAM = 23,
        UBLOCK_SINHALA = 24,
        UBLOCK_THAI = 25,
        UBLOCK_LAO = 26,
        UBLOCK_TIBETAN = 27,
        UBLOCK_MYANMAR = 28,
        UBLOCK_GEORGIAN = 29,
        UBLOCK_HANGUL_JAMO = 30,
        UBLOCK_ETHIOPIC = 31,
        UBLOCK_CHEROKEE = 32,
        UBLOCK_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS = 33,
        UBLOCK_OGHAM = 34,
        UBLOCK_RUNIC = 35,
        UBLOCK_KHMER = 36,
        UBLOCK_MONGOLIAN = 37,
        UBLOCK_LATIN_EXTENDED_ADDITIONAL = 38,
        UBLOCK_GREEK_EXTENDED = 39,
        UBLOCK_GENERAL_PUNCTUATION = 40,
        UBLOCK_SUPERSCRIPTS_AND_SUBSCRIPTS = 41,
        UBLOCK_CURRENCY_SYMBOLS = 42,
        UBLOCK_COMBINING_MARKS_FOR_SYMBOLS = 43,
        UBLOCK_LETTERLIKE_SYMBOLS = 44,
        UBLOCK_NUMBER_FORMS = 45,
        UBLOCK_ARROWS = 46,
        UBLOCK_MATHEMATICAL_OPERATORS = 47,
        UBLOCK_MISCELLANEOUS_TECHNICAL = 48,
        UBLOCK_CONTROL_PICTURES = 49,
        UBLOCK_OPTICAL_CHARACTER_RECOGNITION = 50,
        UBLOCK_ENCLOSED_ALPHANUMERICS = 51,
        UBLOCK_BOX_DRAWING = 52,
        UBLOCK_BLOCK_ELEMENTS = 53,
        UBLOCK_GEOMETRIC_SHAPES = 54,
        UBLOCK_MISCELLANEOUS_SYMBOLS = 55,
        UBLOCK_DINGBATS = 56,
        UBLOCK_BRAILLE_PATTERNS = 57,
        UBLOCK_CJK_RADICALS_SUPPLEMENT = 58,
        UBLOCK_KANGXI_RADICALS = 59,
        UBLOCK_IDEOGRAPHIC_DESCRIPTION_CHARACTERS = 60,
        UBLOCK_CJK_SYMBOLS_AND_PUNCTUATION = 61,
        UBLOCK_HIRAGANA = 62,
        UBLOCK_KATAKANA = 63,
        UBLOCK_BOPOMOFO = 64,
        UBLOCK_HANGUL_COMPATIBILITY_JAMO = 65,
        UBLOCK_KANBUN = 66,
        UBLOCK_BOPOMOFO_EXTENDED = 67,
        UBLOCK_ENCLOSED_CJK_LETTERS_AND_MONTHS = 68,
        UBLOCK_CJK_COMPATIBILITY = 69,
        UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A = 70,
        UBLOCK_CJK_UNIFIED_IDEOGRAPHS = 71,
        UBLOCK_YI_SYLLABLES = 72,
        UBLOCK_YI_RADICALS = 73,
        UBLOCK_HANGUL_SYLLABLES = 74,
        UBLOCK_HIGH_SURROGATES = 75,
        UBLOCK_HIGH_PRIVATE_USE_SURROGATES = 76,
        UBLOCK_LOW_SURROGATES = 77,
        UBLOCK_PRIVATE_USE_AREA = 78,
        UBLOCK_PRIVATE_USE = 78,
        UBLOCK_CJK_COMPATIBILITY_IDEOGRAPHS = 79,
        UBLOCK_ALPHABETIC_PRESENTATION_FORMS = 80,
        UBLOCK_ARABIC_PRESENTATION_FORMS_A = 81,
        UBLOCK_COMBINING_HALF_MARKS = 82,
        UBLOCK_CJK_COMPATIBILITY_FORMS = 83,
        UBLOCK_SMALL_FORM_VARIANTS = 84,
        UBLOCK_ARABIC_PRESENTATION_FORMS_B = 85,
        UBLOCK_SPECIALS = 86,
        UBLOCK_HALFWIDTH_AND_FULLWIDTH_FORMS = 87,
        UBLOCK_OLD_ITALIC = 88,
        UBLOCK_GOTHIC = 89,
        UBLOCK_DESERET = 90,
        UBLOCK_BYZANTINE_MUSICAL_SYMBOLS = 91,
        UBLOCK_MUSICAL_SYMBOLS = 92,
        UBLOCK_MATHEMATICAL_ALPHANUMERIC_SYMBOLS = 93,
        UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B = 94,
        UBLOCK_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT = 95,
        UBLOCK_TAGS = 96,
        UBLOCK_CYRILLIC_SUPPLEMENT = 97,
        UBLOCK_CYRILLIC_SUPPLEMENTARY = 97,
        UBLOCK_TAGALOG = 98,
        UBLOCK_HANUNOO = 99,
        UBLOCK_BUHID = 100,
        UBLOCK_TAGBANWA = 101,
        UBLOCK_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A = 102,
        UBLOCK_SUPPLEMENTAL_ARROWS_A = 103,
        UBLOCK_SUPPLEMENTAL_ARROWS_B = 104,
        UBLOCK_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B = 105,
        UBLOCK_SUPPLEMENTAL_MATHEMATICAL_OPERATORS = 106,
        UBLOCK_KATAKANA_PHONETIC_EXTENSIONS = 107,
        UBLOCK_VARIATION_SELECTORS = 108,
        UBLOCK_SUPPLEMENTARY_PRIVATE_USE_AREA_A = 109,
        UBLOCK_SUPPLEMENTARY_PRIVATE_USE_AREA_B = 110,
        UBLOCK_LIMBU = 111,
        UBLOCK_TAI_LE = 112,
        UBLOCK_KHMER_SYMBOLS = 113,
        UBLOCK_PHONETIC_EXTENSIONS = 114,
        UBLOCK_MISCELLANEOUS_SYMBOLS_AND_ARROWS = 115,
        UBLOCK_YIJING_HEXAGRAM_SYMBOLS = 116,
        UBLOCK_LINEAR_B_SYLLABARY = 117,
        UBLOCK_LINEAR_B_IDEOGRAMS = 118,
        UBLOCK_AEGEAN_NUMBERS = 119,
        UBLOCK_UGARITIC = 120,
        UBLOCK_SHAVIAN = 121,
        UBLOCK_OSMANYA = 122,
        UBLOCK_CYPRIOT_SYLLABARY = 123,
        UBLOCK_TAI_XUAN_JING_SYMBOLS = 124,
        UBLOCK_VARIATION_SELECTORS_SUPPLEMENT = 125,
        UBLOCK_ANCIENT_GREEK_MUSICAL_NOTATION = 126,
        UBLOCK_ANCIENT_GREEK_NUMBERS = 127,
        UBLOCK_ARABIC_SUPPLEMENT = 128,
        UBLOCK_BUGINESE = 129,
        UBLOCK_CJK_STROKES = 130,
        UBLOCK_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT = 131,
        UBLOCK_COPTIC = 132,
        UBLOCK_ETHIOPIC_EXTENDED = 133,
        UBLOCK_ETHIOPIC_SUPPLEMENT = 134,
        UBLOCK_GEORGIAN_SUPPLEMENT = 135,
        UBLOCK_GLAGOLITIC = 136,
        UBLOCK_KHAROSHTHI = 137,
        UBLOCK_MODIFIER_TONE_LETTERS = 138,
        UBLOCK_NEW_TAI_LUE = 139,
        UBLOCK_OLD_PERSIAN = 140,
        UBLOCK_PHONETIC_EXTENSIONS_SUPPLEMENT = 141,
        UBLOCK_SUPPLEMENTAL_PUNCTUATION = 142,
        UBLOCK_SYLOTI_NAGRI = 143,
        UBLOCK_TIFINAGH = 144,
        UBLOCK_VERTICAL_FORMS = 145,
        UBLOCK_NKO = 146,
        UBLOCK_BALINESE = 147,
        UBLOCK_LATIN_EXTENDED_C = 148,
        UBLOCK_LATIN_EXTENDED_D = 149,
        UBLOCK_PHAGS_PA = 150,
        UBLOCK_PHOENICIAN = 151,
        UBLOCK_CUNEIFORM = 152,
        UBLOCK_CUNEIFORM_NUMBERS_AND_PUNCTUATION = 153,
        UBLOCK_COUNTING_ROD_NUMERALS = 154,
        UBLOCK_SUNDANESE = 155,
        UBLOCK_LEPCHA = 156,
        UBLOCK_OL_CHIKI = 157,
        UBLOCK_CYRILLIC_EXTENDED_A = 158,
        UBLOCK_VAI = 159,
        UBLOCK_CYRILLIC_EXTENDED_B = 160,
        UBLOCK_SAURASHTRA = 161,
        UBLOCK_KAYAH_LI = 162,
        UBLOCK_REJANG = 163,
        UBLOCK_CHAM = 164,
        UBLOCK_ANCIENT_SYMBOLS = 165,
        UBLOCK_PHAISTOS_DISC = 166,
        UBLOCK_LYCIAN = 167,
        UBLOCK_CARIAN = 168,
        UBLOCK_LYDIAN = 169,
        UBLOCK_MAHJONG_TILES = 170,
        UBLOCK_DOMINO_TILES = 171,
        UBLOCK_SAMARITAN = 172,
        UBLOCK_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED = 173,
        UBLOCK_TAI_THAM = 174,
        UBLOCK_VEDIC_EXTENSIONS = 175,
        UBLOCK_LISU = 176,
        UBLOCK_BAMUM = 177,
        UBLOCK_COMMON_INDIC_NUMBER_FORMS = 178,
        UBLOCK_DEVANAGARI_EXTENDED = 179,
        UBLOCK_HANGUL_JAMO_EXTENDED_A = 180,
        UBLOCK_JAVANESE = 181,
        UBLOCK_MYANMAR_EXTENDED_A = 182,
        UBLOCK_TAI_VIET = 183,
        UBLOCK_MEETEI_MAYEK = 184,
        UBLOCK_HANGUL_JAMO_EXTENDED_B = 185,
        UBLOCK_IMPERIAL_ARAMAIC = 186,
        UBLOCK_OLD_SOUTH_ARABIAN = 187,
        UBLOCK_AVESTAN = 188,
        UBLOCK_INSCRIPTIONAL_PARTHIAN = 189,
        UBLOCK_INSCRIPTIONAL_PAHLAVI = 190,
        UBLOCK_OLD_TURKIC = 191,
        UBLOCK_RUMI_NUMERAL_SYMBOLS = 192,
        UBLOCK_KAITHI = 193,
        UBLOCK_EGYPTIAN_HIEROGLYPHS = 194,
        UBLOCK_ENCLOSED_ALPHANUMERIC_SUPPLEMENT = 195,
        UBLOCK_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT = 196,
        UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C = 197,
        UBLOCK_MANDAIC = 198,
        UBLOCK_BATAK = 199,
        UBLOCK_ETHIOPIC_EXTENDED_A = 200,
        UBLOCK_BRAHMI = 201,
        UBLOCK_BAMUM_SUPPLEMENT = 202,
        UBLOCK_KANA_SUPPLEMENT = 203,
        UBLOCK_PLAYING_CARDS = 204,
        UBLOCK_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS = 205,
        UBLOCK_EMOTICONS = 206,
        UBLOCK_TRANSPORT_AND_MAP_SYMBOLS = 207,
        UBLOCK_ALCHEMICAL_SYMBOLS = 208,
        UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D = 209,
        UBLOCK_ARABIC_EXTENDED_A = 210,
        UBLOCK_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS = 211,
        UBLOCK_CHAKMA = 212,
        UBLOCK_MEETEI_MAYEK_EXTENSIONS = 213,
        UBLOCK_MEROITIC_CURSIVE = 214,
        UBLOCK_MEROITIC_HIEROGLYPHS = 215,
        UBLOCK_MIAO = 216,
        UBLOCK_SHARADA = 217,
        UBLOCK_SORA_SOMPENG = 218,
        UBLOCK_SUNDANESE_SUPPLEMENT = 219,
        UBLOCK_TAKRI = 220,
        UBLOCK_BASSA_VAH = 221,
        UBLOCK_CAUCASIAN_ALBANIAN = 222,
        UBLOCK_COPTIC_EPACT_NUMBERS = 223,
        UBLOCK_COMBINING_DIACRITICAL_MARKS_EXTENDED = 224,
        UBLOCK_DUPLOYAN = 225,
        UBLOCK_ELBASAN = 226,
        UBLOCK_GEOMETRIC_SHAPES_EXTENDED = 227,
        UBLOCK_GRANTHA = 228,
        UBLOCK_KHOJKI = 229,
        UBLOCK_KHUDAWADI = 230,
        UBLOCK_LATIN_EXTENDED_E = 231,
        UBLOCK_LINEAR_A = 232,
        UBLOCK_MAHAJANI = 233,
        UBLOCK_MANICHAEAN = 234,
        UBLOCK_MENDE_KIKAKUI = 235,
        UBLOCK_MODI = 236,
        UBLOCK_MRO = 237,
        UBLOCK_MYANMAR_EXTENDED_B = 238,
        UBLOCK_NABATAEAN = 239,
        UBLOCK_OLD_NORTH_ARABIAN = 240,
        UBLOCK_OLD_PERMIC = 241,
        UBLOCK_ORNAMENTAL_DINGBATS = 242,
        UBLOCK_PAHAWH_HMONG = 243,
        UBLOCK_PALMYRENE = 244,
        UBLOCK_PAU_CIN_HAU = 245,
        UBLOCK_PSALTER_PAHLAVI = 246,
        UBLOCK_SHORTHAND_FORMAT_CONTROLS = 247,
        UBLOCK_SIDDHAM = 248,
        UBLOCK_SINHALA_ARCHAIC_NUMBERS = 249,
        UBLOCK_SUPPLEMENTAL_ARROWS_C = 250,
        UBLOCK_TIRHUTA = 251,
        UBLOCK_WARANG_CITI = 252,
        UBLOCK_AHOM = 253,
        UBLOCK_ANATOLIAN_HIEROGLYPHS = 254,
        UBLOCK_CHEROKEE_SUPPLEMENT = 255,
        UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E = 256,
        UBLOCK_EARLY_DYNASTIC_CUNEIFORM = 257,
        UBLOCK_HATRAN = 258,
        UBLOCK_MULTANI = 259,
        UBLOCK_OLD_HUNGARIAN = 260,
        UBLOCK_SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS = 261,
        UBLOCK_SUTTON_SIGNWRITING = 262,
        UBLOCK_ADLAM = 263,
        UBLOCK_BHAIKSUKI = 264,
        UBLOCK_CYRILLIC_EXTENDED_C = 265,
        UBLOCK_GLAGOLITIC_SUPPLEMENT = 266,
        UBLOCK_IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION = 267,
        UBLOCK_MARCHEN = 268,
        UBLOCK_MONGOLIAN_SUPPLEMENT = 269,
        UBLOCK_NEWA = 270,
        UBLOCK_OSAGE = 271,
        UBLOCK_TANGUT = 272,
        UBLOCK_TANGUT_COMPONENTS = 273,
        UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F = 274,
        UBLOCK_KANA_EXTENDED_A = 275,
        UBLOCK_MASARAM_GONDI = 276,
        UBLOCK_NUSHU = 277,
        UBLOCK_SOYOMBO = 278,
        UBLOCK_SYRIAC_SUPPLEMENT = 279,
        UBLOCK_ZANABAZAR_SQUARE = 280,
        UBLOCK_CHESS_SYMBOLS = 281,
        UBLOCK_DOGRA = 282,
        UBLOCK_GEORGIAN_EXTENDED = 283,
        UBLOCK_GUNJALA_GONDI = 284,
        UBLOCK_HANIFI_ROHINGYA = 285,
        UBLOCK_INDIC_SIYAQ_NUMBERS = 286,
        UBLOCK_MAKASAR = 287,
        UBLOCK_MAYAN_NUMERALS = 288,
        UBLOCK_MEDEFAIDRIN = 289,
        UBLOCK_OLD_SOGDIAN = 290,
        UBLOCK_SOGDIAN = 291,
        UBLOCK_EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS = 292,
        UBLOCK_ELYMAIC = 293,
        UBLOCK_NANDINAGARI = 294,
        UBLOCK_NYIAKENG_PUACHUE_HMONG = 295,
        UBLOCK_OTTOMAN_SIYAQ_NUMBERS = 296,
        UBLOCK_SMALL_KANA_EXTENSION = 297,
        UBLOCK_SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A = 298,
        UBLOCK_TAMIL_SUPPLEMENT = 299,
        UBLOCK_WANCHO = 300,
        UBLOCK_CHORASMIAN = 301,
        UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G = 302,
        UBLOCK_DIVES_AKURU = 303,
        UBLOCK_KHITAN_SMALL_SCRIPT = 304,
        UBLOCK_LISU_SUPPLEMENT = 305,
        UBLOCK_SYMBOLS_FOR_LEGACY_COMPUTING = 306,
        UBLOCK_TANGUT_SUPPLEMENT = 307,
        UBLOCK_YEZIDI = 308,
        UBLOCK_INVALID_CODE = -1,
    };
    enum class UBreakIteratorType : int32_t
    {
        UBRK_CHARACTER = 0,
        UBRK_WORD = 1,
        UBRK_LINE = 2,
        UBRK_SENTENCE = 3,
    };
    enum class UCPMapRangeOption : int32_t
    {
        UCPMAP_RANGE_NORMAL = 0,
        UCPMAP_RANGE_FIXED_LEAD_SURROGATES = 1,
        UCPMAP_RANGE_FIXED_ALL_SURROGATES = 2,
    };
    enum class UCPTrieType : int32_t
    {
        UCPTRIE_TYPE_ANY = -1,
        UCPTRIE_TYPE_FAST = 0,
        UCPTRIE_TYPE_SMALL = 1,
    };
    enum class UCPTrieValueWidth : int32_t
    {
        UCPTRIE_VALUE_BITS_ANY = -1,
        UCPTRIE_VALUE_BITS_16 = 0,
        UCPTRIE_VALUE_BITS_32 = 1,
        UCPTRIE_VALUE_BITS_8 = 2,
    };
    enum class UCalendarAMPMs : int32_t
    {
        UCAL_AM = 0,
        UCAL_PM = 1,
    };
    enum class UCalendarAttribute : int32_t
    {
        UCAL_LENIENT = 0,
        UCAL_FIRST_DAY_OF_WEEK = 1,
        UCAL_MINIMAL_DAYS_IN_FIRST_WEEK = 2,
        UCAL_REPEATED_WALL_TIME = 3,
        UCAL_SKIPPED_WALL_TIME = 4,
    };
    enum class UCalendarDateFields : int32_t
    {
        UCAL_ERA = 0,
        UCAL_YEAR = 1,
        UCAL_MONTH = 2,
        UCAL_WEEK_OF_YEAR = 3,
        UCAL_WEEK_OF_MONTH = 4,
        UCAL_DATE = 5,
        UCAL_DAY_OF_YEAR = 6,
        UCAL_DAY_OF_WEEK = 7,
        UCAL_DAY_OF_WEEK_IN_MONTH = 8,
        UCAL_AM_PM = 9,
        UCAL_HOUR = 10,
        UCAL_HOUR_OF_DAY = 11,
        UCAL_MINUTE = 12,
        UCAL_SECOND = 13,
        UCAL_MILLISECOND = 14,
        UCAL_ZONE_OFFSET = 15,
        UCAL_DST_OFFSET = 16,
        UCAL_YEAR_WOY = 17,
        UCAL_DOW_LOCAL = 18,
        UCAL_EXTENDED_YEAR = 19,
        UCAL_JULIAN_DAY = 20,
        UCAL_MILLISECONDS_IN_DAY = 21,
        UCAL_IS_LEAP_MONTH = 22,
        UCAL_FIELD_COUNT = 23,
        UCAL_DAY_OF_MONTH = 5,
    };
    enum class UCalendarDaysOfWeek : int32_t
    {
        UCAL_SUNDAY = 1,
        UCAL_MONDAY = 2,
        UCAL_TUESDAY = 3,
        UCAL_WEDNESDAY = 4,
        UCAL_THURSDAY = 5,
        UCAL_FRIDAY = 6,
        UCAL_SATURDAY = 7,
    };
    enum class UCalendarDisplayNameType : int32_t
    {
        UCAL_STANDARD = 0,
        UCAL_SHORT_STANDARD = 1,
        UCAL_DST = 2,
        UCAL_SHORT_DST = 3,
    };
    enum class UCalendarLimitType : int32_t
    {
        UCAL_MINIMUM = 0,
        UCAL_MAXIMUM = 1,
        UCAL_GREATEST_MINIMUM = 2,
        UCAL_LEAST_MAXIMUM = 3,
        UCAL_ACTUAL_MINIMUM = 4,
        UCAL_ACTUAL_MAXIMUM = 5,
    };
    enum class UCalendarMonths : int32_t
    {
        UCAL_JANUARY = 0,
        UCAL_FEBRUARY = 1,
        UCAL_MARCH = 2,
        UCAL_APRIL = 3,
        UCAL_MAY = 4,
        UCAL_JUNE = 5,
        UCAL_JULY = 6,
        UCAL_AUGUST = 7,
        UCAL_SEPTEMBER = 8,
        UCAL_OCTOBER = 9,
        UCAL_NOVEMBER = 10,
        UCAL_DECEMBER = 11,
        UCAL_UNDECIMBER = 12,
    };
    enum class UCalendarType : int32_t
    {
        UCAL_TRADITIONAL = 0,
        UCAL_DEFAULT = 0,
        UCAL_GREGORIAN = 1,
    };
    enum class UCalendarWallTimeOption : int32_t
    {
        UCAL_WALLTIME_LAST = 0,
        UCAL_WALLTIME_FIRST = 1,
        UCAL_WALLTIME_NEXT_VALID = 2,
    };
    enum class UCalendarWeekdayType : int32_t
    {
        UCAL_WEEKDAY = 0,
        UCAL_WEEKEND = 1,
        UCAL_WEEKEND_ONSET = 2,
        UCAL_WEEKEND_CEASE = 3,
    };
    enum class UCharCategory : int32_t
    {
        U_UNASSIGNED = 0,
        U_GENERAL_OTHER_TYPES = 0,
        U_UPPERCASE_LETTER = 1,
        U_LOWERCASE_LETTER = 2,
        U_TITLECASE_LETTER = 3,
        U_MODIFIER_LETTER = 4,
        U_OTHER_LETTER = 5,
        U_NON_SPACING_MARK = 6,
        U_ENCLOSING_MARK = 7,
        U_COMBINING_SPACING_MARK = 8,
        U_DECIMAL_DIGIT_NUMBER = 9,
        U_LETTER_NUMBER = 10,
        U_OTHER_NUMBER = 11,
        U_SPACE_SEPARATOR = 12,
        U_LINE_SEPARATOR = 13,
        U_PARAGRAPH_SEPARATOR = 14,
        U_CONTROL_CHAR = 15,
        U_FORMAT_CHAR = 16,
        U_PRIVATE_USE_CHAR = 17,
        U_SURROGATE = 18,
        U_DASH_PUNCTUATION = 19,
        U_START_PUNCTUATION = 20,
        U_END_PUNCTUATION = 21,
        U_CONNECTOR_PUNCTUATION = 22,
        U_OTHER_PUNCTUATION = 23,
        U_MATH_SYMBOL = 24,
        U_CURRENCY_SYMBOL = 25,
        U_MODIFIER_SYMBOL = 26,
        U_OTHER_SYMBOL = 27,
        U_INITIAL_PUNCTUATION = 28,
        U_FINAL_PUNCTUATION = 29,
        U_CHAR_CATEGORY_COUNT = 30,
    };
    enum class UCharDirection : int32_t
    {
        U_LEFT_TO_RIGHT = 0,
        U_RIGHT_TO_LEFT = 1,
        U_EUROPEAN_NUMBER = 2,
        U_EUROPEAN_NUMBER_SEPARATOR = 3,
        U_EUROPEAN_NUMBER_TERMINATOR = 4,
        U_ARABIC_NUMBER = 5,
        U_COMMON_NUMBER_SEPARATOR = 6,
        U_BLOCK_SEPARATOR = 7,
        U_SEGMENT_SEPARATOR = 8,
        U_WHITE_SPACE_NEUTRAL = 9,
        U_OTHER_NEUTRAL = 10,
        U_LEFT_TO_RIGHT_EMBEDDING = 11,
        U_LEFT_TO_RIGHT_OVERRIDE = 12,
        U_RIGHT_TO_LEFT_ARABIC = 13,
        U_RIGHT_TO_LEFT_EMBEDDING = 14,
        U_RIGHT_TO_LEFT_OVERRIDE = 15,
        U_POP_DIRECTIONAL_FORMAT = 16,
        U_DIR_NON_SPACING_MARK = 17,
        U_BOUNDARY_NEUTRAL = 18,
        U_FIRST_STRONG_ISOLATE = 19,
        U_LEFT_TO_RIGHT_ISOLATE = 20,
        U_RIGHT_TO_LEFT_ISOLATE = 21,
        U_POP_DIRECTIONAL_ISOLATE = 22,
    };
    enum class UCharIteratorOrigin : int32_t
    {
        UITER_START = 0,
        UITER_CURRENT = 1,
        UITER_LIMIT = 2,
        UITER_ZERO = 3,
        UITER_LENGTH = 4,
    };
    enum class UCharNameChoice : int32_t
    {
        U_UNICODE_CHAR_NAME = 0,
        U_EXTENDED_CHAR_NAME = 2,
        U_CHAR_NAME_ALIAS = 3,
    };
    enum class UColAttribute : int32_t
    {
        UCOL_FRENCH_COLLATION = 0,
        UCOL_ALTERNATE_HANDLING = 1,
        UCOL_CASE_FIRST = 2,
        UCOL_CASE_LEVEL = 3,
        UCOL_NORMALIZATION_MODE = 4,
        UCOL_DECOMPOSITION_MODE = 4,
        UCOL_STRENGTH = 5,
        UCOL_NUMERIC_COLLATION = 7,
        UCOL_ATTRIBUTE_COUNT = 8,
    };
    enum class UColAttributeValue : int32_t
    {
        UCOL_DEFAULT = -1,
        UCOL_PRIMARY = 0,
        UCOL_SECONDARY = 1,
        UCOL_TERTIARY = 2,
        UCOL_DEFAULT_STRENGTH = 2,
        UCOL_CE_STRENGTH_LIMIT = 3,
        UCOL_QUATERNARY = 3,
        UCOL_IDENTICAL = 15,
        UCOL_STRENGTH_LIMIT = 16,
        UCOL_OFF = 16,
        UCOL_ON = 17,
        UCOL_SHIFTED = 20,
        UCOL_NON_IGNORABLE = 21,
        UCOL_LOWER_FIRST = 24,
        UCOL_UPPER_FIRST = 25,
    };
    enum class UColBoundMode : int32_t
    {
        UCOL_BOUND_LOWER = 0,
        UCOL_BOUND_UPPER = 1,
        UCOL_BOUND_UPPER_LONG = 2,
    };
    enum class UColReorderCode : int32_t
    {
        UCOL_REORDER_CODE_DEFAULT = -1,
        UCOL_REORDER_CODE_NONE = 103,
        UCOL_REORDER_CODE_OTHERS = 103,
        UCOL_REORDER_CODE_SPACE = 4096,
        UCOL_REORDER_CODE_FIRST = 4096,
        UCOL_REORDER_CODE_PUNCTUATION = 4097,
        UCOL_REORDER_CODE_SYMBOL = 4098,
        UCOL_REORDER_CODE_CURRENCY = 4099,
        UCOL_REORDER_CODE_DIGIT = 4100,
    };
    enum class UColRuleOption : int32_t
    {
        UCOL_TAILORING_ONLY = 0,
        UCOL_FULL_RULES = 1,
    };
    enum class UCollationResult : int32_t
    {
        UCOL_EQUAL = 0,
        UCOL_GREATER = 1,
        UCOL_LESS = -1,
    };
    enum class UConverterCallbackReason : int32_t
    {
        UCNV_UNASSIGNED = 0,
        UCNV_ILLEGAL = 1,
        UCNV_IRREGULAR = 2,
        UCNV_RESET = 3,
        UCNV_CLOSE = 4,
        UCNV_CLONE = 5,
    };
    enum class UConverterPlatform : int32_t
    {
        UCNV_UNKNOWN = -1,
        UCNV_IBM = 0,
    };
    enum class UConverterType : int32_t
    {
        UCNV_UNSUPPORTED_CONVERTER = -1,
        UCNV_SBCS = 0,
        UCNV_DBCS = 1,
        UCNV_MBCS = 2,
        UCNV_LATIN_1 = 3,
        UCNV_UTF8 = 4,
        UCNV_UTF16_BigEndian = 5,
        UCNV_UTF16_LittleEndian = 6,
        UCNV_UTF32_BigEndian = 7,
        UCNV_UTF32_LittleEndian = 8,
        UCNV_EBCDIC_STATEFUL = 9,
        UCNV_ISO_2022 = 10,
        UCNV_LMBCS_1 = 11,
        UCNV_LMBCS_2 = 12,
        UCNV_LMBCS_3 = 13,
        UCNV_LMBCS_4 = 14,
        UCNV_LMBCS_5 = 15,
        UCNV_LMBCS_6 = 16,
        UCNV_LMBCS_8 = 17,
        UCNV_LMBCS_11 = 18,
        UCNV_LMBCS_16 = 19,
        UCNV_LMBCS_17 = 20,
        UCNV_LMBCS_18 = 21,
        UCNV_LMBCS_19 = 22,
        UCNV_LMBCS_LAST = 22,
        UCNV_HZ = 23,
        UCNV_SCSU = 24,
        UCNV_ISCII = 25,
        UCNV_US_ASCII = 26,
        UCNV_UTF7 = 27,
        UCNV_BOCU1 = 28,
        UCNV_UTF16 = 29,
        UCNV_UTF32 = 30,
        UCNV_CESU8 = 31,
        UCNV_IMAP_MAILBOX = 32,
        UCNV_COMPOUND_TEXT = 33,
        UCNV_NUMBER_OF_SUPPORTED_CONVERTER_TYPES = 34,
    };
    enum class UConverterUnicodeSet : int32_t
    {
        UCNV_ROUNDTRIP_SET = 0,
        UCNV_ROUNDTRIP_AND_FALLBACK_SET = 1,
    };
    enum class UCurrCurrencyType : int32_t
    {
        UCURR_ALL = 2147483647,
        UCURR_COMMON = 1,
        UCURR_UNCOMMON = 2,
        UCURR_DEPRECATED = 4,
        UCURR_NON_DEPRECATED = 8,
    };
    enum class UCurrNameStyle : int32_t
    {
        UCURR_SYMBOL_NAME = 0,
        UCURR_LONG_NAME = 1,
        UCURR_NARROW_SYMBOL_NAME = 2,
    };
    enum class UCurrencySpacing : int32_t
    {
        UNUM_CURRENCY_MATCH = 0,
        UNUM_CURRENCY_SURROUNDING_MATCH = 1,
        UNUM_CURRENCY_INSERT = 2,
        UNUM_CURRENCY_SPACING_COUNT = 3,
    };
    enum class UCurrencyUsage : int32_t
    {
        UCURR_USAGE_STANDARD = 0,
        UCURR_USAGE_CASH = 1,
    };
    enum class UDateAbsoluteUnit : int32_t
    {
        UDAT_ABSOLUTE_SUNDAY = 0,
        UDAT_ABSOLUTE_MONDAY = 1,
        UDAT_ABSOLUTE_TUESDAY = 2,
        UDAT_ABSOLUTE_WEDNESDAY = 3,
        UDAT_ABSOLUTE_THURSDAY = 4,
        UDAT_ABSOLUTE_FRIDAY = 5,
        UDAT_ABSOLUTE_SATURDAY = 6,
        UDAT_ABSOLUTE_DAY = 7,
        UDAT_ABSOLUTE_WEEK = 8,
        UDAT_ABSOLUTE_MONTH = 9,
        UDAT_ABSOLUTE_YEAR = 10,
        UDAT_ABSOLUTE_NOW = 11,
        UDAT_ABSOLUTE_UNIT_COUNT = 12,
    };
    enum class UDateDirection : int32_t
    {
        UDAT_DIRECTION_LAST_2 = 0,
        UDAT_DIRECTION_LAST = 1,
        UDAT_DIRECTION_THIS = 2,
        UDAT_DIRECTION_NEXT = 3,
        UDAT_DIRECTION_NEXT_2 = 4,
        UDAT_DIRECTION_PLAIN = 5,
        UDAT_DIRECTION_COUNT = 6,
    };
    enum class UDateFormatBooleanAttribute : int32_t
    {
        UDAT_PARSE_ALLOW_WHITESPACE = 0,
        UDAT_PARSE_ALLOW_NUMERIC = 1,
        UDAT_PARSE_PARTIAL_LITERAL_MATCH = 2,
        UDAT_PARSE_MULTIPLE_PATTERNS_FOR_MATCH = 3,
        UDAT_BOOLEAN_ATTRIBUTE_COUNT = 4,
    };
    enum class UDateFormatField : int32_t
    {
        UDAT_ERA_FIELD = 0,
        UDAT_YEAR_FIELD = 1,
        UDAT_MONTH_FIELD = 2,
        UDAT_DATE_FIELD = 3,
        UDAT_HOUR_OF_DAY1_FIELD = 4,
        UDAT_HOUR_OF_DAY0_FIELD = 5,
        UDAT_MINUTE_FIELD = 6,
        UDAT_SECOND_FIELD = 7,
        UDAT_FRACTIONAL_SECOND_FIELD = 8,
        UDAT_DAY_OF_WEEK_FIELD = 9,
        UDAT_DAY_OF_YEAR_FIELD = 10,
        UDAT_DAY_OF_WEEK_IN_MONTH_FIELD = 11,
        UDAT_WEEK_OF_YEAR_FIELD = 12,
        UDAT_WEEK_OF_MONTH_FIELD = 13,
        UDAT_AM_PM_FIELD = 14,
        UDAT_HOUR1_FIELD = 15,
        UDAT_HOUR0_FIELD = 16,
        UDAT_TIMEZONE_FIELD = 17,
        UDAT_YEAR_WOY_FIELD = 18,
        UDAT_DOW_LOCAL_FIELD = 19,
        UDAT_EXTENDED_YEAR_FIELD = 20,
        UDAT_JULIAN_DAY_FIELD = 21,
        UDAT_MILLISECONDS_IN_DAY_FIELD = 22,
        UDAT_TIMEZONE_RFC_FIELD = 23,
        UDAT_TIMEZONE_GENERIC_FIELD = 24,
        UDAT_STANDALONE_DAY_FIELD = 25,
        UDAT_STANDALONE_MONTH_FIELD = 26,
        UDAT_QUARTER_FIELD = 27,
        UDAT_STANDALONE_QUARTER_FIELD = 28,
        UDAT_TIMEZONE_SPECIAL_FIELD = 29,
        UDAT_YEAR_NAME_FIELD = 30,
        UDAT_TIMEZONE_LOCALIZED_GMT_OFFSET_FIELD = 31,
        UDAT_TIMEZONE_ISO_FIELD = 32,
        UDAT_TIMEZONE_ISO_LOCAL_FIELD = 33,
        UDAT_AM_PM_MIDNIGHT_NOON_FIELD = 35,
        UDAT_FLEXIBLE_DAY_PERIOD_FIELD = 36,
    };
    enum class UDateFormatStyle : int32_t
    {
        UDAT_FULL = 0,
        UDAT_LONG = 1,
        UDAT_MEDIUM = 2,
        UDAT_SHORT = 3,
        UDAT_DEFAULT = 2,
        UDAT_RELATIVE = 128,
        UDAT_FULL_RELATIVE = 128,
        UDAT_LONG_RELATIVE = 129,
        UDAT_MEDIUM_RELATIVE = 130,
        UDAT_SHORT_RELATIVE = 131,
        UDAT_NONE = -1,
        UDAT_PATTERN = -2,
    };
    enum class UDateFormatSymbolType : int32_t
    {
        UDAT_ERAS = 0,
        UDAT_MONTHS = 1,
        UDAT_SHORT_MONTHS = 2,
        UDAT_WEEKDAYS = 3,
        UDAT_SHORT_WEEKDAYS = 4,
        UDAT_AM_PMS = 5,
        UDAT_LOCALIZED_CHARS = 6,
        UDAT_ERA_NAMES = 7,
        UDAT_NARROW_MONTHS = 8,
        UDAT_NARROW_WEEKDAYS = 9,
        UDAT_STANDALONE_MONTHS = 10,
        UDAT_STANDALONE_SHORT_MONTHS = 11,
        UDAT_STANDALONE_NARROW_MONTHS = 12,
        UDAT_STANDALONE_WEEKDAYS = 13,
        UDAT_STANDALONE_SHORT_WEEKDAYS = 14,
        UDAT_STANDALONE_NARROW_WEEKDAYS = 15,
        UDAT_QUARTERS = 16,
        UDAT_SHORT_QUARTERS = 17,
        UDAT_STANDALONE_QUARTERS = 18,
        UDAT_STANDALONE_SHORT_QUARTERS = 19,
        UDAT_SHORTER_WEEKDAYS = 20,
        UDAT_STANDALONE_SHORTER_WEEKDAYS = 21,
        UDAT_CYCLIC_YEARS_WIDE = 22,
        UDAT_CYCLIC_YEARS_ABBREVIATED = 23,
        UDAT_CYCLIC_YEARS_NARROW = 24,
        UDAT_ZODIAC_NAMES_WIDE = 25,
        UDAT_ZODIAC_NAMES_ABBREVIATED = 26,
        UDAT_ZODIAC_NAMES_NARROW = 27,
    };
    enum class UDateRelativeDateTimeFormatterStyle : int32_t
    {
        UDAT_STYLE_LONG = 0,
        UDAT_STYLE_SHORT = 1,
        UDAT_STYLE_NARROW = 2,
    };
    enum class UDateRelativeUnit : int32_t
    {
        UDAT_RELATIVE_SECONDS = 0,
        UDAT_RELATIVE_MINUTES = 1,
        UDAT_RELATIVE_HOURS = 2,
        UDAT_RELATIVE_DAYS = 3,
        UDAT_RELATIVE_WEEKS = 4,
        UDAT_RELATIVE_MONTHS = 5,
        UDAT_RELATIVE_YEARS = 6,
        UDAT_RELATIVE_UNIT_COUNT = 7,
    };
    enum class UDateTimePGDisplayWidth : int32_t
    {
        UDATPG_WIDE = 0,
        UDATPG_ABBREVIATED = 1,
        UDATPG_NARROW = 2,
    };
    enum class UDateTimePatternConflict : int32_t
    {
        UDATPG_NO_CONFLICT = 0,
        UDATPG_BASE_CONFLICT = 1,
        UDATPG_CONFLICT = 2,
    };
    enum class UDateTimePatternField : int32_t
    {
        UDATPG_ERA_FIELD = 0,
        UDATPG_YEAR_FIELD = 1,
        UDATPG_QUARTER_FIELD = 2,
        UDATPG_MONTH_FIELD = 3,
        UDATPG_WEEK_OF_YEAR_FIELD = 4,
        UDATPG_WEEK_OF_MONTH_FIELD = 5,
        UDATPG_WEEKDAY_FIELD = 6,
        UDATPG_DAY_OF_YEAR_FIELD = 7,
        UDATPG_DAY_OF_WEEK_IN_MONTH_FIELD = 8,
        UDATPG_DAY_FIELD = 9,
        UDATPG_DAYPERIOD_FIELD = 10,
        UDATPG_HOUR_FIELD = 11,
        UDATPG_MINUTE_FIELD = 12,
        UDATPG_SECOND_FIELD = 13,
        UDATPG_FRACTIONAL_SECOND_FIELD = 14,
        UDATPG_ZONE_FIELD = 15,
        UDATPG_FIELD_COUNT = 16,
    };
    enum class UDateTimePatternMatchOptions : int32_t
    {
        UDATPG_MATCH_NO_OPTIONS = 0,
        UDATPG_MATCH_HOUR_FIELD_LENGTH = 2048,
        UDATPG_MATCH_ALL_FIELDS_LENGTH = 65535,
    };
    enum class UDateTimeScale : int32_t
    {
        UDTS_JAVA_TIME = 0,
        UDTS_UNIX_TIME = 1,
        UDTS_ICU4C_TIME = 2,
        UDTS_WINDOWS_FILE_TIME = 3,
        UDTS_DOTNET_DATE_TIME = 4,
        UDTS_MAC_OLD_TIME = 5,
        UDTS_MAC_TIME = 6,
        UDTS_EXCEL_TIME = 7,
        UDTS_DB2_TIME = 8,
        UDTS_UNIX_MICROSECONDS_TIME = 9,
    };
    enum class UDecompositionType : int32_t
    {
        U_DT_NONE = 0,
        U_DT_CANONICAL = 1,
        U_DT_COMPAT = 2,
        U_DT_CIRCLE = 3,
        U_DT_FINAL = 4,
        U_DT_FONT = 5,
        U_DT_FRACTION = 6,
        U_DT_INITIAL = 7,
        U_DT_ISOLATED = 8,
        U_DT_MEDIAL = 9,
        U_DT_NARROW = 10,
        U_DT_NOBREAK = 11,
        U_DT_SMALL = 12,
        U_DT_SQUARE = 13,
        U_DT_SUB = 14,
        U_DT_SUPER = 15,
        U_DT_VERTICAL = 16,
        U_DT_WIDE = 17,
    };
    enum class UDialectHandling : int32_t
    {
        ULDN_STANDARD_NAMES = 0,
        ULDN_DIALECT_NAMES = 1,
    };
    enum class UDisplayContext : int32_t
    {
        UDISPCTX_STANDARD_NAMES = 0,
        UDISPCTX_DIALECT_NAMES = 1,
        UDISPCTX_CAPITALIZATION_NONE = 256,
        UDISPCTX_CAPITALIZATION_FOR_MIDDLE_OF_SENTENCE = 257,
        UDISPCTX_CAPITALIZATION_FOR_BEGINNING_OF_SENTENCE = 258,
        UDISPCTX_CAPITALIZATION_FOR_UI_LIST_OR_MENU = 259,
        UDISPCTX_CAPITALIZATION_FOR_STANDALONE = 260,
        UDISPCTX_LENGTH_FULL = 512,
        UDISPCTX_LENGTH_SHORT = 513,
        UDISPCTX_SUBSTITUTE = 768,
        UDISPCTX_NO_SUBSTITUTE = 769,
    };
    enum class UDisplayContextType : int32_t
    {
        UDISPCTX_TYPE_DIALECT_HANDLING = 0,
        UDISPCTX_TYPE_CAPITALIZATION = 1,
        UDISPCTX_TYPE_DISPLAY_LENGTH = 2,
        UDISPCTX_TYPE_SUBSTITUTE_HANDLING = 3,
    };
    enum class UEastAsianWidth : int32_t
    {
        U_EA_NEUTRAL = 0,
        U_EA_AMBIGUOUS = 1,
        U_EA_HALFWIDTH = 2,
        U_EA_FULLWIDTH = 3,
        U_EA_NARROW = 4,
        U_EA_WIDE = 5,
    };
    enum class UErrorCode : int32_t
    {
        U_USING_FALLBACK_WARNING = -128,
        U_ERROR_WARNING_START = -128,
        U_USING_DEFAULT_WARNING = -127,
        U_SAFECLONE_ALLOCATED_WARNING = -126,
        U_STATE_OLD_WARNING = -125,
        U_STRING_NOT_TERMINATED_WARNING = -124,
        U_SORT_KEY_TOO_SHORT_WARNING = -123,
        U_AMBIGUOUS_ALIAS_WARNING = -122,
        U_DIFFERENT_UCA_VERSION = -121,
        U_PLUGIN_CHANGED_LEVEL_WARNING = -120,
        U_ZERO_ERROR = 0,
        U_ILLEGAL_ARGUMENT_ERROR = 1,
        U_MISSING_RESOURCE_ERROR = 2,
        U_INVALID_FORMAT_ERROR = 3,
        U_FILE_ACCESS_ERROR = 4,
        U_INTERNAL_PROGRAM_ERROR = 5,
        U_MESSAGE_PARSE_ERROR = 6,
        U_MEMORY_ALLOCATION_ERROR = 7,
        U_INDEX_OUTOFBOUNDS_ERROR = 8,
        U_PARSE_ERROR = 9,
        U_INVALID_CHAR_FOUND = 10,
        U_TRUNCATED_CHAR_FOUND = 11,
        U_ILLEGAL_CHAR_FOUND = 12,
        U_INVALID_TABLE_FORMAT = 13,
        U_INVALID_TABLE_FILE = 14,
        U_BUFFER_OVERFLOW_ERROR = 15,
        U_UNSUPPORTED_ERROR = 16,
        U_RESOURCE_TYPE_MISMATCH = 17,
        U_ILLEGAL_ESCAPE_SEQUENCE = 18,
        U_UNSUPPORTED_ESCAPE_SEQUENCE = 19,
        U_NO_SPACE_AVAILABLE = 20,
        U_CE_NOT_FOUND_ERROR = 21,
        U_PRIMARY_TOO_LONG_ERROR = 22,
        U_STATE_TOO_OLD_ERROR = 23,
        U_TOO_MANY_ALIASES_ERROR = 24,
        U_ENUM_OUT_OF_SYNC_ERROR = 25,
        U_INVARIANT_CONVERSION_ERROR = 26,
        U_INVALID_STATE_ERROR = 27,
        U_COLLATOR_VERSION_MISMATCH = 28,
        U_USELESS_COLLATOR_ERROR = 29,
        U_NO_WRITE_PERMISSION = 30,
        U_BAD_VARIABLE_DEFINITION = 65536,
        U_PARSE_ERROR_START = 65536,
        U_MALFORMED_RULE = 65537,
        U_MALFORMED_SET = 65538,
        U_MALFORMED_SYMBOL_REFERENCE = 65539,
        U_MALFORMED_UNICODE_ESCAPE = 65540,
        U_MALFORMED_VARIABLE_DEFINITION = 65541,
        U_MALFORMED_VARIABLE_REFERENCE = 65542,
        U_MISMATCHED_SEGMENT_DELIMITERS = 65543,
        U_MISPLACED_ANCHOR_START = 65544,
        U_MISPLACED_CURSOR_OFFSET = 65545,
        U_MISPLACED_QUANTIFIER = 65546,
        U_MISSING_OPERATOR = 65547,
        U_MISSING_SEGMENT_CLOSE = 65548,
        U_MULTIPLE_ANTE_CONTEXTS = 65549,
        U_MULTIPLE_CURSORS = 65550,
        U_MULTIPLE_POST_CONTEXTS = 65551,
        U_TRAILING_BACKSLASH = 65552,
        U_UNDEFINED_SEGMENT_REFERENCE = 65553,
        U_UNDEFINED_VARIABLE = 65554,
        U_UNQUOTED_SPECIAL = 65555,
        U_UNTERMINATED_QUOTE = 65556,
        U_RULE_MASK_ERROR = 65557,
        U_MISPLACED_COMPOUND_FILTER = 65558,
        U_MULTIPLE_COMPOUND_FILTERS = 65559,
        U_INVALID_RBT_SYNTAX = 65560,
        U_INVALID_PROPERTY_PATTERN = 65561,
        U_MALFORMED_PRAGMA = 65562,
        U_UNCLOSED_SEGMENT = 65563,
        U_ILLEGAL_CHAR_IN_SEGMENT = 65564,
        U_VARIABLE_RANGE_EXHAUSTED = 65565,
        U_VARIABLE_RANGE_OVERLAP = 65566,
        U_ILLEGAL_CHARACTER = 65567,
        U_INTERNAL_TRANSLITERATOR_ERROR = 65568,
        U_INVALID_ID = 65569,
        U_INVALID_FUNCTION = 65570,
        U_UNEXPECTED_TOKEN = 65792,
        U_FMT_PARSE_ERROR_START = 65792,
        U_MULTIPLE_DECIMAL_SEPARATORS = 65793,
        U_MULTIPLE_DECIMAL_SEPERATORS = 65793,
        U_MULTIPLE_EXPONENTIAL_SYMBOLS = 65794,
        U_MALFORMED_EXPONENTIAL_PATTERN = 65795,
        U_MULTIPLE_PERCENT_SYMBOLS = 65796,
        U_MULTIPLE_PERMILL_SYMBOLS = 65797,
        U_MULTIPLE_PAD_SPECIFIERS = 65798,
        U_PATTERN_SYNTAX_ERROR = 65799,
        U_ILLEGAL_PAD_POSITION = 65800,
        U_UNMATCHED_BRACES = 65801,
        U_UNSUPPORTED_PROPERTY = 65802,
        U_UNSUPPORTED_ATTRIBUTE = 65803,
        U_ARGUMENT_TYPE_MISMATCH = 65804,
        U_DUPLICATE_KEYWORD = 65805,
        U_UNDEFINED_KEYWORD = 65806,
        U_DEFAULT_KEYWORD_MISSING = 65807,
        U_DECIMAL_NUMBER_SYNTAX_ERROR = 65808,
        U_FORMAT_INEXACT_ERROR = 65809,
        U_NUMBER_ARG_OUTOFBOUNDS_ERROR = 65810,
        U_NUMBER_SKELETON_SYNTAX_ERROR = 65811,
        U_BRK_INTERNAL_ERROR = 66048,
        U_BRK_ERROR_START = 66048,
        U_BRK_HEX_DIGITS_EXPECTED = 66049,
        U_BRK_SEMICOLON_EXPECTED = 66050,
        U_BRK_RULE_SYNTAX = 66051,
        U_BRK_UNCLOSED_SET = 66052,
        U_BRK_ASSIGN_ERROR = 66053,
        U_BRK_VARIABLE_REDFINITION = 66054,
        U_BRK_MISMATCHED_PAREN = 66055,
        U_BRK_NEW_LINE_IN_QUOTED_STRING = 66056,
        U_BRK_UNDEFINED_VARIABLE = 66057,
        U_BRK_INIT_ERROR = 66058,
        U_BRK_RULE_EMPTY_SET = 66059,
        U_BRK_UNRECOGNIZED_OPTION = 66060,
        U_BRK_MALFORMED_RULE_TAG = 66061,
        U_REGEX_INTERNAL_ERROR = 66304,
        U_REGEX_ERROR_START = 66304,
        U_REGEX_RULE_SYNTAX = 66305,
        U_REGEX_INVALID_STATE = 66306,
        U_REGEX_BAD_ESCAPE_SEQUENCE = 66307,
        U_REGEX_PROPERTY_SYNTAX = 66308,
        U_REGEX_UNIMPLEMENTED = 66309,
        U_REGEX_MISMATCHED_PAREN = 66310,
        U_REGEX_NUMBER_TOO_BIG = 66311,
        U_REGEX_BAD_INTERVAL = 66312,
        U_REGEX_MAX_LT_MIN = 66313,
        U_REGEX_INVALID_BACK_REF = 66314,
        U_REGEX_INVALID_FLAG = 66315,
        U_REGEX_LOOK_BEHIND_LIMIT = 66316,
        U_REGEX_SET_CONTAINS_STRING = 66317,
        U_REGEX_MISSING_CLOSE_BRACKET = 66319,
        U_REGEX_INVALID_RANGE = 66320,
        U_REGEX_STACK_OVERFLOW = 66321,
        U_REGEX_TIME_OUT = 66322,
        U_REGEX_STOPPED_BY_CALLER = 66323,
        U_REGEX_PATTERN_TOO_BIG = 66324,
        U_REGEX_INVALID_CAPTURE_GROUP_NAME = 66325,
        U_IDNA_PROHIBITED_ERROR = 66560,
        U_IDNA_ERROR_START = 66560,
        U_IDNA_UNASSIGNED_ERROR = 66561,
        U_IDNA_CHECK_BIDI_ERROR = 66562,
        U_IDNA_STD3_ASCII_RULES_ERROR = 66563,
        U_IDNA_ACE_PREFIX_ERROR = 66564,
        U_IDNA_VERIFICATION_ERROR = 66565,
        U_IDNA_LABEL_TOO_LONG_ERROR = 66566,
        U_IDNA_ZERO_LENGTH_LABEL_ERROR = 66567,
        U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR = 66568,
        U_STRINGPREP_PROHIBITED_ERROR = 66560,
        U_STRINGPREP_UNASSIGNED_ERROR = 66561,
        U_STRINGPREP_CHECK_BIDI_ERROR = 66562,
        U_PLUGIN_ERROR_START = 66816,
        U_PLUGIN_TOO_HIGH = 66816,
        U_PLUGIN_DIDNT_SET_LEVEL = 66817,
    };
    enum class UFieldCategory : int32_t
    {
        UFIELD_CATEGORY_UNDEFINED = 0,
        UFIELD_CATEGORY_DATE = 1,
        UFIELD_CATEGORY_NUMBER = 2,
        UFIELD_CATEGORY_LIST = 3,
        UFIELD_CATEGORY_RELATIVE_DATETIME = 4,
        UFIELD_CATEGORY_DATE_INTERVAL = 5,
        UFIELD_CATEGORY_LIST_SPAN = 4099,
        UFIELD_CATEGORY_DATE_INTERVAL_SPAN = 4101,
    };
    enum class UFormattableType : int32_t
    {
        UFMT_DATE = 0,
        UFMT_DOUBLE = 1,
        UFMT_LONG = 2,
        UFMT_STRING = 3,
        UFMT_ARRAY = 4,
        UFMT_INT64 = 5,
        UFMT_OBJECT = 6,
    };
    enum class UGender : int32_t
    {
        UGENDER_MALE = 0,
        UGENDER_FEMALE = 1,
        UGENDER_OTHER = 2,
    };
    enum class UGraphemeClusterBreak : int32_t
    {
        U_GCB_OTHER = 0,
        U_GCB_CONTROL = 1,
        U_GCB_CR = 2,
        U_GCB_EXTEND = 3,
        U_GCB_L = 4,
        U_GCB_LF = 5,
        U_GCB_LV = 6,
        U_GCB_LVT = 7,
        U_GCB_T = 8,
        U_GCB_V = 9,
        U_GCB_SPACING_MARK = 10,
        U_GCB_PREPEND = 11,
        U_GCB_REGIONAL_INDICATOR = 12,
        U_GCB_E_BASE = 13,
        U_GCB_E_BASE_GAZ = 14,
        U_GCB_E_MODIFIER = 15,
        U_GCB_GLUE_AFTER_ZWJ = 16,
        U_GCB_ZWJ = 17,
    };
    enum class UHangulSyllableType : int32_t
    {
        U_HST_NOT_APPLICABLE = 0,
        U_HST_LEADING_JAMO = 1,
        U_HST_VOWEL_JAMO = 2,
        U_HST_TRAILING_JAMO = 3,
        U_HST_LV_SYLLABLE = 4,
        U_HST_LVT_SYLLABLE = 5,
    };
    enum class UIndicPositionalCategory : int32_t
    {
        U_INPC_NA = 0,
        U_INPC_BOTTOM = 1,
        U_INPC_BOTTOM_AND_LEFT = 2,
        U_INPC_BOTTOM_AND_RIGHT = 3,
        U_INPC_LEFT = 4,
        U_INPC_LEFT_AND_RIGHT = 5,
        U_INPC_OVERSTRUCK = 6,
        U_INPC_RIGHT = 7,
        U_INPC_TOP = 8,
        U_INPC_TOP_AND_BOTTOM = 9,
        U_INPC_TOP_AND_BOTTOM_AND_RIGHT = 10,
        U_INPC_TOP_AND_LEFT = 11,
        U_INPC_TOP_AND_LEFT_AND_RIGHT = 12,
        U_INPC_TOP_AND_RIGHT = 13,
        U_INPC_VISUAL_ORDER_LEFT = 14,
        U_INPC_TOP_AND_BOTTOM_AND_LEFT = 15,
    };
    enum class UIndicSyllabicCategory : int32_t
    {
        U_INSC_OTHER = 0,
        U_INSC_AVAGRAHA = 1,
        U_INSC_BINDU = 2,
        U_INSC_BRAHMI_JOINING_NUMBER = 3,
        U_INSC_CANTILLATION_MARK = 4,
        U_INSC_CONSONANT = 5,
        U_INSC_CONSONANT_DEAD = 6,
        U_INSC_CONSONANT_FINAL = 7,
        U_INSC_CONSONANT_HEAD_LETTER = 8,
        U_INSC_CONSONANT_INITIAL_POSTFIXED = 9,
        U_INSC_CONSONANT_KILLER = 10,
        U_INSC_CONSONANT_MEDIAL = 11,
        U_INSC_CONSONANT_PLACEHOLDER = 12,
        U_INSC_CONSONANT_PRECEDING_REPHA = 13,
        U_INSC_CONSONANT_PREFIXED = 14,
        U_INSC_CONSONANT_SUBJOINED = 15,
        U_INSC_CONSONANT_SUCCEEDING_REPHA = 16,
        U_INSC_CONSONANT_WITH_STACKER = 17,
        U_INSC_GEMINATION_MARK = 18,
        U_INSC_INVISIBLE_STACKER = 19,
        U_INSC_JOINER = 20,
        U_INSC_MODIFYING_LETTER = 21,
        U_INSC_NON_JOINER = 22,
        U_INSC_NUKTA = 23,
        U_INSC_NUMBER = 24,
        U_INSC_NUMBER_JOINER = 25,
        U_INSC_PURE_KILLER = 26,
        U_INSC_REGISTER_SHIFTER = 27,
        U_INSC_SYLLABLE_MODIFIER = 28,
        U_INSC_TONE_LETTER = 29,
        U_INSC_TONE_MARK = 30,
        U_INSC_VIRAMA = 31,
        U_INSC_VISARGA = 32,
        U_INSC_VOWEL = 33,
        U_INSC_VOWEL_DEPENDENT = 34,
        U_INSC_VOWEL_INDEPENDENT = 35,
    };
    enum class UJoiningGroup : int32_t
    {
        U_JG_NO_JOINING_GROUP = 0,
        U_JG_AIN = 1,
        U_JG_ALAPH = 2,
        U_JG_ALEF = 3,
        U_JG_BEH = 4,
        U_JG_BETH = 5,
        U_JG_DAL = 6,
        U_JG_DALATH_RISH = 7,
        U_JG_E = 8,
        U_JG_FEH = 9,
        U_JG_FINAL_SEMKATH = 10,
        U_JG_GAF = 11,
        U_JG_GAMAL = 12,
        U_JG_HAH = 13,
        U_JG_TEH_MARBUTA_GOAL = 14,
        U_JG_HAMZA_ON_HEH_GOAL = 14,
        U_JG_HE = 15,
        U_JG_HEH = 16,
        U_JG_HEH_GOAL = 17,
        U_JG_HETH = 18,
        U_JG_KAF = 19,
        U_JG_KAPH = 20,
        U_JG_KNOTTED_HEH = 21,
        U_JG_LAM = 22,
        U_JG_LAMADH = 23,
        U_JG_MEEM = 24,
        U_JG_MIM = 25,
        U_JG_NOON = 26,
        U_JG_NUN = 27,
        U_JG_PE = 28,
        U_JG_QAF = 29,
        U_JG_QAPH = 30,
        U_JG_REH = 31,
        U_JG_REVERSED_PE = 32,
        U_JG_SAD = 33,
        U_JG_SADHE = 34,
        U_JG_SEEN = 35,
        U_JG_SEMKATH = 36,
        U_JG_SHIN = 37,
        U_JG_SWASH_KAF = 38,
        U_JG_SYRIAC_WAW = 39,
        U_JG_TAH = 40,
        U_JG_TAW = 41,
        U_JG_TEH_MARBUTA = 42,
        U_JG_TETH = 43,
        U_JG_WAW = 44,
        U_JG_YEH = 45,
        U_JG_YEH_BARREE = 46,
        U_JG_YEH_WITH_TAIL = 47,
        U_JG_YUDH = 48,
        U_JG_YUDH_HE = 49,
        U_JG_ZAIN = 50,
        U_JG_FE = 51,
        U_JG_KHAPH = 52,
        U_JG_ZHAIN = 53,
        U_JG_BURUSHASKI_YEH_BARREE = 54,
        U_JG_FARSI_YEH = 55,
        U_JG_NYA = 56,
        U_JG_ROHINGYA_YEH = 57,
        U_JG_MANICHAEAN_ALEPH = 58,
        U_JG_MANICHAEAN_AYIN = 59,
        U_JG_MANICHAEAN_BETH = 60,
        U_JG_MANICHAEAN_DALETH = 61,
        U_JG_MANICHAEAN_DHAMEDH = 62,
        U_JG_MANICHAEAN_FIVE = 63,
        U_JG_MANICHAEAN_GIMEL = 64,
        U_JG_MANICHAEAN_HETH = 65,
        U_JG_MANICHAEAN_HUNDRED = 66,
        U_JG_MANICHAEAN_KAPH = 67,
        U_JG_MANICHAEAN_LAMEDH = 68,
        U_JG_MANICHAEAN_MEM = 69,
        U_JG_MANICHAEAN_NUN = 70,
        U_JG_MANICHAEAN_ONE = 71,
        U_JG_MANICHAEAN_PE = 72,
        U_JG_MANICHAEAN_QOPH = 73,
        U_JG_MANICHAEAN_RESH = 74,
        U_JG_MANICHAEAN_SADHE = 75,
        U_JG_MANICHAEAN_SAMEKH = 76,
        U_JG_MANICHAEAN_TAW = 77,
        U_JG_MANICHAEAN_TEN = 78,
        U_JG_MANICHAEAN_TETH = 79,
        U_JG_MANICHAEAN_THAMEDH = 80,
        U_JG_MANICHAEAN_TWENTY = 81,
        U_JG_MANICHAEAN_WAW = 82,
        U_JG_MANICHAEAN_YODH = 83,
        U_JG_MANICHAEAN_ZAYIN = 84,
        U_JG_STRAIGHT_WAW = 85,
        U_JG_AFRICAN_FEH = 86,
        U_JG_AFRICAN_NOON = 87,
        U_JG_AFRICAN_QAF = 88,
        U_JG_MALAYALAM_BHA = 89,
        U_JG_MALAYALAM_JA = 90,
        U_JG_MALAYALAM_LLA = 91,
        U_JG_MALAYALAM_LLLA = 92,
        U_JG_MALAYALAM_NGA = 93,
        U_JG_MALAYALAM_NNA = 94,
        U_JG_MALAYALAM_NNNA = 95,
        U_JG_MALAYALAM_NYA = 96,
        U_JG_MALAYALAM_RA = 97,
        U_JG_MALAYALAM_SSA = 98,
        U_JG_MALAYALAM_TTA = 99,
        U_JG_HANIFI_ROHINGYA_KINNA_YA = 100,
        U_JG_HANIFI_ROHINGYA_PA = 101,
    };
    enum class UJoiningType : int32_t
    {
        U_JT_NON_JOINING = 0,
        U_JT_JOIN_CAUSING = 1,
        U_JT_DUAL_JOINING = 2,
        U_JT_LEFT_JOINING = 3,
        U_JT_RIGHT_JOINING = 4,
        U_JT_TRANSPARENT = 5,
    };
    enum class ULayoutType : int32_t
    {
        ULOC_LAYOUT_LTR = 0,
        ULOC_LAYOUT_RTL = 1,
        ULOC_LAYOUT_TTB = 2,
        ULOC_LAYOUT_BTT = 3,
        ULOC_LAYOUT_UNKNOWN = 4,
    };
    enum class ULineBreak : int32_t
    {
        U_LB_UNKNOWN = 0,
        U_LB_AMBIGUOUS = 1,
        U_LB_ALPHABETIC = 2,
        U_LB_BREAK_BOTH = 3,
        U_LB_BREAK_AFTER = 4,
        U_LB_BREAK_BEFORE = 5,
        U_LB_MANDATORY_BREAK = 6,
        U_LB_CONTINGENT_BREAK = 7,
        U_LB_CLOSE_PUNCTUATION = 8,
        U_LB_COMBINING_MARK = 9,
        U_LB_CARRIAGE_RETURN = 10,
        U_LB_EXCLAMATION = 11,
        U_LB_GLUE = 12,
        U_LB_HYPHEN = 13,
        U_LB_IDEOGRAPHIC = 14,
        U_LB_INSEPARABLE = 15,
        U_LB_INSEPERABLE = 15,
        U_LB_INFIX_NUMERIC = 16,
        U_LB_LINE_FEED = 17,
        U_LB_NONSTARTER = 18,
        U_LB_NUMERIC = 19,
        U_LB_OPEN_PUNCTUATION = 20,
        U_LB_POSTFIX_NUMERIC = 21,
        U_LB_PREFIX_NUMERIC = 22,
        U_LB_QUOTATION = 23,
        U_LB_COMPLEX_CONTEXT = 24,
        U_LB_SURROGATE = 25,
        U_LB_SPACE = 26,
        U_LB_BREAK_SYMBOLS = 27,
        U_LB_ZWSPACE = 28,
        U_LB_NEXT_LINE = 29,
        U_LB_WORD_JOINER = 30,
        U_LB_H2 = 31,
        U_LB_H3 = 32,
        U_LB_JL = 33,
        U_LB_JT = 34,
        U_LB_JV = 35,
        U_LB_CLOSE_PARENTHESIS = 36,
        U_LB_CONDITIONAL_JAPANESE_STARTER = 37,
        U_LB_HEBREW_LETTER = 38,
        U_LB_REGIONAL_INDICATOR = 39,
        U_LB_E_BASE = 40,
        U_LB_E_MODIFIER = 41,
        U_LB_ZWJ = 42,
    };
    enum class ULineBreakTag : int32_t
    {
        UBRK_LINE_SOFT = 0,
        UBRK_LINE_SOFT_LIMIT = 100,
        UBRK_LINE_HARD = 100,
        UBRK_LINE_HARD_LIMIT = 200,
    };
    enum class UListFormatterField : int32_t
    {
        ULISTFMT_LITERAL_FIELD = 0,
        ULISTFMT_ELEMENT_FIELD = 1,
    };
    enum class UListFormatterType : int32_t
    {
        ULISTFMT_TYPE_AND = 0,
        ULISTFMT_TYPE_OR = 1,
        ULISTFMT_TYPE_UNITS = 2,
    };
    enum class UListFormatterWidth : int32_t
    {
        ULISTFMT_WIDTH_WIDE = 0,
        ULISTFMT_WIDTH_SHORT = 1,
        ULISTFMT_WIDTH_NARROW = 2,
    };
    enum class ULocAvailableType : int32_t
    {
        ULOC_AVAILABLE_DEFAULT = 0,
        ULOC_AVAILABLE_ONLY_LEGACY_ALIASES = 1,
        ULOC_AVAILABLE_WITH_LEGACY_ALIASES = 2,
    };
    enum class ULocDataLocaleType : int32_t
    {
        ULOC_ACTUAL_LOCALE = 0,
        ULOC_VALID_LOCALE = 1,
    };
    enum class ULocaleDataDelimiterType : int32_t
    {
        ULOCDATA_QUOTATION_START = 0,
        ULOCDATA_QUOTATION_END = 1,
        ULOCDATA_ALT_QUOTATION_START = 2,
        ULOCDATA_ALT_QUOTATION_END = 3,
    };
    enum class ULocaleDataExemplarSetType : int32_t
    {
        ULOCDATA_ES_STANDARD = 0,
        ULOCDATA_ES_AUXILIARY = 1,
        ULOCDATA_ES_INDEX = 2,
        ULOCDATA_ES_PUNCTUATION = 3,
    };
    enum class UMeasureFormatWidth : int32_t
    {
        UMEASFMT_WIDTH_WIDE = 0,
        UMEASFMT_WIDTH_SHORT = 1,
        UMEASFMT_WIDTH_NARROW = 2,
        UMEASFMT_WIDTH_NUMERIC = 3,
        UMEASFMT_WIDTH_COUNT = 4,
    };
    enum class UMeasurementSystem : int32_t
    {
        UMS_SI = 0,
        UMS_US = 1,
        UMS_UK = 2,
    };
    enum class UMessagePatternApostropheMode : int32_t
    {
        UMSGPAT_APOS_DOUBLE_OPTIONAL = 0,
        UMSGPAT_APOS_DOUBLE_REQUIRED = 1,
    };
    enum class UMessagePatternArgType : int32_t
    {
        UMSGPAT_ARG_TYPE_NONE = 0,
        UMSGPAT_ARG_TYPE_SIMPLE = 1,
        UMSGPAT_ARG_TYPE_CHOICE = 2,
        UMSGPAT_ARG_TYPE_PLURAL = 3,
        UMSGPAT_ARG_TYPE_SELECT = 4,
        UMSGPAT_ARG_TYPE_SELECTORDINAL = 5,
    };
    enum class UMessagePatternPartType : int32_t
    {
        UMSGPAT_PART_TYPE_MSG_START = 0,
        UMSGPAT_PART_TYPE_MSG_LIMIT = 1,
        UMSGPAT_PART_TYPE_SKIP_SYNTAX = 2,
        UMSGPAT_PART_TYPE_INSERT_CHAR = 3,
        UMSGPAT_PART_TYPE_REPLACE_NUMBER = 4,
        UMSGPAT_PART_TYPE_ARG_START = 5,
        UMSGPAT_PART_TYPE_ARG_LIMIT = 6,
        UMSGPAT_PART_TYPE_ARG_NUMBER = 7,
        UMSGPAT_PART_TYPE_ARG_NAME = 8,
        UMSGPAT_PART_TYPE_ARG_TYPE = 9,
        UMSGPAT_PART_TYPE_ARG_STYLE = 10,
        UMSGPAT_PART_TYPE_ARG_SELECTOR = 11,
        UMSGPAT_PART_TYPE_ARG_INT = 12,
        UMSGPAT_PART_TYPE_ARG_DOUBLE = 13,
    };
    enum class UNormalization2Mode : int32_t
    {
        UNORM2_COMPOSE = 0,
        UNORM2_DECOMPOSE = 1,
        UNORM2_FCD = 2,
        UNORM2_COMPOSE_CONTIGUOUS = 3,
    };
    enum class UNormalizationCheckResult : int32_t
    {
        UNORM_NO = 0,
        UNORM_YES = 1,
        UNORM_MAYBE = 2,
    };
    enum class UNormalizationMode : int32_t
    {
        UNORM_NONE = 1,
        UNORM_NFD = 2,
        UNORM_NFKD = 3,
        UNORM_NFC = 4,
        UNORM_DEFAULT = 4,
        UNORM_NFKC = 5,
        UNORM_FCD = 6,
        UNORM_MODE_COUNT = 7,
    };
    enum class UNumberCompactStyle : int32_t
    {
        UNUM_SHORT = 0,
        UNUM_LONG = 1,
    };
    enum class UNumberDecimalSeparatorDisplay : int32_t
    {
        UNUM_DECIMAL_SEPARATOR_AUTO = 0,
        UNUM_DECIMAL_SEPARATOR_ALWAYS = 1,
        UNUM_DECIMAL_SEPARATOR_COUNT = 2,
    };
    enum class UNumberFormatAttribute : int32_t
    {
        UNUM_PARSE_INT_ONLY = 0,
        UNUM_GROUPING_USED = 1,
        UNUM_DECIMAL_ALWAYS_SHOWN = 2,
        UNUM_MAX_INTEGER_DIGITS = 3,
        UNUM_MIN_INTEGER_DIGITS = 4,
        UNUM_INTEGER_DIGITS = 5,
        UNUM_MAX_FRACTION_DIGITS = 6,
        UNUM_MIN_FRACTION_DIGITS = 7,
        UNUM_FRACTION_DIGITS = 8,
        UNUM_MULTIPLIER = 9,
        UNUM_GROUPING_SIZE = 10,
        UNUM_ROUNDING_MODE = 11,
        UNUM_ROUNDING_INCREMENT = 12,
        UNUM_FORMAT_WIDTH = 13,
        UNUM_PADDING_POSITION = 14,
        UNUM_SECONDARY_GROUPING_SIZE = 15,
        UNUM_SIGNIFICANT_DIGITS_USED = 16,
        UNUM_MIN_SIGNIFICANT_DIGITS = 17,
        UNUM_MAX_SIGNIFICANT_DIGITS = 18,
        UNUM_LENIENT_PARSE = 19,
        UNUM_PARSE_ALL_INPUT = 20,
        UNUM_SCALE = 21,
        UNUM_MINIMUM_GROUPING_DIGITS = 22,
        UNUM_CURRENCY_USAGE = 23,
        UNUM_FORMAT_FAIL_IF_MORE_THAN_MAX_DIGITS = 4096,
        UNUM_PARSE_NO_EXPONENT = 4097,
        UNUM_PARSE_DECIMAL_MARK_REQUIRED = 4098,
        UNUM_PARSE_CASE_SENSITIVE = 4099,
        UNUM_SIGN_ALWAYS_SHOWN = 4100,
    };
    enum class UNumberFormatAttributeValue : int32_t
    {
        UNUM_FORMAT_ATTRIBUTE_VALUE_HIDDEN = 0,
    };
    enum class UNumberFormatFields : int32_t
    {
        UNUM_INTEGER_FIELD = 0,
        UNUM_FRACTION_FIELD = 1,
        UNUM_DECIMAL_SEPARATOR_FIELD = 2,
        UNUM_EXPONENT_SYMBOL_FIELD = 3,
        UNUM_EXPONENT_SIGN_FIELD = 4,
        UNUM_EXPONENT_FIELD = 5,
        UNUM_GROUPING_SEPARATOR_FIELD = 6,
        UNUM_CURRENCY_FIELD = 7,
        UNUM_PERCENT_FIELD = 8,
        UNUM_PERMILL_FIELD = 9,
        UNUM_SIGN_FIELD = 10,
        UNUM_MEASURE_UNIT_FIELD = 11,
        UNUM_COMPACT_FIELD = 12,
    };
    enum class UNumberFormatPadPosition : int32_t
    {
        UNUM_PAD_BEFORE_PREFIX = 0,
        UNUM_PAD_AFTER_PREFIX = 1,
        UNUM_PAD_BEFORE_SUFFIX = 2,
        UNUM_PAD_AFTER_SUFFIX = 3,
    };
    enum class UNumberFormatRoundingMode : int32_t
    {
        UNUM_ROUND_CEILING = 0,
        UNUM_ROUND_FLOOR = 1,
        UNUM_ROUND_DOWN = 2,
        UNUM_ROUND_UP = 3,
        UNUM_ROUND_HALFEVEN = 4,
        UNUM_ROUND_HALFDOWN = 5,
        UNUM_ROUND_HALFUP = 6,
        UNUM_ROUND_UNNECESSARY = 7,
    };
    enum class UNumberFormatStyle : int32_t
    {
        UNUM_PATTERN_DECIMAL = 0,
        UNUM_DECIMAL = 1,
        UNUM_CURRENCY = 2,
        UNUM_PERCENT = 3,
        UNUM_SCIENTIFIC = 4,
        UNUM_SPELLOUT = 5,
        UNUM_ORDINAL = 6,
        UNUM_DURATION = 7,
        UNUM_NUMBERING_SYSTEM = 8,
        UNUM_PATTERN_RULEBASED = 9,
        UNUM_CURRENCY_ISO = 10,
        UNUM_CURRENCY_PLURAL = 11,
        UNUM_CURRENCY_ACCOUNTING = 12,
        UNUM_CASH_CURRENCY = 13,
        UNUM_DECIMAL_COMPACT_SHORT = 14,
        UNUM_DECIMAL_COMPACT_LONG = 15,
        UNUM_CURRENCY_STANDARD = 16,
        UNUM_DEFAULT = 1,
        UNUM_IGNORE = 0,
    };
    enum class UNumberFormatSymbol : int32_t
    {
        UNUM_DECIMAL_SEPARATOR_SYMBOL = 0,
        UNUM_GROUPING_SEPARATOR_SYMBOL = 1,
        UNUM_PATTERN_SEPARATOR_SYMBOL = 2,
        UNUM_PERCENT_SYMBOL = 3,
        UNUM_ZERO_DIGIT_SYMBOL = 4,
        UNUM_DIGIT_SYMBOL = 5,
        UNUM_MINUS_SIGN_SYMBOL = 6,
        UNUM_PLUS_SIGN_SYMBOL = 7,
        UNUM_CURRENCY_SYMBOL = 8,
        UNUM_INTL_CURRENCY_SYMBOL = 9,
        UNUM_MONETARY_SEPARATOR_SYMBOL = 10,
        UNUM_EXPONENTIAL_SYMBOL = 11,
        UNUM_PERMILL_SYMBOL = 12,
        UNUM_PAD_ESCAPE_SYMBOL = 13,
        UNUM_INFINITY_SYMBOL = 14,
        UNUM_NAN_SYMBOL = 15,
        UNUM_SIGNIFICANT_DIGIT_SYMBOL = 16,
        UNUM_MONETARY_GROUPING_SEPARATOR_SYMBOL = 17,
        UNUM_ONE_DIGIT_SYMBOL = 18,
        UNUM_TWO_DIGIT_SYMBOL = 19,
        UNUM_THREE_DIGIT_SYMBOL = 20,
        UNUM_FOUR_DIGIT_SYMBOL = 21,
        UNUM_FIVE_DIGIT_SYMBOL = 22,
        UNUM_SIX_DIGIT_SYMBOL = 23,
        UNUM_SEVEN_DIGIT_SYMBOL = 24,
        UNUM_EIGHT_DIGIT_SYMBOL = 25,
        UNUM_NINE_DIGIT_SYMBOL = 26,
        UNUM_EXPONENT_MULTIPLICATION_SYMBOL = 27,
    };
    enum class UNumberFormatTextAttribute : int32_t
    {
        UNUM_POSITIVE_PREFIX = 0,
        UNUM_POSITIVE_SUFFIX = 1,
        UNUM_NEGATIVE_PREFIX = 2,
        UNUM_NEGATIVE_SUFFIX = 3,
        UNUM_PADDING_CHARACTER = 4,
        UNUM_CURRENCY_CODE = 5,
        UNUM_DEFAULT_RULESET = 6,
        UNUM_PUBLIC_RULESETS = 7,
    };
    enum class UNumberGroupingStrategy : int32_t
    {
        UNUM_GROUPING_OFF = 0,
        UNUM_GROUPING_MIN2 = 1,
        UNUM_GROUPING_AUTO = 2,
        UNUM_GROUPING_ON_ALIGNED = 3,
        UNUM_GROUPING_THOUSANDS = 4,
    };
    enum class UNumberRangeCollapse : int32_t
    {
        UNUM_RANGE_COLLAPSE_AUTO = 0,
        UNUM_RANGE_COLLAPSE_NONE = 1,
        UNUM_RANGE_COLLAPSE_UNIT = 2,
        UNUM_RANGE_COLLAPSE_ALL = 3,
    };
    enum class UNumberRangeIdentityFallback : int32_t
    {
        UNUM_IDENTITY_FALLBACK_SINGLE_VALUE = 0,
        UNUM_IDENTITY_FALLBACK_APPROXIMATELY_OR_SINGLE_VALUE = 1,
        UNUM_IDENTITY_FALLBACK_APPROXIMATELY = 2,
        UNUM_IDENTITY_FALLBACK_RANGE = 3,
    };
    enum class UNumberRangeIdentityResult : int32_t
    {
        UNUM_IDENTITY_RESULT_EQUAL_BEFORE_ROUNDING = 0,
        UNUM_IDENTITY_RESULT_EQUAL_AFTER_ROUNDING = 1,
        UNUM_IDENTITY_RESULT_NOT_EQUAL = 2,
    };
    enum class UNumberSignDisplay : int32_t
    {
        UNUM_SIGN_AUTO = 0,
        UNUM_SIGN_ALWAYS = 1,
        UNUM_SIGN_NEVER = 2,
        UNUM_SIGN_ACCOUNTING = 3,
        UNUM_SIGN_ACCOUNTING_ALWAYS = 4,
        UNUM_SIGN_EXCEPT_ZERO = 5,
        UNUM_SIGN_ACCOUNTING_EXCEPT_ZERO = 6,
        UNUM_SIGN_COUNT = 7,
    };
    enum class UNumberUnitWidth : int32_t
    {
        UNUM_UNIT_WIDTH_NARROW = 0,
        UNUM_UNIT_WIDTH_SHORT = 1,
        UNUM_UNIT_WIDTH_FULL_NAME = 2,
        UNUM_UNIT_WIDTH_ISO_CODE = 3,
        UNUM_UNIT_WIDTH_HIDDEN = 4,
        UNUM_UNIT_WIDTH_COUNT = 5,
    };
    enum class UNumericType : int32_t
    {
        U_NT_NONE = 0,
        U_NT_DECIMAL = 1,
        U_NT_DIGIT = 2,
        U_NT_NUMERIC = 3,
    };
    enum class UPluralType : int32_t
    {
        UPLURAL_TYPE_CARDINAL = 0,
        UPLURAL_TYPE_ORDINAL = 1,
    };
    enum class UProperty : int32_t
    {
        UCHAR_ALPHABETIC = 0,
        UCHAR_BINARY_START = 0,
        UCHAR_ASCII_HEX_DIGIT = 1,
        UCHAR_BIDI_CONTROL = 2,
        UCHAR_BIDI_MIRRORED = 3,
        UCHAR_DASH = 4,
        UCHAR_DEFAULT_IGNORABLE_CODE_POINT = 5,
        UCHAR_DEPRECATED = 6,
        UCHAR_DIACRITIC = 7,
        UCHAR_EXTENDER = 8,
        UCHAR_FULL_COMPOSITION_EXCLUSION = 9,
        UCHAR_GRAPHEME_BASE = 10,
        UCHAR_GRAPHEME_EXTEND = 11,
        UCHAR_GRAPHEME_LINK = 12,
        UCHAR_HEX_DIGIT = 13,
        UCHAR_HYPHEN = 14,
        UCHAR_ID_CONTINUE = 15,
        UCHAR_ID_START = 16,
        UCHAR_IDEOGRAPHIC = 17,
        UCHAR_IDS_BINARY_OPERATOR = 18,
        UCHAR_IDS_TRINARY_OPERATOR = 19,
        UCHAR_JOIN_CONTROL = 20,
        UCHAR_LOGICAL_ORDER_EXCEPTION = 21,
        UCHAR_LOWERCASE = 22,
        UCHAR_MATH = 23,
        UCHAR_NONCHARACTER_CODE_POINT = 24,
        UCHAR_QUOTATION_MARK = 25,
        UCHAR_RADICAL = 26,
        UCHAR_SOFT_DOTTED = 27,
        UCHAR_TERMINAL_PUNCTUATION = 28,
        UCHAR_UNIFIED_IDEOGRAPH = 29,
        UCHAR_UPPERCASE = 30,
        UCHAR_WHITE_SPACE = 31,
        UCHAR_XID_CONTINUE = 32,
        UCHAR_XID_START = 33,
        UCHAR_CASE_SENSITIVE = 34,
        UCHAR_S_TERM = 35,
        UCHAR_VARIATION_SELECTOR = 36,
        UCHAR_NFD_INERT = 37,
        UCHAR_NFKD_INERT = 38,
        UCHAR_NFC_INERT = 39,
        UCHAR_NFKC_INERT = 40,
        UCHAR_SEGMENT_STARTER = 41,
        UCHAR_PATTERN_SYNTAX = 42,
        UCHAR_PATTERN_WHITE_SPACE = 43,
        UCHAR_POSIX_ALNUM = 44,
        UCHAR_POSIX_BLANK = 45,
        UCHAR_POSIX_GRAPH = 46,
        UCHAR_POSIX_PRINT = 47,
        UCHAR_POSIX_XDIGIT = 48,
        UCHAR_CASED = 49,
        UCHAR_CASE_IGNORABLE = 50,
        UCHAR_CHANGES_WHEN_LOWERCASED = 51,
        UCHAR_CHANGES_WHEN_UPPERCASED = 52,
        UCHAR_CHANGES_WHEN_TITLECASED = 53,
        UCHAR_CHANGES_WHEN_CASEFOLDED = 54,
        UCHAR_CHANGES_WHEN_CASEMAPPED = 55,
        UCHAR_CHANGES_WHEN_NFKC_CASEFOLDED = 56,
        UCHAR_EMOJI = 57,
        UCHAR_EMOJI_PRESENTATION = 58,
        UCHAR_EMOJI_MODIFIER = 59,
        UCHAR_EMOJI_MODIFIER_BASE = 60,
        UCHAR_EMOJI_COMPONENT = 61,
        UCHAR_REGIONAL_INDICATOR = 62,
        UCHAR_PREPENDED_CONCATENATION_MARK = 63,
        UCHAR_EXTENDED_PICTOGRAPHIC = 64,
        UCHAR_BIDI_CLASS = 4096,
        UCHAR_INT_START = 4096,
        UCHAR_BLOCK = 4097,
        UCHAR_CANONICAL_COMBINING_CLASS = 4098,
        UCHAR_DECOMPOSITION_TYPE = 4099,
        UCHAR_EAST_ASIAN_WIDTH = 4100,
        UCHAR_GENERAL_CATEGORY = 4101,
        UCHAR_JOINING_GROUP = 4102,
        UCHAR_JOINING_TYPE = 4103,
        UCHAR_LINE_BREAK = 4104,
        UCHAR_NUMERIC_TYPE = 4105,
        UCHAR_SCRIPT = 4106,
        UCHAR_HANGUL_SYLLABLE_TYPE = 4107,
        UCHAR_NFD_QUICK_CHECK = 4108,
        UCHAR_NFKD_QUICK_CHECK = 4109,
        UCHAR_NFC_QUICK_CHECK = 4110,
        UCHAR_NFKC_QUICK_CHECK = 4111,
        UCHAR_LEAD_CANONICAL_COMBINING_CLASS = 4112,
        UCHAR_TRAIL_CANONICAL_COMBINING_CLASS = 4113,
        UCHAR_GRAPHEME_CLUSTER_BREAK = 4114,
        UCHAR_SENTENCE_BREAK = 4115,
        UCHAR_WORD_BREAK = 4116,
        UCHAR_BIDI_PAIRED_BRACKET_TYPE = 4117,
        UCHAR_INDIC_POSITIONAL_CATEGORY = 4118,
        UCHAR_INDIC_SYLLABIC_CATEGORY = 4119,
        UCHAR_VERTICAL_ORIENTATION = 4120,
        UCHAR_GENERAL_CATEGORY_MASK = 8192,
        UCHAR_MASK_START = 8192,
        UCHAR_NUMERIC_VALUE = 12288,
        UCHAR_DOUBLE_START = 12288,
        UCHAR_AGE = 16384,
        UCHAR_STRING_START = 16384,
        UCHAR_BIDI_MIRRORING_GLYPH = 16385,
        UCHAR_CASE_FOLDING = 16386,
        UCHAR_LOWERCASE_MAPPING = 16388,
        UCHAR_NAME = 16389,
        UCHAR_SIMPLE_CASE_FOLDING = 16390,
        UCHAR_SIMPLE_LOWERCASE_MAPPING = 16391,
        UCHAR_SIMPLE_TITLECASE_MAPPING = 16392,
        UCHAR_SIMPLE_UPPERCASE_MAPPING = 16393,
        UCHAR_TITLECASE_MAPPING = 16394,
        UCHAR_UPPERCASE_MAPPING = 16396,
        UCHAR_BIDI_PAIRED_BRACKET = 16397,
        UCHAR_SCRIPT_EXTENSIONS = 28672,
        UCHAR_OTHER_PROPERTY_START = 28672,
        UCHAR_INVALID_CODE = -1,
    };
    enum class UPropertyNameChoice : int32_t
    {
        U_SHORT_PROPERTY_NAME = 0,
        U_LONG_PROPERTY_NAME = 1,
    };
    enum class URegexpFlag : int32_t
    {
        UREGEX_CASE_INSENSITIVE = 2,
        UREGEX_COMMENTS = 4,
        UREGEX_DOTALL = 32,
        UREGEX_LITERAL = 16,
        UREGEX_MULTILINE = 8,
        UREGEX_UNIX_LINES = 1,
        UREGEX_UWORD = 256,
        UREGEX_ERROR_ON_UNKNOWN_ESCAPES = 512,
    };
    enum class URegionType : int32_t
    {
        URGN_UNKNOWN = 0,
        URGN_TERRITORY = 1,
        URGN_WORLD = 2,
        URGN_CONTINENT = 3,
        URGN_SUBCONTINENT = 4,
        URGN_GROUPING = 5,
        URGN_DEPRECATED = 6,
    };
    enum class URelativeDateTimeFormatterField : int32_t
    {
        UDAT_REL_LITERAL_FIELD = 0,
        UDAT_REL_NUMERIC_FIELD = 1,
    };
    enum class URelativeDateTimeUnit : int32_t
    {
        UDAT_REL_UNIT_YEAR = 0,
        UDAT_REL_UNIT_QUARTER = 1,
        UDAT_REL_UNIT_MONTH = 2,
        UDAT_REL_UNIT_WEEK = 3,
        UDAT_REL_UNIT_DAY = 4,
        UDAT_REL_UNIT_HOUR = 5,
        UDAT_REL_UNIT_MINUTE = 6,
        UDAT_REL_UNIT_SECOND = 7,
        UDAT_REL_UNIT_SUNDAY = 8,
        UDAT_REL_UNIT_MONDAY = 9,
        UDAT_REL_UNIT_TUESDAY = 10,
        UDAT_REL_UNIT_WEDNESDAY = 11,
        UDAT_REL_UNIT_THURSDAY = 12,
        UDAT_REL_UNIT_FRIDAY = 13,
        UDAT_REL_UNIT_SATURDAY = 14,
    };
    enum class UResType : int32_t
    {
        URES_NONE = -1,
        URES_STRING = 0,
        URES_BINARY = 1,
        URES_TABLE = 2,
        URES_ALIAS = 3,
        URES_INT = 7,
        URES_ARRAY = 8,
        URES_INT_VECTOR = 14,
    };
    enum class URestrictionLevel : int32_t
    {
        USPOOF_ASCII = 268435456,
        USPOOF_SINGLE_SCRIPT_RESTRICTIVE = 536870912,
        USPOOF_HIGHLY_RESTRICTIVE = 805306368,
        USPOOF_MODERATELY_RESTRICTIVE = 1073741824,
        USPOOF_MINIMALLY_RESTRICTIVE = 1342177280,
        USPOOF_UNRESTRICTIVE = 1610612736,
        USPOOF_RESTRICTION_LEVEL_MASK = 2130706432,
    };
    enum class UScriptCode : int32_t
    {
        USCRIPT_INVALID_CODE = -1,
        USCRIPT_COMMON = 0,
        USCRIPT_INHERITED = 1,
        USCRIPT_ARABIC = 2,
        USCRIPT_ARMENIAN = 3,
        USCRIPT_BENGALI = 4,
        USCRIPT_BOPOMOFO = 5,
        USCRIPT_CHEROKEE = 6,
        USCRIPT_COPTIC = 7,
        USCRIPT_CYRILLIC = 8,
        USCRIPT_DESERET = 9,
        USCRIPT_DEVANAGARI = 10,
        USCRIPT_ETHIOPIC = 11,
        USCRIPT_GEORGIAN = 12,
        USCRIPT_GOTHIC = 13,
        USCRIPT_GREEK = 14,
        USCRIPT_GUJARATI = 15,
        USCRIPT_GURMUKHI = 16,
        USCRIPT_HAN = 17,
        USCRIPT_HANGUL = 18,
        USCRIPT_HEBREW = 19,
        USCRIPT_HIRAGANA = 20,
        USCRIPT_KANNADA = 21,
        USCRIPT_KATAKANA = 22,
        USCRIPT_KHMER = 23,
        USCRIPT_LAO = 24,
        USCRIPT_LATIN = 25,
        USCRIPT_MALAYALAM = 26,
        USCRIPT_MONGOLIAN = 27,
        USCRIPT_MYANMAR = 28,
        USCRIPT_OGHAM = 29,
        USCRIPT_OLD_ITALIC = 30,
        USCRIPT_ORIYA = 31,
        USCRIPT_RUNIC = 32,
        USCRIPT_SINHALA = 33,
        USCRIPT_SYRIAC = 34,
        USCRIPT_TAMIL = 35,
        USCRIPT_TELUGU = 36,
        USCRIPT_THAANA = 37,
        USCRIPT_THAI = 38,
        USCRIPT_TIBETAN = 39,
        USCRIPT_CANADIAN_ABORIGINAL = 40,
        USCRIPT_UCAS = 40,
        USCRIPT_YI = 41,
        USCRIPT_TAGALOG = 42,
        USCRIPT_HANUNOO = 43,
        USCRIPT_BUHID = 44,
        USCRIPT_TAGBANWA = 45,
        USCRIPT_BRAILLE = 46,
        USCRIPT_CYPRIOT = 47,
        USCRIPT_LIMBU = 48,
        USCRIPT_LINEAR_B = 49,
        USCRIPT_OSMANYA = 50,
        USCRIPT_SHAVIAN = 51,
        USCRIPT_TAI_LE = 52,
        USCRIPT_UGARITIC = 53,
        USCRIPT_KATAKANA_OR_HIRAGANA = 54,
        USCRIPT_BUGINESE = 55,
        USCRIPT_GLAGOLITIC = 56,
        USCRIPT_KHAROSHTHI = 57,
        USCRIPT_SYLOTI_NAGRI = 58,
        USCRIPT_NEW_TAI_LUE = 59,
        USCRIPT_TIFINAGH = 60,
        USCRIPT_OLD_PERSIAN = 61,
        USCRIPT_BALINESE = 62,
        USCRIPT_BATAK = 63,
        USCRIPT_BLISSYMBOLS = 64,
        USCRIPT_BRAHMI = 65,
        USCRIPT_CHAM = 66,
        USCRIPT_CIRTH = 67,
        USCRIPT_OLD_CHURCH_SLAVONIC_CYRILLIC = 68,
        USCRIPT_DEMOTIC_EGYPTIAN = 69,
        USCRIPT_HIERATIC_EGYPTIAN = 70,
        USCRIPT_EGYPTIAN_HIEROGLYPHS = 71,
        USCRIPT_KHUTSURI = 72,
        USCRIPT_SIMPLIFIED_HAN = 73,
        USCRIPT_TRADITIONAL_HAN = 74,
        USCRIPT_PAHAWH_HMONG = 75,
        USCRIPT_OLD_HUNGARIAN = 76,
        USCRIPT_HARAPPAN_INDUS = 77,
        USCRIPT_JAVANESE = 78,
        USCRIPT_KAYAH_LI = 79,
        USCRIPT_LATIN_FRAKTUR = 80,
        USCRIPT_LATIN_GAELIC = 81,
        USCRIPT_LEPCHA = 82,
        USCRIPT_LINEAR_A = 83,
        USCRIPT_MANDAIC = 84,
        USCRIPT_MANDAEAN = 84,
        USCRIPT_MAYAN_HIEROGLYPHS = 85,
        USCRIPT_MEROITIC_HIEROGLYPHS = 86,
        USCRIPT_MEROITIC = 86,
        USCRIPT_NKO = 87,
        USCRIPT_ORKHON = 88,
        USCRIPT_OLD_PERMIC = 89,
        USCRIPT_PHAGS_PA = 90,
        USCRIPT_PHOENICIAN = 91,
        USCRIPT_MIAO = 92,
        USCRIPT_PHONETIC_POLLARD = 92,
        USCRIPT_RONGORONGO = 93,
        USCRIPT_SARATI = 94,
        USCRIPT_ESTRANGELO_SYRIAC = 95,
        USCRIPT_WESTERN_SYRIAC = 96,
        USCRIPT_EASTERN_SYRIAC = 97,
        USCRIPT_TENGWAR = 98,
        USCRIPT_VAI = 99,
        USCRIPT_VISIBLE_SPEECH = 100,
        USCRIPT_CUNEIFORM = 101,
        USCRIPT_UNWRITTEN_LANGUAGES = 102,
        USCRIPT_UNKNOWN = 103,
        USCRIPT_CARIAN = 104,
        USCRIPT_JAPANESE = 105,
        USCRIPT_LANNA = 106,
        USCRIPT_LYCIAN = 107,
        USCRIPT_LYDIAN = 108,
        USCRIPT_OL_CHIKI = 109,
        USCRIPT_REJANG = 110,
        USCRIPT_SAURASHTRA = 111,
        USCRIPT_SIGN_WRITING = 112,
        USCRIPT_SUNDANESE = 113,
        USCRIPT_MOON = 114,
        USCRIPT_MEITEI_MAYEK = 115,
        USCRIPT_IMPERIAL_ARAMAIC = 116,
        USCRIPT_AVESTAN = 117,
        USCRIPT_CHAKMA = 118,
        USCRIPT_KOREAN = 119,
        USCRIPT_KAITHI = 120,
        USCRIPT_MANICHAEAN = 121,
        USCRIPT_INSCRIPTIONAL_PAHLAVI = 122,
        USCRIPT_PSALTER_PAHLAVI = 123,
        USCRIPT_BOOK_PAHLAVI = 124,
        USCRIPT_INSCRIPTIONAL_PARTHIAN = 125,
        USCRIPT_SAMARITAN = 126,
        USCRIPT_TAI_VIET = 127,
        USCRIPT_MATHEMATICAL_NOTATION = 128,
        USCRIPT_SYMBOLS = 129,
        USCRIPT_BAMUM = 130,
        USCRIPT_LISU = 131,
        USCRIPT_NAKHI_GEBA = 132,
        USCRIPT_OLD_SOUTH_ARABIAN = 133,
        USCRIPT_BASSA_VAH = 134,
        USCRIPT_DUPLOYAN = 135,
        USCRIPT_ELBASAN = 136,
        USCRIPT_GRANTHA = 137,
        USCRIPT_KPELLE = 138,
        USCRIPT_LOMA = 139,
        USCRIPT_MENDE = 140,
        USCRIPT_MEROITIC_CURSIVE = 141,
        USCRIPT_OLD_NORTH_ARABIAN = 142,
        USCRIPT_NABATAEAN = 143,
        USCRIPT_PALMYRENE = 144,
        USCRIPT_KHUDAWADI = 145,
        USCRIPT_SINDHI = 145,
        USCRIPT_WARANG_CITI = 146,
        USCRIPT_AFAKA = 147,
        USCRIPT_JURCHEN = 148,
        USCRIPT_MRO = 149,
        USCRIPT_NUSHU = 150,
        USCRIPT_SHARADA = 151,
        USCRIPT_SORA_SOMPENG = 152,
        USCRIPT_TAKRI = 153,
        USCRIPT_TANGUT = 154,
        USCRIPT_WOLEAI = 155,
        USCRIPT_ANATOLIAN_HIEROGLYPHS = 156,
        USCRIPT_KHOJKI = 157,
        USCRIPT_TIRHUTA = 158,
        USCRIPT_CAUCASIAN_ALBANIAN = 159,
        USCRIPT_MAHAJANI = 160,
        USCRIPT_AHOM = 161,
        USCRIPT_HATRAN = 162,
        USCRIPT_MODI = 163,
        USCRIPT_MULTANI = 164,
        USCRIPT_PAU_CIN_HAU = 165,
        USCRIPT_SIDDHAM = 166,
        USCRIPT_ADLAM = 167,
        USCRIPT_BHAIKSUKI = 168,
        USCRIPT_MARCHEN = 169,
        USCRIPT_NEWA = 170,
        USCRIPT_OSAGE = 171,
        USCRIPT_HAN_WITH_BOPOMOFO = 172,
        USCRIPT_JAMO = 173,
        USCRIPT_SYMBOLS_EMOJI = 174,
        USCRIPT_MASARAM_GONDI = 175,
        USCRIPT_SOYOMBO = 176,
        USCRIPT_ZANABAZAR_SQUARE = 177,
        USCRIPT_DOGRA = 178,
        USCRIPT_GUNJALA_GONDI = 179,
        USCRIPT_MAKASAR = 180,
        USCRIPT_MEDEFAIDRIN = 181,
        USCRIPT_HANIFI_ROHINGYA = 182,
        USCRIPT_SOGDIAN = 183,
        USCRIPT_OLD_SOGDIAN = 184,
        USCRIPT_ELYMAIC = 185,
        USCRIPT_NYIAKENG_PUACHUE_HMONG = 186,
        USCRIPT_NANDINAGARI = 187,
        USCRIPT_WANCHO = 188,
        USCRIPT_CHORASMIAN = 189,
        USCRIPT_DIVES_AKURU = 190,
        USCRIPT_KHITAN_SMALL_SCRIPT = 191,
        USCRIPT_YEZIDI = 192,
    };
    enum class UScriptUsage : int32_t
    {
        USCRIPT_USAGE_NOT_ENCODED = 0,
        USCRIPT_USAGE_UNKNOWN = 1,
        USCRIPT_USAGE_EXCLUDED = 2,
        USCRIPT_USAGE_LIMITED_USE = 3,
        USCRIPT_USAGE_ASPIRATIONAL = 4,
        USCRIPT_USAGE_RECOMMENDED = 5,
    };
    enum class USearchAttribute : int32_t
    {
        USEARCH_OVERLAP = 0,
        USEARCH_ELEMENT_COMPARISON = 2,
    };
    enum class USearchAttributeValue : int32_t
    {
        USEARCH_DEFAULT = -1,
        USEARCH_OFF = 0,
        USEARCH_ON = 1,
        USEARCH_STANDARD_ELEMENT_COMPARISON = 2,
        USEARCH_PATTERN_BASE_WEIGHT_IS_WILDCARD = 3,
        USEARCH_ANY_BASE_WEIGHT_IS_WILDCARD = 4,
    };
    enum class USentenceBreak : int32_t
    {
        U_SB_OTHER = 0,
        U_SB_ATERM = 1,
        U_SB_CLOSE = 2,
        U_SB_FORMAT = 3,
        U_SB_LOWER = 4,
        U_SB_NUMERIC = 5,
        U_SB_OLETTER = 6,
        U_SB_SEP = 7,
        U_SB_SP = 8,
        U_SB_STERM = 9,
        U_SB_UPPER = 10,
        U_SB_CR = 11,
        U_SB_EXTEND = 12,
        U_SB_LF = 13,
        U_SB_SCONTINUE = 14,
    };
    enum class USentenceBreakTag : int32_t
    {
        UBRK_SENTENCE_TERM = 0,
        UBRK_SENTENCE_TERM_LIMIT = 100,
        UBRK_SENTENCE_SEP = 100,
        UBRK_SENTENCE_SEP_LIMIT = 200,
    };
    enum class USetSpanCondition : int32_t
    {
        USET_SPAN_NOT_CONTAINED = 0,
        USET_SPAN_CONTAINED = 1,
        USET_SPAN_SIMPLE = 2,
    };
    enum class USpoofChecks : int32_t
    {
        USPOOF_SINGLE_SCRIPT_CONFUSABLE = 1,
        USPOOF_MIXED_SCRIPT_CONFUSABLE = 2,
        USPOOF_WHOLE_SCRIPT_CONFUSABLE = 4,
        USPOOF_CONFUSABLE = 7,
        USPOOF_RESTRICTION_LEVEL = 16,
        USPOOF_INVISIBLE = 32,
        USPOOF_CHAR_LIMIT = 64,
        USPOOF_MIXED_NUMBERS = 128,
        USPOOF_HIDDEN_OVERLAY = 256,
        USPOOF_ALL_CHECKS = 65535,
        USPOOF_AUX_INFO = 1073741824,
    };
    enum class UStringPrepProfileType : int32_t
    {
        USPREP_RFC3491_NAMEPREP = 0,
        USPREP_RFC3530_NFS4_CS_PREP = 1,
        USPREP_RFC3530_NFS4_CS_PREP_CI = 2,
        USPREP_RFC3530_NFS4_CIS_PREP = 3,
        USPREP_RFC3530_NFS4_MIXED_PREP_PREFIX = 4,
        USPREP_RFC3530_NFS4_MIXED_PREP_SUFFIX = 5,
        USPREP_RFC3722_ISCSI = 6,
        USPREP_RFC3920_NODEPREP = 7,
        USPREP_RFC3920_RESOURCEPREP = 8,
        USPREP_RFC4011_MIB = 9,
        USPREP_RFC4013_SASLPREP = 10,
        USPREP_RFC4505_TRACE = 11,
        USPREP_RFC4518_LDAP = 12,
        USPREP_RFC4518_LDAP_CI = 13,
    };
    enum class UStringTrieBuildOption : int32_t
    {
        USTRINGTRIE_BUILD_FAST = 0,
        USTRINGTRIE_BUILD_SMALL = 1,
    };
    enum class UStringTrieResult : int32_t
    {
        USTRINGTRIE_NO_MATCH = 0,
        USTRINGTRIE_NO_VALUE = 1,
        USTRINGTRIE_FINAL_VALUE = 2,
        USTRINGTRIE_INTERMEDIATE_VALUE = 3,
    };
    enum class USystemTimeZoneType : int32_t
    {
        UCAL_ZONE_TYPE_ANY = 0,
        UCAL_ZONE_TYPE_CANONICAL = 1,
        UCAL_ZONE_TYPE_CANONICAL_LOCATION = 2,
    };
    enum class UTimeScaleValue : int32_t
    {
        UTSV_UNITS_VALUE = 0,
        UTSV_EPOCH_OFFSET_VALUE = 1,
        UTSV_FROM_MIN_VALUE = 2,
        UTSV_FROM_MAX_VALUE = 3,
        UTSV_TO_MIN_VALUE = 4,
        UTSV_TO_MAX_VALUE = 5,
    };
    enum class UTimeZoneFormatGMTOffsetPatternType : int32_t
    {
        UTZFMT_PAT_POSITIVE_HM = 0,
        UTZFMT_PAT_POSITIVE_HMS = 1,
        UTZFMT_PAT_NEGATIVE_HM = 2,
        UTZFMT_PAT_NEGATIVE_HMS = 3,
        UTZFMT_PAT_POSITIVE_H = 4,
        UTZFMT_PAT_NEGATIVE_H = 5,
        UTZFMT_PAT_COUNT = 6,
    };
    enum class UTimeZoneFormatParseOption : int32_t
    {
        UTZFMT_PARSE_OPTION_NONE = 0,
        UTZFMT_PARSE_OPTION_ALL_STYLES = 1,
        UTZFMT_PARSE_OPTION_TZ_DATABASE_ABBREVIATIONS = 2,
    };
    enum class UTimeZoneFormatStyle : int32_t
    {
        UTZFMT_STYLE_GENERIC_LOCATION = 0,
        UTZFMT_STYLE_GENERIC_LONG = 1,
        UTZFMT_STYLE_GENERIC_SHORT = 2,
        UTZFMT_STYLE_SPECIFIC_LONG = 3,
        UTZFMT_STYLE_SPECIFIC_SHORT = 4,
        UTZFMT_STYLE_LOCALIZED_GMT = 5,
        UTZFMT_STYLE_LOCALIZED_GMT_SHORT = 6,
        UTZFMT_STYLE_ISO_BASIC_SHORT = 7,
        UTZFMT_STYLE_ISO_BASIC_LOCAL_SHORT = 8,
        UTZFMT_STYLE_ISO_BASIC_FIXED = 9,
        UTZFMT_STYLE_ISO_BASIC_LOCAL_FIXED = 10,
        UTZFMT_STYLE_ISO_BASIC_FULL = 11,
        UTZFMT_STYLE_ISO_BASIC_LOCAL_FULL = 12,
        UTZFMT_STYLE_ISO_EXTENDED_FIXED = 13,
        UTZFMT_STYLE_ISO_EXTENDED_LOCAL_FIXED = 14,
        UTZFMT_STYLE_ISO_EXTENDED_FULL = 15,
        UTZFMT_STYLE_ISO_EXTENDED_LOCAL_FULL = 16,
        UTZFMT_STYLE_ZONE_ID = 17,
        UTZFMT_STYLE_ZONE_ID_SHORT = 18,
        UTZFMT_STYLE_EXEMPLAR_LOCATION = 19,
    };
    enum class UTimeZoneFormatTimeType : int32_t
    {
        UTZFMT_TIME_TYPE_UNKNOWN = 0,
        UTZFMT_TIME_TYPE_STANDARD = 1,
        UTZFMT_TIME_TYPE_DAYLIGHT = 2,
    };
    enum class UTimeZoneNameType : int32_t
    {
        UTZNM_UNKNOWN = 0,
        UTZNM_LONG_GENERIC = 1,
        UTZNM_LONG_STANDARD = 2,
        UTZNM_LONG_DAYLIGHT = 4,
        UTZNM_SHORT_GENERIC = 8,
        UTZNM_SHORT_STANDARD = 16,
        UTZNM_SHORT_DAYLIGHT = 32,
        UTZNM_EXEMPLAR_LOCATION = 64,
    };
    enum class UTimeZoneTransitionType : int32_t
    {
        UCAL_TZ_TRANSITION_NEXT = 0,
        UCAL_TZ_TRANSITION_NEXT_INCLUSIVE = 1,
        UCAL_TZ_TRANSITION_PREVIOUS = 2,
        UCAL_TZ_TRANSITION_PREVIOUS_INCLUSIVE = 3,
    };
    enum class UTraceFunctionNumber : int32_t
    {
        UTRACE_FUNCTION_START = 0,
        UTRACE_U_INIT = 0,
        UTRACE_U_CLEANUP = 1,
        UTRACE_CONVERSION_START = 4096,
        UTRACE_UCNV_OPEN = 4096,
        UTRACE_UCNV_OPEN_PACKAGE = 4097,
        UTRACE_UCNV_OPEN_ALGORITHMIC = 4098,
        UTRACE_UCNV_CLONE = 4099,
        UTRACE_UCNV_CLOSE = 4100,
        UTRACE_UCNV_FLUSH_CACHE = 4101,
        UTRACE_UCNV_LOAD = 4102,
        UTRACE_UCNV_UNLOAD = 4103,
        UTRACE_COLLATION_START = 8192,
        UTRACE_UCOL_OPEN = 8192,
        UTRACE_UCOL_CLOSE = 8193,
        UTRACE_UCOL_STRCOLL = 8194,
        UTRACE_UCOL_GET_SORTKEY = 8195,
        UTRACE_UCOL_GETLOCALE = 8196,
        UTRACE_UCOL_NEXTSORTKEYPART = 8197,
        UTRACE_UCOL_STRCOLLITER = 8198,
        UTRACE_UCOL_OPEN_FROM_SHORT_STRING = 8199,
        UTRACE_UCOL_STRCOLLUTF8 = 8200,
        UTRACE_UDATA_START = 12288,
        UTRACE_UDATA_RESOURCE = 12288,
        UTRACE_UDATA_BUNDLE = 12289,
        UTRACE_UDATA_DATA_FILE = 12290,
        UTRACE_UDATA_RES_FILE = 12291,
    };
    enum class UTraceLevel : int32_t
    {
        UTRACE_OFF = -1,
        UTRACE_ERROR = 0,
        UTRACE_WARNING = 3,
        UTRACE_OPEN_CLOSE = 5,
        UTRACE_INFO = 7,
        UTRACE_VERBOSE = 9,
    };
    enum class UTransDirection : int32_t
    {
        UTRANS_FORWARD = 0,
        UTRANS_REVERSE = 1,
    };
    enum class UVerticalOrientation : int32_t
    {
        U_VO_ROTATED = 0,
        U_VO_TRANSFORMED_ROTATED = 1,
        U_VO_TRANSFORMED_UPRIGHT = 2,
        U_VO_UPRIGHT = 3,
    };
    enum class UWordBreak : int32_t
    {
        UBRK_WORD_NONE = 0,
        UBRK_WORD_NONE_LIMIT = 100,
        UBRK_WORD_NUMBER = 100,
        UBRK_WORD_NUMBER_LIMIT = 200,
        UBRK_WORD_LETTER = 200,
        UBRK_WORD_LETTER_LIMIT = 300,
        UBRK_WORD_KANA = 300,
        UBRK_WORD_KANA_LIMIT = 400,
        UBRK_WORD_IDEO = 400,
        UBRK_WORD_IDEO_LIMIT = 500,
    };
    enum class UWordBreakValues : int32_t
    {
        U_WB_OTHER = 0,
        U_WB_ALETTER = 1,
        U_WB_FORMAT = 2,
        U_WB_KATAKANA = 3,
        U_WB_MIDLETTER = 4,
        U_WB_MIDNUM = 5,
        U_WB_NUMERIC = 6,
        U_WB_EXTENDNUMLET = 7,
        U_WB_CR = 8,
        U_WB_EXTEND = 9,
        U_WB_LF = 10,
        U_WB_MIDNUMLET = 11,
        U_WB_NEWLINE = 12,
        U_WB_REGIONAL_INDICATOR = 13,
        U_WB_HEBREW_LETTER = 14,
        U_WB_SINGLE_QUOTE = 15,
        U_WB_DOUBLE_QUOTE = 16,
        U_WB_E_BASE = 17,
        U_WB_E_BASE_GAZ = 18,
        U_WB_E_MODIFIER = 19,
        U_WB_GLUE_AFTER_ZWJ = 20,
        U_WB_ZWJ = 21,
        U_WB_WSEGSPACE = 22,
    };
    enum class WORDLIST_TYPE : int32_t
    {
        WORDLIST_TYPE_IGNORE = 0,
        WORDLIST_TYPE_ADD = 1,
        WORDLIST_TYPE_EXCLUDE = 2,
        WORDLIST_TYPE_AUTOCORRECT = 3,
    };
    enum class tagMLCONVCHARF : int32_t
    {
        MLCONVCHARF_AUTODETECT = 1,
        MLCONVCHARF_ENTITIZE = 2,
        MLCONVCHARF_NCR_ENTITIZE = 2,
        MLCONVCHARF_NAME_ENTITIZE = 4,
        MLCONVCHARF_USEDEFCHAR = 8,
        MLCONVCHARF_NOBESTFITCHARS = 16,
        MLCONVCHARF_DETECTJPN = 32,
    };
    enum class tagMLCPF : int32_t
    {
        MLDETECTF_MAILNEWS = 1,
        MLDETECTF_BROWSER = 2,
        MLDETECTF_VALID = 4,
        MLDETECTF_VALID_NLS = 8,
        MLDETECTF_PRESERVE_ORDER = 16,
        MLDETECTF_PREFERRED_ONLY = 32,
        MLDETECTF_FILTER_SPECIALCHAR = 64,
        MLDETECTF_EURO_UTF8 = 128,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct CHARSETINFO;
    struct CMLangConvertCharset;
    struct CMLangString;
    struct CMultiLanguage;
    struct CPINFO;
    struct CPINFOEXA;
    struct CPINFOEXW;
    struct CURRENCYFMTA;
    struct CURRENCYFMTW;
    struct DetectEncodingInfo;
    struct ENUMTEXTMETRICA;
    struct ENUMTEXTMETRICW;
    struct FILEMUIINFO;
    struct FONTSIGNATURE;
    struct GOFFSET;
    struct HIMC;
    struct HIMCC;
    struct HSAVEDUILANGUAGES;
    struct LOCALESIGNATURE;
    struct MAPPING_DATA_RANGE;
    struct MAPPING_ENUM_OPTIONS;
    struct MAPPING_OPTIONS;
    struct MAPPING_PROPERTY_BAG;
    struct MAPPING_SERVICE_INFO;
    struct MIMECPINFO;
    struct MIMECSETINFO;
    struct NEWTEXTMETRICEXA;
    struct NEWTEXTMETRICEXW;
    struct NLSVERSIONINFO;
    struct NLSVERSIONINFOEX;
    struct NUMBERFMTA;
    struct NUMBERFMTW;
    struct RFC1766INFO;
    struct SCRIPTINFO;
    struct SCRIPT_ANALYSIS;
    struct SCRIPT_CONTROL;
    struct SCRIPT_DIGITSUBSTITUTE;
    struct SCRIPT_FONTPROPERTIES;
    struct SCRIPT_ITEM;
    struct SCRIPT_LOGATTR;
    struct SCRIPT_PROPERTIES;
    struct SCRIPT_STATE;
    struct SCRIPT_TABDEF;
    struct SCRIPT_VISATTR;
    struct SpellCheckerFactory;
    struct UBiDi;
    struct UBiDiTransform;
    struct UBreakIterator;
    struct UCPMap;
    struct UCPTrie;
    union UCPTrieData;
    struct UCaseMap;
    struct UCharIterator;
    struct UCharsetDetector;
    struct UCharsetMatch;
    struct UCollationElements;
    struct UCollator;
    struct UConstrainedFieldPosition;
    struct UConverter;
    struct UConverterFromUnicodeArgs;
    struct UConverterSelector;
    struct UConverterToUnicodeArgs;
    struct UDateFormatSymbols;
    struct UDateIntervalFormat;
    struct UEnumeration;
    struct UFieldPosition;
    struct UFieldPositionIterator;
    struct UFormattedDateInterval;
    struct UFormattedList;
    struct UFormattedNumber;
    struct UFormattedNumberRange;
    struct UFormattedRelativeDateTime;
    struct UFormattedValue;
    struct UGenderInfo;
    struct UHashtable;
    struct UIDNA;
    struct UIDNAInfo;
    struct UListFormatter;
    struct ULocaleData;
    struct ULocaleDisplayNames;
    struct UMutableCPTrie;
    struct UNICODERANGE;
    struct UNormalizer2;
    struct UNumberFormatter;
    struct UNumberingSystem;
    struct UParseError;
    struct UPluralRules;
    struct URegion;
    struct URegularExpression;
    struct URelativeDateTimeFormatter;
    struct UReplaceableCallbacks;
    struct UResourceBundle;
    struct USearch;
    struct USerializedSet;
    struct USet;
    struct USpoofCheckResult;
    struct USpoofChecker;
    struct UStringPrepProfile;
    struct UStringSearch;
    struct UText;
    struct UTextFuncs;
    struct UTransPosition;
    struct opentype_feature_record;
    struct script_charprop;
    struct script_glyphprop;
    struct tagSCRIPFONTINFO;
    struct textrange_properties;
    struct IComprehensiveSpellCheckProvider;
    struct IEnumCodePage;
    struct IEnumRfc1766;
    struct IEnumScript;
    struct IEnumSpellingError;
    struct IMLangCodePages;
    struct IMLangConvertCharset;
    struct IMLangFontLink;
    struct IMLangFontLink2;
    struct IMLangLineBreakConsole;
    struct IMLangString;
    struct IMLangStringAStr;
    struct IMLangStringBufA;
    struct IMLangStringBufW;
    struct IMLangStringWStr;
    struct IMultiLanguage;
    struct IMultiLanguage2;
    struct IMultiLanguage3;
    struct IOptionDescription;
    struct ISpellCheckProvider;
    struct ISpellCheckProviderFactory;
    struct ISpellChecker;
    struct ISpellChecker2;
    struct ISpellCheckerChangedEventHandler;
    struct ISpellCheckerFactory;
    struct ISpellingError;
    struct IUserDictionariesRegistrar;
#pragma endregion forward_declarations

#pragma region delegates
    using LOCALE_ENUMPROCA = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PSTR);
    using LOCALE_ENUMPROCW = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PWSTR);
    using LANGUAGEGROUP_ENUMPROCA = Windows::Win32::Foundation::BOOL __stdcall(uint32_t, Windows::Win32::Foundation::PSTR, Windows::Win32::Foundation::PSTR, uint32_t, intptr_t);
    using LANGGROUPLOCALE_ENUMPROCA = Windows::Win32::Foundation::BOOL __stdcall(uint32_t, uint32_t, Windows::Win32::Foundation::PSTR, intptr_t);
    using UILANGUAGE_ENUMPROCA = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PSTR, intptr_t);
    using CODEPAGE_ENUMPROCA = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PSTR);
    using DATEFMT_ENUMPROCA = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PSTR);
    using DATEFMT_ENUMPROCEXA = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PSTR, uint32_t);
    using TIMEFMT_ENUMPROCA = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PSTR);
    using CALINFO_ENUMPROCA = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PSTR);
    using CALINFO_ENUMPROCEXA = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PSTR, uint32_t);
    using LANGUAGEGROUP_ENUMPROCW = Windows::Win32::Foundation::BOOL __stdcall(uint32_t, Windows::Win32::Foundation::PWSTR, Windows::Win32::Foundation::PWSTR, uint32_t, intptr_t);
    using LANGGROUPLOCALE_ENUMPROCW = Windows::Win32::Foundation::BOOL __stdcall(uint32_t, uint32_t, Windows::Win32::Foundation::PWSTR, intptr_t);
    using UILANGUAGE_ENUMPROCW = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PWSTR, intptr_t);
    using CODEPAGE_ENUMPROCW = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PWSTR);
    using DATEFMT_ENUMPROCW = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PWSTR);
    using DATEFMT_ENUMPROCEXW = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PWSTR, uint32_t);
    using TIMEFMT_ENUMPROCW = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PWSTR);
    using CALINFO_ENUMPROCW = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PWSTR);
    using CALINFO_ENUMPROCEXW = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PWSTR, uint32_t);
    using GEO_ENUMPROC = Windows::Win32::Foundation::BOOL __stdcall(int32_t);
    using GEO_ENUMNAMEPROC = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PWSTR, Windows::Win32::Foundation::LPARAM);
    using CALINFO_ENUMPROCEXEX = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PWSTR, uint32_t, Windows::Win32::Foundation::PWSTR, Windows::Win32::Foundation::LPARAM);
    using DATEFMT_ENUMPROCEXEX = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PWSTR, uint32_t, Windows::Win32::Foundation::LPARAM);
    using TIMEFMT_ENUMPROCEX = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PWSTR, Windows::Win32::Foundation::LPARAM);
    using LOCALE_ENUMPROCEX = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::PWSTR, uint32_t, Windows::Win32::Foundation::LPARAM);
    using PFN_MAPPINGCALLBACKPROC = void __stdcall(Windows::Win32::Globalization::MAPPING_PROPERTY_BAG*, void*, uint32_t, Windows::Win32::Foundation::HRESULT);
    using UTraceEntry = void __stdcall(void*, int32_t);
    using UTraceExit = void __stdcall(void*, int32_t, Windows::Win32::Foundation::PSTR, int8_t*);
    using UTraceData = void __stdcall(void*, int32_t, int32_t, Windows::Win32::Foundation::PSTR, int8_t*);
    using UCharIteratorGetIndex = int32_t __stdcall(Windows::Win32::Globalization::UCharIterator*, Windows::Win32::Globalization::UCharIteratorOrigin);
    using UCharIteratorMove = int32_t __stdcall(Windows::Win32::Globalization::UCharIterator*, int32_t, Windows::Win32::Globalization::UCharIteratorOrigin);
    using UCharIteratorHasNext = int8_t __stdcall(Windows::Win32::Globalization::UCharIterator*);
    using UCharIteratorHasPrevious = int8_t __stdcall(Windows::Win32::Globalization::UCharIterator*);
    using UCharIteratorCurrent = int32_t __stdcall(Windows::Win32::Globalization::UCharIterator*);
    using UCharIteratorNext = int32_t __stdcall(Windows::Win32::Globalization::UCharIterator*);
    using UCharIteratorPrevious = int32_t __stdcall(Windows::Win32::Globalization::UCharIterator*);
    using UCharIteratorReserved = int32_t __stdcall(Windows::Win32::Globalization::UCharIterator*, int32_t);
    using UCharIteratorGetState = uint32_t __stdcall(Windows::Win32::Globalization::UCharIterator*);
    using UCharIteratorSetState = void __stdcall(Windows::Win32::Globalization::UCharIterator*, uint32_t, Windows::Win32::Globalization::UErrorCode*);
    using UCPMapValueFilter = uint32_t __stdcall(void*, uint32_t);
    using UConverterToUCallback = void __stdcall(void*, Windows::Win32::Globalization::UConverterToUnicodeArgs*, Windows::Win32::Foundation::PSTR, int32_t, Windows::Win32::Globalization::UConverterCallbackReason, Windows::Win32::Globalization::UErrorCode*);
    using UConverterFromUCallback = void __stdcall(void*, Windows::Win32::Globalization::UConverterFromUnicodeArgs*, uint16_t*, int32_t, int32_t, Windows::Win32::Globalization::UConverterCallbackReason, Windows::Win32::Globalization::UErrorCode*);
    using UMemAllocFn = void* __stdcall(void*, size_t);
    using UMemReallocFn = void* __stdcall(void*, void*, size_t);
    using UMemFreeFn = void __stdcall(void*, void*);
    using UCharEnumTypeRange = int8_t __stdcall(void*, int32_t, int32_t, Windows::Win32::Globalization::UCharCategory);
    using UEnumCharNamesFn = int8_t __stdcall(void*, int32_t, Windows::Win32::Globalization::UCharNameChoice, Windows::Win32::Foundation::PSTR, int32_t);
    using UBiDiClassCallback = Windows::Win32::Globalization::UCharDirection __stdcall(void*, int32_t);
    using UTextClone = Windows::Win32::Globalization::UText* __stdcall(Windows::Win32::Globalization::UText*, Windows::Win32::Globalization::UText*, int8_t, Windows::Win32::Globalization::UErrorCode*);
    using UTextNativeLength = int64_t __stdcall(Windows::Win32::Globalization::UText*);
    using UTextAccess = int8_t __stdcall(Windows::Win32::Globalization::UText*, int64_t, int8_t);
    using UTextExtract = int32_t __stdcall(Windows::Win32::Globalization::UText*, int64_t, int64_t, uint16_t*, int32_t, Windows::Win32::Globalization::UErrorCode*);
    using UTextReplace = int32_t __stdcall(Windows::Win32::Globalization::UText*, int64_t, int64_t, uint16_t*, int32_t, Windows::Win32::Globalization::UErrorCode*);
    using UTextCopy = void __stdcall(Windows::Win32::Globalization::UText*, int64_t, int64_t, int64_t, int8_t, Windows::Win32::Globalization::UErrorCode*);
    using UTextMapOffsetToNative = int64_t __stdcall(Windows::Win32::Globalization::UText*);
    using UTextMapNativeIndexToUTF16 = int32_t __stdcall(Windows::Win32::Globalization::UText*, int64_t);
    using UTextClose = void __stdcall(Windows::Win32::Globalization::UText*);
    using UNESCAPE_CHAR_AT = uint16_t __stdcall(int32_t, void*);
    using URegexMatchCallback = int8_t __stdcall(void*, int32_t);
    using URegexFindProgressCallback = int8_t __stdcall(void*, int64_t);
    using UStringCaseMapper = int32_t __stdcall(Windows::Win32::Globalization::UCaseMap*, uint16_t*, int32_t, uint16_t*, int32_t, Windows::Win32::Globalization::UErrorCode*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
