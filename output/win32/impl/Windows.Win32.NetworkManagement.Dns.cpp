// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_NetworkManagement_Dns_2_H
#define WIN32_Windows_Win32_NetworkManagement_Dns_2_H
#include "win32/Windows.Win32.NetworkManagement.Dns.h"
#include "win32/impl/Windows.Win32.NetworkManagement.Dns.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::NetworkManagement::Dns
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    int32_t __stdcall ORBIT_IMPL_DnsQueryConfig(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONFIG_TYPE Config, uint32_t Flag, win32::Windows::Win32::Foundation::PWSTR pwsAdapterName, void* pReserved, void* pBuffer, uint32_t* pBufLen) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Config);
        ORBIT_TRACK_PARAM(Flag);
        ORBIT_TRACK_PARAM(pwsAdapterName);
        ORBIT_TRACK_PARAM(pReserved);
        ORBIT_TRACK_PARAM(pBuffer);
        ORBIT_TRACK_PARAM(pBufLen);

        auto win32_impl_result = g_api_table.DnsQueryConfig(Config, Flag, pwsAdapterName, pReserved, pBuffer, pBufLen);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* __stdcall ORBIT_IMPL_DnsRecordCopyEx(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRecord, win32::Windows::Win32::NetworkManagement::Dns::DNS_CHARSET CharSetIn, win32::Windows::Win32::NetworkManagement::Dns::DNS_CHARSET CharSetOut) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pRecord);
        ORBIT_TRACK_PARAM(CharSetIn);
        ORBIT_TRACK_PARAM(CharSetOut);

        auto win32_impl_result = g_api_table.DnsRecordCopyEx(pRecord, CharSetIn, CharSetOut);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* __stdcall ORBIT_IMPL_DnsRecordSetCopyEx(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRecordSet, win32::Windows::Win32::NetworkManagement::Dns::DNS_CHARSET CharSetIn, win32::Windows::Win32::NetworkManagement::Dns::DNS_CHARSET CharSetOut) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pRecordSet);
        ORBIT_TRACK_PARAM(CharSetIn);
        ORBIT_TRACK_PARAM(CharSetOut);

        auto win32_impl_result = g_api_table.DnsRecordSetCopyEx(pRecordSet, CharSetIn, CharSetOut);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DnsRecordCompare(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRecord1, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRecord2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pRecord1);
        ORBIT_TRACK_PARAM(pRecord2);

        auto win32_impl_result = g_api_table.DnsRecordCompare(pRecord1, pRecord2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DnsRecordSetCompare(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRR1, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRR2, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppDiff1, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppDiff2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pRR1);
        ORBIT_TRACK_PARAM(pRR2);
        ORBIT_TRACK_PARAM(ppDiff1);
        ORBIT_TRACK_PARAM(ppDiff2);

        auto win32_impl_result = g_api_table.DnsRecordSetCompare(pRR1, pRR2, ppDiff1, ppDiff2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* __stdcall ORBIT_IMPL_DnsRecordSetDetach(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRecordList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pRecordList);

        auto win32_impl_result = g_api_table.DnsRecordSetDetach(pRecordList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_DnsFree(void* pData, win32::Windows::Win32::NetworkManagement::Dns::DNS_FREE_TYPE FreeType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pData);
        ORBIT_TRACK_PARAM(FreeType);

        g_api_table.DnsFree(pData, FreeType);
        
    }

    int32_t __stdcall ORBIT_IMPL_DnsQuery_A(win32::Windows::Win32::Foundation::PSTR pszName, uint16_t wType, uint32_t Options, void* pExtra, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppQueryResults, void** pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszName);
        ORBIT_TRACK_PARAM(wType);
        ORBIT_TRACK_PARAM(Options);
        ORBIT_TRACK_PARAM(pExtra);
        ORBIT_TRACK_PARAM(ppQueryResults);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.DnsQuery_A(pszName, wType, Options, pExtra, ppQueryResults, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsQuery_UTF8(win32::Windows::Win32::Foundation::PSTR pszName, uint16_t wType, uint32_t Options, void* pExtra, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppQueryResults, void** pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszName);
        ORBIT_TRACK_PARAM(wType);
        ORBIT_TRACK_PARAM(Options);
        ORBIT_TRACK_PARAM(pExtra);
        ORBIT_TRACK_PARAM(ppQueryResults);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.DnsQuery_UTF8(pszName, wType, Options, pExtra, ppQueryResults, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsQuery_W(win32::Windows::Win32::Foundation::PWSTR pszName, uint16_t wType, uint32_t Options, void* pExtra, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppQueryResults, void** pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszName);
        ORBIT_TRACK_PARAM(wType);
        ORBIT_TRACK_PARAM(Options);
        ORBIT_TRACK_PARAM(pExtra);
        ORBIT_TRACK_PARAM(ppQueryResults);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.DnsQuery_W(pszName, wType, Options, pExtra, ppQueryResults, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsQueryEx(win32::Windows::Win32::NetworkManagement::Dns::DNS_QUERY_REQUEST* pQueryRequest, win32::Windows::Win32::NetworkManagement::Dns::DNS_QUERY_RESULT* pQueryResults, win32::Windows::Win32::NetworkManagement::Dns::DNS_QUERY_CANCEL* pCancelHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pQueryRequest);
        ORBIT_TRACK_PARAM(pQueryResults);
        ORBIT_TRACK_PARAM(pCancelHandle);

        auto win32_impl_result = g_api_table.DnsQueryEx(pQueryRequest, pQueryResults, pCancelHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsCancelQuery(win32::Windows::Win32::NetworkManagement::Dns::DNS_QUERY_CANCEL* pCancelHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pCancelHandle);

        auto win32_impl_result = g_api_table.DnsCancelQuery(pCancelHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_DnsFreeCustomServers(uint32_t* pcServers, win32::Windows::Win32::NetworkManagement::Dns::DNS_CUSTOM_SERVER** ppServers) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pcServers);
        ORBIT_TRACK_PARAM(ppServers);

        g_api_table.DnsFreeCustomServers(pcServers, ppServers);
        
    }

    uint32_t __stdcall ORBIT_IMPL_DnsGetApplicationSettings(uint32_t* pcServers, win32::Windows::Win32::NetworkManagement::Dns::DNS_CUSTOM_SERVER** ppDefaultServers, win32::Windows::Win32::NetworkManagement::Dns::DNS_APPLICATION_SETTINGS* pSettings) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pcServers);
        ORBIT_TRACK_PARAM(ppDefaultServers);
        ORBIT_TRACK_PARAM(pSettings);

        auto win32_impl_result = g_api_table.DnsGetApplicationSettings(pcServers, ppDefaultServers, pSettings);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DnsSetApplicationSettings(uint32_t cServers, win32::Windows::Win32::NetworkManagement::Dns::DNS_CUSTOM_SERVER* pServers, win32::Windows::Win32::NetworkManagement::Dns::DNS_APPLICATION_SETTINGS* pSettings) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(cServers);
        ORBIT_TRACK_PARAM(pServers);
        ORBIT_TRACK_PARAM(pSettings);

        auto win32_impl_result = g_api_table.DnsSetApplicationSettings(cServers, pServers, pSettings);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsAcquireContextHandle_W(uint32_t CredentialFlags, void* Credentials, win32::Windows::Win32::NetworkManagement::Dns::DnsContextHandle* pContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CredentialFlags);
        ORBIT_TRACK_PARAM(Credentials);
        ORBIT_TRACK_PARAM(pContext);

        auto win32_impl_result = g_api_table.DnsAcquireContextHandle_W(CredentialFlags, Credentials, pContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsAcquireContextHandle_A(uint32_t CredentialFlags, void* Credentials, win32::Windows::Win32::NetworkManagement::Dns::DnsContextHandle* pContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CredentialFlags);
        ORBIT_TRACK_PARAM(Credentials);
        ORBIT_TRACK_PARAM(pContext);

        auto win32_impl_result = g_api_table.DnsAcquireContextHandle_A(CredentialFlags, Credentials, pContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_DnsReleaseContextHandle(win32::Windows::Win32::Foundation::HANDLE hContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);

        g_api_table.DnsReleaseContextHandle(hContext);
        
    }

    int32_t __stdcall ORBIT_IMPL_DnsModifyRecordsInSet_W(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pAddRecords, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pDeleteRecords, uint32_t Options, win32::Windows::Win32::Foundation::HANDLE hCredentials, void* pExtraList, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAddRecords);
        ORBIT_TRACK_PARAM(pDeleteRecords);
        ORBIT_TRACK_PARAM(Options);
        ORBIT_TRACK_PARAM(hCredentials);
        ORBIT_TRACK_PARAM(pExtraList);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.DnsModifyRecordsInSet_W(pAddRecords, pDeleteRecords, Options, hCredentials, pExtraList, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsModifyRecordsInSet_A(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pAddRecords, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pDeleteRecords, uint32_t Options, win32::Windows::Win32::Foundation::HANDLE hCredentials, void* pExtraList, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAddRecords);
        ORBIT_TRACK_PARAM(pDeleteRecords);
        ORBIT_TRACK_PARAM(Options);
        ORBIT_TRACK_PARAM(hCredentials);
        ORBIT_TRACK_PARAM(pExtraList);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.DnsModifyRecordsInSet_A(pAddRecords, pDeleteRecords, Options, hCredentials, pExtraList, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsModifyRecordsInSet_UTF8(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pAddRecords, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pDeleteRecords, uint32_t Options, win32::Windows::Win32::Foundation::HANDLE hCredentials, void* pExtraList, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAddRecords);
        ORBIT_TRACK_PARAM(pDeleteRecords);
        ORBIT_TRACK_PARAM(Options);
        ORBIT_TRACK_PARAM(hCredentials);
        ORBIT_TRACK_PARAM(pExtraList);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.DnsModifyRecordsInSet_UTF8(pAddRecords, pDeleteRecords, Options, hCredentials, pExtraList, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsReplaceRecordSetW(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pReplaceSet, uint32_t Options, win32::Windows::Win32::Foundation::HANDLE hContext, void* pExtraInfo, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pReplaceSet);
        ORBIT_TRACK_PARAM(Options);
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(pExtraInfo);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.DnsReplaceRecordSetW(pReplaceSet, Options, hContext, pExtraInfo, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsReplaceRecordSetA(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pReplaceSet, uint32_t Options, win32::Windows::Win32::Foundation::HANDLE hContext, void* pExtraInfo, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pReplaceSet);
        ORBIT_TRACK_PARAM(Options);
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(pExtraInfo);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.DnsReplaceRecordSetA(pReplaceSet, Options, hContext, pExtraInfo, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsReplaceRecordSetUTF8(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pReplaceSet, uint32_t Options, win32::Windows::Win32::Foundation::HANDLE hContext, void* pExtraInfo, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pReplaceSet);
        ORBIT_TRACK_PARAM(Options);
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(pExtraInfo);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.DnsReplaceRecordSetUTF8(pReplaceSet, Options, hContext, pExtraInfo, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsValidateName_W(win32::Windows::Win32::Foundation::PWSTR pszName, win32::Windows::Win32::NetworkManagement::Dns::DNS_NAME_FORMAT Format) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszName);
        ORBIT_TRACK_PARAM(Format);

        auto win32_impl_result = g_api_table.DnsValidateName_W(pszName, Format);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsValidateName_A(win32::Windows::Win32::Foundation::PSTR pszName, win32::Windows::Win32::NetworkManagement::Dns::DNS_NAME_FORMAT Format) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszName);
        ORBIT_TRACK_PARAM(Format);

        auto win32_impl_result = g_api_table.DnsValidateName_A(pszName, Format);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsValidateName_UTF8(win32::Windows::Win32::Foundation::PSTR pszName, win32::Windows::Win32::NetworkManagement::Dns::DNS_NAME_FORMAT Format) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszName);
        ORBIT_TRACK_PARAM(Format);

        auto win32_impl_result = g_api_table.DnsValidateName_UTF8(pszName, Format);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DnsNameCompare_A(win32::Windows::Win32::Foundation::PSTR pName1, win32::Windows::Win32::Foundation::PSTR pName2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pName1);
        ORBIT_TRACK_PARAM(pName2);

        auto win32_impl_result = g_api_table.DnsNameCompare_A(pName1, pName2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DnsNameCompare_W(win32::Windows::Win32::Foundation::PWSTR pName1, win32::Windows::Win32::Foundation::PWSTR pName2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pName1);
        ORBIT_TRACK_PARAM(pName2);

        auto win32_impl_result = g_api_table.DnsNameCompare_W(pName1, pName2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DnsWriteQuestionToBuffer_W(win32::Windows::Win32::NetworkManagement::Dns::DNS_MESSAGE_BUFFER* pDnsBuffer, uint32_t* pdwBufferSize, win32::Windows::Win32::Foundation::PWSTR pszName, uint16_t wType, uint16_t Xid, win32::Windows::Win32::Foundation::BOOL fRecursionDesired) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDnsBuffer);
        ORBIT_TRACK_PARAM(pdwBufferSize);
        ORBIT_TRACK_PARAM(pszName);
        ORBIT_TRACK_PARAM(wType);
        ORBIT_TRACK_PARAM(Xid);
        ORBIT_TRACK_PARAM(fRecursionDesired);

        auto win32_impl_result = g_api_table.DnsWriteQuestionToBuffer_W(pDnsBuffer, pdwBufferSize, pszName, wType, Xid, fRecursionDesired);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DnsWriteQuestionToBuffer_UTF8(win32::Windows::Win32::NetworkManagement::Dns::DNS_MESSAGE_BUFFER* pDnsBuffer, uint32_t* pdwBufferSize, win32::Windows::Win32::Foundation::PSTR pszName, uint16_t wType, uint16_t Xid, win32::Windows::Win32::Foundation::BOOL fRecursionDesired) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDnsBuffer);
        ORBIT_TRACK_PARAM(pdwBufferSize);
        ORBIT_TRACK_PARAM(pszName);
        ORBIT_TRACK_PARAM(wType);
        ORBIT_TRACK_PARAM(Xid);
        ORBIT_TRACK_PARAM(fRecursionDesired);

        auto win32_impl_result = g_api_table.DnsWriteQuestionToBuffer_UTF8(pDnsBuffer, pdwBufferSize, pszName, wType, Xid, fRecursionDesired);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsExtractRecordsFromMessage_W(win32::Windows::Win32::NetworkManagement::Dns::DNS_MESSAGE_BUFFER* pDnsBuffer, uint16_t wMessageLength, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppRecord) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDnsBuffer);
        ORBIT_TRACK_PARAM(wMessageLength);
        ORBIT_TRACK_PARAM(ppRecord);

        auto win32_impl_result = g_api_table.DnsExtractRecordsFromMessage_W(pDnsBuffer, wMessageLength, ppRecord);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsExtractRecordsFromMessage_UTF8(win32::Windows::Win32::NetworkManagement::Dns::DNS_MESSAGE_BUFFER* pDnsBuffer, uint16_t wMessageLength, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppRecord) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDnsBuffer);
        ORBIT_TRACK_PARAM(wMessageLength);
        ORBIT_TRACK_PARAM(ppRecord);

        auto win32_impl_result = g_api_table.DnsExtractRecordsFromMessage_UTF8(pDnsBuffer, wMessageLength, ppRecord);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DnsGetProxyInformation(win32::Windows::Win32::Foundation::PWSTR hostName, win32::Windows::Win32::NetworkManagement::Dns::DNS_PROXY_INFORMATION* proxyInformation, win32::Windows::Win32::NetworkManagement::Dns::DNS_PROXY_INFORMATION* defaultProxyInformation, win32::Windows::Win32::NetworkManagement::Dns::DNS_PROXY_COMPLETION_ROUTINE* completionRoutine, void* completionContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hostName);
        ORBIT_TRACK_PARAM(proxyInformation);
        ORBIT_TRACK_PARAM(defaultProxyInformation);
        ORBIT_TRACK_PARAM(completionRoutine);
        ORBIT_TRACK_PARAM(completionContext);

        auto win32_impl_result = g_api_table.DnsGetProxyInformation(hostName, proxyInformation, defaultProxyInformation, completionRoutine, completionContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_DnsFreeProxyName(win32::Windows::Win32::Foundation::PWSTR proxyName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(proxyName);

        g_api_table.DnsFreeProxyName(proxyName);
        
    }

    uint32_t __stdcall ORBIT_IMPL_DnsConnectionGetProxyInfoForHostUrl(win32::Windows::Win32::Foundation::PWSTR pwszHostUrl, uint8_t* pSelectionContext, uint32_t dwSelectionContextLength, uint32_t dwExplicitInterfaceIndex, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_INFO_EX* pProxyInfoEx) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pwszHostUrl);
        ORBIT_TRACK_PARAM(pSelectionContext);
        ORBIT_TRACK_PARAM(dwSelectionContextLength);
        ORBIT_TRACK_PARAM(dwExplicitInterfaceIndex);
        ORBIT_TRACK_PARAM(pProxyInfoEx);

        auto win32_impl_result = g_api_table.DnsConnectionGetProxyInfoForHostUrl(pwszHostUrl, pSelectionContext, dwSelectionContextLength, dwExplicitInterfaceIndex, pProxyInfoEx);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_DnsConnectionFreeProxyInfoEx(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_INFO_EX* pProxyInfoEx) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProxyInfoEx);

        g_api_table.DnsConnectionFreeProxyInfoEx(pProxyInfoEx);
        
    }

    uint32_t __stdcall ORBIT_IMPL_DnsConnectionGetProxyInfo(win32::Windows::Win32::Foundation::PWSTR pwszConnectionName, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_TYPE Type, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_INFO* pProxyInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pwszConnectionName);
        ORBIT_TRACK_PARAM(Type);
        ORBIT_TRACK_PARAM(pProxyInfo);

        auto win32_impl_result = g_api_table.DnsConnectionGetProxyInfo(pwszConnectionName, Type, pProxyInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_DnsConnectionFreeProxyInfo(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_INFO* pProxyInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProxyInfo);

        g_api_table.DnsConnectionFreeProxyInfo(pProxyInfo);
        
    }

    uint32_t __stdcall ORBIT_IMPL_DnsConnectionSetProxyInfo(win32::Windows::Win32::Foundation::PWSTR pwszConnectionName, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_TYPE Type, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_INFO* pProxyInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pwszConnectionName);
        ORBIT_TRACK_PARAM(Type);
        ORBIT_TRACK_PARAM(pProxyInfo);

        auto win32_impl_result = g_api_table.DnsConnectionSetProxyInfo(pwszConnectionName, Type, pProxyInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DnsConnectionDeleteProxyInfo(win32::Windows::Win32::Foundation::PWSTR pwszConnectionName, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_TYPE Type) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pwszConnectionName);
        ORBIT_TRACK_PARAM(Type);

        auto win32_impl_result = g_api_table.DnsConnectionDeleteProxyInfo(pwszConnectionName, Type);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DnsConnectionGetProxyList(win32::Windows::Win32::Foundation::PWSTR pwszConnectionName, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_LIST* pProxyList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pwszConnectionName);
        ORBIT_TRACK_PARAM(pProxyList);

        auto win32_impl_result = g_api_table.DnsConnectionGetProxyList(pwszConnectionName, pProxyList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_DnsConnectionFreeProxyList(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_LIST* pProxyList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pProxyList);

        g_api_table.DnsConnectionFreeProxyList(pProxyList);
        
    }

    uint32_t __stdcall ORBIT_IMPL_DnsConnectionGetNameList(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_NAME_LIST* pNameList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pNameList);

        auto win32_impl_result = g_api_table.DnsConnectionGetNameList(pNameList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_DnsConnectionFreeNameList(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_NAME_LIST* pNameList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pNameList);

        g_api_table.DnsConnectionFreeNameList(pNameList);
        
    }

    uint32_t __stdcall ORBIT_IMPL_DnsConnectionUpdateIfIndexTable(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_IFINDEX_LIST* pConnectionIfIndexEntries) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pConnectionIfIndexEntries);

        auto win32_impl_result = g_api_table.DnsConnectionUpdateIfIndexTable(pConnectionIfIndexEntries);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DnsConnectionSetPolicyEntries(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_POLICY_TAG PolicyEntryTag, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_POLICY_ENTRY_LIST* pPolicyEntryList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyEntryTag);
        ORBIT_TRACK_PARAM(pPolicyEntryList);

        auto win32_impl_result = g_api_table.DnsConnectionSetPolicyEntries(PolicyEntryTag, pPolicyEntryList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DnsConnectionDeletePolicyEntries(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_POLICY_TAG PolicyEntryTag) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(PolicyEntryTag);

        auto win32_impl_result = g_api_table.DnsConnectionDeletePolicyEntries(PolicyEntryTag);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_INSTANCE* __stdcall ORBIT_IMPL_DnsServiceConstructInstance(win32::Windows::Win32::Foundation::PWSTR pServiceName, win32::Windows::Win32::Foundation::PWSTR pHostName, uint32_t* pIp4, win32::Windows::Win32::NetworkManagement::Dns::IP6_ADDRESS* pIp6, uint16_t wPort, uint16_t wPriority, uint16_t wWeight, uint32_t dwPropertiesCount, win32::Windows::Win32::Foundation::PWSTR* keys, win32::Windows::Win32::Foundation::PWSTR* values) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pServiceName);
        ORBIT_TRACK_PARAM(pHostName);
        ORBIT_TRACK_PARAM(pIp4);
        ORBIT_TRACK_PARAM(pIp6);
        ORBIT_TRACK_PARAM(wPort);
        ORBIT_TRACK_PARAM(wPriority);
        ORBIT_TRACK_PARAM(wWeight);
        ORBIT_TRACK_PARAM(dwPropertiesCount);
        ORBIT_TRACK_PARAM(keys);
        ORBIT_TRACK_PARAM(values);

        auto win32_impl_result = g_api_table.DnsServiceConstructInstance(pServiceName, pHostName, pIp4, pIp6, wPort, wPriority, wWeight, dwPropertiesCount, keys, values);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_INSTANCE* __stdcall ORBIT_IMPL_DnsServiceCopyInstance(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_INSTANCE* pOrig) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pOrig);

        auto win32_impl_result = g_api_table.DnsServiceCopyInstance(pOrig);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_DnsServiceFreeInstance(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_INSTANCE* pInstance) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pInstance);

        g_api_table.DnsServiceFreeInstance(pInstance);
        
    }

    int32_t __stdcall ORBIT_IMPL_DnsServiceBrowse(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_BROWSE_REQUEST* pRequest, win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancel) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pRequest);
        ORBIT_TRACK_PARAM(pCancel);

        auto win32_impl_result = g_api_table.DnsServiceBrowse(pRequest, pCancel);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsServiceBrowseCancel(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancelHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pCancelHandle);

        auto win32_impl_result = g_api_table.DnsServiceBrowseCancel(pCancelHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsServiceResolve(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_RESOLVE_REQUEST* pRequest, win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancel) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pRequest);
        ORBIT_TRACK_PARAM(pCancel);

        auto win32_impl_result = g_api_table.DnsServiceResolve(pRequest, pCancel);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsServiceResolveCancel(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancelHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pCancelHandle);

        auto win32_impl_result = g_api_table.DnsServiceResolveCancel(pCancelHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DnsServiceRegister(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_REGISTER_REQUEST* pRequest, win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancel) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pRequest);
        ORBIT_TRACK_PARAM(pCancel);

        auto win32_impl_result = g_api_table.DnsServiceRegister(pRequest, pCancel);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DnsServiceDeRegister(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_REGISTER_REQUEST* pRequest, win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancel) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pRequest);
        ORBIT_TRACK_PARAM(pCancel);

        auto win32_impl_result = g_api_table.DnsServiceDeRegister(pRequest, pCancel);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DnsServiceRegisterCancel(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancelHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pCancelHandle);

        auto win32_impl_result = g_api_table.DnsServiceRegisterCancel(pCancelHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsStartMulticastQuery(win32::Windows::Win32::NetworkManagement::Dns::MDNS_QUERY_REQUEST* pQueryRequest, win32::Windows::Win32::NetworkManagement::Dns::MDNS_QUERY_HANDLE* pHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pQueryRequest);
        ORBIT_TRACK_PARAM(pHandle);

        auto win32_impl_result = g_api_table.DnsStartMulticastQuery(pQueryRequest, pHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DnsStopMulticastQuery(win32::Windows::Win32::NetworkManagement::Dns::MDNS_QUERY_HANDLE* pHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pHandle);

        auto win32_impl_result = g_api_table.DnsStopMulticastQuery(pHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
