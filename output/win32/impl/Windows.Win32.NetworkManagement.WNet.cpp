// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_NetworkManagement_WNet_2_H
#define WIN32_Windows_Win32_NetworkManagement_WNet_2_H
#include "win32/Windows.Win32.NetworkManagement.WNet.h"
#include "win32/impl/Windows.Win32.NetworkManagement.WNet.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::NetworkManagement::WNet
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    uint32_t __stdcall ORBIT_IMPL_WNetAddConnectionA(win32::Windows::Win32::Foundation::PSTR lpRemoteName, win32::Windows::Win32::Foundation::PSTR lpPassword, win32::Windows::Win32::Foundation::PSTR lpLocalName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpRemoteName);
        ORBIT_TRACK_PARAM(lpPassword);
        ORBIT_TRACK_PARAM(lpLocalName);

        auto win32_impl_result = g_api_table.WNetAddConnectionA(lpRemoteName, lpPassword, lpLocalName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetAddConnectionW(win32::Windows::Win32::Foundation::PWSTR lpRemoteName, win32::Windows::Win32::Foundation::PWSTR lpPassword, win32::Windows::Win32::Foundation::PWSTR lpLocalName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpRemoteName);
        ORBIT_TRACK_PARAM(lpPassword);
        ORBIT_TRACK_PARAM(lpLocalName);

        auto win32_impl_result = g_api_table.WNetAddConnectionW(lpRemoteName, lpPassword, lpLocalName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetAddConnection2A(win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEA* lpNetResource, win32::Windows::Win32::Foundation::PSTR lpPassword, win32::Windows::Win32::Foundation::PSTR lpUserName, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lpPassword);
        ORBIT_TRACK_PARAM(lpUserName);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.WNetAddConnection2A(lpNetResource, lpPassword, lpUserName, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetAddConnection2W(win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEW* lpNetResource, win32::Windows::Win32::Foundation::PWSTR lpPassword, win32::Windows::Win32::Foundation::PWSTR lpUserName, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lpPassword);
        ORBIT_TRACK_PARAM(lpUserName);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.WNetAddConnection2W(lpNetResource, lpPassword, lpUserName, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetAddConnection3A(win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEA* lpNetResource, win32::Windows::Win32::Foundation::PSTR lpPassword, win32::Windows::Win32::Foundation::PSTR lpUserName, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lpPassword);
        ORBIT_TRACK_PARAM(lpUserName);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.WNetAddConnection3A(hwndOwner, lpNetResource, lpPassword, lpUserName, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetAddConnection3W(win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEW* lpNetResource, win32::Windows::Win32::Foundation::PWSTR lpPassword, win32::Windows::Win32::Foundation::PWSTR lpUserName, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lpPassword);
        ORBIT_TRACK_PARAM(lpUserName);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.WNetAddConnection3W(hwndOwner, lpNetResource, lpPassword, lpUserName, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetAddConnection4A(win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEA* lpNetResource, void* pAuthBuffer, uint32_t cbAuthBuffer, uint32_t dwFlags, uint8_t* lpUseOptions, uint32_t cbUseOptions) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(pAuthBuffer);
        ORBIT_TRACK_PARAM(cbAuthBuffer);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(lpUseOptions);
        ORBIT_TRACK_PARAM(cbUseOptions);

        auto win32_impl_result = g_api_table.WNetAddConnection4A(hwndOwner, lpNetResource, pAuthBuffer, cbAuthBuffer, dwFlags, lpUseOptions, cbUseOptions);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetAddConnection4W(win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEW* lpNetResource, void* pAuthBuffer, uint32_t cbAuthBuffer, uint32_t dwFlags, uint8_t* lpUseOptions, uint32_t cbUseOptions) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(pAuthBuffer);
        ORBIT_TRACK_PARAM(cbAuthBuffer);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(lpUseOptions);
        ORBIT_TRACK_PARAM(cbUseOptions);

        auto win32_impl_result = g_api_table.WNetAddConnection4W(hwndOwner, lpNetResource, pAuthBuffer, cbAuthBuffer, dwFlags, lpUseOptions, cbUseOptions);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetCancelConnectionA(win32::Windows::Win32::Foundation::PSTR lpName, win32::Windows::Win32::Foundation::BOOL fForce) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(fForce);

        auto win32_impl_result = g_api_table.WNetCancelConnectionA(lpName, fForce);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetCancelConnectionW(win32::Windows::Win32::Foundation::PWSTR lpName, win32::Windows::Win32::Foundation::BOOL fForce) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(fForce);

        auto win32_impl_result = g_api_table.WNetCancelConnectionW(lpName, fForce);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetCancelConnection2A(win32::Windows::Win32::Foundation::PSTR lpName, uint32_t dwFlags, win32::Windows::Win32::Foundation::BOOL fForce) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(fForce);

        auto win32_impl_result = g_api_table.WNetCancelConnection2A(lpName, dwFlags, fForce);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetCancelConnection2W(win32::Windows::Win32::Foundation::PWSTR lpName, uint32_t dwFlags, win32::Windows::Win32::Foundation::BOOL fForce) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(fForce);

        auto win32_impl_result = g_api_table.WNetCancelConnection2W(lpName, dwFlags, fForce);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetGetConnectionA(win32::Windows::Win32::Foundation::PSTR lpLocalName, win32::Windows::Win32::Foundation::PSTR lpRemoteName, uint32_t* lpnLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpLocalName);
        ORBIT_TRACK_PARAM(lpRemoteName);
        ORBIT_TRACK_PARAM(lpnLength);

        auto win32_impl_result = g_api_table.WNetGetConnectionA(lpLocalName, lpRemoteName, lpnLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetGetConnectionW(win32::Windows::Win32::Foundation::PWSTR lpLocalName, win32::Windows::Win32::Foundation::PWSTR lpRemoteName, uint32_t* lpnLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpLocalName);
        ORBIT_TRACK_PARAM(lpRemoteName);
        ORBIT_TRACK_PARAM(lpnLength);

        auto win32_impl_result = g_api_table.WNetGetConnectionW(lpLocalName, lpRemoteName, lpnLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetUseConnectionA(win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEA* lpNetResource, win32::Windows::Win32::Foundation::PSTR lpPassword, win32::Windows::Win32::Foundation::PSTR lpUserId, win32::Windows::Win32::NetworkManagement::WNet::NET_USE_CONNECT_FLAGS dwFlags, win32::Windows::Win32::Foundation::PSTR lpAccessName, uint32_t* lpBufferSize, uint32_t* lpResult) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lpPassword);
        ORBIT_TRACK_PARAM(lpUserId);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(lpAccessName);
        ORBIT_TRACK_PARAM(lpBufferSize);
        ORBIT_TRACK_PARAM(lpResult);

        auto win32_impl_result = g_api_table.WNetUseConnectionA(hwndOwner, lpNetResource, lpPassword, lpUserId, dwFlags, lpAccessName, lpBufferSize, lpResult);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetUseConnectionW(win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEW* lpNetResource, win32::Windows::Win32::Foundation::PWSTR lpPassword, win32::Windows::Win32::Foundation::PWSTR lpUserId, win32::Windows::Win32::NetworkManagement::WNet::NET_USE_CONNECT_FLAGS dwFlags, win32::Windows::Win32::Foundation::PWSTR lpAccessName, uint32_t* lpBufferSize, uint32_t* lpResult) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lpPassword);
        ORBIT_TRACK_PARAM(lpUserId);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(lpAccessName);
        ORBIT_TRACK_PARAM(lpBufferSize);
        ORBIT_TRACK_PARAM(lpResult);

        auto win32_impl_result = g_api_table.WNetUseConnectionW(hwndOwner, lpNetResource, lpPassword, lpUserId, dwFlags, lpAccessName, lpBufferSize, lpResult);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetUseConnection4A(win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEA* lpNetResource, void* pAuthBuffer, uint32_t cbAuthBuffer, uint32_t dwFlags, uint8_t* lpUseOptions, uint32_t cbUseOptions, win32::Windows::Win32::Foundation::PSTR lpAccessName, uint32_t* lpBufferSize, uint32_t* lpResult) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(pAuthBuffer);
        ORBIT_TRACK_PARAM(cbAuthBuffer);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(lpUseOptions);
        ORBIT_TRACK_PARAM(cbUseOptions);
        ORBIT_TRACK_PARAM(lpAccessName);
        ORBIT_TRACK_PARAM(lpBufferSize);
        ORBIT_TRACK_PARAM(lpResult);

        auto win32_impl_result = g_api_table.WNetUseConnection4A(hwndOwner, lpNetResource, pAuthBuffer, cbAuthBuffer, dwFlags, lpUseOptions, cbUseOptions, lpAccessName, lpBufferSize, lpResult);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetUseConnection4W(win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEW* lpNetResource, void* pAuthBuffer, uint32_t cbAuthBuffer, uint32_t dwFlags, uint8_t* lpUseOptions, uint32_t cbUseOptions, win32::Windows::Win32::Foundation::PWSTR lpAccessName, uint32_t* lpBufferSize, uint32_t* lpResult) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(pAuthBuffer);
        ORBIT_TRACK_PARAM(cbAuthBuffer);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(lpUseOptions);
        ORBIT_TRACK_PARAM(cbUseOptions);
        ORBIT_TRACK_PARAM(lpAccessName);
        ORBIT_TRACK_PARAM(lpBufferSize);
        ORBIT_TRACK_PARAM(lpResult);

        auto win32_impl_result = g_api_table.WNetUseConnection4W(hwndOwner, lpNetResource, pAuthBuffer, cbAuthBuffer, dwFlags, lpUseOptions, cbUseOptions, lpAccessName, lpBufferSize, lpResult);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetConnectionDialog(win32::Windows::Win32::Foundation::HWND hwnd, uint32_t dwType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(dwType);

        auto win32_impl_result = g_api_table.WNetConnectionDialog(hwnd, dwType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetDisconnectDialog(win32::Windows::Win32::Foundation::HWND hwnd, uint32_t dwType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(dwType);

        auto win32_impl_result = g_api_table.WNetDisconnectDialog(hwnd, dwType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetConnectionDialog1A(win32::Windows::Win32::NetworkManagement::WNet::CONNECTDLGSTRUCTA* lpConnDlgStruct) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpConnDlgStruct);

        auto win32_impl_result = g_api_table.WNetConnectionDialog1A(lpConnDlgStruct);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetConnectionDialog1W(win32::Windows::Win32::NetworkManagement::WNet::CONNECTDLGSTRUCTW* lpConnDlgStruct) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpConnDlgStruct);

        auto win32_impl_result = g_api_table.WNetConnectionDialog1W(lpConnDlgStruct);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetDisconnectDialog1A(win32::Windows::Win32::NetworkManagement::WNet::DISCDLGSTRUCTA* lpConnDlgStruct) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpConnDlgStruct);

        auto win32_impl_result = g_api_table.WNetDisconnectDialog1A(lpConnDlgStruct);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetDisconnectDialog1W(win32::Windows::Win32::NetworkManagement::WNet::DISCDLGSTRUCTW* lpConnDlgStruct) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpConnDlgStruct);

        auto win32_impl_result = g_api_table.WNetDisconnectDialog1W(lpConnDlgStruct);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetOpenEnumA(win32::Windows::Win32::NetworkManagement::WNet::NET_RESOURCE_SCOPE dwScope, win32::Windows::Win32::NetworkManagement::WNet::NET_RESOURCE_TYPE dwType, win32::Windows::Win32::NetworkManagement::WNet::WNET_OPEN_ENUM_USAGE dwUsage, win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEA* lpNetResource, win32::Windows::Win32::NetworkManagement::WNet::NetEnumHandle* lphEnum) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwScope);
        ORBIT_TRACK_PARAM(dwType);
        ORBIT_TRACK_PARAM(dwUsage);
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lphEnum);

        auto win32_impl_result = g_api_table.WNetOpenEnumA(dwScope, dwType, dwUsage, lpNetResource, lphEnum);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetOpenEnumW(win32::Windows::Win32::NetworkManagement::WNet::NET_RESOURCE_SCOPE dwScope, win32::Windows::Win32::NetworkManagement::WNet::NET_RESOURCE_TYPE dwType, win32::Windows::Win32::NetworkManagement::WNet::WNET_OPEN_ENUM_USAGE dwUsage, win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEW* lpNetResource, win32::Windows::Win32::NetworkManagement::WNet::NetEnumHandle* lphEnum) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwScope);
        ORBIT_TRACK_PARAM(dwType);
        ORBIT_TRACK_PARAM(dwUsage);
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lphEnum);

        auto win32_impl_result = g_api_table.WNetOpenEnumW(dwScope, dwType, dwUsage, lpNetResource, lphEnum);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetEnumResourceA(win32::Windows::Win32::Foundation::HANDLE hEnum, uint32_t* lpcCount, void* lpBuffer, uint32_t* lpBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hEnum);
        ORBIT_TRACK_PARAM(lpcCount);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(lpBufferSize);

        auto win32_impl_result = g_api_table.WNetEnumResourceA(hEnum, lpcCount, lpBuffer, lpBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetEnumResourceW(win32::Windows::Win32::Foundation::HANDLE hEnum, uint32_t* lpcCount, void* lpBuffer, uint32_t* lpBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hEnum);
        ORBIT_TRACK_PARAM(lpcCount);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(lpBufferSize);

        auto win32_impl_result = g_api_table.WNetEnumResourceW(hEnum, lpcCount, lpBuffer, lpBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetCloseEnum(win32::Windows::Win32::Foundation::HANDLE hEnum) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hEnum);

        auto win32_impl_result = g_api_table.WNetCloseEnum(hEnum);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetGetResourceParentA(win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEA* lpNetResource, void* lpBuffer, uint32_t* lpcbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(lpcbBuffer);

        auto win32_impl_result = g_api_table.WNetGetResourceParentA(lpNetResource, lpBuffer, lpcbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetGetResourceParentW(win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEW* lpNetResource, void* lpBuffer, uint32_t* lpcbBuffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(lpcbBuffer);

        auto win32_impl_result = g_api_table.WNetGetResourceParentW(lpNetResource, lpBuffer, lpcbBuffer);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetGetResourceInformationA(win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEA* lpNetResource, void* lpBuffer, uint32_t* lpcbBuffer, win32::Windows::Win32::Foundation::PSTR* lplpSystem) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(lpcbBuffer);
        ORBIT_TRACK_PARAM(lplpSystem);

        auto win32_impl_result = g_api_table.WNetGetResourceInformationA(lpNetResource, lpBuffer, lpcbBuffer, lplpSystem);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetGetResourceInformationW(win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEW* lpNetResource, void* lpBuffer, uint32_t* lpcbBuffer, win32::Windows::Win32::Foundation::PWSTR* lplpSystem) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(lpcbBuffer);
        ORBIT_TRACK_PARAM(lplpSystem);

        auto win32_impl_result = g_api_table.WNetGetResourceInformationW(lpNetResource, lpBuffer, lpcbBuffer, lplpSystem);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetGetUniversalNameA(win32::Windows::Win32::Foundation::PSTR lpLocalPath, win32::Windows::Win32::NetworkManagement::WNet::UNC_INFO_LEVEL dwInfoLevel, void* lpBuffer, uint32_t* lpBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpLocalPath);
        ORBIT_TRACK_PARAM(dwInfoLevel);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(lpBufferSize);

        auto win32_impl_result = g_api_table.WNetGetUniversalNameA(lpLocalPath, dwInfoLevel, lpBuffer, lpBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetGetUniversalNameW(win32::Windows::Win32::Foundation::PWSTR lpLocalPath, win32::Windows::Win32::NetworkManagement::WNet::UNC_INFO_LEVEL dwInfoLevel, void* lpBuffer, uint32_t* lpBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpLocalPath);
        ORBIT_TRACK_PARAM(dwInfoLevel);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(lpBufferSize);

        auto win32_impl_result = g_api_table.WNetGetUniversalNameW(lpLocalPath, dwInfoLevel, lpBuffer, lpBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetGetUserA(win32::Windows::Win32::Foundation::PSTR lpName, win32::Windows::Win32::Foundation::PSTR lpUserName, uint32_t* lpnLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(lpUserName);
        ORBIT_TRACK_PARAM(lpnLength);

        auto win32_impl_result = g_api_table.WNetGetUserA(lpName, lpUserName, lpnLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetGetUserW(win32::Windows::Win32::Foundation::PWSTR lpName, win32::Windows::Win32::Foundation::PWSTR lpUserName, uint32_t* lpnLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(lpUserName);
        ORBIT_TRACK_PARAM(lpnLength);

        auto win32_impl_result = g_api_table.WNetGetUserW(lpName, lpUserName, lpnLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetGetProviderNameA(uint32_t dwNetType, win32::Windows::Win32::Foundation::PSTR lpProviderName, uint32_t* lpBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwNetType);
        ORBIT_TRACK_PARAM(lpProviderName);
        ORBIT_TRACK_PARAM(lpBufferSize);

        auto win32_impl_result = g_api_table.WNetGetProviderNameA(dwNetType, lpProviderName, lpBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetGetProviderNameW(uint32_t dwNetType, win32::Windows::Win32::Foundation::PWSTR lpProviderName, uint32_t* lpBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwNetType);
        ORBIT_TRACK_PARAM(lpProviderName);
        ORBIT_TRACK_PARAM(lpBufferSize);

        auto win32_impl_result = g_api_table.WNetGetProviderNameW(dwNetType, lpProviderName, lpBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetGetNetworkInformationA(win32::Windows::Win32::Foundation::PSTR lpProvider, win32::Windows::Win32::NetworkManagement::WNet::NETINFOSTRUCT* lpNetInfoStruct) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpProvider);
        ORBIT_TRACK_PARAM(lpNetInfoStruct);

        auto win32_impl_result = g_api_table.WNetGetNetworkInformationA(lpProvider, lpNetInfoStruct);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetGetNetworkInformationW(win32::Windows::Win32::Foundation::PWSTR lpProvider, win32::Windows::Win32::NetworkManagement::WNet::NETINFOSTRUCT* lpNetInfoStruct) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpProvider);
        ORBIT_TRACK_PARAM(lpNetInfoStruct);

        auto win32_impl_result = g_api_table.WNetGetNetworkInformationW(lpProvider, lpNetInfoStruct);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetGetLastErrorA(uint32_t* lpError, win32::Windows::Win32::Foundation::PSTR lpErrorBuf, uint32_t nErrorBufSize, win32::Windows::Win32::Foundation::PSTR lpNameBuf, uint32_t nNameBufSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpError);
        ORBIT_TRACK_PARAM(lpErrorBuf);
        ORBIT_TRACK_PARAM(nErrorBufSize);
        ORBIT_TRACK_PARAM(lpNameBuf);
        ORBIT_TRACK_PARAM(nNameBufSize);

        auto win32_impl_result = g_api_table.WNetGetLastErrorA(lpError, lpErrorBuf, nErrorBufSize, lpNameBuf, nNameBufSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WNetGetLastErrorW(uint32_t* lpError, win32::Windows::Win32::Foundation::PWSTR lpErrorBuf, uint32_t nErrorBufSize, win32::Windows::Win32::Foundation::PWSTR lpNameBuf, uint32_t nNameBufSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpError);
        ORBIT_TRACK_PARAM(lpErrorBuf);
        ORBIT_TRACK_PARAM(nErrorBufSize);
        ORBIT_TRACK_PARAM(lpNameBuf);
        ORBIT_TRACK_PARAM(nNameBufSize);

        auto win32_impl_result = g_api_table.WNetGetLastErrorW(lpError, lpErrorBuf, nErrorBufSize, lpNameBuf, nNameBufSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MultinetGetConnectionPerformanceA(win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEA* lpNetResource, win32::Windows::Win32::NetworkManagement::WNet::NETCONNECTINFOSTRUCT* lpNetConnectInfoStruct) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lpNetConnectInfoStruct);

        auto win32_impl_result = g_api_table.MultinetGetConnectionPerformanceA(lpNetResource, lpNetConnectInfoStruct);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_MultinetGetConnectionPerformanceW(win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEW* lpNetResource, win32::Windows::Win32::NetworkManagement::WNet::NETCONNECTINFOSTRUCT* lpNetConnectInfoStruct) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lpNetConnectInfoStruct);

        auto win32_impl_result = g_api_table.MultinetGetConnectionPerformanceW(lpNetResource, lpNetConnectInfoStruct);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NPAddConnection(win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEW* lpNetResource, win32::Windows::Win32::Foundation::PWSTR lpPassword, win32::Windows::Win32::Foundation::PWSTR lpUserName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lpPassword);
        ORBIT_TRACK_PARAM(lpUserName);

        auto win32_impl_result = g_api_table.NPAddConnection(lpNetResource, lpPassword, lpUserName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NPAddConnection3(win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEW* lpNetResource, win32::Windows::Win32::Foundation::PWSTR lpPassword, win32::Windows::Win32::Foundation::PWSTR lpUserName, win32::Windows::Win32::NetworkManagement::WNet::NET_USE_CONNECT_FLAGS dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lpPassword);
        ORBIT_TRACK_PARAM(lpUserName);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.NPAddConnection3(hwndOwner, lpNetResource, lpPassword, lpUserName, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NPAddConnection4(win32::Windows::Win32::Foundation::HWND hwndOwner, win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEW* lpNetResource, void* lpAuthBuffer, uint32_t cbAuthBuffer, uint32_t dwFlags, uint8_t* lpUseOptions, uint32_t cbUseOptions) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndOwner);
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lpAuthBuffer);
        ORBIT_TRACK_PARAM(cbAuthBuffer);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(lpUseOptions);
        ORBIT_TRACK_PARAM(cbUseOptions);

        auto win32_impl_result = g_api_table.NPAddConnection4(hwndOwner, lpNetResource, lpAuthBuffer, cbAuthBuffer, dwFlags, lpUseOptions, cbUseOptions);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NPCancelConnection(win32::Windows::Win32::Foundation::PWSTR lpName, win32::Windows::Win32::Foundation::BOOL fForce) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(fForce);

        auto win32_impl_result = g_api_table.NPCancelConnection(lpName, fForce);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NPCancelConnection2(win32::Windows::Win32::Foundation::PWSTR lpName, win32::Windows::Win32::Foundation::BOOL fForce, uint32_t dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(fForce);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.NPCancelConnection2(lpName, fForce, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NPGetConnection(win32::Windows::Win32::Foundation::PWSTR lpLocalName, win32::Windows::Win32::Foundation::PWSTR lpRemoteName, uint32_t* lpnBufferLen) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpLocalName);
        ORBIT_TRACK_PARAM(lpRemoteName);
        ORBIT_TRACK_PARAM(lpnBufferLen);

        auto win32_impl_result = g_api_table.NPGetConnection(lpLocalName, lpRemoteName, lpnBufferLen);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NPGetConnection3(win32::Windows::Win32::Foundation::PWSTR lpLocalName, uint32_t dwLevel, void* lpBuffer, uint32_t* lpBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpLocalName);
        ORBIT_TRACK_PARAM(dwLevel);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(lpBufferSize);

        auto win32_impl_result = g_api_table.NPGetConnection3(lpLocalName, dwLevel, lpBuffer, lpBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NPGetUniversalName(win32::Windows::Win32::Foundation::PWSTR lpLocalPath, win32::Windows::Win32::NetworkManagement::WNet::UNC_INFO_LEVEL dwInfoLevel, void* lpBuffer, uint32_t* lpBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpLocalPath);
        ORBIT_TRACK_PARAM(dwInfoLevel);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(lpBufferSize);

        auto win32_impl_result = g_api_table.NPGetUniversalName(lpLocalPath, dwInfoLevel, lpBuffer, lpBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NPGetConnectionPerformance(win32::Windows::Win32::Foundation::PWSTR lpRemoteName, win32::Windows::Win32::NetworkManagement::WNet::NETCONNECTINFOSTRUCT* lpNetConnectInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpRemoteName);
        ORBIT_TRACK_PARAM(lpNetConnectInfo);

        auto win32_impl_result = g_api_table.NPGetConnectionPerformance(lpRemoteName, lpNetConnectInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NPOpenEnum(uint32_t dwScope, uint32_t dwType, uint32_t dwUsage, win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEW* lpNetResource, win32::Windows::Win32::Foundation::HANDLE* lphEnum) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwScope);
        ORBIT_TRACK_PARAM(dwType);
        ORBIT_TRACK_PARAM(dwUsage);
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lphEnum);

        auto win32_impl_result = g_api_table.NPOpenEnum(dwScope, dwType, dwUsage, lpNetResource, lphEnum);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NPEnumResource(win32::Windows::Win32::Foundation::HANDLE hEnum, uint32_t* lpcCount, void* lpBuffer, uint32_t* lpBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hEnum);
        ORBIT_TRACK_PARAM(lpcCount);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(lpBufferSize);

        auto win32_impl_result = g_api_table.NPEnumResource(hEnum, lpcCount, lpBuffer, lpBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NPCloseEnum(win32::Windows::Win32::Foundation::HANDLE hEnum) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hEnum);

        auto win32_impl_result = g_api_table.NPCloseEnum(hEnum);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NPGetCaps(uint32_t ndex) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ndex);

        auto win32_impl_result = g_api_table.NPGetCaps(ndex);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NPGetUser(win32::Windows::Win32::Foundation::PWSTR lpName, win32::Windows::Win32::Foundation::PWSTR lpUserName, uint32_t* lpnBufferLen) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(lpUserName);
        ORBIT_TRACK_PARAM(lpnBufferLen);

        auto win32_impl_result = g_api_table.NPGetUser(lpName, lpUserName, lpnBufferLen);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NPGetPersistentUseOptionsForConnection(win32::Windows::Win32::Foundation::PWSTR lpRemotePath, uint8_t* lpReadUseOptions, uint32_t cbReadUseOptions, uint8_t* lpWriteUseOptions, uint32_t* lpSizeWriteUseOptions) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpRemotePath);
        ORBIT_TRACK_PARAM(lpReadUseOptions);
        ORBIT_TRACK_PARAM(cbReadUseOptions);
        ORBIT_TRACK_PARAM(lpWriteUseOptions);
        ORBIT_TRACK_PARAM(lpSizeWriteUseOptions);

        auto win32_impl_result = g_api_table.NPGetPersistentUseOptionsForConnection(lpRemotePath, lpReadUseOptions, cbReadUseOptions, lpWriteUseOptions, lpSizeWriteUseOptions);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NPGetResourceParent(win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEW* lpNetResource, void* lpBuffer, uint32_t* lpBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(lpBufferSize);

        auto win32_impl_result = g_api_table.NPGetResourceParent(lpNetResource, lpBuffer, lpBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NPGetResourceInformation(win32::Windows::Win32::NetworkManagement::WNet::NETRESOURCEW* lpNetResource, void* lpBuffer, uint32_t* lpBufferSize, win32::Windows::Win32::Foundation::PWSTR* lplpSystem) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpNetResource);
        ORBIT_TRACK_PARAM(lpBuffer);
        ORBIT_TRACK_PARAM(lpBufferSize);
        ORBIT_TRACK_PARAM(lplpSystem);

        auto win32_impl_result = g_api_table.NPGetResourceInformation(lpNetResource, lpBuffer, lpBufferSize, lplpSystem);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NPFormatNetworkName(win32::Windows::Win32::Foundation::PWSTR lpRemoteName, win32::Windows::Win32::Foundation::PWSTR lpFormattedName, uint32_t* lpnLength, win32::Windows::Win32::NetworkManagement::WNet::NETWORK_NAME_FORMAT_FLAGS dwFlags, uint32_t dwAveCharPerLine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpRemoteName);
        ORBIT_TRACK_PARAM(lpFormattedName);
        ORBIT_TRACK_PARAM(lpnLength);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(dwAveCharPerLine);

        auto win32_impl_result = g_api_table.NPFormatNetworkName(lpRemoteName, lpFormattedName, lpnLength, dwFlags, dwAveCharPerLine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_WNetSetLastErrorA(uint32_t err, win32::Windows::Win32::Foundation::PSTR lpError, win32::Windows::Win32::Foundation::PSTR lpProviders) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(err);
        ORBIT_TRACK_PARAM(lpError);
        ORBIT_TRACK_PARAM(lpProviders);

        g_api_table.WNetSetLastErrorA(err, lpError, lpProviders);
        
    }

    void __stdcall ORBIT_IMPL_WNetSetLastErrorW(uint32_t err, win32::Windows::Win32::Foundation::PWSTR lpError, win32::Windows::Win32::Foundation::PWSTR lpProviders) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(err);
        ORBIT_TRACK_PARAM(lpError);
        ORBIT_TRACK_PARAM(lpProviders);

        g_api_table.WNetSetLastErrorW(err, lpError, lpProviders);
        
    }

}

#pragma endregion abi_methods

}
#endif
