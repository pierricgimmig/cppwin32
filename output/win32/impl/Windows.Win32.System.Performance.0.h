// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_Performance_0_H
#define WIN32_Windows_Win32_System_Performance_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct PWSTR;
}
WIN32_EXPORT namespace win32::Windows::Win32::System::Performance
{
#pragma region enums
    enum class AutoPathFormat : int32_t
    {
        plaNone = 0,
        plaPattern = 1,
        plaComputer = 2,
        plaMonthDayHour = 256,
        plaSerialNumber = 512,
        plaYearDayOfYear = 1024,
        plaYearMonth = 2048,
        plaYearMonthDay = 4096,
        plaYearMonthDayHour = 8192,
        plaMonthDayHourMinute = 16384,
    };
    enum class ClockType : int32_t
    {
        plaTimeStamp = 0,
        plaPerformance = 1,
        plaSystem = 2,
        plaCycle = 3,
    };
    enum class CommitMode : int32_t
    {
        plaCreateNew = 1,
        plaModify = 2,
        plaCreateOrModify = 3,
        plaUpdateRunningInstance = 16,
        plaFlushTrace = 32,
        plaValidateOnly = 4096,
    };
    enum class DataCollectorSetStatus : int32_t
    {
        plaStopped = 0,
        plaRunning = 1,
        plaCompiling = 2,
        plaPending = 3,
        plaUndefined = 4,
    };
    enum class DataCollectorType : int32_t
    {
        plaPerformanceCounter = 0,
        plaTrace = 1,
        plaConfiguration = 2,
        plaAlert = 3,
        plaApiTrace = 4,
    };
    enum class DataManagerSteps : int32_t
    {
        plaCreateReport = 1,
        plaRunRules = 2,
        plaCreateHtml = 4,
        plaFolderActions = 8,
        plaResourceFreeing = 16,
    };
    enum class DataSourceTypeConstants : int32_t
    {
        sysmonNullDataSource = -1,
        sysmonCurrentActivity = 1,
        sysmonLogFiles = 2,
        sysmonSqlLog = 3,
    };
    enum class DisplayTypeConstants : int32_t
    {
        sysmonLineGraph = 1,
        sysmonHistogram = 2,
        sysmonReport = 3,
        sysmonChartArea = 4,
        sysmonChartStackedArea = 5,
    };
    enum class FileFormat : int32_t
    {
        plaCommaSeparated = 0,
        plaTabSeparated = 1,
        plaSql = 2,
        plaBinary = 3,
    };
    enum class FolderActionSteps : int32_t
    {
        plaCreateCab = 1,
        plaDeleteData = 2,
        plaSendCab = 4,
        plaDeleteCab = 8,
        plaDeleteReport = 16,
    };
    enum class PDH_DLL_VERSION : uint32_t
    {
        PDH_CVERSION_WIN50 = 0x500,
        PDH_VERSION = 0x503,
    };
    enum class PDH_FMT : uint32_t
    {
        PDH_FMT_DOUBLE = 0x200,
        PDH_FMT_LARGE = 0x400,
        PDH_FMT_LONG = 0x100,
    };
    enum class PDH_LOG : uint32_t
    {
        PDH_LOG_READ_ACCESS = 0x10000,
        PDH_LOG_WRITE_ACCESS = 0x20000,
        PDH_LOG_UPDATE_ACCESS = 0x40000,
    };
    enum class PDH_LOG_TYPE : uint32_t
    {
        PDH_LOG_TYPE_UNDEFINED = 0x0,
        PDH_LOG_TYPE_CSV = 0x1,
        PDH_LOG_TYPE_SQL = 0x7,
        PDH_LOG_TYPE_TSV = 0x2,
        PDH_LOG_TYPE_BINARY = 0x8,
        PDH_LOG_TYPE_PERFMON = 0x6,
    };
    enum class PDH_PATH_FLAGS : uint32_t
    {
        PDH_PATH_WBEM_RESULT = 0x1,
        PDH_PATH_WBEM_INPUT = 0x2,
        PDH_PATH_WBEM_NONE = 0x0,
    };
    enum class PDH_SELECT_DATA_SOURCE_FLAGS : uint32_t
    {
        PDH_FLAGS_FILE_BROWSER_ONLY = 0x1,
        PDH_FLAGS_NONE = 0x0,
    };
    enum class PERF_COUNTER_AGGREGATE_FUNC : uint32_t
    {
        PERF_AGGREGATE_UNDEFINED = 0x0,
        PERF_AGGREGATE_TOTAL = 0x1,
        PERF_AGGREGATE_AVG = 0x2,
        PERF_AGGREGATE_MIN = 0x3,
    };
    enum class PERF_DETAIL : uint32_t
    {
        PERF_DETAIL_NOVICE = 0x64,
        PERF_DETAIL_ADVANCED = 0xc8,
        PERF_DETAIL_EXPERT = 0x12c,
        PERF_DETAIL_WIZARD = 0x190,
    };
    enum class PerfCounterDataType : int32_t
    {
        PERF_ERROR_RETURN = 0,
        PERF_SINGLE_COUNTER = 1,
        PERF_MULTIPLE_COUNTERS = 2,
        PERF_MULTIPLE_INSTANCES = 4,
        PERF_COUNTERSET = 6,
    };
    enum class PerfRegInfoType : int32_t
    {
        PERF_REG_COUNTERSET_STRUCT = 1,
        PERF_REG_COUNTER_STRUCT = 2,
        PERF_REG_COUNTERSET_NAME_STRING = 3,
        PERF_REG_COUNTERSET_HELP_STRING = 4,
        PERF_REG_COUNTER_NAME_STRINGS = 5,
        PERF_REG_COUNTER_HELP_STRINGS = 6,
        PERF_REG_PROVIDER_NAME = 7,
        PERF_REG_PROVIDER_GUID = 8,
        PERF_REG_COUNTERSET_ENGLISH_NAME = 9,
        PERF_REG_COUNTER_ENGLISH_NAMES = 10,
    };
    enum class REAL_TIME_DATA_SOURCE_ID_FLAGS : uint32_t
    {
        DATA_SOURCE_REGISTRY = 0x1,
        DATA_SOURCE_WBEM = 0x4,
    };
    enum class ReportValueTypeConstants : int32_t
    {
        sysmonDefaultValue = 0,
        sysmonCurrentValue = 1,
        sysmonAverage = 2,
        sysmonMinimum = 3,
        sysmonMaximum = 4,
    };
    enum class ResourcePolicy : int32_t
    {
        plaDeleteLargest = 0,
        plaDeleteOldest = 1,
    };
    enum class StreamMode : int32_t
    {
        plaFile = 1,
        plaRealTime = 2,
        plaBoth = 3,
        plaBuffering = 4,
    };
    enum class SysmonBatchReason : int32_t
    {
        sysmonBatchNone = 0,
        sysmonBatchAddFiles = 1,
        sysmonBatchAddCounters = 2,
        sysmonBatchAddFilesAutoCounters = 3,
    };
    enum class SysmonDataType : int32_t
    {
        sysmonDataAvg = 1,
        sysmonDataMin = 2,
        sysmonDataMax = 3,
        sysmonDataTime = 4,
        sysmonDataCount = 5,
    };
    enum class SysmonFileType : int32_t
    {
        sysmonFileHtml = 1,
        sysmonFileReport = 2,
        sysmonFileCsv = 3,
        sysmonFileTsv = 4,
        sysmonFileBlg = 5,
        sysmonFileRetiredBlg = 6,
        sysmonFileGif = 7,
    };
    enum class ValueMapType : int32_t
    {
        plaIndex = 1,
        plaFlag = 2,
        plaFlagArray = 3,
        plaValidation = 4,
    };
    enum class WeekDays : int32_t
    {
        plaRunOnce = 0,
        plaSunday = 1,
        plaMonday = 2,
        plaTuesday = 4,
        plaWednesday = 8,
        plaThursday = 16,
        plaFriday = 32,
        plaSaturday = 64,
        plaEveryday = 127,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct AppearPropPage;
    struct BootTraceSession;
    struct BootTraceSessionCollection;
    struct CounterItem;
    struct CounterItem2;
    struct CounterPropPage;
    struct Counters;
    struct DataCollectorSet;
    struct DataCollectorSetCollection;
    struct GeneralPropPage;
    struct GraphPropPage;
    struct LegacyDataCollectorSet;
    struct LegacyDataCollectorSetCollection;
    struct LegacyTraceSession;
    struct LegacyTraceSessionCollection;
    struct LogFileItem;
    struct LogFiles;
    struct PDH_BROWSE_DLG_CONFIG_A;
    struct PDH_BROWSE_DLG_CONFIG_HA;
    struct PDH_BROWSE_DLG_CONFIG_HW;
    struct PDH_BROWSE_DLG_CONFIG_W;
    struct PDH_COUNTER_INFO_A;
    struct PDH_COUNTER_INFO_W;
    struct PDH_COUNTER_PATH_ELEMENTS_A;
    struct PDH_COUNTER_PATH_ELEMENTS_W;
    struct PDH_DATA_ITEM_PATH_ELEMENTS_A;
    struct PDH_DATA_ITEM_PATH_ELEMENTS_W;
    struct PDH_FMT_COUNTERVALUE;
    struct PDH_FMT_COUNTERVALUE_ITEM_A;
    struct PDH_FMT_COUNTERVALUE_ITEM_W;
    struct PDH_LOG_SERVICE_QUERY_INFO_A;
    struct PDH_LOG_SERVICE_QUERY_INFO_W;
    struct PDH_RAW_COUNTER;
    struct PDH_RAW_COUNTER_ITEM_A;
    struct PDH_RAW_COUNTER_ITEM_W;
    struct PDH_RAW_LOG_RECORD;
    struct PDH_STATISTICS;
    struct PDH_TIME_INFO;
    struct PERF_COUNTERSET_INFO;
    struct PERF_COUNTERSET_INSTANCE;
    struct PERF_COUNTERSET_REG_INFO;
    struct PERF_COUNTER_BLOCK;
    struct PERF_COUNTER_DATA;
    struct PERF_COUNTER_DEFINITION;
    struct PERF_COUNTER_HEADER;
    struct PERF_COUNTER_IDENTIFIER;
    struct PERF_COUNTER_IDENTITY;
    struct PERF_COUNTER_INFO;
    struct PERF_COUNTER_REG_INFO;
    struct PERF_DATA_BLOCK;
    struct PERF_DATA_HEADER;
    struct PERF_INSTANCE_DEFINITION;
    struct PERF_INSTANCE_HEADER;
    struct PERF_MULTI_COUNTERS;
    struct PERF_MULTI_INSTANCES;
    struct PERF_OBJECT_TYPE;
    struct PERF_PROVIDER_CONTEXT;
    struct PERF_STRING_BUFFER_HEADER;
    struct PERF_STRING_COUNTER_HEADER;
    struct PerfProviderHandle;
    struct PerfQueryHandle;
    struct ServerDataCollectorSet;
    struct ServerDataCollectorSetCollection;
    struct SourcePropPage;
    struct SystemDataCollectorSet;
    struct SystemDataCollectorSetCollection;
    struct SystemMonitor;
    struct SystemMonitor2;
    struct TraceDataProvider;
    struct TraceDataProviderCollection;
    struct TraceSession;
    struct TraceSessionCollection;
    struct DICounterItem;
    struct DILogFileItem;
    struct DISystemMonitor;
    struct DISystemMonitorEvents;
    struct DISystemMonitorInternal;
    struct IAlertDataCollector;
    struct IApiTracingDataCollector;
    struct IConfigurationDataCollector;
    struct ICounterItem;
    struct ICounterItem2;
    struct ICounters;
    struct IDataCollector;
    struct IDataCollectorCollection;
    struct IDataCollectorSet;
    struct IDataCollectorSetCollection;
    struct IDataManager;
    struct IFolderAction;
    struct IFolderActionCollection;
    struct ILogFileItem;
    struct ILogFiles;
    struct IPerformanceCounterDataCollector;
    struct ISchedule;
    struct IScheduleCollection;
    struct ISystemMonitor;
    struct ISystemMonitor2;
    struct ISystemMonitorEvents;
    struct ITraceDataCollector;
    struct ITraceDataProvider;
    struct ITraceDataProviderCollection;
    struct IValueMap;
    struct IValueMapItem;
    struct _ICounterItemUnion;
    struct _ISystemMonitorUnion;
#pragma endregion forward_declarations

#pragma region delegates
    using PLA_CABEXTRACT_CALLBACK = void __stdcall(Windows::Win32::Foundation::PWSTR, void*);
    using PERFLIBREQUEST = uint32_t __stdcall(uint32_t, void*, uint32_t);
    using PERF_MEM_ALLOC = void* __stdcall(size_t, void*);
    using PERF_MEM_FREE = void __stdcall(void*, void*);
    using PM_OPEN_PROC = uint32_t __stdcall(Windows::Win32::Foundation::PWSTR);
    using PM_COLLECT_PROC = uint32_t __stdcall(Windows::Win32::Foundation::PWSTR, void**, uint32_t*, uint32_t*);
    using PM_CLOSE_PROC = uint32_t __stdcall();
    using CounterPathCallBack = int32_t __stdcall(size_t);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
