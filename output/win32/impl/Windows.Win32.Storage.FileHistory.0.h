// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Storage_FileHistory_0_H
#define WIN32_Windows_Win32_Storage_FileHistory_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Storage::FileHistory
{
#pragma region enums
    enum class FH_BACKUP_STATUS : int32_t
    {
        FH_STATUS_DISABLED = 0,
        FH_STATUS_DISABLED_BY_GP = 1,
        FH_STATUS_ENABLED = 2,
        FH_STATUS_REHYDRATING = 3,
        MAX_BACKUP_STATUS = 4,
    };
    enum class FH_DEVICE_VALIDATION_RESULT : int32_t
    {
        FH_ACCESS_DENIED = 0,
        FH_INVALID_DRIVE_TYPE = 1,
        FH_READ_ONLY_PERMISSION = 2,
        FH_CURRENT_DEFAULT = 3,
        FH_NAMESPACE_EXISTS = 4,
        FH_TARGET_PART_OF_LIBRARY = 5,
        FH_VALID_TARGET = 6,
        MAX_VALIDATION_RESULT = 7,
    };
    enum class FH_LOCAL_POLICY_TYPE : int32_t
    {
        FH_FREQUENCY = 0,
        FH_RETENTION_TYPE = 1,
        FH_RETENTION_AGE = 2,
        MAX_LOCAL_POLICY = 3,
    };
    enum class FH_PROTECTED_ITEM_CATEGORY : int32_t
    {
        FH_FOLDER = 0,
        FH_LIBRARY = 1,
        MAX_PROTECTED_ITEM_CATEGORY = 2,
    };
    enum class FH_RETENTION_TYPES : int32_t
    {
        FH_RETENTION_DISABLED = 0,
        FH_RETENTION_UNLIMITED = 1,
        FH_RETENTION_AGE_BASED = 2,
        MAX_RETENTION_TYPE = 3,
    };
    enum class FH_TARGET_DRIVE_TYPES : int32_t
    {
        FH_DRIVE_UNKNOWN = 0,
        FH_DRIVE_REMOVABLE = 2,
        FH_DRIVE_FIXED = 3,
        FH_DRIVE_REMOTE = 4,
    };
    enum class FH_TARGET_PROPERTY_TYPE : int32_t
    {
        FH_TARGET_NAME = 0,
        FH_TARGET_URL = 1,
        FH_TARGET_DRIVE_TYPE = 2,
        MAX_TARGET_PROPERTY = 3,
    };
    enum class FhBackupStopReason : int32_t
    {
        BackupInvalidStopReason = 0,
        BackupLimitUserBusyMachineOnAC = 1,
        BackupLimitUserIdleMachineOnDC = 2,
        BackupLimitUserBusyMachineOnDC = 3,
        BackupCancelled = 4,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct FhConfigMgr;
    struct FhReassociation;
    struct IFhConfigMgr;
    struct IFhReassociation;
    struct IFhScopeIterator;
    struct IFhTarget;
#pragma endregion forward_declarations

#pragma region delegates
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
