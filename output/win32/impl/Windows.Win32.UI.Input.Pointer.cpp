// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_UI_Input_Pointer_2_H
#define WIN32_Windows_Win32_UI_Input_Pointer_2_H
#include "win32/Windows.Win32.UI.Input.Pointer.h"
#include "win32/impl/Windows.Win32.UI.Input.Pointer.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::UI::Input::Pointer
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    uint32_t __stdcall ORBIT_IMPL_GetUnpredictedMessagePos() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.GetUnpredictedMessagePos();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_InitializeTouchInjection(uint32_t maxCount, win32::Windows::Win32::UI::Input::Pointer::TOUCH_FEEDBACK_MODE dwMode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(maxCount);
        ORBIT_TRACK_PARAM(dwMode);

        auto win32_impl_result = g_api_table.InitializeTouchInjection(maxCount, dwMode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_InjectTouchInput(uint32_t count, win32::Windows::Win32::UI::Input::Pointer::POINTER_TOUCH_INFO* contacts) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(count);
        ORBIT_TRACK_PARAM(contacts);

        auto win32_impl_result = g_api_table.InjectTouchInput(count, contacts);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerType(uint32_t pointerId, win32::Windows::Win32::UI::WindowsAndMessaging::POINTER_INPUT_TYPE* pointerType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pointerId);
        ORBIT_TRACK_PARAM(pointerType);

        auto win32_impl_result = g_api_table.GetPointerType(pointerId, pointerType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerCursorId(uint32_t pointerId, uint32_t* cursorId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pointerId);
        ORBIT_TRACK_PARAM(cursorId);

        auto win32_impl_result = g_api_table.GetPointerCursorId(pointerId, cursorId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerInfo(uint32_t pointerId, win32::Windows::Win32::UI::Input::Pointer::POINTER_INFO* pointerInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pointerId);
        ORBIT_TRACK_PARAM(pointerInfo);

        auto win32_impl_result = g_api_table.GetPointerInfo(pointerId, pointerInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerInfoHistory(uint32_t pointerId, uint32_t* entriesCount, win32::Windows::Win32::UI::Input::Pointer::POINTER_INFO* pointerInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pointerId);
        ORBIT_TRACK_PARAM(entriesCount);
        ORBIT_TRACK_PARAM(pointerInfo);

        auto win32_impl_result = g_api_table.GetPointerInfoHistory(pointerId, entriesCount, pointerInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerFrameInfo(uint32_t pointerId, uint32_t* pointerCount, win32::Windows::Win32::UI::Input::Pointer::POINTER_INFO* pointerInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pointerId);
        ORBIT_TRACK_PARAM(pointerCount);
        ORBIT_TRACK_PARAM(pointerInfo);

        auto win32_impl_result = g_api_table.GetPointerFrameInfo(pointerId, pointerCount, pointerInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerFrameInfoHistory(uint32_t pointerId, uint32_t* entriesCount, uint32_t* pointerCount, win32::Windows::Win32::UI::Input::Pointer::POINTER_INFO* pointerInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pointerId);
        ORBIT_TRACK_PARAM(entriesCount);
        ORBIT_TRACK_PARAM(pointerCount);
        ORBIT_TRACK_PARAM(pointerInfo);

        auto win32_impl_result = g_api_table.GetPointerFrameInfoHistory(pointerId, entriesCount, pointerCount, pointerInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerTouchInfo(uint32_t pointerId, win32::Windows::Win32::UI::Input::Pointer::POINTER_TOUCH_INFO* touchInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pointerId);
        ORBIT_TRACK_PARAM(touchInfo);

        auto win32_impl_result = g_api_table.GetPointerTouchInfo(pointerId, touchInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerTouchInfoHistory(uint32_t pointerId, uint32_t* entriesCount, win32::Windows::Win32::UI::Input::Pointer::POINTER_TOUCH_INFO* touchInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pointerId);
        ORBIT_TRACK_PARAM(entriesCount);
        ORBIT_TRACK_PARAM(touchInfo);

        auto win32_impl_result = g_api_table.GetPointerTouchInfoHistory(pointerId, entriesCount, touchInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerFrameTouchInfo(uint32_t pointerId, uint32_t* pointerCount, win32::Windows::Win32::UI::Input::Pointer::POINTER_TOUCH_INFO* touchInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pointerId);
        ORBIT_TRACK_PARAM(pointerCount);
        ORBIT_TRACK_PARAM(touchInfo);

        auto win32_impl_result = g_api_table.GetPointerFrameTouchInfo(pointerId, pointerCount, touchInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerFrameTouchInfoHistory(uint32_t pointerId, uint32_t* entriesCount, uint32_t* pointerCount, win32::Windows::Win32::UI::Input::Pointer::POINTER_TOUCH_INFO* touchInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pointerId);
        ORBIT_TRACK_PARAM(entriesCount);
        ORBIT_TRACK_PARAM(pointerCount);
        ORBIT_TRACK_PARAM(touchInfo);

        auto win32_impl_result = g_api_table.GetPointerFrameTouchInfoHistory(pointerId, entriesCount, pointerCount, touchInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerPenInfo(uint32_t pointerId, win32::Windows::Win32::UI::Input::Pointer::POINTER_PEN_INFO* penInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pointerId);
        ORBIT_TRACK_PARAM(penInfo);

        auto win32_impl_result = g_api_table.GetPointerPenInfo(pointerId, penInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerPenInfoHistory(uint32_t pointerId, uint32_t* entriesCount, win32::Windows::Win32::UI::Input::Pointer::POINTER_PEN_INFO* penInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pointerId);
        ORBIT_TRACK_PARAM(entriesCount);
        ORBIT_TRACK_PARAM(penInfo);

        auto win32_impl_result = g_api_table.GetPointerPenInfoHistory(pointerId, entriesCount, penInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerFramePenInfo(uint32_t pointerId, uint32_t* pointerCount, win32::Windows::Win32::UI::Input::Pointer::POINTER_PEN_INFO* penInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pointerId);
        ORBIT_TRACK_PARAM(pointerCount);
        ORBIT_TRACK_PARAM(penInfo);

        auto win32_impl_result = g_api_table.GetPointerFramePenInfo(pointerId, pointerCount, penInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerFramePenInfoHistory(uint32_t pointerId, uint32_t* entriesCount, uint32_t* pointerCount, win32::Windows::Win32::UI::Input::Pointer::POINTER_PEN_INFO* penInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pointerId);
        ORBIT_TRACK_PARAM(entriesCount);
        ORBIT_TRACK_PARAM(pointerCount);
        ORBIT_TRACK_PARAM(penInfo);

        auto win32_impl_result = g_api_table.GetPointerFramePenInfoHistory(pointerId, entriesCount, pointerCount, penInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SkipPointerFrameMessages(uint32_t pointerId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pointerId);

        auto win32_impl_result = g_api_table.SkipPointerFrameMessages(pointerId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_InjectSyntheticPointerInput(win32::Windows::Win32::UI::Controls::HSYNTHETICPOINTERDEVICE device, win32::Windows::Win32::UI::Controls::POINTER_TYPE_INFO* pointerInfo, uint32_t count) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(device);
        ORBIT_TRACK_PARAM(pointerInfo);
        ORBIT_TRACK_PARAM(count);

        auto win32_impl_result = g_api_table.InjectSyntheticPointerInput(device, pointerInfo, count);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EnableMouseInPointer(win32::Windows::Win32::Foundation::BOOL fEnable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(fEnable);

        auto win32_impl_result = g_api_table.EnableMouseInPointer(fEnable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsMouseInPointerEnabled() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.IsMouseInPointerEnabled();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerInputTransform(uint32_t pointerId, uint32_t historyCount, win32::Windows::Win32::UI::Input::Pointer::INPUT_TRANSFORM* inputTransform) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pointerId);
        ORBIT_TRACK_PARAM(historyCount);
        ORBIT_TRACK_PARAM(inputTransform);

        auto win32_impl_result = g_api_table.GetPointerInputTransform(pointerId, historyCount, inputTransform);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerDevices(uint32_t* deviceCount, win32::Windows::Win32::UI::Controls::POINTER_DEVICE_INFO* pointerDevices) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(deviceCount);
        ORBIT_TRACK_PARAM(pointerDevices);

        auto win32_impl_result = g_api_table.GetPointerDevices(deviceCount, pointerDevices);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerDevice(win32::Windows::Win32::Foundation::HANDLE device, win32::Windows::Win32::UI::Controls::POINTER_DEVICE_INFO* pointerDevice) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(device);
        ORBIT_TRACK_PARAM(pointerDevice);

        auto win32_impl_result = g_api_table.GetPointerDevice(device, pointerDevice);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerDeviceProperties(win32::Windows::Win32::Foundation::HANDLE device, uint32_t* propertyCount, win32::Windows::Win32::UI::Controls::POINTER_DEVICE_PROPERTY* pointerProperties) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(device);
        ORBIT_TRACK_PARAM(propertyCount);
        ORBIT_TRACK_PARAM(pointerProperties);

        auto win32_impl_result = g_api_table.GetPointerDeviceProperties(device, propertyCount, pointerProperties);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerDeviceRects(win32::Windows::Win32::Foundation::HANDLE device, win32::Windows::Win32::Foundation::RECT* pointerDeviceRect, win32::Windows::Win32::Foundation::RECT* displayRect) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(device);
        ORBIT_TRACK_PARAM(pointerDeviceRect);
        ORBIT_TRACK_PARAM(displayRect);

        auto win32_impl_result = g_api_table.GetPointerDeviceRects(device, pointerDeviceRect, displayRect);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPointerDeviceCursors(win32::Windows::Win32::Foundation::HANDLE device, uint32_t* cursorCount, win32::Windows::Win32::UI::Controls::POINTER_DEVICE_CURSOR_INFO* deviceCursors) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(device);
        ORBIT_TRACK_PARAM(cursorCount);
        ORBIT_TRACK_PARAM(deviceCursors);

        auto win32_impl_result = g_api_table.GetPointerDeviceCursors(device, cursorCount, deviceCursors);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetRawPointerDeviceData(uint32_t pointerId, uint32_t historyCount, uint32_t propertiesCount, win32::Windows::Win32::UI::Controls::POINTER_DEVICE_PROPERTY* pProperties, int32_t* pValues) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pointerId);
        ORBIT_TRACK_PARAM(historyCount);
        ORBIT_TRACK_PARAM(propertiesCount);
        ORBIT_TRACK_PARAM(pProperties);
        ORBIT_TRACK_PARAM(pValues);

        auto win32_impl_result = g_api_table.GetRawPointerDeviceData(pointerId, historyCount, propertiesCount, pProperties, pValues);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
