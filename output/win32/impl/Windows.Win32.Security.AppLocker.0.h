// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Security_AppLocker_0_H
#define WIN32_Windows_Win32_Security_AppLocker_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Security::AppLocker
{
#pragma region enums
    enum class SAFER_COMPUTE_TOKEN_FROM_LEVEL_FLAGS : uint32_t
    {
        SAFER_TOKEN_NULL_IF_EQUAL = 0x1,
        SAFER_TOKEN_COMPARE_ONLY = 0x2,
        SAFER_TOKEN_MAKE_INERT = 0x4,
        SAFER_TOKEN_WANT_FLAGS = 0x8,
    };
    enum class SAFER_IDENTIFICATION_TYPES : int32_t
    {
        SaferIdentityDefault = 0,
        SaferIdentityTypeImageName = 1,
        SaferIdentityTypeImageHash = 2,
        SaferIdentityTypeUrlZone = 3,
        SaferIdentityTypeCertificate = 4,
    };
    enum class SAFER_OBJECT_INFO_CLASS : int32_t
    {
        SaferObjectLevelId = 1,
        SaferObjectScopeId = 2,
        SaferObjectFriendlyName = 3,
        SaferObjectDescription = 4,
        SaferObjectBuiltin = 5,
        SaferObjectDisallowed = 6,
        SaferObjectDisableMaxPrivilege = 7,
        SaferObjectInvertDeletedPrivileges = 8,
        SaferObjectDeletedPrivileges = 9,
        SaferObjectDefaultOwner = 10,
        SaferObjectSidsToDisable = 11,
        SaferObjectRestrictedSidsInverted = 12,
        SaferObjectRestrictedSidsAdded = 13,
        SaferObjectAllIdentificationGuids = 14,
        SaferObjectSingleIdentification = 15,
        SaferObjectExtendedError = 16,
    };
    enum class SAFER_POLICY_INFO_CLASS : int32_t
    {
        SaferPolicyLevelList = 1,
        SaferPolicyEnableTransparentEnforcement = 2,
        SaferPolicyDefaultLevel = 3,
        SaferPolicyEvaluateUserScope = 4,
        SaferPolicyScopeFlags = 5,
        SaferPolicyDefaultLevelFlags = 6,
        SaferPolicyAuthenticodeEnabled = 7,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct SAFER_CODE_PROPERTIES_V1;
    struct SAFER_CODE_PROPERTIES_V2;
    struct SAFER_HASH_IDENTIFICATION;
    struct SAFER_HASH_IDENTIFICATION2;
    struct SAFER_IDENTIFICATION_HEADER;
    struct SAFER_PATHNAME_IDENTIFICATION;
    struct SAFER_URLZONE_IDENTIFICATION;
#pragma endregion forward_declarations

#pragma region delegates
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
