// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Storage_Xps_2_H
#define WIN32_Windows_Win32_Storage_Xps_2_H
#include "win32/Windows.Win32.Storage.Xps.h"
#include "win32/impl/Windows.Win32.Storage.Xps.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::Storage::Xps
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    int32_t __stdcall ORBIT_IMPL_DeviceCapabilitiesA(win32::Windows::Win32::Foundation::PSTR pDevice, win32::Windows::Win32::Foundation::PSTR pPort, win32::Windows::Win32::Storage::Xps::DEVICE_CAPABILITIES fwCapability, win32::Windows::Win32::Foundation::PSTR pOutput, win32::Windows::Win32::Graphics::Gdi::DEVMODEA* pDevMode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDevice);
        ORBIT_TRACK_PARAM(pPort);
        ORBIT_TRACK_PARAM(fwCapability);
        ORBIT_TRACK_PARAM(pOutput);
        ORBIT_TRACK_PARAM(pDevMode);

        auto win32_impl_result = g_api_table.DeviceCapabilitiesA(pDevice, pPort, fwCapability, pOutput, pDevMode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DeviceCapabilitiesW(win32::Windows::Win32::Foundation::PWSTR pDevice, win32::Windows::Win32::Foundation::PWSTR pPort, win32::Windows::Win32::Storage::Xps::DEVICE_CAPABILITIES fwCapability, win32::Windows::Win32::Foundation::PWSTR pOutput, win32::Windows::Win32::Graphics::Gdi::DEVMODEW* pDevMode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDevice);
        ORBIT_TRACK_PARAM(pPort);
        ORBIT_TRACK_PARAM(fwCapability);
        ORBIT_TRACK_PARAM(pOutput);
        ORBIT_TRACK_PARAM(pDevMode);

        auto win32_impl_result = g_api_table.DeviceCapabilitiesW(pDevice, pPort, fwCapability, pOutput, pDevMode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_Escape(win32::Windows::Win32::Graphics::Gdi::HDC hdc, int32_t iEscape, int32_t cjIn, win32::Windows::Win32::Foundation::PSTR pvIn, void* pvOut) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdc);
        ORBIT_TRACK_PARAM(iEscape);
        ORBIT_TRACK_PARAM(cjIn);
        ORBIT_TRACK_PARAM(pvIn);
        ORBIT_TRACK_PARAM(pvOut);

        auto win32_impl_result = g_api_table.Escape(hdc, iEscape, cjIn, pvIn, pvOut);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_ExtEscape(win32::Windows::Win32::Graphics::Gdi::HDC hdc, int32_t iEscape, int32_t cjInput, win32::Windows::Win32::Foundation::PSTR lpInData, int32_t cjOutput, win32::Windows::Win32::Foundation::PSTR lpOutData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdc);
        ORBIT_TRACK_PARAM(iEscape);
        ORBIT_TRACK_PARAM(cjInput);
        ORBIT_TRACK_PARAM(lpInData);
        ORBIT_TRACK_PARAM(cjOutput);
        ORBIT_TRACK_PARAM(lpOutData);

        auto win32_impl_result = g_api_table.ExtEscape(hdc, iEscape, cjInput, lpInData, cjOutput, lpOutData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_StartDocA(win32::Windows::Win32::Graphics::Gdi::HDC hdc, win32::Windows::Win32::Storage::Xps::DOCINFOA* lpdi) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdc);
        ORBIT_TRACK_PARAM(lpdi);

        auto win32_impl_result = g_api_table.StartDocA(hdc, lpdi);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_StartDocW(win32::Windows::Win32::Graphics::Gdi::HDC hdc, win32::Windows::Win32::Storage::Xps::DOCINFOW* lpdi) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdc);
        ORBIT_TRACK_PARAM(lpdi);

        auto win32_impl_result = g_api_table.StartDocW(hdc, lpdi);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_EndDoc(win32::Windows::Win32::Graphics::Gdi::HDC hdc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdc);

        auto win32_impl_result = g_api_table.EndDoc(hdc);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_StartPage(win32::Windows::Win32::Graphics::Gdi::HDC hdc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdc);

        auto win32_impl_result = g_api_table.StartPage(hdc);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_EndPage(win32::Windows::Win32::Graphics::Gdi::HDC hdc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdc);

        auto win32_impl_result = g_api_table.EndPage(hdc);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_AbortDoc(win32::Windows::Win32::Graphics::Gdi::HDC hdc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdc);

        auto win32_impl_result = g_api_table.AbortDoc(hdc);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SetAbortProc(win32::Windows::Win32::Graphics::Gdi::HDC hdc, win32::Windows::Win32::Storage::Xps::ABORTPROC* proc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdc);
        ORBIT_TRACK_PARAM(proc);

        auto win32_impl_result = g_api_table.SetAbortProc(hdc, proc);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_PrintWindow(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Graphics::Gdi::HDC hdcBlt, win32::Windows::Win32::Storage::Xps::PRINT_WINDOW_FLAGS nFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(hdcBlt);
        ORBIT_TRACK_PARAM(nFlags);

        auto win32_impl_result = g_api_table.PrintWindow(hwnd, hdcBlt, nFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
