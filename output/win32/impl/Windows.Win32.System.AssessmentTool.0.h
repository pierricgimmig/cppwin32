// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_AssessmentTool_0_H
#define WIN32_Windows_Win32_System_AssessmentTool_0_H
WIN32_EXPORT namespace win32::Windows::Win32::System::AssessmentTool
{
#pragma region enums
    enum class WINSAT_ASSESSMENT_STATE : int32_t
    {
        WINSAT_ASSESSMENT_STATE_MIN = 0,
        WINSAT_ASSESSMENT_STATE_UNKNOWN = 0,
        WINSAT_ASSESSMENT_STATE_VALID = 1,
        WINSAT_ASSESSMENT_STATE_INCOHERENT_WITH_HARDWARE = 2,
        WINSAT_ASSESSMENT_STATE_NOT_AVAILABLE = 3,
        WINSAT_ASSESSMENT_STATE_INVALID = 4,
        WINSAT_ASSESSMENT_STATE_MAX = 4,
    };
    enum class WINSAT_ASSESSMENT_TYPE : int32_t
    {
        WINSAT_ASSESSMENT_MEMORY = 0,
        WINSAT_ASSESSMENT_CPU = 1,
        WINSAT_ASSESSMENT_DISK = 2,
        WINSAT_ASSESSMENT_D3D = 3,
        WINSAT_ASSESSMENT_GRAPHICS = 4,
    };
    enum class WINSAT_BITMAP_SIZE : int32_t
    {
        WINSAT_BITMAP_SIZE_SMALL = 0,
        WINSAT_BITMAP_SIZE_NORMAL = 1,
    };
    enum class WINSAT_OEM_DATA_TYPE : int32_t
    {
        WINSAT_OEM_DATA_VALID = 0,
        WINSAT_OEM_DATA_NON_SYS_CONFIG_MATCH = 1,
        WINSAT_OEM_DATA_INVALID = 2,
        WINSAT_OEM_NO_DATA_SUPPLIED = 3,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct CAccessiblityWinSAT;
    struct CInitiateWinSAT;
    struct CProvideWinSATVisuals;
    struct CQueryAllWinSAT;
    struct CQueryOEMWinSATCustomization;
    struct CQueryWinSAT;
    struct IAccessibleWinSAT;
    struct IInitiateWinSATAssessment;
    struct IProvideWinSATAssessmentInfo;
    struct IProvideWinSATResultsInfo;
    struct IProvideWinSATVisuals;
    struct IQueryAllWinSATAssessments;
    struct IQueryOEMWinSATCustomization;
    struct IQueryRecentWinSATAssessment;
    struct IWinSATInitiateEvents;
#pragma endregion forward_declarations

#pragma region delegates
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
