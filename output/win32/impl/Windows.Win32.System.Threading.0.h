// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_Threading_0_H
#define WIN32_Windows_Win32_System_Threading_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct BOOL;
}
WIN32_EXPORT namespace win32::Windows::Win32::System::SystemServices
{
    union RTL_RUN_ONCE;
    struct TP_CALLBACK_INSTANCE;
    struct TP_IO;
}
WIN32_EXPORT namespace win32::Windows::Win32::System::Threading
{
#pragma region enums
    enum class CREATE_EVENT : uint32_t
    {
        CREATE_EVENT_INITIAL_SET = 0x2,
        CREATE_EVENT_MANUAL_RESET = 0x1,
    };
    enum class CREATE_PROCESS_LOGON_FLAGS : uint32_t
    {
        LOGON_WITH_PROFILE = 0x1,
        LOGON_NETCREDENTIALS_ONLY = 0x2,
    };
    enum class GET_GUI_RESOURCES_FLAGS : uint32_t
    {
        GR_GDIOBJECTS = 0x0,
        GR_GDIOBJECTS_PEAK = 0x2,
        GR_USEROBJECTS = 0x1,
        GR_USEROBJECTS_PEAK = 0x4,
    };
    enum class MACHINE_ATTRIBUTES : uint32_t
    {
        UserEnabled = 0x1,
        KernelEnabled = 0x2,
        Wow64Container = 0x4,
    };
    enum class MEMORY_PRIORITY : uint32_t
    {
        MEMORY_PRIORITY_VERY_LOW = 0x1,
        MEMORY_PRIORITY_LOW = 0x2,
        MEMORY_PRIORITY_MEDIUM = 0x3,
        MEMORY_PRIORITY_BELOW_NORMAL = 0x4,
        MEMORY_PRIORITY_NORMAL = 0x5,
    };
    enum class MSG_WAIT_FOR_MULTIPLE_OBJECTS_EX_FLAGS : uint32_t
    {
        MWMO_NONE = 0x0,
        MWMO_ALERTABLE = 0x2,
        MWMO_INPUTAVAILABLE = 0x4,
        MWMO_WAITALL = 0x1,
    };
    enum class PROCESSINFOCLASS : int32_t
    {
        ProcessBasicInformation = 0,
        ProcessDebugPort = 7,
        ProcessWow64Information = 26,
        ProcessImageFileName = 27,
        ProcessBreakOnTermination = 29,
    };
    enum class PROCESSOR_FEATURE_ID : uint32_t
    {
        PF_ARM_64BIT_LOADSTORE_ATOMIC = 0x19,
        PF_ARM_DIVIDE_INSTRUCTION_AVAILABLE = 0x18,
        PF_ARM_EXTERNAL_CACHE_AVAILABLE = 0x1a,
        PF_ARM_FMAC_INSTRUCTIONS_AVAILABLE = 0x1b,
        PF_ARM_VFP_32_REGISTERS_AVAILABLE = 0x12,
        PF_3DNOW_INSTRUCTIONS_AVAILABLE = 0x7,
        PF_CHANNELS_ENABLED = 0x10,
        PF_COMPARE_EXCHANGE_DOUBLE = 0x2,
        PF_COMPARE_EXCHANGE128 = 0xe,
        PF_COMPARE64_EXCHANGE128 = 0xf,
        PF_FASTFAIL_AVAILABLE = 0x17,
        PF_FLOATING_POINT_EMULATED = 0x1,
        PF_FLOATING_POINT_PRECISION_ERRATA = 0x0,
        PF_MMX_INSTRUCTIONS_AVAILABLE = 0x3,
        PF_NX_ENABLED = 0xc,
        PF_PAE_ENABLED = 0x9,
        PF_RDTSC_INSTRUCTION_AVAILABLE = 0x8,
        PF_RDWRFSGSBASE_AVAILABLE = 0x16,
        PF_SECOND_LEVEL_ADDRESS_TRANSLATION = 0x14,
        PF_SSE3_INSTRUCTIONS_AVAILABLE = 0xd,
        PF_VIRT_FIRMWARE_ENABLED = 0x15,
        PF_XMMI_INSTRUCTIONS_AVAILABLE = 0x6,
        PF_XMMI64_INSTRUCTIONS_AVAILABLE = 0xa,
        PF_XSAVE_ENABLED = 0x11,
        PF_ARM_V8_INSTRUCTIONS_AVAILABLE = 0x1d,
        PF_ARM_V8_CRYPTO_INSTRUCTIONS_AVAILABLE = 0x1e,
        PF_ARM_V8_CRC32_INSTRUCTIONS_AVAILABLE = 0x1f,
        PF_ARM_V81_ATOMIC_INSTRUCTIONS_AVAILABLE = 0x22,
    };
    enum class PROCESS_ACCESS_RIGHTS : uint32_t
    {
        PROCESS_TERMINATE = 0x1,
        PROCESS_CREATE_THREAD = 0x2,
        PROCESS_SET_SESSIONID = 0x4,
        PROCESS_VM_OPERATION = 0x8,
        PROCESS_VM_READ = 0x10,
        PROCESS_VM_WRITE = 0x20,
        PROCESS_DUP_HANDLE = 0x40,
        PROCESS_CREATE_PROCESS = 0x80,
        PROCESS_SET_QUOTA = 0x100,
        PROCESS_SET_INFORMATION = 0x200,
        PROCESS_QUERY_INFORMATION = 0x400,
        PROCESS_SUSPEND_RESUME = 0x800,
        PROCESS_QUERY_LIMITED_INFORMATION = 0x1000,
        PROCESS_SET_LIMITED_INFORMATION = 0x2000,
        PROCESS_ALL_ACCESS = 0x1fffff,
        PROCESS_DELETE = 0x10000,
        PROCESS_READ_CONTROL = 0x20000,
        PROCESS_WRITE_DAC = 0x40000,
        PROCESS_WRITE_OWNER = 0x80000,
        PROCESS_SYNCHRONIZE = 0x100000,
        PROCESS_STANDARD_RIGHTS_REQUIRED = 0xf0000,
    };
    enum class PROCESS_AFFINITY_AUTO_UPDATE_FLAGS : uint32_t
    {
        PROCESS_AFFINITY_DISABLE_AUTO_UPDATE = 0x0,
        PROCESS_AFFINITY_ENABLE_AUTO_UPDATE = 0x1,
    };
    enum class PROCESS_CREATION_FLAGS : uint32_t
    {
        DEBUG_PROCESS = 0x1,
        DEBUG_ONLY_THIS_PROCESS = 0x2,
        CREATE_SUSPENDED = 0x4,
        DETACHED_PROCESS = 0x8,
        CREATE_NEW_CONSOLE = 0x10,
        NORMAL_PRIORITY_CLASS = 0x20,
        IDLE_PRIORITY_CLASS = 0x40,
        HIGH_PRIORITY_CLASS = 0x80,
        REALTIME_PRIORITY_CLASS = 0x100,
        CREATE_NEW_PROCESS_GROUP = 0x200,
        CREATE_UNICODE_ENVIRONMENT = 0x400,
        CREATE_SEPARATE_WOW_VDM = 0x800,
        CREATE_SHARED_WOW_VDM = 0x1000,
        CREATE_FORCEDOS = 0x2000,
        BELOW_NORMAL_PRIORITY_CLASS = 0x4000,
        ABOVE_NORMAL_PRIORITY_CLASS = 0x8000,
        INHERIT_PARENT_AFFINITY = 0x10000,
        INHERIT_CALLER_PRIORITY = 0x20000,
        CREATE_PROTECTED_PROCESS = 0x40000,
        EXTENDED_STARTUPINFO_PRESENT = 0x80000,
        PROCESS_MODE_BACKGROUND_BEGIN = 0x100000,
        PROCESS_MODE_BACKGROUND_END = 0x200000,
        CREATE_SECURE_PROCESS = 0x400000,
        CREATE_BREAKAWAY_FROM_JOB = 0x1000000,
        CREATE_PRESERVE_CODE_AUTHZ_LEVEL = 0x2000000,
        CREATE_DEFAULT_ERROR_MODE = 0x4000000,
        CREATE_NO_WINDOW = 0x8000000,
        PROFILE_USER = 0x10000000,
        PROFILE_KERNEL = 0x20000000,
        PROFILE_SERVER = 0x40000000,
        CREATE_IGNORE_SYSTEM_DEFAULT = 0x80000000,
    };
    enum class PROCESS_DEP_FLAGS : uint32_t
    {
        PROCESS_DEP_ENABLE = 0x1,
        PROCESS_DEP_DISABLE_ATL_THUNK_EMULATION = 0x2,
        PROCESS_DEP_NONE = 0x0,
    };
    enum class PROCESS_INFORMATION_CLASS : int32_t
    {
        ProcessMemoryPriority = 0,
        ProcessMemoryExhaustionInfo = 1,
        ProcessAppMemoryInfo = 2,
        ProcessInPrivateInfo = 3,
        ProcessPowerThrottling = 4,
        ProcessReservedValue1 = 5,
        ProcessTelemetryCoverageInfo = 6,
        ProcessProtectionLevelInfo = 7,
        ProcessLeapSecondInfo = 8,
        ProcessMachineTypeInfo = 9,
        ProcessInformationClassMax = 10,
    };
    enum class PROCESS_MEMORY_EXHAUSTION_TYPE : int32_t
    {
        PMETypeFailFastOnCommitFailure = 0,
        PMETypeMax = 1,
    };
    enum class PROCESS_NAME_FORMAT : uint32_t
    {
        PROCESS_NAME_WIN32 = 0x0,
        PROCESS_NAME_NATIVE = 0x1,
    };
    enum class PROCESS_PROTECTION_LEVEL : uint32_t
    {
        PROTECTION_LEVEL_WINTCB_LIGHT = 0x0,
        PROTECTION_LEVEL_WINDOWS = 0x1,
        PROTECTION_LEVEL_WINDOWS_LIGHT = 0x2,
        PROTECTION_LEVEL_ANTIMALWARE_LIGHT = 0x3,
        PROTECTION_LEVEL_LSA_LIGHT = 0x4,
        PROTECTION_LEVEL_WINTCB = 0x5,
        PROTECTION_LEVEL_CODEGEN_LIGHT = 0x6,
        PROTECTION_LEVEL_AUTHENTICODE = 0x7,
        PROTECTION_LEVEL_PPL_APP = 0x8,
        PROTECTION_LEVEL_NONE = 0xfffffffe,
    };
    enum class QUEUE_USER_APC_FLAGS : int32_t
    {
        QUEUE_USER_APC_FLAGS_NONE = 0,
        QUEUE_USER_APC_FLAGS_SPECIAL_USER_APC = 1,
    };
    enum class STARTUPINFOW_FLAGS : uint32_t
    {
        STARTF_FORCEONFEEDBACK = 0x40,
        STARTF_FORCEOFFFEEDBACK = 0x80,
        STARTF_PREVENTPINNING = 0x2000,
        STARTF_RUNFULLSCREEN = 0x20,
        STARTF_TITLEISAPPID = 0x1000,
        STARTF_TITLEISLINKNAME = 0x800,
        STARTF_UNTRUSTEDSOURCE = 0x8000,
        STARTF_USECOUNTCHARS = 0x8,
        STARTF_USEFILLATTRIBUTE = 0x10,
        STARTF_USEHOTKEY = 0x200,
        STARTF_USEPOSITION = 0x4,
        STARTF_USESHOWWINDOW = 0x1,
        STARTF_USESIZE = 0x2,
        STARTF_USESTDHANDLES = 0x100,
    };
    enum class THREADINFOCLASS : int32_t
    {
        ThreadIsIoPending = 16,
        ThreadNameInformation = 38,
    };
    enum class THREAD_ACCESS_RIGHTS : uint32_t
    {
        THREAD_TERMINATE = 0x1,
        THREAD_SUSPEND_RESUME = 0x2,
        THREAD_GET_CONTEXT = 0x8,
        THREAD_SET_CONTEXT = 0x10,
        THREAD_SET_INFORMATION = 0x20,
        THREAD_QUERY_INFORMATION = 0x40,
        THREAD_SET_THREAD_TOKEN = 0x80,
        THREAD_IMPERSONATE = 0x100,
        THREAD_DIRECT_IMPERSONATION = 0x200,
        THREAD_SET_LIMITED_INFORMATION = 0x400,
        THREAD_QUERY_LIMITED_INFORMATION = 0x800,
        THREAD_RESUME = 0x1000,
        THREAD_ALL_ACCESS = 0x1fffff,
        THREAD_DELETE = 0x10000,
        THREAD_READ_CONTROL = 0x20000,
        THREAD_WRITE_DAC = 0x40000,
        THREAD_WRITE_OWNER = 0x80000,
        THREAD_SYNCHRONIZE = 0x100000,
        THREAD_STANDARD_RIGHTS_REQUIRED = 0xf0000,
    };
    enum class THREAD_CREATION_FLAGS : uint32_t
    {
        THREAD_CREATE_RUN_IMMEDIATELY = 0x0,
        THREAD_CREATE_SUSPENDED = 0x4,
        STACK_SIZE_PARAM_IS_A_RESERVATION = 0x10000,
    };
    enum class THREAD_INFORMATION_CLASS : int32_t
    {
        ThreadMemoryPriority = 0,
        ThreadAbsoluteCpuPriority = 1,
        ThreadDynamicCodePolicy = 2,
        ThreadPowerThrottling = 3,
        ThreadInformationClassMax = 4,
    };
    enum class THREAD_PRIORITY : int32_t
    {
        THREAD_MODE_BACKGROUND_BEGIN = 65536,
        THREAD_MODE_BACKGROUND_END = 131072,
        THREAD_PRIORITY_ABOVE_NORMAL = 1,
        THREAD_PRIORITY_BELOW_NORMAL = -1,
        THREAD_PRIORITY_HIGHEST = 2,
        THREAD_PRIORITY_IDLE = -15,
        THREAD_PRIORITY_MIN = -2,
        THREAD_PRIORITY_LOWEST = -2,
        THREAD_PRIORITY_NORMAL = 0,
        THREAD_PRIORITY_TIME_CRITICAL = 15,
    };
    enum class WORKER_THREAD_FLAGS : uint32_t
    {
        WT_EXECUTEDEFAULT = 0x0,
        WT_EXECUTEINIOTHREAD = 0x1,
        WT_EXECUTEINPERSISTENTTHREAD = 0x80,
        WT_EXECUTEINWAITTHREAD = 0x4,
        WT_EXECUTELONGFUNCTION = 0x10,
        WT_EXECUTEONLYONCE = 0x8,
        WT_TRANSFER_IMPERSONATION = 0x100,
        WT_EXECUTEINTIMERTHREAD = 0x20,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct APP_MEMORY_INFORMATION;
    struct BoundaryDescriptorHandle;
    struct LPPROC_THREAD_ATTRIBUTE_LIST;
    struct MEMORY_PRIORITY_INFORMATION;
    struct NamespaceHandle;
    struct PEB;
    struct PEB_LDR_DATA;
    struct PROCESS_BASIC_INFORMATION;
    struct PROCESS_INFORMATION;
    struct PROCESS_LEAP_SECOND_INFO;
    struct PROCESS_MACHINE_INFORMATION;
    struct PROCESS_MEMORY_EXHAUSTION_INFO;
    struct PROCESS_POWER_THROTTLING_STATE;
    struct PROCESS_PROTECTION_LEVEL_INFORMATION;
    struct PTP_POOL;
    struct RTL_USER_PROCESS_PARAMETERS;
    struct STARTUPINFOA;
    struct STARTUPINFOEXA;
    struct STARTUPINFOEXW;
    struct STARTUPINFOW;
    struct THREAD_POWER_THROTTLING_STATE;
    struct TimerQueueHandle;
    struct UMS_SCHEDULER_STARTUP_INFO;
    struct UMS_SYSTEM_THREAD_INFORMATION;
#pragma endregion forward_declarations

#pragma region delegates
    using PINIT_ONCE_FN = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::System::SystemServices::RTL_RUN_ONCE*, void*, void**);
    using PTIMERAPCROUTINE = void __stdcall(void*, uint32_t, uint32_t);
    using PTP_WIN32_IO_CALLBACK = void __stdcall(Windows::Win32::System::SystemServices::TP_CALLBACK_INSTANCE*, void*, void*, uint32_t, size_t, Windows::Win32::System::SystemServices::TP_IO*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
