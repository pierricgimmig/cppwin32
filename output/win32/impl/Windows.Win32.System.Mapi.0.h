// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_Mapi_0_H
#define WIN32_Windows_Win32_System_Mapi_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct PSTR;
}
WIN32_EXPORT namespace win32::Windows::Win32::System::Mapi
{
#pragma region enums
#pragma endregion enums

#pragma region forward_declarations
    struct MapiFileDesc;
    struct MapiFileDescW;
    struct MapiFileTagExt;
    struct MapiMessage;
    struct MapiMessageW;
    struct MapiRecipDesc;
    struct MapiRecipDescW;
#pragma endregion forward_declarations

#pragma region delegates
    using LPMAPILOGON = uint32_t __stdcall(size_t, Windows::Win32::Foundation::PSTR, Windows::Win32::Foundation::PSTR, uint32_t, uint32_t, size_t*);
    using LPMAPILOGOFF = uint32_t __stdcall(size_t, size_t, uint32_t, uint32_t);
    using LPMAPISENDMAIL = uint32_t __stdcall(size_t, size_t, Windows::Win32::System::Mapi::MapiMessage*, uint32_t, uint32_t);
    using LPMAPISENDMAILW = uint32_t __stdcall(size_t, size_t, Windows::Win32::System::Mapi::MapiMessageW*, uint32_t, uint32_t);
    using LPMAPISENDDOCUMENTS = uint32_t __stdcall(size_t, Windows::Win32::Foundation::PSTR, Windows::Win32::Foundation::PSTR, Windows::Win32::Foundation::PSTR, uint32_t);
    using LPMAPIFINDNEXT = uint32_t __stdcall(size_t, size_t, Windows::Win32::Foundation::PSTR, Windows::Win32::Foundation::PSTR, uint32_t, uint32_t, Windows::Win32::Foundation::PSTR);
    using LPMAPIREADMAIL = uint32_t __stdcall(size_t, size_t, Windows::Win32::Foundation::PSTR, uint32_t, uint32_t, Windows::Win32::System::Mapi::MapiMessage**);
    using LPMAPISAVEMAIL = uint32_t __stdcall(size_t, size_t, Windows::Win32::System::Mapi::MapiMessage*, uint32_t, uint32_t, Windows::Win32::Foundation::PSTR);
    using LPMAPIDELETEMAIL = uint32_t __stdcall(size_t, size_t, Windows::Win32::Foundation::PSTR, uint32_t, uint32_t);
    using LPMAPIFREEBUFFER = uint32_t __stdcall(void*);
    using LPMAPIADDRESS = uint32_t __stdcall(size_t, size_t, Windows::Win32::Foundation::PSTR, uint32_t, Windows::Win32::Foundation::PSTR, uint32_t, Windows::Win32::System::Mapi::MapiRecipDesc*, uint32_t, uint32_t, uint32_t*, Windows::Win32::System::Mapi::MapiRecipDesc**);
    using LPMAPIDETAILS = uint32_t __stdcall(size_t, size_t, Windows::Win32::System::Mapi::MapiRecipDesc*, uint32_t, uint32_t);
    using LPMAPIRESOLVENAME = uint32_t __stdcall(size_t, size_t, Windows::Win32::Foundation::PSTR, uint32_t, uint32_t, Windows::Win32::System::Mapi::MapiRecipDesc**);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
