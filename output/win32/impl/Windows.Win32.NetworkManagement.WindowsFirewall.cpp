// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_NetworkManagement_WindowsFirewall_2_H
#define WIN32_Windows_Win32_NetworkManagement_WindowsFirewall_2_H
#include "win32/Windows.Win32.NetworkManagement.WindowsFirewall.h"
#include "win32/impl/Windows.Win32.NetworkManagement.WindowsFirewall.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::NetworkManagement::WindowsFirewall
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_NetworkIsolationSetupAppContainerBinaries(win32::Windows::Win32::Foundation::PSID applicationContainerSid, win32::Windows::Win32::Foundation::PWSTR packageFullName, win32::Windows::Win32::Foundation::PWSTR packageFolder, win32::Windows::Win32::Foundation::PWSTR displayName, win32::Windows::Win32::Foundation::BOOL bBinariesFullyComputed, win32::Windows::Win32::Foundation::PWSTR* binaries, uint32_t binariesCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(applicationContainerSid);
        ORBIT_TRACK_PARAM(packageFullName);
        ORBIT_TRACK_PARAM(packageFolder);
        ORBIT_TRACK_PARAM(displayName);
        ORBIT_TRACK_PARAM(bBinariesFullyComputed);
        ORBIT_TRACK_PARAM(binaries);
        ORBIT_TRACK_PARAM(binariesCount);

        auto win32_impl_result = g_api_table.NetworkIsolationSetupAppContainerBinaries(applicationContainerSid, packageFullName, packageFolder, displayName, bBinariesFullyComputed, binaries, binariesCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NetworkIsolationRegisterForAppContainerChanges(uint32_t flags, win32::Windows::Win32::NetworkManagement::WindowsFirewall::PAC_CHANGES_CALLBACK_FN* callback, void* context, win32::Windows::Win32::Foundation::HANDLE* registrationObject) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(callback);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(registrationObject);

        auto win32_impl_result = g_api_table.NetworkIsolationRegisterForAppContainerChanges(flags, callback, context, registrationObject);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NetworkIsolationUnregisterForAppContainerChanges(win32::Windows::Win32::Foundation::HANDLE registrationObject) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(registrationObject);

        auto win32_impl_result = g_api_table.NetworkIsolationUnregisterForAppContainerChanges(registrationObject);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NetworkIsolationFreeAppContainers(win32::Windows::Win32::NetworkManagement::WindowsFirewall::INET_FIREWALL_APP_CONTAINER* pPublicAppCs) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pPublicAppCs);

        auto win32_impl_result = g_api_table.NetworkIsolationFreeAppContainers(pPublicAppCs);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NetworkIsolationEnumAppContainers(uint32_t Flags, uint32_t* pdwNumPublicAppCs, win32::Windows::Win32::NetworkManagement::WindowsFirewall::INET_FIREWALL_APP_CONTAINER** ppPublicAppCs) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(pdwNumPublicAppCs);
        ORBIT_TRACK_PARAM(ppPublicAppCs);

        auto win32_impl_result = g_api_table.NetworkIsolationEnumAppContainers(Flags, pdwNumPublicAppCs, ppPublicAppCs);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NetworkIsolationGetAppContainerConfig(uint32_t* pdwNumPublicAppCs, win32::Windows::Win32::Security::SID_AND_ATTRIBUTES** appContainerSids) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdwNumPublicAppCs);
        ORBIT_TRACK_PARAM(appContainerSids);

        auto win32_impl_result = g_api_table.NetworkIsolationGetAppContainerConfig(pdwNumPublicAppCs, appContainerSids);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NetworkIsolationSetAppContainerConfig(uint32_t dwNumPublicAppCs, win32::Windows::Win32::Security::SID_AND_ATTRIBUTES* appContainerSids) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwNumPublicAppCs);
        ORBIT_TRACK_PARAM(appContainerSids);

        auto win32_impl_result = g_api_table.NetworkIsolationSetAppContainerConfig(dwNumPublicAppCs, appContainerSids);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_NetworkIsolationDiagnoseConnectFailureAndGetInfo(win32::Windows::Win32::Foundation::PWSTR wszServerName, win32::Windows::Win32::NetworkManagement::WindowsFirewall::NETISO_ERROR_TYPE* netIsoError) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(wszServerName);
        ORBIT_TRACK_PARAM(netIsoError);

        auto win32_impl_result = g_api_table.NetworkIsolationDiagnoseConnectFailureAndGetInfo(wszServerName, netIsoError);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
