// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Graphics_DirectComposition_2_H
#define WIN32_Windows_Win32_Graphics_DirectComposition_2_H
#include "win32/Windows.Win32.Graphics.DirectComposition.h"
#include "win32/impl/Windows.Win32.Graphics.DirectComposition.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::Graphics::DirectComposition
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DCompositionCreateDevice(win32::Windows::Win32::Graphics::Dxgi::IDXGIDevice* dxgiDevice, ::win32::guid* iid, void** dcompositionDevice) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dxgiDevice);
        ORBIT_TRACK_PARAM(iid);
        ORBIT_TRACK_PARAM(dcompositionDevice);

        auto win32_impl_result = g_api_table.DCompositionCreateDevice(dxgiDevice, iid, dcompositionDevice);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DCompositionCreateDevice2(win32::Windows::Win32::System::Com::IUnknown* renderingDevice, ::win32::guid* iid, void** dcompositionDevice) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(renderingDevice);
        ORBIT_TRACK_PARAM(iid);
        ORBIT_TRACK_PARAM(dcompositionDevice);

        auto win32_impl_result = g_api_table.DCompositionCreateDevice2(renderingDevice, iid, dcompositionDevice);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DCompositionCreateDevice3(win32::Windows::Win32::System::Com::IUnknown* renderingDevice, ::win32::guid* iid, void** dcompositionDevice) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(renderingDevice);
        ORBIT_TRACK_PARAM(iid);
        ORBIT_TRACK_PARAM(dcompositionDevice);

        auto win32_impl_result = g_api_table.DCompositionCreateDevice3(renderingDevice, iid, dcompositionDevice);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DCompositionCreateSurfaceHandle(uint32_t desiredAccess, win32::Windows::Win32::Security::SECURITY_ATTRIBUTES* securityAttributes, win32::Windows::Win32::Foundation::HANDLE* surfaceHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(desiredAccess);
        ORBIT_TRACK_PARAM(securityAttributes);
        ORBIT_TRACK_PARAM(surfaceHandle);

        auto win32_impl_result = g_api_table.DCompositionCreateSurfaceHandle(desiredAccess, securityAttributes, surfaceHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DCompositionAttachMouseWheelToHwnd(win32::Windows::Win32::Graphics::DirectComposition::IDCompositionVisual* visual, win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::BOOL enable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(visual);
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(enable);

        auto win32_impl_result = g_api_table.DCompositionAttachMouseWheelToHwnd(visual, hwnd, enable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DCompositionAttachMouseDragToHwnd(win32::Windows::Win32::Graphics::DirectComposition::IDCompositionVisual* visual, win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::BOOL enable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(visual);
        ORBIT_TRACK_PARAM(hwnd);
        ORBIT_TRACK_PARAM(enable);

        auto win32_impl_result = g_api_table.DCompositionAttachMouseDragToHwnd(visual, hwnd, enable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DCompositionGetFrameId(win32::Windows::Win32::Graphics::DirectComposition::COMPOSITION_FRAME_ID_TYPE frameIdType, uint64_t* frameId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(frameIdType);
        ORBIT_TRACK_PARAM(frameId);

        auto win32_impl_result = g_api_table.DCompositionGetFrameId(frameIdType, frameId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DCompositionGetStatistics(uint64_t frameId, win32::Windows::Win32::Graphics::DirectComposition::COMPOSITION_FRAME_STATS* frameStats, uint32_t targetIdCount, win32::Windows::Win32::Graphics::DirectComposition::COMPOSITION_TARGET_ID* targetIds, uint32_t* actualTargetIdCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(frameId);
        ORBIT_TRACK_PARAM(frameStats);
        ORBIT_TRACK_PARAM(targetIdCount);
        ORBIT_TRACK_PARAM(targetIds);
        ORBIT_TRACK_PARAM(actualTargetIdCount);

        auto win32_impl_result = g_api_table.DCompositionGetStatistics(frameId, frameStats, targetIdCount, targetIds, actualTargetIdCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DCompositionGetTargetStatistics(uint64_t frameId, win32::Windows::Win32::Graphics::DirectComposition::COMPOSITION_TARGET_ID* targetId, win32::Windows::Win32::Graphics::DirectComposition::COMPOSITION_TARGET_STATS* targetStats) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(frameId);
        ORBIT_TRACK_PARAM(targetId);
        ORBIT_TRACK_PARAM(targetStats);

        auto win32_impl_result = g_api_table.DCompositionGetTargetStatistics(frameId, targetId, targetStats);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DCompositionBoostCompositorClock(win32::Windows::Win32::Foundation::BOOL enable) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(enable);

        auto win32_impl_result = g_api_table.DCompositionBoostCompositorClock(enable);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_DCompositionWaitForCompositorClock(uint32_t count, win32::Windows::Win32::Foundation::HANDLE* handles, uint32_t timeoutInMs) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(count);
        ORBIT_TRACK_PARAM(handles);
        ORBIT_TRACK_PARAM(timeoutInMs);

        auto win32_impl_result = g_api_table.DCompositionWaitForCompositorClock(count, handles, timeoutInMs);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
