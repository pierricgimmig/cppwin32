// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Devices_DeviceAndDriverInstallation_0_H
#define WIN32_Windows_Win32_Devices_DeviceAndDriverInstallation_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct BOOL;
}
WIN32_EXPORT namespace win32::Windows::Win32::Devices::DeviceAndDriverInstallation
{
#pragma region enums
    enum class CM_NOTIFY_ACTION : int32_t
    {
        CM_NOTIFY_ACTION_DEVICEINTERFACEARRIVAL = 0,
        CM_NOTIFY_ACTION_DEVICEINTERFACEREMOVAL = 1,
        CM_NOTIFY_ACTION_DEVICEQUERYREMOVE = 2,
        CM_NOTIFY_ACTION_DEVICEQUERYREMOVEFAILED = 3,
        CM_NOTIFY_ACTION_DEVICEREMOVEPENDING = 4,
        CM_NOTIFY_ACTION_DEVICEREMOVECOMPLETE = 5,
        CM_NOTIFY_ACTION_DEVICECUSTOMEVENT = 6,
        CM_NOTIFY_ACTION_DEVICEINSTANCEENUMERATED = 7,
        CM_NOTIFY_ACTION_DEVICEINSTANCESTARTED = 8,
        CM_NOTIFY_ACTION_DEVICEINSTANCEREMOVED = 9,
        CM_NOTIFY_ACTION_MAX = 10,
    };
    enum class CM_NOTIFY_FILTER_TYPE : int32_t
    {
        CM_NOTIFY_FILTER_TYPE_DEVICEINTERFACE = 0,
        CM_NOTIFY_FILTER_TYPE_DEVICEHANDLE = 1,
        CM_NOTIFY_FILTER_TYPE_DEVICEINSTANCE = 2,
        CM_NOTIFY_FILTER_TYPE_MAX = 3,
    };
    enum class CONFIGRET : uint32_t
    {
        CR_SUCCESS = 0x0,
        CR_DEFAULT = 0x1,
        CR_OUT_OF_MEMORY = 0x2,
        CR_INVALID_POINTER = 0x3,
        CR_INVALID_FLAG = 0x4,
        CR_INVALID_DEVNODE = 0x5,
        CR_INVALID_DEVINST = 0x5,
        CR_INVALID_RES_DES = 0x6,
        CR_INVALID_LOG_CONF = 0x7,
        CR_INVALID_ARBITRATOR = 0x8,
        CR_INVALID_NODELIST = 0x9,
        CR_DEVNODE_HAS_REQS = 0xa,
        CR_DEVINST_HAS_REQS = 0xa,
        CR_INVALID_RESOURCEID = 0xb,
        CR_DLVXD_NOT_FOUND = 0xc,
        CR_NO_SUCH_DEVNODE = 0xd,
        CR_NO_SUCH_DEVINST = 0xd,
        CR_NO_MORE_LOG_CONF = 0xe,
        CR_NO_MORE_RES_DES = 0xf,
        CR_ALREADY_SUCH_DEVNODE = 0x10,
        CR_ALREADY_SUCH_DEVINST = 0x10,
        CR_INVALID_RANGE_LIST = 0x11,
        CR_INVALID_RANGE = 0x12,
        CR_FAILURE = 0x13,
        CR_NO_SUCH_LOGICAL_DEV = 0x14,
        CR_CREATE_BLOCKED = 0x15,
        CR_NOT_SYSTEM_VM = 0x16,
        CR_REMOVE_VETOED = 0x17,
        CR_APM_VETOED = 0x18,
        CR_INVALID_LOAD_TYPE = 0x19,
        CR_BUFFER_SMALL = 0x1a,
        CR_NO_ARBITRATOR = 0x1b,
        CR_NO_REGISTRY_HANDLE = 0x1c,
        CR_REGISTRY_ERROR = 0x1d,
        CR_INVALID_DEVICE_ID = 0x1e,
        CR_INVALID_DATA = 0x1f,
        CR_INVALID_API = 0x20,
        CR_DEVLOADER_NOT_READY = 0x21,
        CR_NEED_RESTART = 0x22,
        CR_NO_MORE_HW_PROFILES = 0x23,
        CR_DEVICE_NOT_THERE = 0x24,
        CR_NO_SUCH_VALUE = 0x25,
        CR_WRONG_TYPE = 0x26,
        CR_INVALID_PRIORITY = 0x27,
        CR_NOT_DISABLEABLE = 0x28,
        CR_FREE_RESOURCES = 0x29,
        CR_QUERY_VETOED = 0x2a,
        CR_CANT_SHARE_IRQ = 0x2b,
        CR_NO_DEPENDENT = 0x2c,
        CR_SAME_RESOURCES = 0x2d,
        CR_NO_SUCH_REGISTRY_KEY = 0x2e,
        CR_INVALID_MACHINENAME = 0x2f,
        CR_REMOTE_COMM_FAILURE = 0x30,
        CR_MACHINE_UNAVAILABLE = 0x31,
        CR_NO_CM_SERVICES = 0x32,
        CR_ACCESS_DENIED = 0x33,
        CR_CALL_NOT_IMPLEMENTED = 0x34,
        CR_INVALID_PROPERTY = 0x35,
        CR_DEVICE_INTERFACE_ACTIVE = 0x36,
        CR_NO_SUCH_DEVICE_INTERFACE = 0x37,
        CR_INVALID_REFERENCE_STRING = 0x38,
        CR_INVALID_CONFLICT_LIST = 0x39,
        CR_INVALID_INDEX = 0x3a,
        CR_INVALID_STRUCTURE_SIZE = 0x3b,
        NUM_CR_RESULTS = 0x3c,
    };
    enum class OEM_SOURCE_MEDIA_TYPE : uint32_t
    {
        SPOST_NONE = 0x0,
        SPOST_PATH = 0x1,
        SPOST_URL = 0x2,
    };
    enum class PNP_VETO_TYPE : int32_t
    {
        PNP_VetoTypeUnknown = 0,
        PNP_VetoLegacyDevice = 1,
        PNP_VetoPendingClose = 2,
        PNP_VetoWindowsApp = 3,
        PNP_VetoWindowsService = 4,
        PNP_VetoOutstandingOpen = 5,
        PNP_VetoDevice = 6,
        PNP_VetoDriver = 7,
        PNP_VetoIllegalDeviceRequest = 8,
        PNP_VetoInsufficientPower = 9,
        PNP_VetoNonDisableable = 10,
        PNP_VetoLegacyDriver = 11,
        PNP_VetoInsufficientRights = 12,
        PNP_VetoAlreadyRemoved = 13,
    };
    enum class SETUP_DI_BUILD_DRIVER_DRIVER_TYPE : uint32_t
    {
        SPDIT_CLASSDRIVER = 0x1,
        SPDIT_COMPATDRIVER = 0x2,
    };
    enum class SETUP_FILE_OPERATION : uint32_t
    {
        FILEOP_DELETE = 0x2,
        FILEOP_COPY = 0x0,
    };
    enum class SP_COPY_STYLE : uint32_t
    {
        SP_COPY_DELETESOURCE = 0x1,
        SP_COPY_REPLACEONLY = 0x2,
        SP_COPY_NEWER_OR_SAME = 0x4,
        SP_COPY_NEWER_ONLY = 0x10000,
        SP_COPY_NOOVERWRITE = 0x8,
        SP_COPY_NODECOMP = 0x10,
        SP_COPY_LANGUAGEAWARE = 0x20,
        SP_COPY_SOURCE_ABSOLUTE = 0x40,
        SP_COPY_SOURCEPATH_ABSOLUTE = 0x80,
        SP_COPY_FORCE_IN_USE = 0x200,
        SP_COPY_IN_USE_NEEDS_REBOOT = 0x100,
        SP_COPY_NOSKIP = 0x400,
        SP_COPY_FORCE_NOOVERWRITE = 0x1000,
        SP_COPY_FORCE_NEWER = 0x2000,
        SP_COPY_WARNIFSKIP = 0x4000,
        SP_COPY_NOBROWSE = 0x8000,
        SP_COPY_NEWER = 0x4,
        SP_COPY_RESERVED = 0x20000,
        SP_COPY_OEMINF_CATALOG_ONLY = 0x40000,
        SP_COPY_REPLACE_BOOT_FILE = 0x80000,
        SP_COPY_NOPRUNE = 0x100000,
        SP_COPY_OEM_F6_INF = 0x200000,
        SP_COPY_ALREADYDECOMP = 0x400000,
        SP_COPY_WINDOWS_SIGNED = 0x1000000,
        SP_COPY_PNPLOCKED = 0x2000000,
        SP_COPY_IN_USE_TRY_RENAME = 0x4000000,
        SP_COPY_INBOX_INF = 0x8000000,
        SP_COPY_HARDLINK = 0x10000000,
    };
    enum class SP_INF_STYLE : uint32_t
    {
        INF_STYLE_NONE = 0x0,
        INF_STYLE_OLDNT = 0x1,
        INF_STYLE_WIN4 = 0x2,
    };
    enum class SetupFileLogInfo : int32_t
    {
        SetupFileLogSourceFilename = 0,
        SetupFileLogChecksum = 1,
        SetupFileLogDiskTagfile = 2,
        SetupFileLogDiskDescription = 3,
        SetupFileLogOtherInfo = 4,
        SetupFileLogMax = 5,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct BUSNUMBER_DES;
    struct BUSNUMBER_RANGE;
    struct BUSNUMBER_RESOURCE;
    struct CABINET_INFO_A;
    struct CABINET_INFO_W;
    struct CM_NOTIFY_EVENT_DATA;
    struct CM_NOTIFY_FILTER;
    struct COINSTALLER_CONTEXT_DATA;
    struct CONFLICT_DETAILS_A;
    struct CONFLICT_DETAILS_W;
    struct CS_DES;
    struct CS_RESOURCE;
    struct Connection_Des_s;
    struct Connection_Resource_s;
    struct DMA_DES;
    struct DMA_RANGE;
    struct DMA_RESOURCE;
    struct DevPrivate_Des_s;
    struct DevPrivate_Range_s;
    struct DevPrivate_Resource_s;
    struct FILEPATHS_A;
    struct FILEPATHS_SIGNERINFO_A;
    struct FILEPATHS_SIGNERINFO_W;
    struct FILEPATHS_W;
    struct FILE_IN_CABINET_INFO_A;
    struct FILE_IN_CABINET_INFO_W;
    struct HCMNOTIFICATION;
    struct HWProfileInfo_sA;
    struct HWProfileInfo_sW;
    struct INFCONTEXT;
    struct IO_DES;
    struct IO_RANGE;
    struct IO_RESOURCE;
    struct IRQ_DES_32;
    struct IRQ_DES_64;
    struct IRQ_RANGE;
    struct IRQ_RESOURCE_32;
    struct IRQ_RESOURCE_64;
    struct MEM_DES;
    struct MEM_RANGE;
    struct MEM_RESOURCE;
    struct MFCARD_DES;
    struct MFCARD_RESOURCE;
    struct Mem_Large_Des_s;
    struct Mem_Large_Range_s;
    struct Mem_Large_Resource_s;
    struct PCCARD_DES;
    struct PCCARD_RESOURCE;
    struct SOURCE_MEDIA_A;
    struct SOURCE_MEDIA_W;
    struct SP_ALTPLATFORM_INFO_V1;
    struct SP_ALTPLATFORM_INFO_V2;
    struct SP_ALTPLATFORM_INFO_V3;
    struct SP_BACKUP_QUEUE_PARAMS_V1_A;
    struct SP_BACKUP_QUEUE_PARAMS_V1_W;
    struct SP_BACKUP_QUEUE_PARAMS_V2_A;
    struct SP_BACKUP_QUEUE_PARAMS_V2_W;
    struct SP_CLASSIMAGELIST_DATA;
    struct SP_CLASSINSTALL_HEADER;
    struct SP_DETECTDEVICE_PARAMS;
    struct SP_DEVICE_INTERFACE_DATA;
    struct SP_DEVICE_INTERFACE_DETAIL_DATA_A;
    struct SP_DEVICE_INTERFACE_DETAIL_DATA_W;
    struct SP_DEVINFO_DATA;
    struct SP_DEVINFO_LIST_DETAIL_DATA_A;
    struct SP_DEVINFO_LIST_DETAIL_DATA_W;
    struct SP_DEVINSTALL_PARAMS_A;
    struct SP_DEVINSTALL_PARAMS_W;
    struct SP_DRVINFO_DATA_V1_A;
    struct SP_DRVINFO_DATA_V1_W;
    struct SP_DRVINFO_DATA_V2_A;
    struct SP_DRVINFO_DATA_V2_W;
    struct SP_DRVINFO_DETAIL_DATA_A;
    struct SP_DRVINFO_DETAIL_DATA_W;
    struct SP_DRVINSTALL_PARAMS;
    struct SP_ENABLECLASS_PARAMS;
    struct SP_FILE_COPY_PARAMS_A;
    struct SP_FILE_COPY_PARAMS_W;
    struct SP_INF_INFORMATION;
    struct SP_INF_SIGNER_INFO_V1_A;
    struct SP_INF_SIGNER_INFO_V1_W;
    struct SP_INF_SIGNER_INFO_V2_A;
    struct SP_INF_SIGNER_INFO_V2_W;
    struct SP_INSTALLWIZARD_DATA;
    struct SP_NEWDEVICEWIZARD_DATA;
    struct SP_ORIGINAL_FILE_INFO_A;
    struct SP_ORIGINAL_FILE_INFO_W;
    struct SP_POWERMESSAGEWAKE_PARAMS_A;
    struct SP_POWERMESSAGEWAKE_PARAMS_W;
    struct SP_PROPCHANGE_PARAMS;
    struct SP_PROPSHEETPAGE_REQUEST;
    struct SP_REGISTER_CONTROL_STATUSA;
    struct SP_REGISTER_CONTROL_STATUSW;
    struct SP_REMOVEDEVICE_PARAMS;
    struct SP_SELECTDEVICE_PARAMS_A;
    struct SP_SELECTDEVICE_PARAMS_W;
    struct SP_TROUBLESHOOTER_PARAMS_A;
    struct SP_TROUBLESHOOTER_PARAMS_W;
    struct SP_UNREMOVEDEVICE_PARAMS;
#pragma endregion forward_declarations

#pragma region delegates
    using PSP_FILE_CALLBACK_A = uint32_t __stdcall(void*, uint32_t, size_t, size_t);
    using PSP_FILE_CALLBACK_W = uint32_t __stdcall(void*, uint32_t, size_t, size_t);
    using PDETECT_PROGRESS_NOTIFY = Windows::Win32::Foundation::BOOL __stdcall(void*, uint32_t);
    using PSP_DETSIG_CMPPROC = uint32_t __stdcall(void*, Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA*, Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA*, void*);
    using PCM_NOTIFY_CALLBACK = uint32_t __stdcall(Windows::Win32::Devices::DeviceAndDriverInstallation::HCMNOTIFICATION, void*, Windows::Win32::Devices::DeviceAndDriverInstallation::CM_NOTIFY_ACTION, Windows::Win32::Devices::DeviceAndDriverInstallation::CM_NOTIFY_EVENT_DATA*, uint32_t);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
