// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Security_Credentials_2_H
#define WIN32_Windows_Win32_Security_Credentials_2_H
#include "win32/Windows.Win32.Security.Credentials.h"
#include "win32/impl/Windows.Win32.Security.Credentials.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::Security::Credentials
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_KeyCredentialManagerGetOperationErrorStates(win32::Windows::Win32::Security::Credentials::KeyCredentialManagerOperationType keyCredentialManagerOperationType, win32::Windows::Win32::Foundation::BOOL* isReady, win32::Windows::Win32::Security::Credentials::KeyCredentialManagerOperationErrorStates* keyCredentialManagerOperationErrorStates) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(keyCredentialManagerOperationType);
        ORBIT_TRACK_PARAM(isReady);
        ORBIT_TRACK_PARAM(keyCredentialManagerOperationErrorStates);

        auto win32_impl_result = g_api_table.KeyCredentialManagerGetOperationErrorStates(keyCredentialManagerOperationType, isReady, keyCredentialManagerOperationErrorStates);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_KeyCredentialManagerShowUIOperation(win32::Windows::Win32::Foundation::HWND hWndOwner, win32::Windows::Win32::Security::Credentials::KeyCredentialManagerOperationType keyCredentialManagerOperationType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hWndOwner);
        ORBIT_TRACK_PARAM(keyCredentialManagerOperationType);

        auto win32_impl_result = g_api_table.KeyCredentialManagerShowUIOperation(hWndOwner, keyCredentialManagerOperationType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_KeyCredentialManagerGetInformation(win32::Windows::Win32::Security::Credentials::KeyCredentialManagerInfo** keyCredentialManagerInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(keyCredentialManagerInfo);

        auto win32_impl_result = g_api_table.KeyCredentialManagerGetInformation(keyCredentialManagerInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_KeyCredentialManagerFreeInformation(win32::Windows::Win32::Security::Credentials::KeyCredentialManagerInfo* keyCredentialManagerInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(keyCredentialManagerInfo);

        g_api_table.KeyCredentialManagerFreeInformation(keyCredentialManagerInfo);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredWriteW(win32::Windows::Win32::Security::Credentials::CREDENTIALW* Credential, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Credential);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.CredWriteW(Credential, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredWriteA(win32::Windows::Win32::Security::Credentials::CREDENTIALA* Credential, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Credential);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.CredWriteA(Credential, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredReadW(win32::Windows::Win32::Foundation::PWSTR TargetName, uint32_t Type, uint32_t Flags, win32::Windows::Win32::Security::Credentials::CREDENTIALW** Credential) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TargetName);
        ORBIT_TRACK_PARAM(Type);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Credential);

        auto win32_impl_result = g_api_table.CredReadW(TargetName, Type, Flags, Credential);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredReadA(win32::Windows::Win32::Foundation::PSTR TargetName, uint32_t Type, uint32_t Flags, win32::Windows::Win32::Security::Credentials::CREDENTIALA** Credential) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TargetName);
        ORBIT_TRACK_PARAM(Type);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Credential);

        auto win32_impl_result = g_api_table.CredReadA(TargetName, Type, Flags, Credential);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredEnumerateW(win32::Windows::Win32::Foundation::PWSTR Filter, win32::Windows::Win32::Security::Credentials::CRED_ENUMERATE_FLAGS Flags, uint32_t* Count, win32::Windows::Win32::Security::Credentials::CREDENTIALW*** Credential) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Filter);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Count);
        ORBIT_TRACK_PARAM(Credential);

        auto win32_impl_result = g_api_table.CredEnumerateW(Filter, Flags, Count, Credential);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredEnumerateA(win32::Windows::Win32::Foundation::PSTR Filter, win32::Windows::Win32::Security::Credentials::CRED_ENUMERATE_FLAGS Flags, uint32_t* Count, win32::Windows::Win32::Security::Credentials::CREDENTIALA*** Credential) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Filter);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Count);
        ORBIT_TRACK_PARAM(Credential);

        auto win32_impl_result = g_api_table.CredEnumerateA(Filter, Flags, Count, Credential);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredWriteDomainCredentialsW(win32::Windows::Win32::Security::Credentials::CREDENTIAL_TARGET_INFORMATIONW* TargetInfo, win32::Windows::Win32::Security::Credentials::CREDENTIALW* Credential, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TargetInfo);
        ORBIT_TRACK_PARAM(Credential);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.CredWriteDomainCredentialsW(TargetInfo, Credential, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredWriteDomainCredentialsA(win32::Windows::Win32::Security::Credentials::CREDENTIAL_TARGET_INFORMATIONA* TargetInfo, win32::Windows::Win32::Security::Credentials::CREDENTIALA* Credential, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TargetInfo);
        ORBIT_TRACK_PARAM(Credential);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.CredWriteDomainCredentialsA(TargetInfo, Credential, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredReadDomainCredentialsW(win32::Windows::Win32::Security::Credentials::CREDENTIAL_TARGET_INFORMATIONW* TargetInfo, uint32_t Flags, uint32_t* Count, win32::Windows::Win32::Security::Credentials::CREDENTIALW*** Credential) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TargetInfo);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Count);
        ORBIT_TRACK_PARAM(Credential);

        auto win32_impl_result = g_api_table.CredReadDomainCredentialsW(TargetInfo, Flags, Count, Credential);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredReadDomainCredentialsA(win32::Windows::Win32::Security::Credentials::CREDENTIAL_TARGET_INFORMATIONA* TargetInfo, uint32_t Flags, uint32_t* Count, win32::Windows::Win32::Security::Credentials::CREDENTIALA*** Credential) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TargetInfo);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Count);
        ORBIT_TRACK_PARAM(Credential);

        auto win32_impl_result = g_api_table.CredReadDomainCredentialsA(TargetInfo, Flags, Count, Credential);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredDeleteW(win32::Windows::Win32::Foundation::PWSTR TargetName, uint32_t Type, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TargetName);
        ORBIT_TRACK_PARAM(Type);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.CredDeleteW(TargetName, Type, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredDeleteA(win32::Windows::Win32::Foundation::PSTR TargetName, uint32_t Type, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TargetName);
        ORBIT_TRACK_PARAM(Type);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.CredDeleteA(TargetName, Type, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredRenameW(win32::Windows::Win32::Foundation::PWSTR OldTargetName, win32::Windows::Win32::Foundation::PWSTR NewTargetName, uint32_t Type, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(OldTargetName);
        ORBIT_TRACK_PARAM(NewTargetName);
        ORBIT_TRACK_PARAM(Type);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.CredRenameW(OldTargetName, NewTargetName, Type, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredRenameA(win32::Windows::Win32::Foundation::PSTR OldTargetName, win32::Windows::Win32::Foundation::PSTR NewTargetName, uint32_t Type, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(OldTargetName);
        ORBIT_TRACK_PARAM(NewTargetName);
        ORBIT_TRACK_PARAM(Type);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.CredRenameA(OldTargetName, NewTargetName, Type, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredGetTargetInfoW(win32::Windows::Win32::Foundation::PWSTR TargetName, uint32_t Flags, win32::Windows::Win32::Security::Credentials::CREDENTIAL_TARGET_INFORMATIONW** TargetInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TargetName);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(TargetInfo);

        auto win32_impl_result = g_api_table.CredGetTargetInfoW(TargetName, Flags, TargetInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredGetTargetInfoA(win32::Windows::Win32::Foundation::PSTR TargetName, uint32_t Flags, win32::Windows::Win32::Security::Credentials::CREDENTIAL_TARGET_INFORMATIONA** TargetInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TargetName);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(TargetInfo);

        auto win32_impl_result = g_api_table.CredGetTargetInfoA(TargetName, Flags, TargetInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredMarshalCredentialW(win32::Windows::Win32::Security::Credentials::CRED_MARSHAL_TYPE CredType, void* Credential, win32::Windows::Win32::Foundation::PWSTR* MarshaledCredential) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CredType);
        ORBIT_TRACK_PARAM(Credential);
        ORBIT_TRACK_PARAM(MarshaledCredential);

        auto win32_impl_result = g_api_table.CredMarshalCredentialW(CredType, Credential, MarshaledCredential);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredMarshalCredentialA(win32::Windows::Win32::Security::Credentials::CRED_MARSHAL_TYPE CredType, void* Credential, win32::Windows::Win32::Foundation::PSTR* MarshaledCredential) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CredType);
        ORBIT_TRACK_PARAM(Credential);
        ORBIT_TRACK_PARAM(MarshaledCredential);

        auto win32_impl_result = g_api_table.CredMarshalCredentialA(CredType, Credential, MarshaledCredential);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredUnmarshalCredentialW(win32::Windows::Win32::Foundation::PWSTR MarshaledCredential, win32::Windows::Win32::Security::Credentials::CRED_MARSHAL_TYPE* CredType, void** Credential) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(MarshaledCredential);
        ORBIT_TRACK_PARAM(CredType);
        ORBIT_TRACK_PARAM(Credential);

        auto win32_impl_result = g_api_table.CredUnmarshalCredentialW(MarshaledCredential, CredType, Credential);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredUnmarshalCredentialA(win32::Windows::Win32::Foundation::PSTR MarshaledCredential, win32::Windows::Win32::Security::Credentials::CRED_MARSHAL_TYPE* CredType, void** Credential) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(MarshaledCredential);
        ORBIT_TRACK_PARAM(CredType);
        ORBIT_TRACK_PARAM(Credential);

        auto win32_impl_result = g_api_table.CredUnmarshalCredentialA(MarshaledCredential, CredType, Credential);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredIsMarshaledCredentialW(win32::Windows::Win32::Foundation::PWSTR MarshaledCredential) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(MarshaledCredential);

        auto win32_impl_result = g_api_table.CredIsMarshaledCredentialW(MarshaledCredential);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredIsMarshaledCredentialA(win32::Windows::Win32::Foundation::PSTR MarshaledCredential) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(MarshaledCredential);

        auto win32_impl_result = g_api_table.CredIsMarshaledCredentialA(MarshaledCredential);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredUnPackAuthenticationBufferW(win32::Windows::Win32::Security::Credentials::CRED_PACK_FLAGS dwFlags, void* pAuthBuffer, uint32_t cbAuthBuffer, win32::Windows::Win32::Foundation::PWSTR pszUserName, uint32_t* pcchMaxUserName, win32::Windows::Win32::Foundation::PWSTR pszDomainName, uint32_t* pcchMaxDomainName, win32::Windows::Win32::Foundation::PWSTR pszPassword, uint32_t* pcchMaxPassword) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(pAuthBuffer);
        ORBIT_TRACK_PARAM(cbAuthBuffer);
        ORBIT_TRACK_PARAM(pszUserName);
        ORBIT_TRACK_PARAM(pcchMaxUserName);
        ORBIT_TRACK_PARAM(pszDomainName);
        ORBIT_TRACK_PARAM(pcchMaxDomainName);
        ORBIT_TRACK_PARAM(pszPassword);
        ORBIT_TRACK_PARAM(pcchMaxPassword);

        auto win32_impl_result = g_api_table.CredUnPackAuthenticationBufferW(dwFlags, pAuthBuffer, cbAuthBuffer, pszUserName, pcchMaxUserName, pszDomainName, pcchMaxDomainName, pszPassword, pcchMaxPassword);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredUnPackAuthenticationBufferA(win32::Windows::Win32::Security::Credentials::CRED_PACK_FLAGS dwFlags, void* pAuthBuffer, uint32_t cbAuthBuffer, win32::Windows::Win32::Foundation::PSTR pszUserName, uint32_t* pcchlMaxUserName, win32::Windows::Win32::Foundation::PSTR pszDomainName, uint32_t* pcchMaxDomainName, win32::Windows::Win32::Foundation::PSTR pszPassword, uint32_t* pcchMaxPassword) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(pAuthBuffer);
        ORBIT_TRACK_PARAM(cbAuthBuffer);
        ORBIT_TRACK_PARAM(pszUserName);
        ORBIT_TRACK_PARAM(pcchlMaxUserName);
        ORBIT_TRACK_PARAM(pszDomainName);
        ORBIT_TRACK_PARAM(pcchMaxDomainName);
        ORBIT_TRACK_PARAM(pszPassword);
        ORBIT_TRACK_PARAM(pcchMaxPassword);

        auto win32_impl_result = g_api_table.CredUnPackAuthenticationBufferA(dwFlags, pAuthBuffer, cbAuthBuffer, pszUserName, pcchlMaxUserName, pszDomainName, pcchMaxDomainName, pszPassword, pcchMaxPassword);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredPackAuthenticationBufferW(win32::Windows::Win32::Security::Credentials::CRED_PACK_FLAGS dwFlags, win32::Windows::Win32::Foundation::PWSTR pszUserName, win32::Windows::Win32::Foundation::PWSTR pszPassword, uint8_t* pPackedCredentials, uint32_t* pcbPackedCredentials) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(pszUserName);
        ORBIT_TRACK_PARAM(pszPassword);
        ORBIT_TRACK_PARAM(pPackedCredentials);
        ORBIT_TRACK_PARAM(pcbPackedCredentials);

        auto win32_impl_result = g_api_table.CredPackAuthenticationBufferW(dwFlags, pszUserName, pszPassword, pPackedCredentials, pcbPackedCredentials);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredPackAuthenticationBufferA(win32::Windows::Win32::Security::Credentials::CRED_PACK_FLAGS dwFlags, win32::Windows::Win32::Foundation::PSTR pszUserName, win32::Windows::Win32::Foundation::PSTR pszPassword, uint8_t* pPackedCredentials, uint32_t* pcbPackedCredentials) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(pszUserName);
        ORBIT_TRACK_PARAM(pszPassword);
        ORBIT_TRACK_PARAM(pPackedCredentials);
        ORBIT_TRACK_PARAM(pcbPackedCredentials);

        auto win32_impl_result = g_api_table.CredPackAuthenticationBufferA(dwFlags, pszUserName, pszPassword, pPackedCredentials, pcbPackedCredentials);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredProtectW(win32::Windows::Win32::Foundation::BOOL fAsSelf, win32::Windows::Win32::Foundation::PWSTR pszCredentials, uint32_t cchCredentials, win32::Windows::Win32::Foundation::PWSTR pszProtectedCredentials, uint32_t* pcchMaxChars, win32::Windows::Win32::Security::Credentials::CRED_PROTECTION_TYPE* ProtectionType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(fAsSelf);
        ORBIT_TRACK_PARAM(pszCredentials);
        ORBIT_TRACK_PARAM(cchCredentials);
        ORBIT_TRACK_PARAM(pszProtectedCredentials);
        ORBIT_TRACK_PARAM(pcchMaxChars);
        ORBIT_TRACK_PARAM(ProtectionType);

        auto win32_impl_result = g_api_table.CredProtectW(fAsSelf, pszCredentials, cchCredentials, pszProtectedCredentials, pcchMaxChars, ProtectionType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredProtectA(win32::Windows::Win32::Foundation::BOOL fAsSelf, win32::Windows::Win32::Foundation::PSTR pszCredentials, uint32_t cchCredentials, win32::Windows::Win32::Foundation::PSTR pszProtectedCredentials, uint32_t* pcchMaxChars, win32::Windows::Win32::Security::Credentials::CRED_PROTECTION_TYPE* ProtectionType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(fAsSelf);
        ORBIT_TRACK_PARAM(pszCredentials);
        ORBIT_TRACK_PARAM(cchCredentials);
        ORBIT_TRACK_PARAM(pszProtectedCredentials);
        ORBIT_TRACK_PARAM(pcchMaxChars);
        ORBIT_TRACK_PARAM(ProtectionType);

        auto win32_impl_result = g_api_table.CredProtectA(fAsSelf, pszCredentials, cchCredentials, pszProtectedCredentials, pcchMaxChars, ProtectionType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredUnprotectW(win32::Windows::Win32::Foundation::BOOL fAsSelf, win32::Windows::Win32::Foundation::PWSTR pszProtectedCredentials, uint32_t cchProtectedCredentials, win32::Windows::Win32::Foundation::PWSTR pszCredentials, uint32_t* pcchMaxChars) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(fAsSelf);
        ORBIT_TRACK_PARAM(pszProtectedCredentials);
        ORBIT_TRACK_PARAM(cchProtectedCredentials);
        ORBIT_TRACK_PARAM(pszCredentials);
        ORBIT_TRACK_PARAM(pcchMaxChars);

        auto win32_impl_result = g_api_table.CredUnprotectW(fAsSelf, pszProtectedCredentials, cchProtectedCredentials, pszCredentials, pcchMaxChars);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredUnprotectA(win32::Windows::Win32::Foundation::BOOL fAsSelf, win32::Windows::Win32::Foundation::PSTR pszProtectedCredentials, uint32_t cchProtectedCredentials, win32::Windows::Win32::Foundation::PSTR pszCredentials, uint32_t* pcchMaxChars) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(fAsSelf);
        ORBIT_TRACK_PARAM(pszProtectedCredentials);
        ORBIT_TRACK_PARAM(cchProtectedCredentials);
        ORBIT_TRACK_PARAM(pszCredentials);
        ORBIT_TRACK_PARAM(pcchMaxChars);

        auto win32_impl_result = g_api_table.CredUnprotectA(fAsSelf, pszProtectedCredentials, cchProtectedCredentials, pszCredentials, pcchMaxChars);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredIsProtectedW(win32::Windows::Win32::Foundation::PWSTR pszProtectedCredentials, win32::Windows::Win32::Security::Credentials::CRED_PROTECTION_TYPE* pProtectionType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszProtectedCredentials);
        ORBIT_TRACK_PARAM(pProtectionType);

        auto win32_impl_result = g_api_table.CredIsProtectedW(pszProtectedCredentials, pProtectionType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredIsProtectedA(win32::Windows::Win32::Foundation::PSTR pszProtectedCredentials, win32::Windows::Win32::Security::Credentials::CRED_PROTECTION_TYPE* pProtectionType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszProtectedCredentials);
        ORBIT_TRACK_PARAM(pProtectionType);

        auto win32_impl_result = g_api_table.CredIsProtectedA(pszProtectedCredentials, pProtectionType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredFindBestCredentialW(win32::Windows::Win32::Foundation::PWSTR TargetName, uint32_t Type, uint32_t Flags, win32::Windows::Win32::Security::Credentials::CREDENTIALW** Credential) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TargetName);
        ORBIT_TRACK_PARAM(Type);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Credential);

        auto win32_impl_result = g_api_table.CredFindBestCredentialW(TargetName, Type, Flags, Credential);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredFindBestCredentialA(win32::Windows::Win32::Foundation::PSTR TargetName, uint32_t Type, uint32_t Flags, win32::Windows::Win32::Security::Credentials::CREDENTIALA** Credential) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TargetName);
        ORBIT_TRACK_PARAM(Type);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Credential);

        auto win32_impl_result = g_api_table.CredFindBestCredentialA(TargetName, Type, Flags, Credential);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CredGetSessionTypes(uint32_t MaximumPersistCount, uint32_t* MaximumPersist) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(MaximumPersistCount);
        ORBIT_TRACK_PARAM(MaximumPersist);

        auto win32_impl_result = g_api_table.CredGetSessionTypes(MaximumPersistCount, MaximumPersist);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_CredFree(void* Buffer) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Buffer);

        g_api_table.CredFree(Buffer);
        
    }

    uint32_t __stdcall ORBIT_IMPL_CredUIPromptForCredentialsW(win32::Windows::Win32::Security::Credentials::CREDUI_INFOW* pUiInfo, win32::Windows::Win32::Foundation::PWSTR pszTargetName, win32::Windows::Win32::Security::Credentials::SecHandle* pContext, uint32_t dwAuthError, win32::Windows::Win32::Foundation::PWSTR pszUserName, uint32_t ulUserNameBufferSize, win32::Windows::Win32::Foundation::PWSTR pszPassword, uint32_t ulPasswordBufferSize, win32::Windows::Win32::Foundation::BOOL* save, win32::Windows::Win32::Security::Credentials::CREDUI_FLAGS dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pUiInfo);
        ORBIT_TRACK_PARAM(pszTargetName);
        ORBIT_TRACK_PARAM(pContext);
        ORBIT_TRACK_PARAM(dwAuthError);
        ORBIT_TRACK_PARAM(pszUserName);
        ORBIT_TRACK_PARAM(ulUserNameBufferSize);
        ORBIT_TRACK_PARAM(pszPassword);
        ORBIT_TRACK_PARAM(ulPasswordBufferSize);
        ORBIT_TRACK_PARAM(save);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.CredUIPromptForCredentialsW(pUiInfo, pszTargetName, pContext, dwAuthError, pszUserName, ulUserNameBufferSize, pszPassword, ulPasswordBufferSize, save, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_CredUIPromptForCredentialsA(win32::Windows::Win32::Security::Credentials::CREDUI_INFOA* pUiInfo, win32::Windows::Win32::Foundation::PSTR pszTargetName, win32::Windows::Win32::Security::Credentials::SecHandle* pContext, uint32_t dwAuthError, win32::Windows::Win32::Foundation::PSTR pszUserName, uint32_t ulUserNameBufferSize, win32::Windows::Win32::Foundation::PSTR pszPassword, uint32_t ulPasswordBufferSize, win32::Windows::Win32::Foundation::BOOL* save, win32::Windows::Win32::Security::Credentials::CREDUI_FLAGS dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pUiInfo);
        ORBIT_TRACK_PARAM(pszTargetName);
        ORBIT_TRACK_PARAM(pContext);
        ORBIT_TRACK_PARAM(dwAuthError);
        ORBIT_TRACK_PARAM(pszUserName);
        ORBIT_TRACK_PARAM(ulUserNameBufferSize);
        ORBIT_TRACK_PARAM(pszPassword);
        ORBIT_TRACK_PARAM(ulPasswordBufferSize);
        ORBIT_TRACK_PARAM(save);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.CredUIPromptForCredentialsA(pUiInfo, pszTargetName, pContext, dwAuthError, pszUserName, ulUserNameBufferSize, pszPassword, ulPasswordBufferSize, save, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_CredUIPromptForWindowsCredentialsW(win32::Windows::Win32::Security::Credentials::CREDUI_INFOW* pUiInfo, uint32_t dwAuthError, uint32_t* pulAuthPackage, void* pvInAuthBuffer, uint32_t ulInAuthBufferSize, void** ppvOutAuthBuffer, uint32_t* pulOutAuthBufferSize, win32::Windows::Win32::Foundation::BOOL* pfSave, win32::Windows::Win32::Security::Credentials::CREDUIWIN_FLAGS dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pUiInfo);
        ORBIT_TRACK_PARAM(dwAuthError);
        ORBIT_TRACK_PARAM(pulAuthPackage);
        ORBIT_TRACK_PARAM(pvInAuthBuffer);
        ORBIT_TRACK_PARAM(ulInAuthBufferSize);
        ORBIT_TRACK_PARAM(ppvOutAuthBuffer);
        ORBIT_TRACK_PARAM(pulOutAuthBufferSize);
        ORBIT_TRACK_PARAM(pfSave);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.CredUIPromptForWindowsCredentialsW(pUiInfo, dwAuthError, pulAuthPackage, pvInAuthBuffer, ulInAuthBufferSize, ppvOutAuthBuffer, pulOutAuthBufferSize, pfSave, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_CredUIPromptForWindowsCredentialsA(win32::Windows::Win32::Security::Credentials::CREDUI_INFOA* pUiInfo, uint32_t dwAuthError, uint32_t* pulAuthPackage, void* pvInAuthBuffer, uint32_t ulInAuthBufferSize, void** ppvOutAuthBuffer, uint32_t* pulOutAuthBufferSize, win32::Windows::Win32::Foundation::BOOL* pfSave, win32::Windows::Win32::Security::Credentials::CREDUIWIN_FLAGS dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pUiInfo);
        ORBIT_TRACK_PARAM(dwAuthError);
        ORBIT_TRACK_PARAM(pulAuthPackage);
        ORBIT_TRACK_PARAM(pvInAuthBuffer);
        ORBIT_TRACK_PARAM(ulInAuthBufferSize);
        ORBIT_TRACK_PARAM(ppvOutAuthBuffer);
        ORBIT_TRACK_PARAM(pulOutAuthBufferSize);
        ORBIT_TRACK_PARAM(pfSave);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.CredUIPromptForWindowsCredentialsA(pUiInfo, dwAuthError, pulAuthPackage, pvInAuthBuffer, ulInAuthBufferSize, ppvOutAuthBuffer, pulOutAuthBufferSize, pfSave, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_CredUIParseUserNameW(win32::Windows::Win32::Foundation::PWSTR UserName, win32::Windows::Win32::Foundation::PWSTR user, uint32_t userBufferSize, win32::Windows::Win32::Foundation::PWSTR domain, uint32_t domainBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(UserName);
        ORBIT_TRACK_PARAM(user);
        ORBIT_TRACK_PARAM(userBufferSize);
        ORBIT_TRACK_PARAM(domain);
        ORBIT_TRACK_PARAM(domainBufferSize);

        auto win32_impl_result = g_api_table.CredUIParseUserNameW(UserName, user, userBufferSize, domain, domainBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_CredUIParseUserNameA(win32::Windows::Win32::Foundation::PSTR userName, win32::Windows::Win32::Foundation::PSTR user, uint32_t userBufferSize, win32::Windows::Win32::Foundation::PSTR domain, uint32_t domainBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(userName);
        ORBIT_TRACK_PARAM(user);
        ORBIT_TRACK_PARAM(userBufferSize);
        ORBIT_TRACK_PARAM(domain);
        ORBIT_TRACK_PARAM(domainBufferSize);

        auto win32_impl_result = g_api_table.CredUIParseUserNameA(userName, user, userBufferSize, domain, domainBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_CredUICmdLinePromptForCredentialsW(win32::Windows::Win32::Foundation::PWSTR pszTargetName, win32::Windows::Win32::Security::Credentials::SecHandle* pContext, uint32_t dwAuthError, win32::Windows::Win32::Foundation::PWSTR UserName, uint32_t ulUserBufferSize, win32::Windows::Win32::Foundation::PWSTR pszPassword, uint32_t ulPasswordBufferSize, win32::Windows::Win32::Foundation::BOOL* pfSave, win32::Windows::Win32::Security::Credentials::CREDUI_FLAGS dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszTargetName);
        ORBIT_TRACK_PARAM(pContext);
        ORBIT_TRACK_PARAM(dwAuthError);
        ORBIT_TRACK_PARAM(UserName);
        ORBIT_TRACK_PARAM(ulUserBufferSize);
        ORBIT_TRACK_PARAM(pszPassword);
        ORBIT_TRACK_PARAM(ulPasswordBufferSize);
        ORBIT_TRACK_PARAM(pfSave);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.CredUICmdLinePromptForCredentialsW(pszTargetName, pContext, dwAuthError, UserName, ulUserBufferSize, pszPassword, ulPasswordBufferSize, pfSave, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_CredUICmdLinePromptForCredentialsA(win32::Windows::Win32::Foundation::PSTR pszTargetName, win32::Windows::Win32::Security::Credentials::SecHandle* pContext, uint32_t dwAuthError, win32::Windows::Win32::Foundation::PSTR UserName, uint32_t ulUserBufferSize, win32::Windows::Win32::Foundation::PSTR pszPassword, uint32_t ulPasswordBufferSize, win32::Windows::Win32::Foundation::BOOL* pfSave, win32::Windows::Win32::Security::Credentials::CREDUI_FLAGS dwFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszTargetName);
        ORBIT_TRACK_PARAM(pContext);
        ORBIT_TRACK_PARAM(dwAuthError);
        ORBIT_TRACK_PARAM(UserName);
        ORBIT_TRACK_PARAM(ulUserBufferSize);
        ORBIT_TRACK_PARAM(pszPassword);
        ORBIT_TRACK_PARAM(ulPasswordBufferSize);
        ORBIT_TRACK_PARAM(pfSave);
        ORBIT_TRACK_PARAM(dwFlags);

        auto win32_impl_result = g_api_table.CredUICmdLinePromptForCredentialsA(pszTargetName, pContext, dwAuthError, UserName, ulUserBufferSize, pszPassword, ulPasswordBufferSize, pfSave, dwFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_CredUIConfirmCredentialsW(win32::Windows::Win32::Foundation::PWSTR pszTargetName, win32::Windows::Win32::Foundation::BOOL bConfirm) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszTargetName);
        ORBIT_TRACK_PARAM(bConfirm);

        auto win32_impl_result = g_api_table.CredUIConfirmCredentialsW(pszTargetName, bConfirm);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_CredUIConfirmCredentialsA(win32::Windows::Win32::Foundation::PSTR pszTargetName, win32::Windows::Win32::Foundation::BOOL bConfirm) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszTargetName);
        ORBIT_TRACK_PARAM(bConfirm);

        auto win32_impl_result = g_api_table.CredUIConfirmCredentialsA(pszTargetName, bConfirm);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_CredUIStoreSSOCredW(win32::Windows::Win32::Foundation::PWSTR pszRealm, win32::Windows::Win32::Foundation::PWSTR pszUsername, win32::Windows::Win32::Foundation::PWSTR pszPassword, win32::Windows::Win32::Foundation::BOOL bPersist) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszRealm);
        ORBIT_TRACK_PARAM(pszUsername);
        ORBIT_TRACK_PARAM(pszPassword);
        ORBIT_TRACK_PARAM(bPersist);

        auto win32_impl_result = g_api_table.CredUIStoreSSOCredW(pszRealm, pszUsername, pszPassword, bPersist);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_CredUIReadSSOCredW(win32::Windows::Win32::Foundation::PWSTR pszRealm, win32::Windows::Win32::Foundation::PWSTR* ppszUsername) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszRealm);
        ORBIT_TRACK_PARAM(ppszUsername);

        auto win32_impl_result = g_api_table.CredUIReadSSOCredW(pszRealm, ppszUsername);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardEstablishContext(win32::Windows::Win32::Security::Credentials::SCARD_SCOPE dwScope, void* pvReserved1, void* pvReserved2, size_t* phContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwScope);
        ORBIT_TRACK_PARAM(pvReserved1);
        ORBIT_TRACK_PARAM(pvReserved2);
        ORBIT_TRACK_PARAM(phContext);

        auto win32_impl_result = g_api_table.SCardEstablishContext(dwScope, pvReserved1, pvReserved2, phContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardReleaseContext(size_t hContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);

        auto win32_impl_result = g_api_table.SCardReleaseContext(hContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardIsValidContext(size_t hContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);

        auto win32_impl_result = g_api_table.SCardIsValidContext(hContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardListReaderGroupsA(size_t hContext, win32::Windows::Win32::Foundation::PSTR mszGroups, uint32_t* pcchGroups) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(mszGroups);
        ORBIT_TRACK_PARAM(pcchGroups);

        auto win32_impl_result = g_api_table.SCardListReaderGroupsA(hContext, mszGroups, pcchGroups);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardListReaderGroupsW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR mszGroups, uint32_t* pcchGroups) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(mszGroups);
        ORBIT_TRACK_PARAM(pcchGroups);

        auto win32_impl_result = g_api_table.SCardListReaderGroupsW(hContext, mszGroups, pcchGroups);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardListReadersA(size_t hContext, win32::Windows::Win32::Foundation::PSTR mszGroups, win32::Windows::Win32::Foundation::PSTR mszReaders, uint32_t* pcchReaders) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(mszGroups);
        ORBIT_TRACK_PARAM(mszReaders);
        ORBIT_TRACK_PARAM(pcchReaders);

        auto win32_impl_result = g_api_table.SCardListReadersA(hContext, mszGroups, mszReaders, pcchReaders);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardListReadersW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR mszGroups, win32::Windows::Win32::Foundation::PWSTR mszReaders, uint32_t* pcchReaders) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(mszGroups);
        ORBIT_TRACK_PARAM(mszReaders);
        ORBIT_TRACK_PARAM(pcchReaders);

        auto win32_impl_result = g_api_table.SCardListReadersW(hContext, mszGroups, mszReaders, pcchReaders);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardListCardsA(size_t hContext, uint8_t* pbAtr, ::win32::guid* rgquidInterfaces, uint32_t cguidInterfaceCount, win32::Windows::Win32::Foundation::PSTR mszCards, uint32_t* pcchCards) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(pbAtr);
        ORBIT_TRACK_PARAM(rgquidInterfaces);
        ORBIT_TRACK_PARAM(cguidInterfaceCount);
        ORBIT_TRACK_PARAM(mszCards);
        ORBIT_TRACK_PARAM(pcchCards);

        auto win32_impl_result = g_api_table.SCardListCardsA(hContext, pbAtr, rgquidInterfaces, cguidInterfaceCount, mszCards, pcchCards);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardListCardsW(size_t hContext, uint8_t* pbAtr, ::win32::guid* rgquidInterfaces, uint32_t cguidInterfaceCount, win32::Windows::Win32::Foundation::PWSTR mszCards, uint32_t* pcchCards) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(pbAtr);
        ORBIT_TRACK_PARAM(rgquidInterfaces);
        ORBIT_TRACK_PARAM(cguidInterfaceCount);
        ORBIT_TRACK_PARAM(mszCards);
        ORBIT_TRACK_PARAM(pcchCards);

        auto win32_impl_result = g_api_table.SCardListCardsW(hContext, pbAtr, rgquidInterfaces, cguidInterfaceCount, mszCards, pcchCards);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardListInterfacesA(size_t hContext, win32::Windows::Win32::Foundation::PSTR szCard, ::win32::guid* pguidInterfaces, uint32_t* pcguidInterfaces) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szCard);
        ORBIT_TRACK_PARAM(pguidInterfaces);
        ORBIT_TRACK_PARAM(pcguidInterfaces);

        auto win32_impl_result = g_api_table.SCardListInterfacesA(hContext, szCard, pguidInterfaces, pcguidInterfaces);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardListInterfacesW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR szCard, ::win32::guid* pguidInterfaces, uint32_t* pcguidInterfaces) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szCard);
        ORBIT_TRACK_PARAM(pguidInterfaces);
        ORBIT_TRACK_PARAM(pcguidInterfaces);

        auto win32_impl_result = g_api_table.SCardListInterfacesW(hContext, szCard, pguidInterfaces, pcguidInterfaces);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardGetProviderIdA(size_t hContext, win32::Windows::Win32::Foundation::PSTR szCard, ::win32::guid* pguidProviderId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szCard);
        ORBIT_TRACK_PARAM(pguidProviderId);

        auto win32_impl_result = g_api_table.SCardGetProviderIdA(hContext, szCard, pguidProviderId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardGetProviderIdW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR szCard, ::win32::guid* pguidProviderId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szCard);
        ORBIT_TRACK_PARAM(pguidProviderId);

        auto win32_impl_result = g_api_table.SCardGetProviderIdW(hContext, szCard, pguidProviderId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardGetCardTypeProviderNameA(size_t hContext, win32::Windows::Win32::Foundation::PSTR szCardName, uint32_t dwProviderId, win32::Windows::Win32::Foundation::PSTR szProvider, uint32_t* pcchProvider) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szCardName);
        ORBIT_TRACK_PARAM(dwProviderId);
        ORBIT_TRACK_PARAM(szProvider);
        ORBIT_TRACK_PARAM(pcchProvider);

        auto win32_impl_result = g_api_table.SCardGetCardTypeProviderNameA(hContext, szCardName, dwProviderId, szProvider, pcchProvider);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardGetCardTypeProviderNameW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR szCardName, uint32_t dwProviderId, win32::Windows::Win32::Foundation::PWSTR szProvider, uint32_t* pcchProvider) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szCardName);
        ORBIT_TRACK_PARAM(dwProviderId);
        ORBIT_TRACK_PARAM(szProvider);
        ORBIT_TRACK_PARAM(pcchProvider);

        auto win32_impl_result = g_api_table.SCardGetCardTypeProviderNameW(hContext, szCardName, dwProviderId, szProvider, pcchProvider);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardIntroduceReaderGroupA(size_t hContext, win32::Windows::Win32::Foundation::PSTR szGroupName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szGroupName);

        auto win32_impl_result = g_api_table.SCardIntroduceReaderGroupA(hContext, szGroupName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardIntroduceReaderGroupW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR szGroupName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szGroupName);

        auto win32_impl_result = g_api_table.SCardIntroduceReaderGroupW(hContext, szGroupName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardForgetReaderGroupA(size_t hContext, win32::Windows::Win32::Foundation::PSTR szGroupName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szGroupName);

        auto win32_impl_result = g_api_table.SCardForgetReaderGroupA(hContext, szGroupName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardForgetReaderGroupW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR szGroupName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szGroupName);

        auto win32_impl_result = g_api_table.SCardForgetReaderGroupW(hContext, szGroupName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardIntroduceReaderA(size_t hContext, win32::Windows::Win32::Foundation::PSTR szReaderName, win32::Windows::Win32::Foundation::PSTR szDeviceName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szReaderName);
        ORBIT_TRACK_PARAM(szDeviceName);

        auto win32_impl_result = g_api_table.SCardIntroduceReaderA(hContext, szReaderName, szDeviceName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardIntroduceReaderW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR szReaderName, win32::Windows::Win32::Foundation::PWSTR szDeviceName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szReaderName);
        ORBIT_TRACK_PARAM(szDeviceName);

        auto win32_impl_result = g_api_table.SCardIntroduceReaderW(hContext, szReaderName, szDeviceName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardForgetReaderA(size_t hContext, win32::Windows::Win32::Foundation::PSTR szReaderName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szReaderName);

        auto win32_impl_result = g_api_table.SCardForgetReaderA(hContext, szReaderName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardForgetReaderW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR szReaderName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szReaderName);

        auto win32_impl_result = g_api_table.SCardForgetReaderW(hContext, szReaderName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardAddReaderToGroupA(size_t hContext, win32::Windows::Win32::Foundation::PSTR szReaderName, win32::Windows::Win32::Foundation::PSTR szGroupName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szReaderName);
        ORBIT_TRACK_PARAM(szGroupName);

        auto win32_impl_result = g_api_table.SCardAddReaderToGroupA(hContext, szReaderName, szGroupName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardAddReaderToGroupW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR szReaderName, win32::Windows::Win32::Foundation::PWSTR szGroupName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szReaderName);
        ORBIT_TRACK_PARAM(szGroupName);

        auto win32_impl_result = g_api_table.SCardAddReaderToGroupW(hContext, szReaderName, szGroupName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardRemoveReaderFromGroupA(size_t hContext, win32::Windows::Win32::Foundation::PSTR szReaderName, win32::Windows::Win32::Foundation::PSTR szGroupName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szReaderName);
        ORBIT_TRACK_PARAM(szGroupName);

        auto win32_impl_result = g_api_table.SCardRemoveReaderFromGroupA(hContext, szReaderName, szGroupName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardRemoveReaderFromGroupW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR szReaderName, win32::Windows::Win32::Foundation::PWSTR szGroupName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szReaderName);
        ORBIT_TRACK_PARAM(szGroupName);

        auto win32_impl_result = g_api_table.SCardRemoveReaderFromGroupW(hContext, szReaderName, szGroupName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardIntroduceCardTypeA(size_t hContext, win32::Windows::Win32::Foundation::PSTR szCardName, ::win32::guid* pguidPrimaryProvider, ::win32::guid* rgguidInterfaces, uint32_t dwInterfaceCount, uint8_t* pbAtr, uint8_t* pbAtrMask, uint32_t cbAtrLen) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szCardName);
        ORBIT_TRACK_PARAM(pguidPrimaryProvider);
        ORBIT_TRACK_PARAM(rgguidInterfaces);
        ORBIT_TRACK_PARAM(dwInterfaceCount);
        ORBIT_TRACK_PARAM(pbAtr);
        ORBIT_TRACK_PARAM(pbAtrMask);
        ORBIT_TRACK_PARAM(cbAtrLen);

        auto win32_impl_result = g_api_table.SCardIntroduceCardTypeA(hContext, szCardName, pguidPrimaryProvider, rgguidInterfaces, dwInterfaceCount, pbAtr, pbAtrMask, cbAtrLen);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardIntroduceCardTypeW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR szCardName, ::win32::guid* pguidPrimaryProvider, ::win32::guid* rgguidInterfaces, uint32_t dwInterfaceCount, uint8_t* pbAtr, uint8_t* pbAtrMask, uint32_t cbAtrLen) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szCardName);
        ORBIT_TRACK_PARAM(pguidPrimaryProvider);
        ORBIT_TRACK_PARAM(rgguidInterfaces);
        ORBIT_TRACK_PARAM(dwInterfaceCount);
        ORBIT_TRACK_PARAM(pbAtr);
        ORBIT_TRACK_PARAM(pbAtrMask);
        ORBIT_TRACK_PARAM(cbAtrLen);

        auto win32_impl_result = g_api_table.SCardIntroduceCardTypeW(hContext, szCardName, pguidPrimaryProvider, rgguidInterfaces, dwInterfaceCount, pbAtr, pbAtrMask, cbAtrLen);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardSetCardTypeProviderNameA(size_t hContext, win32::Windows::Win32::Foundation::PSTR szCardName, uint32_t dwProviderId, win32::Windows::Win32::Foundation::PSTR szProvider) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szCardName);
        ORBIT_TRACK_PARAM(dwProviderId);
        ORBIT_TRACK_PARAM(szProvider);

        auto win32_impl_result = g_api_table.SCardSetCardTypeProviderNameA(hContext, szCardName, dwProviderId, szProvider);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardSetCardTypeProviderNameW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR szCardName, uint32_t dwProviderId, win32::Windows::Win32::Foundation::PWSTR szProvider) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szCardName);
        ORBIT_TRACK_PARAM(dwProviderId);
        ORBIT_TRACK_PARAM(szProvider);

        auto win32_impl_result = g_api_table.SCardSetCardTypeProviderNameW(hContext, szCardName, dwProviderId, szProvider);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardForgetCardTypeA(size_t hContext, win32::Windows::Win32::Foundation::PSTR szCardName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szCardName);

        auto win32_impl_result = g_api_table.SCardForgetCardTypeA(hContext, szCardName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardForgetCardTypeW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR szCardName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szCardName);

        auto win32_impl_result = g_api_table.SCardForgetCardTypeW(hContext, szCardName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardFreeMemory(size_t hContext, void* pvMem) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(pvMem);

        auto win32_impl_result = g_api_table.SCardFreeMemory(hContext, pvMem);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_SCardAccessStartedEvent() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.SCardAccessStartedEvent();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_SCardReleaseStartedEvent() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        g_api_table.SCardReleaseStartedEvent();
        
    }

    int32_t __stdcall ORBIT_IMPL_SCardLocateCardsA(size_t hContext, win32::Windows::Win32::Foundation::PSTR mszCards, win32::Windows::Win32::Security::Credentials::SCARD_READERSTATEA* rgReaderStates, uint32_t cReaders) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(mszCards);
        ORBIT_TRACK_PARAM(rgReaderStates);
        ORBIT_TRACK_PARAM(cReaders);

        auto win32_impl_result = g_api_table.SCardLocateCardsA(hContext, mszCards, rgReaderStates, cReaders);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardLocateCardsW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR mszCards, win32::Windows::Win32::Security::Credentials::SCARD_READERSTATEW* rgReaderStates, uint32_t cReaders) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(mszCards);
        ORBIT_TRACK_PARAM(rgReaderStates);
        ORBIT_TRACK_PARAM(cReaders);

        auto win32_impl_result = g_api_table.SCardLocateCardsW(hContext, mszCards, rgReaderStates, cReaders);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardLocateCardsByATRA(size_t hContext, win32::Windows::Win32::Security::Credentials::SCARD_ATRMASK* rgAtrMasks, uint32_t cAtrs, win32::Windows::Win32::Security::Credentials::SCARD_READERSTATEA* rgReaderStates, uint32_t cReaders) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(rgAtrMasks);
        ORBIT_TRACK_PARAM(cAtrs);
        ORBIT_TRACK_PARAM(rgReaderStates);
        ORBIT_TRACK_PARAM(cReaders);

        auto win32_impl_result = g_api_table.SCardLocateCardsByATRA(hContext, rgAtrMasks, cAtrs, rgReaderStates, cReaders);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardLocateCardsByATRW(size_t hContext, win32::Windows::Win32::Security::Credentials::SCARD_ATRMASK* rgAtrMasks, uint32_t cAtrs, win32::Windows::Win32::Security::Credentials::SCARD_READERSTATEW* rgReaderStates, uint32_t cReaders) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(rgAtrMasks);
        ORBIT_TRACK_PARAM(cAtrs);
        ORBIT_TRACK_PARAM(rgReaderStates);
        ORBIT_TRACK_PARAM(cReaders);

        auto win32_impl_result = g_api_table.SCardLocateCardsByATRW(hContext, rgAtrMasks, cAtrs, rgReaderStates, cReaders);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardGetStatusChangeA(size_t hContext, uint32_t dwTimeout, win32::Windows::Win32::Security::Credentials::SCARD_READERSTATEA* rgReaderStates, uint32_t cReaders) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(dwTimeout);
        ORBIT_TRACK_PARAM(rgReaderStates);
        ORBIT_TRACK_PARAM(cReaders);

        auto win32_impl_result = g_api_table.SCardGetStatusChangeA(hContext, dwTimeout, rgReaderStates, cReaders);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardGetStatusChangeW(size_t hContext, uint32_t dwTimeout, win32::Windows::Win32::Security::Credentials::SCARD_READERSTATEW* rgReaderStates, uint32_t cReaders) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(dwTimeout);
        ORBIT_TRACK_PARAM(rgReaderStates);
        ORBIT_TRACK_PARAM(cReaders);

        auto win32_impl_result = g_api_table.SCardGetStatusChangeW(hContext, dwTimeout, rgReaderStates, cReaders);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardCancel(size_t hContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);

        auto win32_impl_result = g_api_table.SCardCancel(hContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardConnectA(size_t hContext, win32::Windows::Win32::Foundation::PSTR szReader, uint32_t dwShareMode, uint32_t dwPreferredProtocols, size_t* phCard, uint32_t* pdwActiveProtocol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szReader);
        ORBIT_TRACK_PARAM(dwShareMode);
        ORBIT_TRACK_PARAM(dwPreferredProtocols);
        ORBIT_TRACK_PARAM(phCard);
        ORBIT_TRACK_PARAM(pdwActiveProtocol);

        auto win32_impl_result = g_api_table.SCardConnectA(hContext, szReader, dwShareMode, dwPreferredProtocols, phCard, pdwActiveProtocol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardConnectW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR szReader, uint32_t dwShareMode, uint32_t dwPreferredProtocols, size_t* phCard, uint32_t* pdwActiveProtocol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szReader);
        ORBIT_TRACK_PARAM(dwShareMode);
        ORBIT_TRACK_PARAM(dwPreferredProtocols);
        ORBIT_TRACK_PARAM(phCard);
        ORBIT_TRACK_PARAM(pdwActiveProtocol);

        auto win32_impl_result = g_api_table.SCardConnectW(hContext, szReader, dwShareMode, dwPreferredProtocols, phCard, pdwActiveProtocol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardReconnect(size_t hCard, uint32_t dwShareMode, uint32_t dwPreferredProtocols, uint32_t dwInitialization, uint32_t* pdwActiveProtocol) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCard);
        ORBIT_TRACK_PARAM(dwShareMode);
        ORBIT_TRACK_PARAM(dwPreferredProtocols);
        ORBIT_TRACK_PARAM(dwInitialization);
        ORBIT_TRACK_PARAM(pdwActiveProtocol);

        auto win32_impl_result = g_api_table.SCardReconnect(hCard, dwShareMode, dwPreferredProtocols, dwInitialization, pdwActiveProtocol);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardDisconnect(size_t hCard, uint32_t dwDisposition) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCard);
        ORBIT_TRACK_PARAM(dwDisposition);

        auto win32_impl_result = g_api_table.SCardDisconnect(hCard, dwDisposition);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardBeginTransaction(size_t hCard) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCard);

        auto win32_impl_result = g_api_table.SCardBeginTransaction(hCard);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardEndTransaction(size_t hCard, uint32_t dwDisposition) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCard);
        ORBIT_TRACK_PARAM(dwDisposition);

        auto win32_impl_result = g_api_table.SCardEndTransaction(hCard, dwDisposition);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardState(size_t hCard, uint32_t* pdwState, uint32_t* pdwProtocol, uint8_t* pbAtr, uint32_t* pcbAtrLen) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCard);
        ORBIT_TRACK_PARAM(pdwState);
        ORBIT_TRACK_PARAM(pdwProtocol);
        ORBIT_TRACK_PARAM(pbAtr);
        ORBIT_TRACK_PARAM(pcbAtrLen);

        auto win32_impl_result = g_api_table.SCardState(hCard, pdwState, pdwProtocol, pbAtr, pcbAtrLen);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardStatusA(size_t hCard, win32::Windows::Win32::Foundation::PSTR mszReaderNames, uint32_t* pcchReaderLen, uint32_t* pdwState, uint32_t* pdwProtocol, uint8_t* pbAtr, uint32_t* pcbAtrLen) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCard);
        ORBIT_TRACK_PARAM(mszReaderNames);
        ORBIT_TRACK_PARAM(pcchReaderLen);
        ORBIT_TRACK_PARAM(pdwState);
        ORBIT_TRACK_PARAM(pdwProtocol);
        ORBIT_TRACK_PARAM(pbAtr);
        ORBIT_TRACK_PARAM(pcbAtrLen);

        auto win32_impl_result = g_api_table.SCardStatusA(hCard, mszReaderNames, pcchReaderLen, pdwState, pdwProtocol, pbAtr, pcbAtrLen);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardStatusW(size_t hCard, win32::Windows::Win32::Foundation::PWSTR mszReaderNames, uint32_t* pcchReaderLen, uint32_t* pdwState, uint32_t* pdwProtocol, uint8_t* pbAtr, uint32_t* pcbAtrLen) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCard);
        ORBIT_TRACK_PARAM(mszReaderNames);
        ORBIT_TRACK_PARAM(pcchReaderLen);
        ORBIT_TRACK_PARAM(pdwState);
        ORBIT_TRACK_PARAM(pdwProtocol);
        ORBIT_TRACK_PARAM(pbAtr);
        ORBIT_TRACK_PARAM(pcbAtrLen);

        auto win32_impl_result = g_api_table.SCardStatusW(hCard, mszReaderNames, pcchReaderLen, pdwState, pdwProtocol, pbAtr, pcbAtrLen);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardTransmit(size_t hCard, win32::Windows::Win32::Security::Credentials::SCARD_IO_REQUEST* pioSendPci, uint8_t* pbSendBuffer, uint32_t cbSendLength, win32::Windows::Win32::Security::Credentials::SCARD_IO_REQUEST* pioRecvPci, uint8_t* pbRecvBuffer, uint32_t* pcbRecvLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCard);
        ORBIT_TRACK_PARAM(pioSendPci);
        ORBIT_TRACK_PARAM(pbSendBuffer);
        ORBIT_TRACK_PARAM(cbSendLength);
        ORBIT_TRACK_PARAM(pioRecvPci);
        ORBIT_TRACK_PARAM(pbRecvBuffer);
        ORBIT_TRACK_PARAM(pcbRecvLength);

        auto win32_impl_result = g_api_table.SCardTransmit(hCard, pioSendPci, pbSendBuffer, cbSendLength, pioRecvPci, pbRecvBuffer, pcbRecvLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardGetTransmitCount(size_t hCard, uint32_t* pcTransmitCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCard);
        ORBIT_TRACK_PARAM(pcTransmitCount);

        auto win32_impl_result = g_api_table.SCardGetTransmitCount(hCard, pcTransmitCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardControl(size_t hCard, uint32_t dwControlCode, void* lpInBuffer, uint32_t cbInBufferSize, void* lpOutBuffer, uint32_t cbOutBufferSize, uint32_t* lpBytesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCard);
        ORBIT_TRACK_PARAM(dwControlCode);
        ORBIT_TRACK_PARAM(lpInBuffer);
        ORBIT_TRACK_PARAM(cbInBufferSize);
        ORBIT_TRACK_PARAM(lpOutBuffer);
        ORBIT_TRACK_PARAM(cbOutBufferSize);
        ORBIT_TRACK_PARAM(lpBytesReturned);

        auto win32_impl_result = g_api_table.SCardControl(hCard, dwControlCode, lpInBuffer, cbInBufferSize, lpOutBuffer, cbOutBufferSize, lpBytesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardGetAttrib(size_t hCard, uint32_t dwAttrId, uint8_t* pbAttr, uint32_t* pcbAttrLen) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCard);
        ORBIT_TRACK_PARAM(dwAttrId);
        ORBIT_TRACK_PARAM(pbAttr);
        ORBIT_TRACK_PARAM(pcbAttrLen);

        auto win32_impl_result = g_api_table.SCardGetAttrib(hCard, dwAttrId, pbAttr, pcbAttrLen);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardSetAttrib(size_t hCard, uint32_t dwAttrId, uint8_t* pbAttr, uint32_t cbAttrLen) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hCard);
        ORBIT_TRACK_PARAM(dwAttrId);
        ORBIT_TRACK_PARAM(pbAttr);
        ORBIT_TRACK_PARAM(cbAttrLen);

        auto win32_impl_result = g_api_table.SCardSetAttrib(hCard, dwAttrId, pbAttr, cbAttrLen);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardUIDlgSelectCardA(win32::Windows::Win32::Security::Credentials::OPENCARDNAME_EXA* param0) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);

        auto win32_impl_result = g_api_table.SCardUIDlgSelectCardA(param0);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardUIDlgSelectCardW(win32::Windows::Win32::Security::Credentials::OPENCARDNAME_EXW* param0) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);

        auto win32_impl_result = g_api_table.SCardUIDlgSelectCardW(param0);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetOpenCardNameA(win32::Windows::Win32::Security::Credentials::OPENCARDNAMEA* param0) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);

        auto win32_impl_result = g_api_table.GetOpenCardNameA(param0);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_GetOpenCardNameW(win32::Windows::Win32::Security::Credentials::OPENCARDNAMEW* param0) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);

        auto win32_impl_result = g_api_table.GetOpenCardNameW(param0);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardDlgExtendedError() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.SCardDlgExtendedError();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardReadCacheA(size_t hContext, ::win32::guid* CardIdentifier, uint32_t FreshnessCounter, win32::Windows::Win32::Foundation::PSTR LookupName, uint8_t* Data, uint32_t* DataLen) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(CardIdentifier);
        ORBIT_TRACK_PARAM(FreshnessCounter);
        ORBIT_TRACK_PARAM(LookupName);
        ORBIT_TRACK_PARAM(Data);
        ORBIT_TRACK_PARAM(DataLen);

        auto win32_impl_result = g_api_table.SCardReadCacheA(hContext, CardIdentifier, FreshnessCounter, LookupName, Data, DataLen);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardReadCacheW(size_t hContext, ::win32::guid* CardIdentifier, uint32_t FreshnessCounter, win32::Windows::Win32::Foundation::PWSTR LookupName, uint8_t* Data, uint32_t* DataLen) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(CardIdentifier);
        ORBIT_TRACK_PARAM(FreshnessCounter);
        ORBIT_TRACK_PARAM(LookupName);
        ORBIT_TRACK_PARAM(Data);
        ORBIT_TRACK_PARAM(DataLen);

        auto win32_impl_result = g_api_table.SCardReadCacheW(hContext, CardIdentifier, FreshnessCounter, LookupName, Data, DataLen);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardWriteCacheA(size_t hContext, ::win32::guid* CardIdentifier, uint32_t FreshnessCounter, win32::Windows::Win32::Foundation::PSTR LookupName, uint8_t* Data, uint32_t DataLen) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(CardIdentifier);
        ORBIT_TRACK_PARAM(FreshnessCounter);
        ORBIT_TRACK_PARAM(LookupName);
        ORBIT_TRACK_PARAM(Data);
        ORBIT_TRACK_PARAM(DataLen);

        auto win32_impl_result = g_api_table.SCardWriteCacheA(hContext, CardIdentifier, FreshnessCounter, LookupName, Data, DataLen);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardWriteCacheW(size_t hContext, ::win32::guid* CardIdentifier, uint32_t FreshnessCounter, win32::Windows::Win32::Foundation::PWSTR LookupName, uint8_t* Data, uint32_t DataLen) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(CardIdentifier);
        ORBIT_TRACK_PARAM(FreshnessCounter);
        ORBIT_TRACK_PARAM(LookupName);
        ORBIT_TRACK_PARAM(Data);
        ORBIT_TRACK_PARAM(DataLen);

        auto win32_impl_result = g_api_table.SCardWriteCacheW(hContext, CardIdentifier, FreshnessCounter, LookupName, Data, DataLen);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardGetReaderIconA(size_t hContext, win32::Windows::Win32::Foundation::PSTR szReaderName, uint8_t* pbIcon, uint32_t* pcbIcon) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szReaderName);
        ORBIT_TRACK_PARAM(pbIcon);
        ORBIT_TRACK_PARAM(pcbIcon);

        auto win32_impl_result = g_api_table.SCardGetReaderIconA(hContext, szReaderName, pbIcon, pcbIcon);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardGetReaderIconW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR szReaderName, uint8_t* pbIcon, uint32_t* pcbIcon) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szReaderName);
        ORBIT_TRACK_PARAM(pbIcon);
        ORBIT_TRACK_PARAM(pcbIcon);

        auto win32_impl_result = g_api_table.SCardGetReaderIconW(hContext, szReaderName, pbIcon, pcbIcon);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardGetDeviceTypeIdA(size_t hContext, win32::Windows::Win32::Foundation::PSTR szReaderName, uint32_t* pdwDeviceTypeId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szReaderName);
        ORBIT_TRACK_PARAM(pdwDeviceTypeId);

        auto win32_impl_result = g_api_table.SCardGetDeviceTypeIdA(hContext, szReaderName, pdwDeviceTypeId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardGetDeviceTypeIdW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR szReaderName, uint32_t* pdwDeviceTypeId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szReaderName);
        ORBIT_TRACK_PARAM(pdwDeviceTypeId);

        auto win32_impl_result = g_api_table.SCardGetDeviceTypeIdW(hContext, szReaderName, pdwDeviceTypeId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardGetReaderDeviceInstanceIdA(size_t hContext, win32::Windows::Win32::Foundation::PSTR szReaderName, win32::Windows::Win32::Foundation::PSTR szDeviceInstanceId, uint32_t* pcchDeviceInstanceId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szReaderName);
        ORBIT_TRACK_PARAM(szDeviceInstanceId);
        ORBIT_TRACK_PARAM(pcchDeviceInstanceId);

        auto win32_impl_result = g_api_table.SCardGetReaderDeviceInstanceIdA(hContext, szReaderName, szDeviceInstanceId, pcchDeviceInstanceId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardGetReaderDeviceInstanceIdW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR szReaderName, win32::Windows::Win32::Foundation::PWSTR szDeviceInstanceId, uint32_t* pcchDeviceInstanceId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szReaderName);
        ORBIT_TRACK_PARAM(szDeviceInstanceId);
        ORBIT_TRACK_PARAM(pcchDeviceInstanceId);

        auto win32_impl_result = g_api_table.SCardGetReaderDeviceInstanceIdW(hContext, szReaderName, szDeviceInstanceId, pcchDeviceInstanceId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardListReadersWithDeviceInstanceIdA(size_t hContext, win32::Windows::Win32::Foundation::PSTR szDeviceInstanceId, win32::Windows::Win32::Foundation::PSTR mszReaders, uint32_t* pcchReaders) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szDeviceInstanceId);
        ORBIT_TRACK_PARAM(mszReaders);
        ORBIT_TRACK_PARAM(pcchReaders);

        auto win32_impl_result = g_api_table.SCardListReadersWithDeviceInstanceIdA(hContext, szDeviceInstanceId, mszReaders, pcchReaders);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardListReadersWithDeviceInstanceIdW(size_t hContext, win32::Windows::Win32::Foundation::PWSTR szDeviceInstanceId, win32::Windows::Win32::Foundation::PWSTR mszReaders, uint32_t* pcchReaders) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(szDeviceInstanceId);
        ORBIT_TRACK_PARAM(mszReaders);
        ORBIT_TRACK_PARAM(pcchReaders);

        auto win32_impl_result = g_api_table.SCardListReadersWithDeviceInstanceIdW(hContext, szDeviceInstanceId, mszReaders, pcchReaders);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SCardAudit(size_t hContext, uint32_t dwEvent) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(dwEvent);

        auto win32_impl_result = g_api_table.SCardAudit(hContext, dwEvent);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
