// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_UI_DisplayDevices_2_H
#define WIN32_Windows_Win32_UI_DisplayDevices_2_H
#include "win32/Windows.Win32.UI.DisplayDevices.h"
#include "win32/impl/Windows.Win32.UI.DisplayDevices.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::UI::DisplayDevices
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    void* __stdcall ORBIT_IMPL_BRUSHOBJ_pvAllocRbrush(win32::Windows::Win32::UI::DisplayDevices::BRUSHOBJ* pbo, uint32_t cj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pbo);
        ORBIT_TRACK_PARAM(cj);

        auto win32_impl_result = g_api_table.BRUSHOBJ_pvAllocRbrush(pbo, cj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_BRUSHOBJ_pvGetRbrush(win32::Windows::Win32::UI::DisplayDevices::BRUSHOBJ* pbo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pbo);

        auto win32_impl_result = g_api_table.BRUSHOBJ_pvGetRbrush(pbo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_BRUSHOBJ_ulGetBrushColor(win32::Windows::Win32::UI::DisplayDevices::BRUSHOBJ* pbo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pbo);

        auto win32_impl_result = g_api_table.BRUSHOBJ_ulGetBrushColor(pbo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_BRUSHOBJ_hGetColorTransform(win32::Windows::Win32::UI::DisplayDevices::BRUSHOBJ* pbo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pbo);

        auto win32_impl_result = g_api_table.BRUSHOBJ_hGetColorTransform(pbo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_CLIPOBJ_cEnumStart(win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco, win32::Windows::Win32::Foundation::BOOL bAll, uint32_t iType, uint32_t iDirection, uint32_t cLimit) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pco);
        ORBIT_TRACK_PARAM(bAll);
        ORBIT_TRACK_PARAM(iType);
        ORBIT_TRACK_PARAM(iDirection);
        ORBIT_TRACK_PARAM(cLimit);

        auto win32_impl_result = g_api_table.CLIPOBJ_cEnumStart(pco, bAll, iType, iDirection, cLimit);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CLIPOBJ_bEnum(win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco, uint32_t cj, uint32_t* pul) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pco);
        ORBIT_TRACK_PARAM(cj);
        ORBIT_TRACK_PARAM(pul);

        auto win32_impl_result = g_api_table.CLIPOBJ_bEnum(pco, cj, pul);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::UI::DisplayDevices::PATHOBJ* __stdcall ORBIT_IMPL_CLIPOBJ_ppoGetPath(win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pco);

        auto win32_impl_result = g_api_table.CLIPOBJ_ppoGetPath(pco);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_FONTOBJ_cGetAllGlyphHandles(win32::Windows::Win32::UI::DisplayDevices::FONTOBJ* pfo, uint32_t* phg) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pfo);
        ORBIT_TRACK_PARAM(phg);

        auto win32_impl_result = g_api_table.FONTOBJ_cGetAllGlyphHandles(pfo, phg);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_FONTOBJ_vGetInfo(win32::Windows::Win32::UI::DisplayDevices::FONTOBJ* pfo, uint32_t cjSize, win32::Windows::Win32::UI::DisplayDevices::FONTINFO* pfi) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pfo);
        ORBIT_TRACK_PARAM(cjSize);
        ORBIT_TRACK_PARAM(pfi);

        g_api_table.FONTOBJ_vGetInfo(pfo, cjSize, pfi);
        
    }

    uint32_t __stdcall ORBIT_IMPL_FONTOBJ_cGetGlyphs(win32::Windows::Win32::UI::DisplayDevices::FONTOBJ* pfo, uint32_t iMode, uint32_t cGlyph, uint32_t* phg, void** ppvGlyph) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pfo);
        ORBIT_TRACK_PARAM(iMode);
        ORBIT_TRACK_PARAM(cGlyph);
        ORBIT_TRACK_PARAM(phg);
        ORBIT_TRACK_PARAM(ppvGlyph);

        auto win32_impl_result = g_api_table.FONTOBJ_cGetGlyphs(pfo, iMode, cGlyph, phg, ppvGlyph);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::SystemServices::XFORMOBJ* __stdcall ORBIT_IMPL_FONTOBJ_pxoGetXform(win32::Windows::Win32::UI::DisplayDevices::FONTOBJ* pfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pfo);

        auto win32_impl_result = g_api_table.FONTOBJ_pxoGetXform(pfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::UI::DisplayDevices::IFIMETRICS* __stdcall ORBIT_IMPL_FONTOBJ_pifi(win32::Windows::Win32::UI::DisplayDevices::FONTOBJ* pfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pfo);

        auto win32_impl_result = g_api_table.FONTOBJ_pifi(pfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::UI::DisplayDevices::FD_GLYPHSET* __stdcall ORBIT_IMPL_FONTOBJ_pfdg(win32::Windows::Win32::UI::DisplayDevices::FONTOBJ* pfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pfo);

        auto win32_impl_result = g_api_table.FONTOBJ_pfdg(pfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_FONTOBJ_pvTrueTypeFontFile(win32::Windows::Win32::UI::DisplayDevices::FONTOBJ* pfo, uint32_t* pcjFile) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pfo);
        ORBIT_TRACK_PARAM(pcjFile);

        auto win32_impl_result = g_api_table.FONTOBJ_pvTrueTypeFontFile(pfo, pcjFile);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::UI::DisplayDevices::FD_GLYPHATTR* __stdcall ORBIT_IMPL_FONTOBJ_pQueryGlyphAttrs(win32::Windows::Win32::UI::DisplayDevices::FONTOBJ* pfo, uint32_t iMode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pfo);
        ORBIT_TRACK_PARAM(iMode);

        auto win32_impl_result = g_api_table.FONTOBJ_pQueryGlyphAttrs(pfo, iMode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_PATHOBJ_vEnumStart(win32::Windows::Win32::UI::DisplayDevices::PATHOBJ* ppo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ppo);

        g_api_table.PATHOBJ_vEnumStart(ppo);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_PATHOBJ_bEnum(win32::Windows::Win32::UI::DisplayDevices::PATHOBJ* ppo, win32::Windows::Win32::UI::DisplayDevices::PATHDATA* ppd) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ppo);
        ORBIT_TRACK_PARAM(ppd);

        auto win32_impl_result = g_api_table.PATHOBJ_bEnum(ppo, ppd);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_PATHOBJ_vEnumStartClipLines(win32::Windows::Win32::UI::DisplayDevices::PATHOBJ* ppo, win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco, win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* pso, win32::Windows::Win32::UI::DisplayDevices::LINEATTRS* pla) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ppo);
        ORBIT_TRACK_PARAM(pco);
        ORBIT_TRACK_PARAM(pso);
        ORBIT_TRACK_PARAM(pla);

        g_api_table.PATHOBJ_vEnumStartClipLines(ppo, pco, pso, pla);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_PATHOBJ_bEnumClipLines(win32::Windows::Win32::UI::DisplayDevices::PATHOBJ* ppo, uint32_t cb, win32::Windows::Win32::UI::DisplayDevices::CLIPLINE* pcl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ppo);
        ORBIT_TRACK_PARAM(cb);
        ORBIT_TRACK_PARAM(pcl);

        auto win32_impl_result = g_api_table.PATHOBJ_bEnumClipLines(ppo, cb, pcl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_PATHOBJ_vGetBounds(win32::Windows::Win32::UI::DisplayDevices::PATHOBJ* ppo, win32::Windows::Win32::System::SystemServices::RECTFX* prectfx) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ppo);
        ORBIT_TRACK_PARAM(prectfx);

        g_api_table.PATHOBJ_vGetBounds(ppo, prectfx);
        
    }

    void __stdcall ORBIT_IMPL_STROBJ_vEnumStart(win32::Windows::Win32::UI::DisplayDevices::STROBJ* pstro) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pstro);

        g_api_table.STROBJ_vEnumStart(pstro);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_STROBJ_bEnum(win32::Windows::Win32::UI::DisplayDevices::STROBJ* pstro, uint32_t* pc, win32::Windows::Win32::UI::DisplayDevices::GLYPHPOS** ppgpos) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pstro);
        ORBIT_TRACK_PARAM(pc);
        ORBIT_TRACK_PARAM(ppgpos);

        auto win32_impl_result = g_api_table.STROBJ_bEnum(pstro, pc, ppgpos);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_STROBJ_bEnumPositionsOnly(win32::Windows::Win32::UI::DisplayDevices::STROBJ* pstro, uint32_t* pc, win32::Windows::Win32::UI::DisplayDevices::GLYPHPOS** ppgpos) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pstro);
        ORBIT_TRACK_PARAM(pc);
        ORBIT_TRACK_PARAM(ppgpos);

        auto win32_impl_result = g_api_table.STROBJ_bEnumPositionsOnly(pstro, pc, ppgpos);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_STROBJ_dwGetCodePage(win32::Windows::Win32::UI::DisplayDevices::STROBJ* pstro) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pstro);

        auto win32_impl_result = g_api_table.STROBJ_dwGetCodePage(pstro);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_STROBJ_bGetAdvanceWidths(win32::Windows::Win32::UI::DisplayDevices::STROBJ* pso, uint32_t iFirst, uint32_t c, win32::Windows::Win32::System::SystemServices::POINTQF* pptqD) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pso);
        ORBIT_TRACK_PARAM(iFirst);
        ORBIT_TRACK_PARAM(c);
        ORBIT_TRACK_PARAM(pptqD);

        auto win32_impl_result = g_api_table.STROBJ_bGetAdvanceWidths(pso, iFirst, c, pptqD);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_XFORMOBJ_iGetXform(win32::Windows::Win32::System::SystemServices::XFORMOBJ* pxo, win32::Windows::Win32::UI::DisplayDevices::XFORML* pxform) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pxo);
        ORBIT_TRACK_PARAM(pxform);

        auto win32_impl_result = g_api_table.XFORMOBJ_iGetXform(pxo, pxform);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_XFORMOBJ_bApplyXform(win32::Windows::Win32::System::SystemServices::XFORMOBJ* pxo, uint32_t iMode, uint32_t cPoints, void* pvIn, void* pvOut) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pxo);
        ORBIT_TRACK_PARAM(iMode);
        ORBIT_TRACK_PARAM(cPoints);
        ORBIT_TRACK_PARAM(pvIn);
        ORBIT_TRACK_PARAM(pvOut);

        auto win32_impl_result = g_api_table.XFORMOBJ_bApplyXform(pxo, iMode, cPoints, pvIn, pvOut);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_XLATEOBJ_iXlate(win32::Windows::Win32::UI::DisplayDevices::XLATEOBJ* pxlo, uint32_t iColor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pxlo);
        ORBIT_TRACK_PARAM(iColor);

        auto win32_impl_result = g_api_table.XLATEOBJ_iXlate(pxlo, iColor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t* __stdcall ORBIT_IMPL_XLATEOBJ_piVector(win32::Windows::Win32::UI::DisplayDevices::XLATEOBJ* pxlo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pxlo);

        auto win32_impl_result = g_api_table.XLATEOBJ_piVector(pxlo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_XLATEOBJ_cGetPalette(win32::Windows::Win32::UI::DisplayDevices::XLATEOBJ* pxlo, uint32_t iPal, uint32_t cPal, uint32_t* pPal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pxlo);
        ORBIT_TRACK_PARAM(iPal);
        ORBIT_TRACK_PARAM(cPal);
        ORBIT_TRACK_PARAM(pPal);

        auto win32_impl_result = g_api_table.XLATEOBJ_cGetPalette(pxlo, iPal, cPal, pPal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_XLATEOBJ_hGetColorTransform(win32::Windows::Win32::UI::DisplayDevices::XLATEOBJ* pxlo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pxlo);

        auto win32_impl_result = g_api_table.XLATEOBJ_hGetColorTransform(pxlo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Graphics::Gdi::HBITMAP __stdcall ORBIT_IMPL_EngCreateBitmap(win32::Windows::Win32::Foundation::SIZE sizl, int32_t lWidth, uint32_t iFormat, uint32_t fl, void* pvBits) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(sizl);
        ORBIT_TRACK_PARAM(lWidth);
        ORBIT_TRACK_PARAM(iFormat);
        ORBIT_TRACK_PARAM(fl);
        ORBIT_TRACK_PARAM(pvBits);

        auto win32_impl_result = g_api_table.EngCreateBitmap(sizl, lWidth, iFormat, fl, pvBits);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::UI::DisplayDevices::HSURF __stdcall ORBIT_IMPL_EngCreateDeviceSurface(win32::Windows::Win32::System::SystemServices::DHSURF dhsurf, win32::Windows::Win32::Foundation::SIZE sizl, uint32_t iFormatCompat) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dhsurf);
        ORBIT_TRACK_PARAM(sizl);
        ORBIT_TRACK_PARAM(iFormatCompat);

        auto win32_impl_result = g_api_table.EngCreateDeviceSurface(dhsurf, sizl, iFormatCompat);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Graphics::Gdi::HBITMAP __stdcall ORBIT_IMPL_EngCreateDeviceBitmap(win32::Windows::Win32::System::SystemServices::DHSURF dhsurf, win32::Windows::Win32::Foundation::SIZE sizl, uint32_t iFormatCompat) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dhsurf);
        ORBIT_TRACK_PARAM(sizl);
        ORBIT_TRACK_PARAM(iFormatCompat);

        auto win32_impl_result = g_api_table.EngCreateDeviceBitmap(dhsurf, sizl, iFormatCompat);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngDeleteSurface(win32::Windows::Win32::UI::DisplayDevices::HSURF hsurf) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hsurf);

        auto win32_impl_result = g_api_table.EngDeleteSurface(hsurf);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* __stdcall ORBIT_IMPL_EngLockSurface(win32::Windows::Win32::UI::DisplayDevices::HSURF hsurf) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hsurf);

        auto win32_impl_result = g_api_table.EngLockSurface(hsurf);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_EngUnlockSurface(win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* pso) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pso);

        g_api_table.EngUnlockSurface(pso);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngEraseSurface(win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* pso, win32::Windows::Win32::Foundation::RECTL* prcl, uint32_t iColor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pso);
        ORBIT_TRACK_PARAM(prcl);
        ORBIT_TRACK_PARAM(iColor);

        auto win32_impl_result = g_api_table.EngEraseSurface(pso, prcl, iColor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngAssociateSurface(win32::Windows::Win32::UI::DisplayDevices::HSURF hsurf, win32::Windows::Win32::System::SystemServices::HDEV hdev, uint32_t flHooks) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hsurf);
        ORBIT_TRACK_PARAM(hdev);
        ORBIT_TRACK_PARAM(flHooks);

        auto win32_impl_result = g_api_table.EngAssociateSurface(hsurf, hdev, flHooks);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngMarkBandingSurface(win32::Windows::Win32::UI::DisplayDevices::HSURF hsurf) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hsurf);

        auto win32_impl_result = g_api_table.EngMarkBandingSurface(hsurf);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngCheckAbort(win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* pso) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pso);

        auto win32_impl_result = g_api_table.EngCheckAbort(pso);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_EngDeletePath(win32::Windows::Win32::UI::DisplayDevices::PATHOBJ* ppo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ppo);

        g_api_table.EngDeletePath(ppo);
        
    }

    win32::Windows::Win32::Graphics::Gdi::HPALETTE __stdcall ORBIT_IMPL_EngCreatePalette(uint32_t iMode, uint32_t cColors, uint32_t* pulColors, uint32_t flRed, uint32_t flGreen, uint32_t flBlue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(iMode);
        ORBIT_TRACK_PARAM(cColors);
        ORBIT_TRACK_PARAM(pulColors);
        ORBIT_TRACK_PARAM(flRed);
        ORBIT_TRACK_PARAM(flGreen);
        ORBIT_TRACK_PARAM(flBlue);

        auto win32_impl_result = g_api_table.EngCreatePalette(iMode, cColors, pulColors, flRed, flGreen, flBlue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngDeletePalette(win32::Windows::Win32::Graphics::Gdi::HPALETTE hpal) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hpal);

        auto win32_impl_result = g_api_table.EngDeletePalette(hpal);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* __stdcall ORBIT_IMPL_EngCreateClip() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.EngCreateClip();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_EngDeleteClip(win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pco);

        g_api_table.EngDeleteClip(pco);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngBitBlt(win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoTrg, win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoSrc, win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoMask, win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco, win32::Windows::Win32::UI::DisplayDevices::XLATEOBJ* pxlo, win32::Windows::Win32::Foundation::RECTL* prclTrg, win32::Windows::Win32::Foundation::POINTL* pptlSrc, win32::Windows::Win32::Foundation::POINTL* pptlMask, win32::Windows::Win32::UI::DisplayDevices::BRUSHOBJ* pbo, win32::Windows::Win32::Foundation::POINTL* pptlBrush, uint32_t rop4) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(psoTrg);
        ORBIT_TRACK_PARAM(psoSrc);
        ORBIT_TRACK_PARAM(psoMask);
        ORBIT_TRACK_PARAM(pco);
        ORBIT_TRACK_PARAM(pxlo);
        ORBIT_TRACK_PARAM(prclTrg);
        ORBIT_TRACK_PARAM(pptlSrc);
        ORBIT_TRACK_PARAM(pptlMask);
        ORBIT_TRACK_PARAM(pbo);
        ORBIT_TRACK_PARAM(pptlBrush);
        ORBIT_TRACK_PARAM(rop4);

        auto win32_impl_result = g_api_table.EngBitBlt(psoTrg, psoSrc, psoMask, pco, pxlo, prclTrg, pptlSrc, pptlMask, pbo, pptlBrush, rop4);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngLineTo(win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* pso, win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco, win32::Windows::Win32::UI::DisplayDevices::BRUSHOBJ* pbo, int32_t x1, int32_t y1, int32_t x2, int32_t y2, win32::Windows::Win32::Foundation::RECTL* prclBounds, uint32_t mix) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pso);
        ORBIT_TRACK_PARAM(pco);
        ORBIT_TRACK_PARAM(pbo);
        ORBIT_TRACK_PARAM(x1);
        ORBIT_TRACK_PARAM(y1);
        ORBIT_TRACK_PARAM(x2);
        ORBIT_TRACK_PARAM(y2);
        ORBIT_TRACK_PARAM(prclBounds);
        ORBIT_TRACK_PARAM(mix);

        auto win32_impl_result = g_api_table.EngLineTo(pso, pco, pbo, x1, y1, x2, y2, prclBounds, mix);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngStretchBlt(win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoDest, win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoSrc, win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoMask, win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco, win32::Windows::Win32::UI::DisplayDevices::XLATEOBJ* pxlo, win32::Windows::Win32::Graphics::Gdi::COLORADJUSTMENT* pca, win32::Windows::Win32::Foundation::POINTL* pptlHTOrg, win32::Windows::Win32::Foundation::RECTL* prclDest, win32::Windows::Win32::Foundation::RECTL* prclSrc, win32::Windows::Win32::Foundation::POINTL* pptlMask, uint32_t iMode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(psoDest);
        ORBIT_TRACK_PARAM(psoSrc);
        ORBIT_TRACK_PARAM(psoMask);
        ORBIT_TRACK_PARAM(pco);
        ORBIT_TRACK_PARAM(pxlo);
        ORBIT_TRACK_PARAM(pca);
        ORBIT_TRACK_PARAM(pptlHTOrg);
        ORBIT_TRACK_PARAM(prclDest);
        ORBIT_TRACK_PARAM(prclSrc);
        ORBIT_TRACK_PARAM(pptlMask);
        ORBIT_TRACK_PARAM(iMode);

        auto win32_impl_result = g_api_table.EngStretchBlt(psoDest, psoSrc, psoMask, pco, pxlo, pca, pptlHTOrg, prclDest, prclSrc, pptlMask, iMode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngStretchBltROP(win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoDest, win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoSrc, win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoMask, win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco, win32::Windows::Win32::UI::DisplayDevices::XLATEOBJ* pxlo, win32::Windows::Win32::Graphics::Gdi::COLORADJUSTMENT* pca, win32::Windows::Win32::Foundation::POINTL* pptlHTOrg, win32::Windows::Win32::Foundation::RECTL* prclDest, win32::Windows::Win32::Foundation::RECTL* prclSrc, win32::Windows::Win32::Foundation::POINTL* pptlMask, uint32_t iMode, win32::Windows::Win32::UI::DisplayDevices::BRUSHOBJ* pbo, uint32_t rop4) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(psoDest);
        ORBIT_TRACK_PARAM(psoSrc);
        ORBIT_TRACK_PARAM(psoMask);
        ORBIT_TRACK_PARAM(pco);
        ORBIT_TRACK_PARAM(pxlo);
        ORBIT_TRACK_PARAM(pca);
        ORBIT_TRACK_PARAM(pptlHTOrg);
        ORBIT_TRACK_PARAM(prclDest);
        ORBIT_TRACK_PARAM(prclSrc);
        ORBIT_TRACK_PARAM(pptlMask);
        ORBIT_TRACK_PARAM(iMode);
        ORBIT_TRACK_PARAM(pbo);
        ORBIT_TRACK_PARAM(rop4);

        auto win32_impl_result = g_api_table.EngStretchBltROP(psoDest, psoSrc, psoMask, pco, pxlo, pca, pptlHTOrg, prclDest, prclSrc, pptlMask, iMode, pbo, rop4);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngAlphaBlend(win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoDest, win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoSrc, win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco, win32::Windows::Win32::UI::DisplayDevices::XLATEOBJ* pxlo, win32::Windows::Win32::Foundation::RECTL* prclDest, win32::Windows::Win32::Foundation::RECTL* prclSrc, win32::Windows::Win32::UI::DisplayDevices::BLENDOBJ* pBlendObj) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(psoDest);
        ORBIT_TRACK_PARAM(psoSrc);
        ORBIT_TRACK_PARAM(pco);
        ORBIT_TRACK_PARAM(pxlo);
        ORBIT_TRACK_PARAM(prclDest);
        ORBIT_TRACK_PARAM(prclSrc);
        ORBIT_TRACK_PARAM(pBlendObj);

        auto win32_impl_result = g_api_table.EngAlphaBlend(psoDest, psoSrc, pco, pxlo, prclDest, prclSrc, pBlendObj);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngGradientFill(win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoDest, win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco, win32::Windows::Win32::UI::DisplayDevices::XLATEOBJ* pxlo, win32::Windows::Win32::Graphics::Gdi::TRIVERTEX* pVertex, uint32_t nVertex, void* pMesh, uint32_t nMesh, win32::Windows::Win32::Foundation::RECTL* prclExtents, win32::Windows::Win32::Foundation::POINTL* pptlDitherOrg, uint32_t ulMode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(psoDest);
        ORBIT_TRACK_PARAM(pco);
        ORBIT_TRACK_PARAM(pxlo);
        ORBIT_TRACK_PARAM(pVertex);
        ORBIT_TRACK_PARAM(nVertex);
        ORBIT_TRACK_PARAM(pMesh);
        ORBIT_TRACK_PARAM(nMesh);
        ORBIT_TRACK_PARAM(prclExtents);
        ORBIT_TRACK_PARAM(pptlDitherOrg);
        ORBIT_TRACK_PARAM(ulMode);

        auto win32_impl_result = g_api_table.EngGradientFill(psoDest, pco, pxlo, pVertex, nVertex, pMesh, nMesh, prclExtents, pptlDitherOrg, ulMode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngTransparentBlt(win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoDst, win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoSrc, win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco, win32::Windows::Win32::UI::DisplayDevices::XLATEOBJ* pxlo, win32::Windows::Win32::Foundation::RECTL* prclDst, win32::Windows::Win32::Foundation::RECTL* prclSrc, uint32_t TransColor, uint32_t bCalledFromBitBlt) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(psoDst);
        ORBIT_TRACK_PARAM(psoSrc);
        ORBIT_TRACK_PARAM(pco);
        ORBIT_TRACK_PARAM(pxlo);
        ORBIT_TRACK_PARAM(prclDst);
        ORBIT_TRACK_PARAM(prclSrc);
        ORBIT_TRACK_PARAM(TransColor);
        ORBIT_TRACK_PARAM(bCalledFromBitBlt);

        auto win32_impl_result = g_api_table.EngTransparentBlt(psoDst, psoSrc, pco, pxlo, prclDst, prclSrc, TransColor, bCalledFromBitBlt);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngTextOut(win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* pso, win32::Windows::Win32::UI::DisplayDevices::STROBJ* pstro, win32::Windows::Win32::UI::DisplayDevices::FONTOBJ* pfo, win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco, win32::Windows::Win32::Foundation::RECTL* prclExtra, win32::Windows::Win32::Foundation::RECTL* prclOpaque, win32::Windows::Win32::UI::DisplayDevices::BRUSHOBJ* pboFore, win32::Windows::Win32::UI::DisplayDevices::BRUSHOBJ* pboOpaque, win32::Windows::Win32::Foundation::POINTL* pptlOrg, uint32_t mix) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pso);
        ORBIT_TRACK_PARAM(pstro);
        ORBIT_TRACK_PARAM(pfo);
        ORBIT_TRACK_PARAM(pco);
        ORBIT_TRACK_PARAM(prclExtra);
        ORBIT_TRACK_PARAM(prclOpaque);
        ORBIT_TRACK_PARAM(pboFore);
        ORBIT_TRACK_PARAM(pboOpaque);
        ORBIT_TRACK_PARAM(pptlOrg);
        ORBIT_TRACK_PARAM(mix);

        auto win32_impl_result = g_api_table.EngTextOut(pso, pstro, pfo, pco, prclExtra, prclOpaque, pboFore, pboOpaque, pptlOrg, mix);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngStrokePath(win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* pso, win32::Windows::Win32::UI::DisplayDevices::PATHOBJ* ppo, win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco, win32::Windows::Win32::System::SystemServices::XFORMOBJ* pxo, win32::Windows::Win32::UI::DisplayDevices::BRUSHOBJ* pbo, win32::Windows::Win32::Foundation::POINTL* pptlBrushOrg, win32::Windows::Win32::UI::DisplayDevices::LINEATTRS* plineattrs, uint32_t mix) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pso);
        ORBIT_TRACK_PARAM(ppo);
        ORBIT_TRACK_PARAM(pco);
        ORBIT_TRACK_PARAM(pxo);
        ORBIT_TRACK_PARAM(pbo);
        ORBIT_TRACK_PARAM(pptlBrushOrg);
        ORBIT_TRACK_PARAM(plineattrs);
        ORBIT_TRACK_PARAM(mix);

        auto win32_impl_result = g_api_table.EngStrokePath(pso, ppo, pco, pxo, pbo, pptlBrushOrg, plineattrs, mix);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngFillPath(win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* pso, win32::Windows::Win32::UI::DisplayDevices::PATHOBJ* ppo, win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco, win32::Windows::Win32::UI::DisplayDevices::BRUSHOBJ* pbo, win32::Windows::Win32::Foundation::POINTL* pptlBrushOrg, uint32_t mix, uint32_t flOptions) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pso);
        ORBIT_TRACK_PARAM(ppo);
        ORBIT_TRACK_PARAM(pco);
        ORBIT_TRACK_PARAM(pbo);
        ORBIT_TRACK_PARAM(pptlBrushOrg);
        ORBIT_TRACK_PARAM(mix);
        ORBIT_TRACK_PARAM(flOptions);

        auto win32_impl_result = g_api_table.EngFillPath(pso, ppo, pco, pbo, pptlBrushOrg, mix, flOptions);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngStrokeAndFillPath(win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* pso, win32::Windows::Win32::UI::DisplayDevices::PATHOBJ* ppo, win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco, win32::Windows::Win32::System::SystemServices::XFORMOBJ* pxo, win32::Windows::Win32::UI::DisplayDevices::BRUSHOBJ* pboStroke, win32::Windows::Win32::UI::DisplayDevices::LINEATTRS* plineattrs, win32::Windows::Win32::UI::DisplayDevices::BRUSHOBJ* pboFill, win32::Windows::Win32::Foundation::POINTL* pptlBrushOrg, uint32_t mixFill, uint32_t flOptions) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pso);
        ORBIT_TRACK_PARAM(ppo);
        ORBIT_TRACK_PARAM(pco);
        ORBIT_TRACK_PARAM(pxo);
        ORBIT_TRACK_PARAM(pboStroke);
        ORBIT_TRACK_PARAM(plineattrs);
        ORBIT_TRACK_PARAM(pboFill);
        ORBIT_TRACK_PARAM(pptlBrushOrg);
        ORBIT_TRACK_PARAM(mixFill);
        ORBIT_TRACK_PARAM(flOptions);

        auto win32_impl_result = g_api_table.EngStrokeAndFillPath(pso, ppo, pco, pxo, pboStroke, plineattrs, pboFill, pptlBrushOrg, mixFill, flOptions);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngPaint(win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* pso, win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco, win32::Windows::Win32::UI::DisplayDevices::BRUSHOBJ* pbo, win32::Windows::Win32::Foundation::POINTL* pptlBrushOrg, uint32_t mix) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pso);
        ORBIT_TRACK_PARAM(pco);
        ORBIT_TRACK_PARAM(pbo);
        ORBIT_TRACK_PARAM(pptlBrushOrg);
        ORBIT_TRACK_PARAM(mix);

        auto win32_impl_result = g_api_table.EngPaint(pso, pco, pbo, pptlBrushOrg, mix);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngCopyBits(win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoDest, win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoSrc, win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco, win32::Windows::Win32::UI::DisplayDevices::XLATEOBJ* pxlo, win32::Windows::Win32::Foundation::RECTL* prclDest, win32::Windows::Win32::Foundation::POINTL* pptlSrc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(psoDest);
        ORBIT_TRACK_PARAM(psoSrc);
        ORBIT_TRACK_PARAM(pco);
        ORBIT_TRACK_PARAM(pxlo);
        ORBIT_TRACK_PARAM(prclDest);
        ORBIT_TRACK_PARAM(pptlSrc);

        auto win32_impl_result = g_api_table.EngCopyBits(psoDest, psoSrc, pco, pxlo, prclDest, pptlSrc);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EngPlgBlt(win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoTrg, win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoSrc, win32::Windows::Win32::UI::DisplayDevices::SURFOBJ* psoMsk, win32::Windows::Win32::UI::DisplayDevices::CLIPOBJ* pco, win32::Windows::Win32::UI::DisplayDevices::XLATEOBJ* pxlo, win32::Windows::Win32::Graphics::Gdi::COLORADJUSTMENT* pca, win32::Windows::Win32::Foundation::POINTL* pptlBrushOrg, win32::Windows::Win32::System::SystemServices::POINTFIX* pptfx, win32::Windows::Win32::Foundation::RECTL* prcl, win32::Windows::Win32::Foundation::POINTL* pptl, uint32_t iMode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(psoTrg);
        ORBIT_TRACK_PARAM(psoSrc);
        ORBIT_TRACK_PARAM(psoMsk);
        ORBIT_TRACK_PARAM(pco);
        ORBIT_TRACK_PARAM(pxlo);
        ORBIT_TRACK_PARAM(pca);
        ORBIT_TRACK_PARAM(pptlBrushOrg);
        ORBIT_TRACK_PARAM(pptfx);
        ORBIT_TRACK_PARAM(prcl);
        ORBIT_TRACK_PARAM(pptl);
        ORBIT_TRACK_PARAM(iMode);

        auto win32_impl_result = g_api_table.EngPlgBlt(psoTrg, psoSrc, psoMsk, pco, pxlo, pca, pptlBrushOrg, pptfx, prcl, pptl, iMode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_HT_Get8BPPFormatPalette(win32::Windows::Win32::Graphics::Gdi::PALETTEENTRY* pPaletteEntry, uint16_t RedGamma, uint16_t GreenGamma, uint16_t BlueGamma) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pPaletteEntry);
        ORBIT_TRACK_PARAM(RedGamma);
        ORBIT_TRACK_PARAM(GreenGamma);
        ORBIT_TRACK_PARAM(BlueGamma);

        auto win32_impl_result = g_api_table.HT_Get8BPPFormatPalette(pPaletteEntry, RedGamma, GreenGamma, BlueGamma);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_HT_Get8BPPMaskPalette(win32::Windows::Win32::Graphics::Gdi::PALETTEENTRY* pPaletteEntry, win32::Windows::Win32::Foundation::BOOL Use8BPPMaskPal, uint8_t CMYMask, uint16_t RedGamma, uint16_t GreenGamma, uint16_t BlueGamma) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pPaletteEntry);
        ORBIT_TRACK_PARAM(Use8BPPMaskPal);
        ORBIT_TRACK_PARAM(CMYMask);
        ORBIT_TRACK_PARAM(RedGamma);
        ORBIT_TRACK_PARAM(GreenGamma);
        ORBIT_TRACK_PARAM(BlueGamma);

        auto win32_impl_result = g_api_table.HT_Get8BPPMaskPalette(pPaletteEntry, Use8BPPMaskPal, CMYMask, RedGamma, GreenGamma, BlueGamma);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::PWSTR __stdcall ORBIT_IMPL_EngGetPrinterDataFileName(win32::Windows::Win32::System::SystemServices::HDEV hdev) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdev);

        auto win32_impl_result = g_api_table.EngGetPrinterDataFileName(hdev);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::PWSTR __stdcall ORBIT_IMPL_EngGetDriverName(win32::Windows::Win32::System::SystemServices::HDEV hdev) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdev);

        auto win32_impl_result = g_api_table.EngGetDriverName(hdev);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HANDLE __stdcall ORBIT_IMPL_EngLoadModule(win32::Windows::Win32::Foundation::PWSTR pwsz) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pwsz);

        auto win32_impl_result = g_api_table.EngLoadModule(pwsz);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_EngFindResource(win32::Windows::Win32::Foundation::HANDLE h, int32_t iName, int32_t iType, uint32_t* pulSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(h);
        ORBIT_TRACK_PARAM(iName);
        ORBIT_TRACK_PARAM(iType);
        ORBIT_TRACK_PARAM(pulSize);

        auto win32_impl_result = g_api_table.EngFindResource(h, iName, iType, pulSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_EngFreeModule(win32::Windows::Win32::Foundation::HANDLE h) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(h);

        g_api_table.EngFreeModule(h);
        
    }

    win32::Windows::Win32::System::SystemServices::HSEMAPHORE__* __stdcall ORBIT_IMPL_EngCreateSemaphore() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.EngCreateSemaphore();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_EngAcquireSemaphore(win32::Windows::Win32::System::SystemServices::HSEMAPHORE__* hsem) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hsem);

        g_api_table.EngAcquireSemaphore(hsem);
        
    }

    void __stdcall ORBIT_IMPL_EngReleaseSemaphore(win32::Windows::Win32::System::SystemServices::HSEMAPHORE__* hsem) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hsem);

        g_api_table.EngReleaseSemaphore(hsem);
        
    }

    void __stdcall ORBIT_IMPL_EngDeleteSemaphore(win32::Windows::Win32::System::SystemServices::HSEMAPHORE__* hsem) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hsem);

        g_api_table.EngDeleteSemaphore(hsem);
        
    }

    void __stdcall ORBIT_IMPL_EngMultiByteToUnicodeN(win32::Windows::Win32::Foundation::PWSTR UnicodeString, uint32_t MaxBytesInUnicodeString, uint32_t* BytesInUnicodeString, win32::Windows::Win32::Foundation::PSTR MultiByteString, uint32_t BytesInMultiByteString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(UnicodeString);
        ORBIT_TRACK_PARAM(MaxBytesInUnicodeString);
        ORBIT_TRACK_PARAM(BytesInUnicodeString);
        ORBIT_TRACK_PARAM(MultiByteString);
        ORBIT_TRACK_PARAM(BytesInMultiByteString);

        g_api_table.EngMultiByteToUnicodeN(UnicodeString, MaxBytesInUnicodeString, BytesInUnicodeString, MultiByteString, BytesInMultiByteString);
        
    }

    void __stdcall ORBIT_IMPL_EngUnicodeToMultiByteN(win32::Windows::Win32::Foundation::PSTR MultiByteString, uint32_t MaxBytesInMultiByteString, uint32_t* BytesInMultiByteString, win32::Windows::Win32::Foundation::PWSTR UnicodeString, uint32_t BytesInUnicodeString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(MultiByteString);
        ORBIT_TRACK_PARAM(MaxBytesInMultiByteString);
        ORBIT_TRACK_PARAM(BytesInMultiByteString);
        ORBIT_TRACK_PARAM(UnicodeString);
        ORBIT_TRACK_PARAM(BytesInUnicodeString);

        g_api_table.EngUnicodeToMultiByteN(MultiByteString, MaxBytesInMultiByteString, BytesInMultiByteString, UnicodeString, BytesInUnicodeString);
        
    }

    void __stdcall ORBIT_IMPL_EngQueryLocalTime(win32::Windows::Win32::UI::DisplayDevices::ENG_TIME_FIELDS* param0) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(param0);

        g_api_table.EngQueryLocalTime(param0);
        
    }

    win32::Windows::Win32::UI::DisplayDevices::FD_GLYPHSET* __stdcall ORBIT_IMPL_EngComputeGlyphSet(int32_t nCodePage, int32_t nFirstChar, int32_t cChars) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(nCodePage);
        ORBIT_TRACK_PARAM(nFirstChar);
        ORBIT_TRACK_PARAM(cChars);

        auto win32_impl_result = g_api_table.EngComputeGlyphSet(nCodePage, nFirstChar, cChars);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_EngMultiByteToWideChar(uint32_t CodePage, win32::Windows::Win32::Foundation::PWSTR WideCharString, int32_t BytesInWideCharString, win32::Windows::Win32::Foundation::PSTR MultiByteString, int32_t BytesInMultiByteString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CodePage);
        ORBIT_TRACK_PARAM(WideCharString);
        ORBIT_TRACK_PARAM(BytesInWideCharString);
        ORBIT_TRACK_PARAM(MultiByteString);
        ORBIT_TRACK_PARAM(BytesInMultiByteString);

        auto win32_impl_result = g_api_table.EngMultiByteToWideChar(CodePage, WideCharString, BytesInWideCharString, MultiByteString, BytesInMultiByteString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_EngWideCharToMultiByte(uint32_t CodePage, win32::Windows::Win32::Foundation::PWSTR WideCharString, int32_t BytesInWideCharString, win32::Windows::Win32::Foundation::PSTR MultiByteString, int32_t BytesInMultiByteString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CodePage);
        ORBIT_TRACK_PARAM(WideCharString);
        ORBIT_TRACK_PARAM(BytesInWideCharString);
        ORBIT_TRACK_PARAM(MultiByteString);
        ORBIT_TRACK_PARAM(BytesInMultiByteString);

        auto win32_impl_result = g_api_table.EngWideCharToMultiByte(CodePage, WideCharString, BytesInWideCharString, MultiByteString, BytesInMultiByteString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_EngGetCurrentCodePage(uint16_t* OemCodePage, uint16_t* AnsiCodePage) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(OemCodePage);
        ORBIT_TRACK_PARAM(AnsiCodePage);

        g_api_table.EngGetCurrentCodePage(OemCodePage, AnsiCodePage);
        
    }

    int32_t __stdcall ORBIT_IMPL_GetDisplayConfigBufferSizes(uint32_t flags, uint32_t* numPathArrayElements, uint32_t* numModeInfoArrayElements) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(numPathArrayElements);
        ORBIT_TRACK_PARAM(numModeInfoArrayElements);

        auto win32_impl_result = g_api_table.GetDisplayConfigBufferSizes(flags, numPathArrayElements, numModeInfoArrayElements);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SetDisplayConfig(uint32_t numPathArrayElements, win32::Windows::Win32::UI::DisplayDevices::DISPLAYCONFIG_PATH_INFO* pathArray, uint32_t numModeInfoArrayElements, win32::Windows::Win32::UI::DisplayDevices::DISPLAYCONFIG_MODE_INFO* modeInfoArray, uint32_t flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(numPathArrayElements);
        ORBIT_TRACK_PARAM(pathArray);
        ORBIT_TRACK_PARAM(numModeInfoArrayElements);
        ORBIT_TRACK_PARAM(modeInfoArray);
        ORBIT_TRACK_PARAM(flags);

        auto win32_impl_result = g_api_table.SetDisplayConfig(numPathArrayElements, pathArray, numModeInfoArrayElements, modeInfoArray, flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_QueryDisplayConfig(uint32_t flags, uint32_t* numPathArrayElements, win32::Windows::Win32::UI::DisplayDevices::DISPLAYCONFIG_PATH_INFO* pathArray, uint32_t* numModeInfoArrayElements, win32::Windows::Win32::UI::DisplayDevices::DISPLAYCONFIG_MODE_INFO* modeInfoArray, win32::Windows::Win32::UI::DisplayDevices::DISPLAYCONFIG_TOPOLOGY_ID* currentTopologyId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(numPathArrayElements);
        ORBIT_TRACK_PARAM(pathArray);
        ORBIT_TRACK_PARAM(numModeInfoArrayElements);
        ORBIT_TRACK_PARAM(modeInfoArray);
        ORBIT_TRACK_PARAM(currentTopologyId);

        auto win32_impl_result = g_api_table.QueryDisplayConfig(flags, numPathArrayElements, pathArray, numModeInfoArrayElements, modeInfoArray, currentTopologyId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DisplayConfigGetDeviceInfo(win32::Windows::Win32::UI::DisplayDevices::DISPLAYCONFIG_DEVICE_INFO_HEADER* requestPacket) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(requestPacket);

        auto win32_impl_result = g_api_table.DisplayConfigGetDeviceInfo(requestPacket);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_DisplayConfigSetDeviceInfo(win32::Windows::Win32::UI::DisplayDevices::DISPLAYCONFIG_DEVICE_INFO_HEADER* setPacket) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(setPacket);

        auto win32_impl_result = g_api_table.DisplayConfigSetDeviceInfo(setPacket);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
