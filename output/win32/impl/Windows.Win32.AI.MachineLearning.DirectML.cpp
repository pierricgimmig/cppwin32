// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_AI_MachineLearning_DirectML_2_H
#define WIN32_Windows_Win32_AI_MachineLearning_DirectML_2_H
#include "win32/Windows.Win32.AI.MachineLearning.DirectML.h"
#include "win32/impl/Windows.Win32.AI.MachineLearning.DirectML.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::AI::MachineLearning::DirectML
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DMLCreateDevice(win32::Windows::Win32::Graphics::Direct3D12::ID3D12Device* d3d12Device, win32::Windows::Win32::AI::MachineLearning::DirectML::DML_CREATE_DEVICE_FLAGS flags, ::win32::guid* riid, void** ppv) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(d3d12Device);
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppv);

        auto win32_impl_result = g_api_table.DMLCreateDevice(d3d12Device, flags, riid, ppv);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DMLCreateDevice1(win32::Windows::Win32::Graphics::Direct3D12::ID3D12Device* d3d12Device, win32::Windows::Win32::AI::MachineLearning::DirectML::DML_CREATE_DEVICE_FLAGS flags, win32::Windows::Win32::AI::MachineLearning::DirectML::DML_FEATURE_LEVEL minimumFeatureLevel, ::win32::guid* riid, void** ppv) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(d3d12Device);
        ORBIT_TRACK_PARAM(flags);
        ORBIT_TRACK_PARAM(minimumFeatureLevel);
        ORBIT_TRACK_PARAM(riid);
        ORBIT_TRACK_PARAM(ppv);

        auto win32_impl_result = g_api_table.DMLCreateDevice1(d3d12Device, flags, minimumFeatureLevel, riid, ppv);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
