// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Storage_FileServerResourceManager_0_H
#define WIN32_Windows_Win32_Storage_FileServerResourceManager_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Storage::FileServerResourceManager
{
#pragma region enums
    enum class AdrClientDisplayFlags : int32_t
    {
        AdrClientDisplayFlags_AllowEmailRequests = 1,
        AdrClientDisplayFlags_ShowDeviceTroubleshooting = 2,
    };
    enum class AdrClientErrorType : int32_t
    {
        AdrClientErrorType_Unknown = 0,
        AdrClientErrorType_AccessDenied = 1,
        AdrClientErrorType_FileNotFound = 2,
    };
    enum class AdrClientFlags : int32_t
    {
        AdrClientFlags_None = 0,
        AdrClientFlags_FailForLocalPaths = 1,
        AdrClientFlags_FailIfNotSupportedByServer = 2,
        AdrClientFlags_FailIfNotDomainJoined = 4,
    };
    enum class AdrEmailFlags : int32_t
    {
        AdrEmailFlags_PutDataOwnerOnToLine = 1,
        AdrEmailFlags_PutAdminOnToLine = 2,
        AdrEmailFlags_IncludeDeviceClaims = 4,
        AdrEmailFlags_IncludeUserInfo = 8,
        AdrEmailFlags_GenerateEventLog = 16,
    };
    enum class FsrmAccountType : int32_t
    {
        FsrmAccountType_Unknown = 0,
        FsrmAccountType_NetworkService = 1,
        FsrmAccountType_LocalService = 2,
        FsrmAccountType_LocalSystem = 3,
        FsrmAccountType_InProc = 4,
        FsrmAccountType_External = 5,
        FsrmAccountType_Automatic = 500,
    };
    enum class FsrmActionType : int32_t
    {
        FsrmActionType_Unknown = 0,
        FsrmActionType_EventLog = 1,
        FsrmActionType_Email = 2,
        FsrmActionType_Command = 3,
        FsrmActionType_Report = 4,
    };
    enum class FsrmClassificationLoggingFlags : int32_t
    {
        FsrmClassificationLoggingFlags_None = 0,
        FsrmClassificationLoggingFlags_ClassificationsInLogFile = 1,
        FsrmClassificationLoggingFlags_ErrorsInLogFile = 2,
        FsrmClassificationLoggingFlags_ClassificationsInSystemLog = 4,
        FsrmClassificationLoggingFlags_ErrorsInSystemLog = 8,
    };
    enum class FsrmCollectionState : int32_t
    {
        FsrmCollectionState_Fetching = 1,
        FsrmCollectionState_Committing = 2,
        FsrmCollectionState_Complete = 3,
        FsrmCollectionState_Cancelled = 4,
    };
    enum class FsrmCommitOptions : int32_t
    {
        FsrmCommitOptions_None = 0,
        FsrmCommitOptions_Asynchronous = 1,
    };
    enum class FsrmEnumOptions : int32_t
    {
        FsrmEnumOptions_None = 0,
        FsrmEnumOptions_Asynchronous = 1,
        FsrmEnumOptions_CheckRecycleBin = 2,
        FsrmEnumOptions_IncludeClusterNodes = 4,
        FsrmEnumOptions_IncludeDeprecatedObjects = 8,
    };
    enum class FsrmEventType : int32_t
    {
        FsrmEventType_Unknown = 0,
        FsrmEventType_Information = 1,
        FsrmEventType_Warning = 2,
        FsrmEventType_Error = 3,
    };
    enum class FsrmExecutionOption : int32_t
    {
        FsrmExecutionOption_Unknown = 0,
        FsrmExecutionOption_EvaluateUnset = 1,
        FsrmExecutionOption_ReEvaluate_ConsiderExistingValue = 2,
        FsrmExecutionOption_ReEvaluate_IgnoreExistingValue = 3,
    };
    enum class FsrmFileConditionType : int32_t
    {
        FsrmFileConditionType_Unknown = 0,
        FsrmFileConditionType_Property = 1,
    };
    enum class FsrmFileManagementLoggingFlags : int32_t
    {
        FsrmFileManagementLoggingFlags_None = 0,
        FsrmFileManagementLoggingFlags_Error = 1,
        FsrmFileManagementLoggingFlags_Information = 2,
        FsrmFileManagementLoggingFlags_Audit = 4,
    };
    enum class FsrmFileManagementType : int32_t
    {
        FsrmFileManagementType_Unknown = 0,
        FsrmFileManagementType_Expiration = 1,
        FsrmFileManagementType_Custom = 2,
        FsrmFileManagementType_Rms = 3,
    };
    enum class FsrmFileScreenFlags : int32_t
    {
        FsrmFileScreenFlags_Enforce = 1,
    };
    enum class FsrmFileStreamingInterfaceType : int32_t
    {
        FsrmFileStreamingInterfaceType_Unknown = 0,
        FsrmFileStreamingInterfaceType_ILockBytes = 1,
        FsrmFileStreamingInterfaceType_IStream = 2,
    };
    enum class FsrmFileStreamingMode : int32_t
    {
        FsrmFileStreamingMode_Unknown = 0,
        FsrmFileStreamingMode_Read = 1,
        FsrmFileStreamingMode_Write = 2,
    };
    enum class FsrmFileSystemPropertyId : int32_t
    {
        FsrmFileSystemPropertyId_Undefined = 0,
        FsrmFileSystemPropertyId_FileName = 1,
        FsrmFileSystemPropertyId_DateCreated = 2,
        FsrmFileSystemPropertyId_DateLastAccessed = 3,
        FsrmFileSystemPropertyId_DateLastModified = 4,
        FsrmFileSystemPropertyId_DateNow = 5,
    };
    enum class FsrmGetFilePropertyOptions : int32_t
    {
        FsrmGetFilePropertyOptions_None = 0,
        FsrmGetFilePropertyOptions_NoRuleEvaluation = 1,
        FsrmGetFilePropertyOptions_Persistent = 2,
        FsrmGetFilePropertyOptions_FailOnPersistErrors = 4,
        FsrmGetFilePropertyOptions_SkipOrphaned = 8,
    };
    enum class FsrmPipelineModuleType : int32_t
    {
        FsrmPipelineModuleType_Unknown = 0,
        FsrmPipelineModuleType_Storage = 1,
        FsrmPipelineModuleType_Classifier = 2,
    };
    enum class FsrmPropertyBagField : int32_t
    {
        FsrmPropertyBagField_AccessVolume = 0,
        FsrmPropertyBagField_VolumeGuidName = 1,
    };
    enum class FsrmPropertyBagFlags : int32_t
    {
        FsrmPropertyBagFlags_UpdatedByClassifier = 1,
        FsrmPropertyBagFlags_FailedLoadingProperties = 2,
        FsrmPropertyBagFlags_FailedSavingProperties = 4,
        FsrmPropertyBagFlags_FailedClassifyingProperties = 8,
    };
    enum class FsrmPropertyConditionType : int32_t
    {
        FsrmPropertyConditionType_Unknown = 0,
        FsrmPropertyConditionType_Equal = 1,
        FsrmPropertyConditionType_NotEqual = 2,
        FsrmPropertyConditionType_GreaterThan = 3,
        FsrmPropertyConditionType_LessThan = 4,
        FsrmPropertyConditionType_Contain = 5,
        FsrmPropertyConditionType_Exist = 6,
        FsrmPropertyConditionType_NotExist = 7,
        FsrmPropertyConditionType_StartWith = 8,
        FsrmPropertyConditionType_EndWith = 9,
        FsrmPropertyConditionType_ContainedIn = 10,
        FsrmPropertyConditionType_PrefixOf = 11,
        FsrmPropertyConditionType_SuffixOf = 12,
        FsrmPropertyConditionType_MatchesPattern = 13,
    };
    enum class FsrmPropertyDefinitionAppliesTo : int32_t
    {
        FsrmPropertyDefinitionAppliesTo_Files = 1,
        FsrmPropertyDefinitionAppliesTo_Folders = 2,
    };
    enum class FsrmPropertyDefinitionFlags : int32_t
    {
        FsrmPropertyDefinitionFlags_Global = 1,
        FsrmPropertyDefinitionFlags_Deprecated = 2,
        FsrmPropertyDefinitionFlags_Secure = 4,
    };
    enum class FsrmPropertyDefinitionType : int32_t
    {
        FsrmPropertyDefinitionType_Unknown = 0,
        FsrmPropertyDefinitionType_OrderedList = 1,
        FsrmPropertyDefinitionType_MultiChoiceList = 2,
        FsrmPropertyDefinitionType_SingleChoiceList = 3,
        FsrmPropertyDefinitionType_String = 4,
        FsrmPropertyDefinitionType_MultiString = 5,
        FsrmPropertyDefinitionType_Int = 6,
        FsrmPropertyDefinitionType_Bool = 7,
        FsrmPropertyDefinitionType_Date = 8,
    };
    enum class FsrmPropertyFlags : int32_t
    {
        FsrmPropertyFlags_None = 0,
        FsrmPropertyFlags_Orphaned = 1,
        FsrmPropertyFlags_RetrievedFromCache = 2,
        FsrmPropertyFlags_RetrievedFromStorage = 4,
        FsrmPropertyFlags_SetByClassifier = 8,
        FsrmPropertyFlags_Deleted = 16,
        FsrmPropertyFlags_Reclassified = 32,
        FsrmPropertyFlags_AggregationFailed = 64,
        FsrmPropertyFlags_Existing = 128,
        FsrmPropertyFlags_FailedLoadingProperties = 256,
        FsrmPropertyFlags_FailedClassifyingProperties = 512,
        FsrmPropertyFlags_FailedSavingProperties = 1024,
        FsrmPropertyFlags_Secure = 2048,
        FsrmPropertyFlags_PolicyDerived = 4096,
        FsrmPropertyFlags_Inherited = 8192,
        FsrmPropertyFlags_Manual = 16384,
        FsrmPropertyFlags_ExplicitValueDeleted = 32768,
        FsrmPropertyFlags_PropertyDeletedFromClear = 65536,
        FsrmPropertyFlags_PropertySourceMask = 14,
        FsrmPropertyFlags_PersistentMask = 20480,
    };
    enum class FsrmPropertyValueType : int32_t
    {
        FsrmPropertyValueType_Undefined = 0,
        FsrmPropertyValueType_Literal = 1,
        FsrmPropertyValueType_DateOffset = 2,
    };
    enum class FsrmQuotaFlags : int32_t
    {
        FsrmQuotaFlags_Enforce = 256,
        FsrmQuotaFlags_Disable = 512,
        FsrmQuotaFlags_StatusIncomplete = 65536,
        FsrmQuotaFlags_StatusRebuilding = 131072,
    };
    enum class FsrmReportFilter : int32_t
    {
        FsrmReportFilter_MinSize = 1,
        FsrmReportFilter_MinAgeDays = 2,
        FsrmReportFilter_MaxAgeDays = 3,
        FsrmReportFilter_MinQuotaUsage = 4,
        FsrmReportFilter_FileGroups = 5,
        FsrmReportFilter_Owners = 6,
        FsrmReportFilter_NamePattern = 7,
        FsrmReportFilter_Property = 8,
    };
    enum class FsrmReportFormat : int32_t
    {
        FsrmReportFormat_Unknown = 0,
        FsrmReportFormat_DHtml = 1,
        FsrmReportFormat_Html = 2,
        FsrmReportFormat_Txt = 3,
        FsrmReportFormat_Csv = 4,
        FsrmReportFormat_Xml = 5,
    };
    enum class FsrmReportGenerationContext : int32_t
    {
        FsrmReportGenerationContext_Undefined = 1,
        FsrmReportGenerationContext_ScheduledReport = 2,
        FsrmReportGenerationContext_InteractiveReport = 3,
        FsrmReportGenerationContext_IncidentReport = 4,
    };
    enum class FsrmReportLimit : int32_t
    {
        FsrmReportLimit_MaxFiles = 1,
        FsrmReportLimit_MaxFileGroups = 2,
        FsrmReportLimit_MaxOwners = 3,
        FsrmReportLimit_MaxFilesPerFileGroup = 4,
        FsrmReportLimit_MaxFilesPerOwner = 5,
        FsrmReportLimit_MaxFilesPerDuplGroup = 6,
        FsrmReportLimit_MaxDuplicateGroups = 7,
        FsrmReportLimit_MaxQuotas = 8,
        FsrmReportLimit_MaxFileScreenEvents = 9,
        FsrmReportLimit_MaxPropertyValues = 10,
        FsrmReportLimit_MaxFilesPerPropertyValue = 11,
        FsrmReportLimit_MaxFolders = 12,
    };
    enum class FsrmReportRunningStatus : int32_t
    {
        FsrmReportRunningStatus_Unknown = 0,
        FsrmReportRunningStatus_NotRunning = 1,
        FsrmReportRunningStatus_Queued = 2,
        FsrmReportRunningStatus_Running = 3,
    };
    enum class FsrmReportType : int32_t
    {
        FsrmReportType_Unknown = 0,
        FsrmReportType_LargeFiles = 1,
        FsrmReportType_FilesByType = 2,
        FsrmReportType_LeastRecentlyAccessed = 3,
        FsrmReportType_MostRecentlyAccessed = 4,
        FsrmReportType_QuotaUsage = 5,
        FsrmReportType_FilesByOwner = 6,
        FsrmReportType_ExportReport = 7,
        FsrmReportType_DuplicateFiles = 8,
        FsrmReportType_FileScreenAudit = 9,
        FsrmReportType_FilesByProperty = 10,
        FsrmReportType_AutomaticClassification = 11,
        FsrmReportType_Expiration = 12,
        FsrmReportType_FoldersByProperty = 13,
    };
    enum class FsrmRuleFlags : int32_t
    {
        FsrmRuleFlags_Disabled = 256,
        FsrmRuleFlags_ClearAutomaticallyClassifiedProperty = 1024,
        FsrmRuleFlags_ClearManuallyClassifiedProperty = 2048,
        FsrmRuleFlags_Invalid = 4096,
    };
    enum class FsrmRuleType : int32_t
    {
        FsrmRuleType_Unknown = 0,
        FsrmRuleType_Classification = 1,
        FsrmRuleType_Generic = 2,
    };
    enum class FsrmStorageModuleCaps : int32_t
    {
        FsrmStorageModuleCaps_Unknown = 0,
        FsrmStorageModuleCaps_CanGet = 1,
        FsrmStorageModuleCaps_CanSet = 2,
        FsrmStorageModuleCaps_CanHandleDirectories = 4,
        FsrmStorageModuleCaps_CanHandleFiles = 8,
    };
    enum class FsrmStorageModuleType : int32_t
    {
        FsrmStorageModuleType_Unknown = 0,
        FsrmStorageModuleType_Cache = 1,
        FsrmStorageModuleType_InFile = 2,
        FsrmStorageModuleType_Database = 3,
        FsrmStorageModuleType_System = 100,
    };
    enum class FsrmTemplateApplyOptions : int32_t
    {
        FsrmTemplateApplyOptions_ApplyToDerivedMatching = 1,
        FsrmTemplateApplyOptions_ApplyToDerivedAll = 2,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct AdSyncTask;
    struct FsrmAccessDeniedRemediationClient;
    struct FsrmClassificationManager;
    struct FsrmExportImport;
    struct FsrmFileGroupManager;
    struct FsrmFileManagementJobManager;
    struct FsrmFileScreenManager;
    struct FsrmFileScreenTemplateManager;
    struct FsrmPathMapper;
    struct FsrmPipelineModuleConnector;
    struct FsrmQuotaManager;
    struct FsrmQuotaTemplateManager;
    struct FsrmReportManager;
    struct FsrmReportScheduler;
    struct FsrmSetting;
    struct DIFsrmClassificationEvents;
    struct IFsrmAccessDeniedRemediationClient;
    struct IFsrmAction;
    struct IFsrmActionCommand;
    struct IFsrmActionEmail;
    struct IFsrmActionEmail2;
    struct IFsrmActionEventLog;
    struct IFsrmActionReport;
    struct IFsrmAutoApplyQuota;
    struct IFsrmClassificationManager;
    struct IFsrmClassificationManager2;
    struct IFsrmClassificationRule;
    struct IFsrmClassifierModuleDefinition;
    struct IFsrmClassifierModuleImplementation;
    struct IFsrmCollection;
    struct IFsrmCommittableCollection;
    struct IFsrmDerivedObjectsResult;
    struct IFsrmExportImport;
    struct IFsrmFileCondition;
    struct IFsrmFileConditionProperty;
    struct IFsrmFileGroup;
    struct IFsrmFileGroupImported;
    struct IFsrmFileGroupManager;
    struct IFsrmFileManagementJob;
    struct IFsrmFileManagementJobManager;
    struct IFsrmFileScreen;
    struct IFsrmFileScreenBase;
    struct IFsrmFileScreenException;
    struct IFsrmFileScreenManager;
    struct IFsrmFileScreenTemplate;
    struct IFsrmFileScreenTemplateImported;
    struct IFsrmFileScreenTemplateManager;
    struct IFsrmMutableCollection;
    struct IFsrmObject;
    struct IFsrmPathMapper;
    struct IFsrmPipelineModuleConnector;
    struct IFsrmPipelineModuleDefinition;
    struct IFsrmPipelineModuleImplementation;
    struct IFsrmProperty;
    struct IFsrmPropertyBag;
    struct IFsrmPropertyBag2;
    struct IFsrmPropertyCondition;
    struct IFsrmPropertyDefinition;
    struct IFsrmPropertyDefinition2;
    struct IFsrmPropertyDefinitionValue;
    struct IFsrmQuota;
    struct IFsrmQuotaBase;
    struct IFsrmQuotaManager;
    struct IFsrmQuotaManagerEx;
    struct IFsrmQuotaObject;
    struct IFsrmQuotaTemplate;
    struct IFsrmQuotaTemplateImported;
    struct IFsrmQuotaTemplateManager;
    struct IFsrmReport;
    struct IFsrmReportJob;
    struct IFsrmReportManager;
    struct IFsrmReportScheduler;
    struct IFsrmRule;
    struct IFsrmSetting;
    struct IFsrmStorageModuleDefinition;
    struct IFsrmStorageModuleImplementation;
#pragma endregion forward_declarations

#pragma region delegates
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
