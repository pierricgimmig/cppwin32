// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Media_2_H
#define WIN32_Windows_Win32_Media_2_H
#include "win32/Windows.Win32.Media.h"
#include "win32/impl/Windows.Win32.Media.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::Media
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    uint32_t __stdcall ORBIT_IMPL_timeGetSystemTime(win32::Windows::Win32::Media::MMTIME* pmmt, uint32_t cbmmt) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pmmt);
        ORBIT_TRACK_PARAM(cbmmt);

        auto win32_impl_result = g_api_table.timeGetSystemTime(pmmt, cbmmt);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_timeGetTime() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.timeGetTime();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_timeGetDevCaps(win32::Windows::Win32::Media::TIMECAPS* ptc, uint32_t cbtc) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ptc);
        ORBIT_TRACK_PARAM(cbtc);

        auto win32_impl_result = g_api_table.timeGetDevCaps(ptc, cbtc);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_timeBeginPeriod(uint32_t uPeriod) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(uPeriod);

        auto win32_impl_result = g_api_table.timeBeginPeriod(uPeriod);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_timeEndPeriod(uint32_t uPeriod) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(uPeriod);

        auto win32_impl_result = g_api_table.timeEndPeriod(uPeriod);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_timeSetEvent(uint32_t uDelay, uint32_t uResolution, win32::Windows::Win32::Media::LPTIMECALLBACK* fptc, size_t dwUser, uint32_t fuEvent) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(uDelay);
        ORBIT_TRACK_PARAM(uResolution);
        ORBIT_TRACK_PARAM(fptc);
        ORBIT_TRACK_PARAM(dwUser);
        ORBIT_TRACK_PARAM(fuEvent);

        auto win32_impl_result = g_api_table.timeSetEvent(uDelay, uResolution, fptc, dwUser, fuEvent);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_timeKillEvent(uint32_t uTimerID) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(uTimerID);

        auto win32_impl_result = g_api_table.timeKillEvent(uTimerID);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
