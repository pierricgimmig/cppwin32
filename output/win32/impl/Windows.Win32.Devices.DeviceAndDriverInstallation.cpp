// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Devices_DeviceAndDriverInstallation_2_H
#define WIN32_Windows_Win32_Devices_DeviceAndDriverInstallation_2_H
#include "win32/Windows.Win32.Devices.DeviceAndDriverInstallation.h"
#include "win32/impl/Windows.Win32.Devices.DeviceAndDriverInstallation.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::Devices::DeviceAndDriverInstallation
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetInfInformationA(void* InfSpec, uint32_t SearchControl, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_INF_INFORMATION* ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfSpec);
        ORBIT_TRACK_PARAM(SearchControl);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetInfInformationA(InfSpec, SearchControl, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetInfInformationW(void* InfSpec, uint32_t SearchControl, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_INF_INFORMATION* ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfSpec);
        ORBIT_TRACK_PARAM(SearchControl);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetInfInformationW(InfSpec, SearchControl, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueryInfFileInformationA(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_INF_INFORMATION* InfInformation, uint32_t InfIndex, win32::Windows::Win32::Foundation::PSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfInformation);
        ORBIT_TRACK_PARAM(InfIndex);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupQueryInfFileInformationA(InfInformation, InfIndex, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueryInfFileInformationW(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_INF_INFORMATION* InfInformation, uint32_t InfIndex, win32::Windows::Win32::Foundation::PWSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfInformation);
        ORBIT_TRACK_PARAM(InfIndex);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupQueryInfFileInformationW(InfInformation, InfIndex, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueryInfOriginalFileInformationA(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_INF_INFORMATION* InfInformation, uint32_t InfIndex, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_ALTPLATFORM_INFO_V2* AlternatePlatformInfo, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_ORIGINAL_FILE_INFO_A* OriginalFileInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfInformation);
        ORBIT_TRACK_PARAM(InfIndex);
        ORBIT_TRACK_PARAM(AlternatePlatformInfo);
        ORBIT_TRACK_PARAM(OriginalFileInfo);

        auto win32_impl_result = g_api_table.SetupQueryInfOriginalFileInformationA(InfInformation, InfIndex, AlternatePlatformInfo, OriginalFileInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueryInfOriginalFileInformationW(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_INF_INFORMATION* InfInformation, uint32_t InfIndex, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_ALTPLATFORM_INFO_V2* AlternatePlatformInfo, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_ORIGINAL_FILE_INFO_W* OriginalFileInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfInformation);
        ORBIT_TRACK_PARAM(InfIndex);
        ORBIT_TRACK_PARAM(AlternatePlatformInfo);
        ORBIT_TRACK_PARAM(OriginalFileInfo);

        auto win32_impl_result = g_api_table.SetupQueryInfOriginalFileInformationW(InfInformation, InfIndex, AlternatePlatformInfo, OriginalFileInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueryInfVersionInformationA(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_INF_INFORMATION* InfInformation, uint32_t InfIndex, win32::Windows::Win32::Foundation::PSTR Key, win32::Windows::Win32::Foundation::PSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfInformation);
        ORBIT_TRACK_PARAM(InfIndex);
        ORBIT_TRACK_PARAM(Key);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupQueryInfVersionInformationA(InfInformation, InfIndex, Key, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueryInfVersionInformationW(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_INF_INFORMATION* InfInformation, uint32_t InfIndex, win32::Windows::Win32::Foundation::PWSTR Key, win32::Windows::Win32::Foundation::PWSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfInformation);
        ORBIT_TRACK_PARAM(InfIndex);
        ORBIT_TRACK_PARAM(Key);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupQueryInfVersionInformationW(InfInformation, InfIndex, Key, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetInfDriverStoreLocationA(win32::Windows::Win32::Foundation::PSTR FileName, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_ALTPLATFORM_INFO_V2* AlternatePlatformInfo, win32::Windows::Win32::Foundation::PSTR LocaleName, win32::Windows::Win32::Foundation::PSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(AlternatePlatformInfo);
        ORBIT_TRACK_PARAM(LocaleName);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetInfDriverStoreLocationA(FileName, AlternatePlatformInfo, LocaleName, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetInfDriverStoreLocationW(win32::Windows::Win32::Foundation::PWSTR FileName, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_ALTPLATFORM_INFO_V2* AlternatePlatformInfo, win32::Windows::Win32::Foundation::PWSTR LocaleName, win32::Windows::Win32::Foundation::PWSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(AlternatePlatformInfo);
        ORBIT_TRACK_PARAM(LocaleName);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetInfDriverStoreLocationW(FileName, AlternatePlatformInfo, LocaleName, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetInfPublishedNameA(win32::Windows::Win32::Foundation::PSTR DriverStoreLocation, win32::Windows::Win32::Foundation::PSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DriverStoreLocation);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetInfPublishedNameA(DriverStoreLocation, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetInfPublishedNameW(win32::Windows::Win32::Foundation::PWSTR DriverStoreLocation, win32::Windows::Win32::Foundation::PWSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DriverStoreLocation);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetInfPublishedNameW(DriverStoreLocation, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetInfFileListA(win32::Windows::Win32::Foundation::PSTR DirectoryPath, uint32_t InfStyle, win32::Windows::Win32::Foundation::PSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DirectoryPath);
        ORBIT_TRACK_PARAM(InfStyle);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetInfFileListA(DirectoryPath, InfStyle, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetInfFileListW(win32::Windows::Win32::Foundation::PWSTR DirectoryPath, uint32_t InfStyle, win32::Windows::Win32::Foundation::PWSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DirectoryPath);
        ORBIT_TRACK_PARAM(InfStyle);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetInfFileListW(DirectoryPath, InfStyle, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SetupOpenInfFileW(win32::Windows::Win32::Foundation::PWSTR FileName, win32::Windows::Win32::Foundation::PWSTR InfClass, uint32_t InfStyle, uint32_t* ErrorLine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(InfClass);
        ORBIT_TRACK_PARAM(InfStyle);
        ORBIT_TRACK_PARAM(ErrorLine);

        auto win32_impl_result = g_api_table.SetupOpenInfFileW(FileName, InfClass, InfStyle, ErrorLine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SetupOpenInfFileA(win32::Windows::Win32::Foundation::PSTR FileName, win32::Windows::Win32::Foundation::PSTR InfClass, uint32_t InfStyle, uint32_t* ErrorLine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(InfClass);
        ORBIT_TRACK_PARAM(InfStyle);
        ORBIT_TRACK_PARAM(ErrorLine);

        auto win32_impl_result = g_api_table.SetupOpenInfFileA(FileName, InfClass, InfStyle, ErrorLine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SetupOpenMasterInf() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.SetupOpenMasterInf();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupOpenAppendInfFileW(win32::Windows::Win32::Foundation::PWSTR FileName, void* InfHandle, uint32_t* ErrorLine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(ErrorLine);

        auto win32_impl_result = g_api_table.SetupOpenAppendInfFileW(FileName, InfHandle, ErrorLine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupOpenAppendInfFileA(win32::Windows::Win32::Foundation::PSTR FileName, void* InfHandle, uint32_t* ErrorLine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(ErrorLine);

        auto win32_impl_result = g_api_table.SetupOpenAppendInfFileA(FileName, InfHandle, ErrorLine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_SetupCloseInfFile(void* InfHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);

        g_api_table.SetupCloseInfFile(InfHandle);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupFindFirstLineA(void* InfHandle, win32::Windows::Win32::Foundation::PSTR Section, win32::Windows::Win32::Foundation::PSTR Key, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* Context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(Section);
        ORBIT_TRACK_PARAM(Key);
        ORBIT_TRACK_PARAM(Context);

        auto win32_impl_result = g_api_table.SetupFindFirstLineA(InfHandle, Section, Key, Context);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupFindFirstLineW(void* InfHandle, win32::Windows::Win32::Foundation::PWSTR Section, win32::Windows::Win32::Foundation::PWSTR Key, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* Context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(Section);
        ORBIT_TRACK_PARAM(Key);
        ORBIT_TRACK_PARAM(Context);

        auto win32_impl_result = g_api_table.SetupFindFirstLineW(InfHandle, Section, Key, Context);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupFindNextLine(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* ContextIn, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* ContextOut) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ContextIn);
        ORBIT_TRACK_PARAM(ContextOut);

        auto win32_impl_result = g_api_table.SetupFindNextLine(ContextIn, ContextOut);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupFindNextMatchLineA(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* ContextIn, win32::Windows::Win32::Foundation::PSTR Key, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* ContextOut) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ContextIn);
        ORBIT_TRACK_PARAM(Key);
        ORBIT_TRACK_PARAM(ContextOut);

        auto win32_impl_result = g_api_table.SetupFindNextMatchLineA(ContextIn, Key, ContextOut);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupFindNextMatchLineW(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* ContextIn, win32::Windows::Win32::Foundation::PWSTR Key, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* ContextOut) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ContextIn);
        ORBIT_TRACK_PARAM(Key);
        ORBIT_TRACK_PARAM(ContextOut);

        auto win32_impl_result = g_api_table.SetupFindNextMatchLineW(ContextIn, Key, ContextOut);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetLineByIndexA(void* InfHandle, win32::Windows::Win32::Foundation::PSTR Section, uint32_t Index, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* Context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(Section);
        ORBIT_TRACK_PARAM(Index);
        ORBIT_TRACK_PARAM(Context);

        auto win32_impl_result = g_api_table.SetupGetLineByIndexA(InfHandle, Section, Index, Context);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetLineByIndexW(void* InfHandle, win32::Windows::Win32::Foundation::PWSTR Section, uint32_t Index, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* Context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(Section);
        ORBIT_TRACK_PARAM(Index);
        ORBIT_TRACK_PARAM(Context);

        auto win32_impl_result = g_api_table.SetupGetLineByIndexW(InfHandle, Section, Index, Context);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SetupGetLineCountA(void* InfHandle, win32::Windows::Win32::Foundation::PSTR Section) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(Section);

        auto win32_impl_result = g_api_table.SetupGetLineCountA(InfHandle, Section);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SetupGetLineCountW(void* InfHandle, win32::Windows::Win32::Foundation::PWSTR Section) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(Section);

        auto win32_impl_result = g_api_table.SetupGetLineCountW(InfHandle, Section);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetLineTextA(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* Context, void* InfHandle, win32::Windows::Win32::Foundation::PSTR Section, win32::Windows::Win32::Foundation::PSTR Key, win32::Windows::Win32::Foundation::PSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(Section);
        ORBIT_TRACK_PARAM(Key);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetLineTextA(Context, InfHandle, Section, Key, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetLineTextW(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* Context, void* InfHandle, win32::Windows::Win32::Foundation::PWSTR Section, win32::Windows::Win32::Foundation::PWSTR Key, win32::Windows::Win32::Foundation::PWSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(Section);
        ORBIT_TRACK_PARAM(Key);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetLineTextW(Context, InfHandle, Section, Key, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetupGetFieldCount(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* Context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Context);

        auto win32_impl_result = g_api_table.SetupGetFieldCount(Context);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetStringFieldA(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* Context, uint32_t FieldIndex, win32::Windows::Win32::Foundation::PSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(FieldIndex);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetStringFieldA(Context, FieldIndex, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetStringFieldW(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* Context, uint32_t FieldIndex, win32::Windows::Win32::Foundation::PWSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(FieldIndex);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetStringFieldW(Context, FieldIndex, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetIntField(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* Context, uint32_t FieldIndex, int32_t* IntegerValue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(FieldIndex);
        ORBIT_TRACK_PARAM(IntegerValue);

        auto win32_impl_result = g_api_table.SetupGetIntField(Context, FieldIndex, IntegerValue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetMultiSzFieldA(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* Context, uint32_t FieldIndex, win32::Windows::Win32::Foundation::PSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(FieldIndex);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetMultiSzFieldA(Context, FieldIndex, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetMultiSzFieldW(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* Context, uint32_t FieldIndex, win32::Windows::Win32::Foundation::PWSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(FieldIndex);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetMultiSzFieldW(Context, FieldIndex, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetBinaryField(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* Context, uint32_t FieldIndex, uint8_t* ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(FieldIndex);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetBinaryField(Context, FieldIndex, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetupGetFileCompressionInfoA(win32::Windows::Win32::Foundation::PSTR SourceFileName, win32::Windows::Win32::Foundation::PSTR* ActualSourceFileName, uint32_t* SourceFileSize, uint32_t* TargetFileSize, uint32_t* CompressionType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SourceFileName);
        ORBIT_TRACK_PARAM(ActualSourceFileName);
        ORBIT_TRACK_PARAM(SourceFileSize);
        ORBIT_TRACK_PARAM(TargetFileSize);
        ORBIT_TRACK_PARAM(CompressionType);

        auto win32_impl_result = g_api_table.SetupGetFileCompressionInfoA(SourceFileName, ActualSourceFileName, SourceFileSize, TargetFileSize, CompressionType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetupGetFileCompressionInfoW(win32::Windows::Win32::Foundation::PWSTR SourceFileName, win32::Windows::Win32::Foundation::PWSTR* ActualSourceFileName, uint32_t* SourceFileSize, uint32_t* TargetFileSize, uint32_t* CompressionType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SourceFileName);
        ORBIT_TRACK_PARAM(ActualSourceFileName);
        ORBIT_TRACK_PARAM(SourceFileSize);
        ORBIT_TRACK_PARAM(TargetFileSize);
        ORBIT_TRACK_PARAM(CompressionType);

        auto win32_impl_result = g_api_table.SetupGetFileCompressionInfoW(SourceFileName, ActualSourceFileName, SourceFileSize, TargetFileSize, CompressionType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetFileCompressionInfoExA(win32::Windows::Win32::Foundation::PSTR SourceFileName, win32::Windows::Win32::Foundation::PSTR ActualSourceFileNameBuffer, uint32_t ActualSourceFileNameBufferLen, uint32_t* RequiredBufferLen, uint32_t* SourceFileSize, uint32_t* TargetFileSize, uint32_t* CompressionType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SourceFileName);
        ORBIT_TRACK_PARAM(ActualSourceFileNameBuffer);
        ORBIT_TRACK_PARAM(ActualSourceFileNameBufferLen);
        ORBIT_TRACK_PARAM(RequiredBufferLen);
        ORBIT_TRACK_PARAM(SourceFileSize);
        ORBIT_TRACK_PARAM(TargetFileSize);
        ORBIT_TRACK_PARAM(CompressionType);

        auto win32_impl_result = g_api_table.SetupGetFileCompressionInfoExA(SourceFileName, ActualSourceFileNameBuffer, ActualSourceFileNameBufferLen, RequiredBufferLen, SourceFileSize, TargetFileSize, CompressionType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetFileCompressionInfoExW(win32::Windows::Win32::Foundation::PWSTR SourceFileName, win32::Windows::Win32::Foundation::PWSTR ActualSourceFileNameBuffer, uint32_t ActualSourceFileNameBufferLen, uint32_t* RequiredBufferLen, uint32_t* SourceFileSize, uint32_t* TargetFileSize, uint32_t* CompressionType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SourceFileName);
        ORBIT_TRACK_PARAM(ActualSourceFileNameBuffer);
        ORBIT_TRACK_PARAM(ActualSourceFileNameBufferLen);
        ORBIT_TRACK_PARAM(RequiredBufferLen);
        ORBIT_TRACK_PARAM(SourceFileSize);
        ORBIT_TRACK_PARAM(TargetFileSize);
        ORBIT_TRACK_PARAM(CompressionType);

        auto win32_impl_result = g_api_table.SetupGetFileCompressionInfoExW(SourceFileName, ActualSourceFileNameBuffer, ActualSourceFileNameBufferLen, RequiredBufferLen, SourceFileSize, TargetFileSize, CompressionType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetupDecompressOrCopyFileA(win32::Windows::Win32::Foundation::PSTR SourceFileName, win32::Windows::Win32::Foundation::PSTR TargetFileName, uint32_t* CompressionType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SourceFileName);
        ORBIT_TRACK_PARAM(TargetFileName);
        ORBIT_TRACK_PARAM(CompressionType);

        auto win32_impl_result = g_api_table.SetupDecompressOrCopyFileA(SourceFileName, TargetFileName, CompressionType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetupDecompressOrCopyFileW(win32::Windows::Win32::Foundation::PWSTR SourceFileName, win32::Windows::Win32::Foundation::PWSTR TargetFileName, uint32_t* CompressionType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SourceFileName);
        ORBIT_TRACK_PARAM(TargetFileName);
        ORBIT_TRACK_PARAM(CompressionType);

        auto win32_impl_result = g_api_table.SetupDecompressOrCopyFileW(SourceFileName, TargetFileName, CompressionType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetSourceFileLocationA(void* InfHandle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* InfContext, win32::Windows::Win32::Foundation::PSTR FileName, uint32_t* SourceId, win32::Windows::Win32::Foundation::PSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(InfContext);
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(SourceId);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetSourceFileLocationA(InfHandle, InfContext, FileName, SourceId, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetSourceFileLocationW(void* InfHandle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* InfContext, win32::Windows::Win32::Foundation::PWSTR FileName, uint32_t* SourceId, win32::Windows::Win32::Foundation::PWSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(InfContext);
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(SourceId);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetSourceFileLocationW(InfHandle, InfContext, FileName, SourceId, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetSourceFileSizeA(void* InfHandle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* InfContext, win32::Windows::Win32::Foundation::PSTR FileName, win32::Windows::Win32::Foundation::PSTR Section, uint32_t* FileSize, uint32_t RoundingFactor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(InfContext);
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(Section);
        ORBIT_TRACK_PARAM(FileSize);
        ORBIT_TRACK_PARAM(RoundingFactor);

        auto win32_impl_result = g_api_table.SetupGetSourceFileSizeA(InfHandle, InfContext, FileName, Section, FileSize, RoundingFactor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetSourceFileSizeW(void* InfHandle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* InfContext, win32::Windows::Win32::Foundation::PWSTR FileName, win32::Windows::Win32::Foundation::PWSTR Section, uint32_t* FileSize, uint32_t RoundingFactor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(InfContext);
        ORBIT_TRACK_PARAM(FileName);
        ORBIT_TRACK_PARAM(Section);
        ORBIT_TRACK_PARAM(FileSize);
        ORBIT_TRACK_PARAM(RoundingFactor);

        auto win32_impl_result = g_api_table.SetupGetSourceFileSizeW(InfHandle, InfContext, FileName, Section, FileSize, RoundingFactor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetTargetPathA(void* InfHandle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* InfContext, win32::Windows::Win32::Foundation::PSTR Section, win32::Windows::Win32::Foundation::PSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(InfContext);
        ORBIT_TRACK_PARAM(Section);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetTargetPathA(InfHandle, InfContext, Section, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetTargetPathW(void* InfHandle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* InfContext, win32::Windows::Win32::Foundation::PWSTR Section, win32::Windows::Win32::Foundation::PWSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(InfContext);
        ORBIT_TRACK_PARAM(Section);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetTargetPathW(InfHandle, InfContext, Section, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupSetSourceListA(uint32_t Flags, win32::Windows::Win32::Foundation::PSTR* SourceList, uint32_t SourceCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(SourceList);
        ORBIT_TRACK_PARAM(SourceCount);

        auto win32_impl_result = g_api_table.SetupSetSourceListA(Flags, SourceList, SourceCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupSetSourceListW(uint32_t Flags, win32::Windows::Win32::Foundation::PWSTR* SourceList, uint32_t SourceCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(SourceList);
        ORBIT_TRACK_PARAM(SourceCount);

        auto win32_impl_result = g_api_table.SetupSetSourceListW(Flags, SourceList, SourceCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupCancelTemporarySourceList() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.SetupCancelTemporarySourceList();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupAddToSourceListA(uint32_t Flags, win32::Windows::Win32::Foundation::PSTR Source) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Source);

        auto win32_impl_result = g_api_table.SetupAddToSourceListA(Flags, Source);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupAddToSourceListW(uint32_t Flags, win32::Windows::Win32::Foundation::PWSTR Source) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Source);

        auto win32_impl_result = g_api_table.SetupAddToSourceListW(Flags, Source);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupRemoveFromSourceListA(uint32_t Flags, win32::Windows::Win32::Foundation::PSTR Source) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Source);

        auto win32_impl_result = g_api_table.SetupRemoveFromSourceListA(Flags, Source);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupRemoveFromSourceListW(uint32_t Flags, win32::Windows::Win32::Foundation::PWSTR Source) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Source);

        auto win32_impl_result = g_api_table.SetupRemoveFromSourceListW(Flags, Source);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQuerySourceListA(uint32_t Flags, win32::Windows::Win32::Foundation::PSTR** List, uint32_t* Count) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(List);
        ORBIT_TRACK_PARAM(Count);

        auto win32_impl_result = g_api_table.SetupQuerySourceListA(Flags, List, Count);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQuerySourceListW(uint32_t Flags, win32::Windows::Win32::Foundation::PWSTR** List, uint32_t* Count) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(List);
        ORBIT_TRACK_PARAM(Count);

        auto win32_impl_result = g_api_table.SetupQuerySourceListW(Flags, List, Count);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupFreeSourceListA(win32::Windows::Win32::Foundation::PSTR** List, uint32_t Count) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(List);
        ORBIT_TRACK_PARAM(Count);

        auto win32_impl_result = g_api_table.SetupFreeSourceListA(List, Count);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupFreeSourceListW(win32::Windows::Win32::Foundation::PWSTR** List, uint32_t Count) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(List);
        ORBIT_TRACK_PARAM(Count);

        auto win32_impl_result = g_api_table.SetupFreeSourceListW(List, Count);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetupPromptForDiskA(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PSTR DialogTitle, win32::Windows::Win32::Foundation::PSTR DiskName, win32::Windows::Win32::Foundation::PSTR PathToSource, win32::Windows::Win32::Foundation::PSTR FileSought, win32::Windows::Win32::Foundation::PSTR TagFile, uint32_t DiskPromptStyle, win32::Windows::Win32::Foundation::PSTR PathBuffer, uint32_t PathBufferSize, uint32_t* PathRequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(DialogTitle);
        ORBIT_TRACK_PARAM(DiskName);
        ORBIT_TRACK_PARAM(PathToSource);
        ORBIT_TRACK_PARAM(FileSought);
        ORBIT_TRACK_PARAM(TagFile);
        ORBIT_TRACK_PARAM(DiskPromptStyle);
        ORBIT_TRACK_PARAM(PathBuffer);
        ORBIT_TRACK_PARAM(PathBufferSize);
        ORBIT_TRACK_PARAM(PathRequiredSize);

        auto win32_impl_result = g_api_table.SetupPromptForDiskA(hwndParent, DialogTitle, DiskName, PathToSource, FileSought, TagFile, DiskPromptStyle, PathBuffer, PathBufferSize, PathRequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetupPromptForDiskW(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PWSTR DialogTitle, win32::Windows::Win32::Foundation::PWSTR DiskName, win32::Windows::Win32::Foundation::PWSTR PathToSource, win32::Windows::Win32::Foundation::PWSTR FileSought, win32::Windows::Win32::Foundation::PWSTR TagFile, uint32_t DiskPromptStyle, win32::Windows::Win32::Foundation::PWSTR PathBuffer, uint32_t PathBufferSize, uint32_t* PathRequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(DialogTitle);
        ORBIT_TRACK_PARAM(DiskName);
        ORBIT_TRACK_PARAM(PathToSource);
        ORBIT_TRACK_PARAM(FileSought);
        ORBIT_TRACK_PARAM(TagFile);
        ORBIT_TRACK_PARAM(DiskPromptStyle);
        ORBIT_TRACK_PARAM(PathBuffer);
        ORBIT_TRACK_PARAM(PathBufferSize);
        ORBIT_TRACK_PARAM(PathRequiredSize);

        auto win32_impl_result = g_api_table.SetupPromptForDiskW(hwndParent, DialogTitle, DiskName, PathToSource, FileSought, TagFile, DiskPromptStyle, PathBuffer, PathBufferSize, PathRequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetupCopyErrorA(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PSTR DialogTitle, win32::Windows::Win32::Foundation::PSTR DiskName, win32::Windows::Win32::Foundation::PSTR PathToSource, win32::Windows::Win32::Foundation::PSTR SourceFile, win32::Windows::Win32::Foundation::PSTR TargetPathFile, uint32_t Win32ErrorCode, uint32_t Style, win32::Windows::Win32::Foundation::PSTR PathBuffer, uint32_t PathBufferSize, uint32_t* PathRequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(DialogTitle);
        ORBIT_TRACK_PARAM(DiskName);
        ORBIT_TRACK_PARAM(PathToSource);
        ORBIT_TRACK_PARAM(SourceFile);
        ORBIT_TRACK_PARAM(TargetPathFile);
        ORBIT_TRACK_PARAM(Win32ErrorCode);
        ORBIT_TRACK_PARAM(Style);
        ORBIT_TRACK_PARAM(PathBuffer);
        ORBIT_TRACK_PARAM(PathBufferSize);
        ORBIT_TRACK_PARAM(PathRequiredSize);

        auto win32_impl_result = g_api_table.SetupCopyErrorA(hwndParent, DialogTitle, DiskName, PathToSource, SourceFile, TargetPathFile, Win32ErrorCode, Style, PathBuffer, PathBufferSize, PathRequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetupCopyErrorW(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PWSTR DialogTitle, win32::Windows::Win32::Foundation::PWSTR DiskName, win32::Windows::Win32::Foundation::PWSTR PathToSource, win32::Windows::Win32::Foundation::PWSTR SourceFile, win32::Windows::Win32::Foundation::PWSTR TargetPathFile, uint32_t Win32ErrorCode, uint32_t Style, win32::Windows::Win32::Foundation::PWSTR PathBuffer, uint32_t PathBufferSize, uint32_t* PathRequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(DialogTitle);
        ORBIT_TRACK_PARAM(DiskName);
        ORBIT_TRACK_PARAM(PathToSource);
        ORBIT_TRACK_PARAM(SourceFile);
        ORBIT_TRACK_PARAM(TargetPathFile);
        ORBIT_TRACK_PARAM(Win32ErrorCode);
        ORBIT_TRACK_PARAM(Style);
        ORBIT_TRACK_PARAM(PathBuffer);
        ORBIT_TRACK_PARAM(PathBufferSize);
        ORBIT_TRACK_PARAM(PathRequiredSize);

        auto win32_impl_result = g_api_table.SetupCopyErrorW(hwndParent, DialogTitle, DiskName, PathToSource, SourceFile, TargetPathFile, Win32ErrorCode, Style, PathBuffer, PathBufferSize, PathRequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetupRenameErrorA(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PSTR DialogTitle, win32::Windows::Win32::Foundation::PSTR SourceFile, win32::Windows::Win32::Foundation::PSTR TargetFile, uint32_t Win32ErrorCode, uint32_t Style) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(DialogTitle);
        ORBIT_TRACK_PARAM(SourceFile);
        ORBIT_TRACK_PARAM(TargetFile);
        ORBIT_TRACK_PARAM(Win32ErrorCode);
        ORBIT_TRACK_PARAM(Style);

        auto win32_impl_result = g_api_table.SetupRenameErrorA(hwndParent, DialogTitle, SourceFile, TargetFile, Win32ErrorCode, Style);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetupRenameErrorW(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PWSTR DialogTitle, win32::Windows::Win32::Foundation::PWSTR SourceFile, win32::Windows::Win32::Foundation::PWSTR TargetFile, uint32_t Win32ErrorCode, uint32_t Style) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(DialogTitle);
        ORBIT_TRACK_PARAM(SourceFile);
        ORBIT_TRACK_PARAM(TargetFile);
        ORBIT_TRACK_PARAM(Win32ErrorCode);
        ORBIT_TRACK_PARAM(Style);

        auto win32_impl_result = g_api_table.SetupRenameErrorW(hwndParent, DialogTitle, SourceFile, TargetFile, Win32ErrorCode, Style);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetupDeleteErrorA(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PSTR DialogTitle, win32::Windows::Win32::Foundation::PSTR File, uint32_t Win32ErrorCode, uint32_t Style) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(DialogTitle);
        ORBIT_TRACK_PARAM(File);
        ORBIT_TRACK_PARAM(Win32ErrorCode);
        ORBIT_TRACK_PARAM(Style);

        auto win32_impl_result = g_api_table.SetupDeleteErrorA(hwndParent, DialogTitle, File, Win32ErrorCode, Style);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetupDeleteErrorW(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PWSTR DialogTitle, win32::Windows::Win32::Foundation::PWSTR File, uint32_t Win32ErrorCode, uint32_t Style) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(DialogTitle);
        ORBIT_TRACK_PARAM(File);
        ORBIT_TRACK_PARAM(Win32ErrorCode);
        ORBIT_TRACK_PARAM(Style);

        auto win32_impl_result = g_api_table.SetupDeleteErrorW(hwndParent, DialogTitle, File, Win32ErrorCode, Style);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetupBackupErrorA(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PSTR DialogTitle, win32::Windows::Win32::Foundation::PSTR SourceFile, win32::Windows::Win32::Foundation::PSTR TargetFile, uint32_t Win32ErrorCode, uint32_t Style) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(DialogTitle);
        ORBIT_TRACK_PARAM(SourceFile);
        ORBIT_TRACK_PARAM(TargetFile);
        ORBIT_TRACK_PARAM(Win32ErrorCode);
        ORBIT_TRACK_PARAM(Style);

        auto win32_impl_result = g_api_table.SetupBackupErrorA(hwndParent, DialogTitle, SourceFile, TargetFile, Win32ErrorCode, Style);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetupBackupErrorW(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PWSTR DialogTitle, win32::Windows::Win32::Foundation::PWSTR SourceFile, win32::Windows::Win32::Foundation::PWSTR TargetFile, uint32_t Win32ErrorCode, uint32_t Style) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(DialogTitle);
        ORBIT_TRACK_PARAM(SourceFile);
        ORBIT_TRACK_PARAM(TargetFile);
        ORBIT_TRACK_PARAM(Win32ErrorCode);
        ORBIT_TRACK_PARAM(Style);

        auto win32_impl_result = g_api_table.SetupBackupErrorW(hwndParent, DialogTitle, SourceFile, TargetFile, Win32ErrorCode, Style);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupSetDirectoryIdA(void* InfHandle, uint32_t Id, win32::Windows::Win32::Foundation::PSTR Directory) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(Id);
        ORBIT_TRACK_PARAM(Directory);

        auto win32_impl_result = g_api_table.SetupSetDirectoryIdA(InfHandle, Id, Directory);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupSetDirectoryIdW(void* InfHandle, uint32_t Id, win32::Windows::Win32::Foundation::PWSTR Directory) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(Id);
        ORBIT_TRACK_PARAM(Directory);

        auto win32_impl_result = g_api_table.SetupSetDirectoryIdW(InfHandle, Id, Directory);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupSetDirectoryIdExA(void* InfHandle, uint32_t Id, win32::Windows::Win32::Foundation::PSTR Directory, uint32_t Flags, uint32_t Reserved1, void* Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(Id);
        ORBIT_TRACK_PARAM(Directory);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupSetDirectoryIdExA(InfHandle, Id, Directory, Flags, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupSetDirectoryIdExW(void* InfHandle, uint32_t Id, win32::Windows::Win32::Foundation::PWSTR Directory, uint32_t Flags, uint32_t Reserved1, void* Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(Id);
        ORBIT_TRACK_PARAM(Directory);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupSetDirectoryIdExW(InfHandle, Id, Directory, Flags, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetSourceInfoA(void* InfHandle, uint32_t SourceId, uint32_t InfoDesired, win32::Windows::Win32::Foundation::PSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(SourceId);
        ORBIT_TRACK_PARAM(InfoDesired);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetSourceInfoA(InfHandle, SourceId, InfoDesired, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetSourceInfoW(void* InfHandle, uint32_t SourceId, uint32_t InfoDesired, win32::Windows::Win32::Foundation::PWSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(SourceId);
        ORBIT_TRACK_PARAM(InfoDesired);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupGetSourceInfoW(InfHandle, SourceId, InfoDesired, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupInstallFileA(void* InfHandle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* InfContext, win32::Windows::Win32::Foundation::PSTR SourceFile, win32::Windows::Win32::Foundation::PSTR SourcePathRoot, win32::Windows::Win32::Foundation::PSTR DestinationName, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_COPY_STYLE CopyStyle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PSP_FILE_CALLBACK_A* CopyMsgHandler, void* Context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(InfContext);
        ORBIT_TRACK_PARAM(SourceFile);
        ORBIT_TRACK_PARAM(SourcePathRoot);
        ORBIT_TRACK_PARAM(DestinationName);
        ORBIT_TRACK_PARAM(CopyStyle);
        ORBIT_TRACK_PARAM(CopyMsgHandler);
        ORBIT_TRACK_PARAM(Context);

        auto win32_impl_result = g_api_table.SetupInstallFileA(InfHandle, InfContext, SourceFile, SourcePathRoot, DestinationName, CopyStyle, CopyMsgHandler, Context);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupInstallFileW(void* InfHandle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* InfContext, win32::Windows::Win32::Foundation::PWSTR SourceFile, win32::Windows::Win32::Foundation::PWSTR SourcePathRoot, win32::Windows::Win32::Foundation::PWSTR DestinationName, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_COPY_STYLE CopyStyle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PSP_FILE_CALLBACK_W* CopyMsgHandler, void* Context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(InfContext);
        ORBIT_TRACK_PARAM(SourceFile);
        ORBIT_TRACK_PARAM(SourcePathRoot);
        ORBIT_TRACK_PARAM(DestinationName);
        ORBIT_TRACK_PARAM(CopyStyle);
        ORBIT_TRACK_PARAM(CopyMsgHandler);
        ORBIT_TRACK_PARAM(Context);

        auto win32_impl_result = g_api_table.SetupInstallFileW(InfHandle, InfContext, SourceFile, SourcePathRoot, DestinationName, CopyStyle, CopyMsgHandler, Context);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupInstallFileExA(void* InfHandle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* InfContext, win32::Windows::Win32::Foundation::PSTR SourceFile, win32::Windows::Win32::Foundation::PSTR SourcePathRoot, win32::Windows::Win32::Foundation::PSTR DestinationName, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_COPY_STYLE CopyStyle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PSP_FILE_CALLBACK_A* CopyMsgHandler, void* Context, win32::Windows::Win32::Foundation::BOOL* FileWasInUse) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(InfContext);
        ORBIT_TRACK_PARAM(SourceFile);
        ORBIT_TRACK_PARAM(SourcePathRoot);
        ORBIT_TRACK_PARAM(DestinationName);
        ORBIT_TRACK_PARAM(CopyStyle);
        ORBIT_TRACK_PARAM(CopyMsgHandler);
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(FileWasInUse);

        auto win32_impl_result = g_api_table.SetupInstallFileExA(InfHandle, InfContext, SourceFile, SourcePathRoot, DestinationName, CopyStyle, CopyMsgHandler, Context, FileWasInUse);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupInstallFileExW(void* InfHandle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* InfContext, win32::Windows::Win32::Foundation::PWSTR SourceFile, win32::Windows::Win32::Foundation::PWSTR SourcePathRoot, win32::Windows::Win32::Foundation::PWSTR DestinationName, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_COPY_STYLE CopyStyle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PSP_FILE_CALLBACK_W* CopyMsgHandler, void* Context, win32::Windows::Win32::Foundation::BOOL* FileWasInUse) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(InfContext);
        ORBIT_TRACK_PARAM(SourceFile);
        ORBIT_TRACK_PARAM(SourcePathRoot);
        ORBIT_TRACK_PARAM(DestinationName);
        ORBIT_TRACK_PARAM(CopyStyle);
        ORBIT_TRACK_PARAM(CopyMsgHandler);
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(FileWasInUse);

        auto win32_impl_result = g_api_table.SetupInstallFileExW(InfHandle, InfContext, SourceFile, SourcePathRoot, DestinationName, CopyStyle, CopyMsgHandler, Context, FileWasInUse);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SetupOpenFileQueue() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.SetupOpenFileQueue();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupCloseFileQueue(void* QueueHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);

        auto win32_impl_result = g_api_table.SetupCloseFileQueue(QueueHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupSetFileQueueAlternatePlatformA(void* QueueHandle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_ALTPLATFORM_INFO_V2* AlternatePlatformInfo, win32::Windows::Win32::Foundation::PSTR AlternateDefaultCatalogFile) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(AlternatePlatformInfo);
        ORBIT_TRACK_PARAM(AlternateDefaultCatalogFile);

        auto win32_impl_result = g_api_table.SetupSetFileQueueAlternatePlatformA(QueueHandle, AlternatePlatformInfo, AlternateDefaultCatalogFile);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupSetFileQueueAlternatePlatformW(void* QueueHandle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_ALTPLATFORM_INFO_V2* AlternatePlatformInfo, win32::Windows::Win32::Foundation::PWSTR AlternateDefaultCatalogFile) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(AlternatePlatformInfo);
        ORBIT_TRACK_PARAM(AlternateDefaultCatalogFile);

        auto win32_impl_result = g_api_table.SetupSetFileQueueAlternatePlatformW(QueueHandle, AlternatePlatformInfo, AlternateDefaultCatalogFile);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupSetPlatformPathOverrideA(win32::Windows::Win32::Foundation::PSTR Override) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Override);

        auto win32_impl_result = g_api_table.SetupSetPlatformPathOverrideA(Override);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupSetPlatformPathOverrideW(win32::Windows::Win32::Foundation::PWSTR Override) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Override);

        auto win32_impl_result = g_api_table.SetupSetPlatformPathOverrideW(Override);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueueCopyA(void* QueueHandle, win32::Windows::Win32::Foundation::PSTR SourceRootPath, win32::Windows::Win32::Foundation::PSTR SourcePath, win32::Windows::Win32::Foundation::PSTR SourceFilename, win32::Windows::Win32::Foundation::PSTR SourceDescription, win32::Windows::Win32::Foundation::PSTR SourceTagfile, win32::Windows::Win32::Foundation::PSTR TargetDirectory, win32::Windows::Win32::Foundation::PSTR TargetFilename, uint32_t CopyStyle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(SourceRootPath);
        ORBIT_TRACK_PARAM(SourcePath);
        ORBIT_TRACK_PARAM(SourceFilename);
        ORBIT_TRACK_PARAM(SourceDescription);
        ORBIT_TRACK_PARAM(SourceTagfile);
        ORBIT_TRACK_PARAM(TargetDirectory);
        ORBIT_TRACK_PARAM(TargetFilename);
        ORBIT_TRACK_PARAM(CopyStyle);

        auto win32_impl_result = g_api_table.SetupQueueCopyA(QueueHandle, SourceRootPath, SourcePath, SourceFilename, SourceDescription, SourceTagfile, TargetDirectory, TargetFilename, CopyStyle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueueCopyW(void* QueueHandle, win32::Windows::Win32::Foundation::PWSTR SourceRootPath, win32::Windows::Win32::Foundation::PWSTR SourcePath, win32::Windows::Win32::Foundation::PWSTR SourceFilename, win32::Windows::Win32::Foundation::PWSTR SourceDescription, win32::Windows::Win32::Foundation::PWSTR SourceTagfile, win32::Windows::Win32::Foundation::PWSTR TargetDirectory, win32::Windows::Win32::Foundation::PWSTR TargetFilename, uint32_t CopyStyle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(SourceRootPath);
        ORBIT_TRACK_PARAM(SourcePath);
        ORBIT_TRACK_PARAM(SourceFilename);
        ORBIT_TRACK_PARAM(SourceDescription);
        ORBIT_TRACK_PARAM(SourceTagfile);
        ORBIT_TRACK_PARAM(TargetDirectory);
        ORBIT_TRACK_PARAM(TargetFilename);
        ORBIT_TRACK_PARAM(CopyStyle);

        auto win32_impl_result = g_api_table.SetupQueueCopyW(QueueHandle, SourceRootPath, SourcePath, SourceFilename, SourceDescription, SourceTagfile, TargetDirectory, TargetFilename, CopyStyle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueueCopyIndirectA(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_FILE_COPY_PARAMS_A* CopyParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CopyParams);

        auto win32_impl_result = g_api_table.SetupQueueCopyIndirectA(CopyParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueueCopyIndirectW(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_FILE_COPY_PARAMS_W* CopyParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CopyParams);

        auto win32_impl_result = g_api_table.SetupQueueCopyIndirectW(CopyParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueueDefaultCopyA(void* QueueHandle, void* InfHandle, win32::Windows::Win32::Foundation::PSTR SourceRootPath, win32::Windows::Win32::Foundation::PSTR SourceFilename, win32::Windows::Win32::Foundation::PSTR TargetFilename, uint32_t CopyStyle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(SourceRootPath);
        ORBIT_TRACK_PARAM(SourceFilename);
        ORBIT_TRACK_PARAM(TargetFilename);
        ORBIT_TRACK_PARAM(CopyStyle);

        auto win32_impl_result = g_api_table.SetupQueueDefaultCopyA(QueueHandle, InfHandle, SourceRootPath, SourceFilename, TargetFilename, CopyStyle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueueDefaultCopyW(void* QueueHandle, void* InfHandle, win32::Windows::Win32::Foundation::PWSTR SourceRootPath, win32::Windows::Win32::Foundation::PWSTR SourceFilename, win32::Windows::Win32::Foundation::PWSTR TargetFilename, uint32_t CopyStyle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(SourceRootPath);
        ORBIT_TRACK_PARAM(SourceFilename);
        ORBIT_TRACK_PARAM(TargetFilename);
        ORBIT_TRACK_PARAM(CopyStyle);

        auto win32_impl_result = g_api_table.SetupQueueDefaultCopyW(QueueHandle, InfHandle, SourceRootPath, SourceFilename, TargetFilename, CopyStyle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueueCopySectionA(void* QueueHandle, win32::Windows::Win32::Foundation::PSTR SourceRootPath, void* InfHandle, void* ListInfHandle, win32::Windows::Win32::Foundation::PSTR Section, uint32_t CopyStyle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(SourceRootPath);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(ListInfHandle);
        ORBIT_TRACK_PARAM(Section);
        ORBIT_TRACK_PARAM(CopyStyle);

        auto win32_impl_result = g_api_table.SetupQueueCopySectionA(QueueHandle, SourceRootPath, InfHandle, ListInfHandle, Section, CopyStyle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueueCopySectionW(void* QueueHandle, win32::Windows::Win32::Foundation::PWSTR SourceRootPath, void* InfHandle, void* ListInfHandle, win32::Windows::Win32::Foundation::PWSTR Section, uint32_t CopyStyle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(SourceRootPath);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(ListInfHandle);
        ORBIT_TRACK_PARAM(Section);
        ORBIT_TRACK_PARAM(CopyStyle);

        auto win32_impl_result = g_api_table.SetupQueueCopySectionW(QueueHandle, SourceRootPath, InfHandle, ListInfHandle, Section, CopyStyle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueueDeleteA(void* QueueHandle, win32::Windows::Win32::Foundation::PSTR PathPart1, win32::Windows::Win32::Foundation::PSTR PathPart2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(PathPart1);
        ORBIT_TRACK_PARAM(PathPart2);

        auto win32_impl_result = g_api_table.SetupQueueDeleteA(QueueHandle, PathPart1, PathPart2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueueDeleteW(void* QueueHandle, win32::Windows::Win32::Foundation::PWSTR PathPart1, win32::Windows::Win32::Foundation::PWSTR PathPart2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(PathPart1);
        ORBIT_TRACK_PARAM(PathPart2);

        auto win32_impl_result = g_api_table.SetupQueueDeleteW(QueueHandle, PathPart1, PathPart2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueueDeleteSectionA(void* QueueHandle, void* InfHandle, void* ListInfHandle, win32::Windows::Win32::Foundation::PSTR Section) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(ListInfHandle);
        ORBIT_TRACK_PARAM(Section);

        auto win32_impl_result = g_api_table.SetupQueueDeleteSectionA(QueueHandle, InfHandle, ListInfHandle, Section);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueueDeleteSectionW(void* QueueHandle, void* InfHandle, void* ListInfHandle, win32::Windows::Win32::Foundation::PWSTR Section) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(ListInfHandle);
        ORBIT_TRACK_PARAM(Section);

        auto win32_impl_result = g_api_table.SetupQueueDeleteSectionW(QueueHandle, InfHandle, ListInfHandle, Section);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueueRenameA(void* QueueHandle, win32::Windows::Win32::Foundation::PSTR SourcePath, win32::Windows::Win32::Foundation::PSTR SourceFilename, win32::Windows::Win32::Foundation::PSTR TargetPath, win32::Windows::Win32::Foundation::PSTR TargetFilename) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(SourcePath);
        ORBIT_TRACK_PARAM(SourceFilename);
        ORBIT_TRACK_PARAM(TargetPath);
        ORBIT_TRACK_PARAM(TargetFilename);

        auto win32_impl_result = g_api_table.SetupQueueRenameA(QueueHandle, SourcePath, SourceFilename, TargetPath, TargetFilename);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueueRenameW(void* QueueHandle, win32::Windows::Win32::Foundation::PWSTR SourcePath, win32::Windows::Win32::Foundation::PWSTR SourceFilename, win32::Windows::Win32::Foundation::PWSTR TargetPath, win32::Windows::Win32::Foundation::PWSTR TargetFilename) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(SourcePath);
        ORBIT_TRACK_PARAM(SourceFilename);
        ORBIT_TRACK_PARAM(TargetPath);
        ORBIT_TRACK_PARAM(TargetFilename);

        auto win32_impl_result = g_api_table.SetupQueueRenameW(QueueHandle, SourcePath, SourceFilename, TargetPath, TargetFilename);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueueRenameSectionA(void* QueueHandle, void* InfHandle, void* ListInfHandle, win32::Windows::Win32::Foundation::PSTR Section) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(ListInfHandle);
        ORBIT_TRACK_PARAM(Section);

        auto win32_impl_result = g_api_table.SetupQueueRenameSectionA(QueueHandle, InfHandle, ListInfHandle, Section);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueueRenameSectionW(void* QueueHandle, void* InfHandle, void* ListInfHandle, win32::Windows::Win32::Foundation::PWSTR Section) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(ListInfHandle);
        ORBIT_TRACK_PARAM(Section);

        auto win32_impl_result = g_api_table.SetupQueueRenameSectionW(QueueHandle, InfHandle, ListInfHandle, Section);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupCommitFileQueueA(win32::Windows::Win32::Foundation::HWND Owner, void* QueueHandle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PSP_FILE_CALLBACK_A* MsgHandler, void* Context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Owner);
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(MsgHandler);
        ORBIT_TRACK_PARAM(Context);

        auto win32_impl_result = g_api_table.SetupCommitFileQueueA(Owner, QueueHandle, MsgHandler, Context);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupCommitFileQueueW(win32::Windows::Win32::Foundation::HWND Owner, void* QueueHandle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PSP_FILE_CALLBACK_W* MsgHandler, void* Context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Owner);
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(MsgHandler);
        ORBIT_TRACK_PARAM(Context);

        auto win32_impl_result = g_api_table.SetupCommitFileQueueW(Owner, QueueHandle, MsgHandler, Context);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupScanFileQueueA(void* FileQueue, uint32_t Flags, win32::Windows::Win32::Foundation::HWND Window, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PSP_FILE_CALLBACK_A* CallbackRoutine, void* CallbackContext, uint32_t* Result) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileQueue);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Window);
        ORBIT_TRACK_PARAM(CallbackRoutine);
        ORBIT_TRACK_PARAM(CallbackContext);
        ORBIT_TRACK_PARAM(Result);

        auto win32_impl_result = g_api_table.SetupScanFileQueueA(FileQueue, Flags, Window, CallbackRoutine, CallbackContext, Result);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupScanFileQueueW(void* FileQueue, uint32_t Flags, win32::Windows::Win32::Foundation::HWND Window, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PSP_FILE_CALLBACK_W* CallbackRoutine, void* CallbackContext, uint32_t* Result) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileQueue);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Window);
        ORBIT_TRACK_PARAM(CallbackRoutine);
        ORBIT_TRACK_PARAM(CallbackContext);
        ORBIT_TRACK_PARAM(Result);

        auto win32_impl_result = g_api_table.SetupScanFileQueueW(FileQueue, Flags, Window, CallbackRoutine, CallbackContext, Result);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetFileQueueCount(void* FileQueue, uint32_t SubQueueFileOp, uint32_t* NumOperations) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileQueue);
        ORBIT_TRACK_PARAM(SubQueueFileOp);
        ORBIT_TRACK_PARAM(NumOperations);

        auto win32_impl_result = g_api_table.SetupGetFileQueueCount(FileQueue, SubQueueFileOp, NumOperations);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetFileQueueFlags(void* FileQueue, uint32_t* Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileQueue);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupGetFileQueueFlags(FileQueue, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupSetFileQueueFlags(void* FileQueue, uint32_t FlagMask, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileQueue);
        ORBIT_TRACK_PARAM(FlagMask);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupSetFileQueueFlags(FileQueue, FlagMask, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupCopyOEMInfA(win32::Windows::Win32::Foundation::PSTR SourceInfFileName, win32::Windows::Win32::Foundation::PSTR OEMSourceMediaLocation, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::OEM_SOURCE_MEDIA_TYPE OEMSourceMediaType, uint32_t CopyStyle, win32::Windows::Win32::Foundation::PSTR DestinationInfFileName, uint32_t DestinationInfFileNameSize, uint32_t* RequiredSize, win32::Windows::Win32::Foundation::PSTR* DestinationInfFileNameComponent) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SourceInfFileName);
        ORBIT_TRACK_PARAM(OEMSourceMediaLocation);
        ORBIT_TRACK_PARAM(OEMSourceMediaType);
        ORBIT_TRACK_PARAM(CopyStyle);
        ORBIT_TRACK_PARAM(DestinationInfFileName);
        ORBIT_TRACK_PARAM(DestinationInfFileNameSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(DestinationInfFileNameComponent);

        auto win32_impl_result = g_api_table.SetupCopyOEMInfA(SourceInfFileName, OEMSourceMediaLocation, OEMSourceMediaType, CopyStyle, DestinationInfFileName, DestinationInfFileNameSize, RequiredSize, DestinationInfFileNameComponent);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupCopyOEMInfW(win32::Windows::Win32::Foundation::PWSTR SourceInfFileName, win32::Windows::Win32::Foundation::PWSTR OEMSourceMediaLocation, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::OEM_SOURCE_MEDIA_TYPE OEMSourceMediaType, uint32_t CopyStyle, win32::Windows::Win32::Foundation::PWSTR DestinationInfFileName, uint32_t DestinationInfFileNameSize, uint32_t* RequiredSize, win32::Windows::Win32::Foundation::PWSTR* DestinationInfFileNameComponent) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SourceInfFileName);
        ORBIT_TRACK_PARAM(OEMSourceMediaLocation);
        ORBIT_TRACK_PARAM(OEMSourceMediaType);
        ORBIT_TRACK_PARAM(CopyStyle);
        ORBIT_TRACK_PARAM(DestinationInfFileName);
        ORBIT_TRACK_PARAM(DestinationInfFileNameSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(DestinationInfFileNameComponent);

        auto win32_impl_result = g_api_table.SetupCopyOEMInfW(SourceInfFileName, OEMSourceMediaLocation, OEMSourceMediaType, CopyStyle, DestinationInfFileName, DestinationInfFileNameSize, RequiredSize, DestinationInfFileNameComponent);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupUninstallOEMInfA(win32::Windows::Win32::Foundation::PSTR InfFileName, uint32_t Flags, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfFileName);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupUninstallOEMInfA(InfFileName, Flags, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupUninstallOEMInfW(win32::Windows::Win32::Foundation::PWSTR InfFileName, uint32_t Flags, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfFileName);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupUninstallOEMInfW(InfFileName, Flags, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupUninstallNewlyCopiedInfs(void* FileQueue, uint32_t Flags, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileQueue);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupUninstallNewlyCopiedInfs(FileQueue, Flags, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SetupCreateDiskSpaceListA(void* Reserved1, uint32_t Reserved2, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupCreateDiskSpaceListA(Reserved1, Reserved2, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SetupCreateDiskSpaceListW(void* Reserved1, uint32_t Reserved2, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupCreateDiskSpaceListW(Reserved1, Reserved2, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SetupDuplicateDiskSpaceListA(void* DiskSpace, void* Reserved1, uint32_t Reserved2, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupDuplicateDiskSpaceListA(DiskSpace, Reserved1, Reserved2, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SetupDuplicateDiskSpaceListW(void* DiskSpace, void* Reserved1, uint32_t Reserved2, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupDuplicateDiskSpaceListW(DiskSpace, Reserved1, Reserved2, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDestroyDiskSpaceList(void* DiskSpace) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);

        auto win32_impl_result = g_api_table.SetupDestroyDiskSpaceList(DiskSpace);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueryDrivesInDiskSpaceListA(void* DiskSpace, win32::Windows::Win32::Foundation::PSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupQueryDrivesInDiskSpaceListA(DiskSpace, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueryDrivesInDiskSpaceListW(void* DiskSpace, win32::Windows::Win32::Foundation::PWSTR ReturnBuffer, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(ReturnBuffer);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupQueryDrivesInDiskSpaceListW(DiskSpace, ReturnBuffer, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQuerySpaceRequiredOnDriveA(void* DiskSpace, win32::Windows::Win32::Foundation::PSTR DriveSpec, int64_t* SpaceRequired, void* Reserved1, uint32_t Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(DriveSpec);
        ORBIT_TRACK_PARAM(SpaceRequired);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupQuerySpaceRequiredOnDriveA(DiskSpace, DriveSpec, SpaceRequired, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQuerySpaceRequiredOnDriveW(void* DiskSpace, win32::Windows::Win32::Foundation::PWSTR DriveSpec, int64_t* SpaceRequired, void* Reserved1, uint32_t Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(DriveSpec);
        ORBIT_TRACK_PARAM(SpaceRequired);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupQuerySpaceRequiredOnDriveW(DiskSpace, DriveSpec, SpaceRequired, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupAdjustDiskSpaceListA(void* DiskSpace, win32::Windows::Win32::Foundation::PSTR DriveRoot, int64_t Amount, void* Reserved1, uint32_t Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(DriveRoot);
        ORBIT_TRACK_PARAM(Amount);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupAdjustDiskSpaceListA(DiskSpace, DriveRoot, Amount, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupAdjustDiskSpaceListW(void* DiskSpace, win32::Windows::Win32::Foundation::PWSTR DriveRoot, int64_t Amount, void* Reserved1, uint32_t Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(DriveRoot);
        ORBIT_TRACK_PARAM(Amount);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupAdjustDiskSpaceListW(DiskSpace, DriveRoot, Amount, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupAddToDiskSpaceListA(void* DiskSpace, win32::Windows::Win32::Foundation::PSTR TargetFilespec, int64_t FileSize, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SETUP_FILE_OPERATION Operation, void* Reserved1, uint32_t Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(TargetFilespec);
        ORBIT_TRACK_PARAM(FileSize);
        ORBIT_TRACK_PARAM(Operation);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupAddToDiskSpaceListA(DiskSpace, TargetFilespec, FileSize, Operation, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupAddToDiskSpaceListW(void* DiskSpace, win32::Windows::Win32::Foundation::PWSTR TargetFilespec, int64_t FileSize, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SETUP_FILE_OPERATION Operation, void* Reserved1, uint32_t Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(TargetFilespec);
        ORBIT_TRACK_PARAM(FileSize);
        ORBIT_TRACK_PARAM(Operation);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupAddToDiskSpaceListW(DiskSpace, TargetFilespec, FileSize, Operation, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupAddSectionToDiskSpaceListA(void* DiskSpace, void* InfHandle, void* ListInfHandle, win32::Windows::Win32::Foundation::PSTR SectionName, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SETUP_FILE_OPERATION Operation, void* Reserved1, uint32_t Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(ListInfHandle);
        ORBIT_TRACK_PARAM(SectionName);
        ORBIT_TRACK_PARAM(Operation);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupAddSectionToDiskSpaceListA(DiskSpace, InfHandle, ListInfHandle, SectionName, Operation, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupAddSectionToDiskSpaceListW(void* DiskSpace, void* InfHandle, void* ListInfHandle, win32::Windows::Win32::Foundation::PWSTR SectionName, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SETUP_FILE_OPERATION Operation, void* Reserved1, uint32_t Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(ListInfHandle);
        ORBIT_TRACK_PARAM(SectionName);
        ORBIT_TRACK_PARAM(Operation);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupAddSectionToDiskSpaceListW(DiskSpace, InfHandle, ListInfHandle, SectionName, Operation, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupAddInstallSectionToDiskSpaceListA(void* DiskSpace, void* InfHandle, void* LayoutInfHandle, win32::Windows::Win32::Foundation::PSTR SectionName, void* Reserved1, uint32_t Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(LayoutInfHandle);
        ORBIT_TRACK_PARAM(SectionName);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupAddInstallSectionToDiskSpaceListA(DiskSpace, InfHandle, LayoutInfHandle, SectionName, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupAddInstallSectionToDiskSpaceListW(void* DiskSpace, void* InfHandle, void* LayoutInfHandle, win32::Windows::Win32::Foundation::PWSTR SectionName, void* Reserved1, uint32_t Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(LayoutInfHandle);
        ORBIT_TRACK_PARAM(SectionName);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupAddInstallSectionToDiskSpaceListW(DiskSpace, InfHandle, LayoutInfHandle, SectionName, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupRemoveFromDiskSpaceListA(void* DiskSpace, win32::Windows::Win32::Foundation::PSTR TargetFilespec, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SETUP_FILE_OPERATION Operation, void* Reserved1, uint32_t Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(TargetFilespec);
        ORBIT_TRACK_PARAM(Operation);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupRemoveFromDiskSpaceListA(DiskSpace, TargetFilespec, Operation, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupRemoveFromDiskSpaceListW(void* DiskSpace, win32::Windows::Win32::Foundation::PWSTR TargetFilespec, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SETUP_FILE_OPERATION Operation, void* Reserved1, uint32_t Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(TargetFilespec);
        ORBIT_TRACK_PARAM(Operation);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupRemoveFromDiskSpaceListW(DiskSpace, TargetFilespec, Operation, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupRemoveSectionFromDiskSpaceListA(void* DiskSpace, void* InfHandle, void* ListInfHandle, win32::Windows::Win32::Foundation::PSTR SectionName, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SETUP_FILE_OPERATION Operation, void* Reserved1, uint32_t Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(ListInfHandle);
        ORBIT_TRACK_PARAM(SectionName);
        ORBIT_TRACK_PARAM(Operation);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupRemoveSectionFromDiskSpaceListA(DiskSpace, InfHandle, ListInfHandle, SectionName, Operation, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupRemoveSectionFromDiskSpaceListW(void* DiskSpace, void* InfHandle, void* ListInfHandle, win32::Windows::Win32::Foundation::PWSTR SectionName, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SETUP_FILE_OPERATION Operation, void* Reserved1, uint32_t Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(ListInfHandle);
        ORBIT_TRACK_PARAM(SectionName);
        ORBIT_TRACK_PARAM(Operation);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupRemoveSectionFromDiskSpaceListW(DiskSpace, InfHandle, ListInfHandle, SectionName, Operation, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupRemoveInstallSectionFromDiskSpaceListA(void* DiskSpace, void* InfHandle, void* LayoutInfHandle, win32::Windows::Win32::Foundation::PSTR SectionName, void* Reserved1, uint32_t Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(LayoutInfHandle);
        ORBIT_TRACK_PARAM(SectionName);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupRemoveInstallSectionFromDiskSpaceListA(DiskSpace, InfHandle, LayoutInfHandle, SectionName, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupRemoveInstallSectionFromDiskSpaceListW(void* DiskSpace, void* InfHandle, void* LayoutInfHandle, win32::Windows::Win32::Foundation::PWSTR SectionName, void* Reserved1, uint32_t Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DiskSpace);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(LayoutInfHandle);
        ORBIT_TRACK_PARAM(SectionName);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupRemoveInstallSectionFromDiskSpaceListW(DiskSpace, InfHandle, LayoutInfHandle, SectionName, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupIterateCabinetA(win32::Windows::Win32::Foundation::PSTR CabinetFile, uint32_t Reserved, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PSP_FILE_CALLBACK_A* MsgHandler, void* Context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CabinetFile);
        ORBIT_TRACK_PARAM(Reserved);
        ORBIT_TRACK_PARAM(MsgHandler);
        ORBIT_TRACK_PARAM(Context);

        auto win32_impl_result = g_api_table.SetupIterateCabinetA(CabinetFile, Reserved, MsgHandler, Context);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupIterateCabinetW(win32::Windows::Win32::Foundation::PWSTR CabinetFile, uint32_t Reserved, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PSP_FILE_CALLBACK_W* MsgHandler, void* Context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CabinetFile);
        ORBIT_TRACK_PARAM(Reserved);
        ORBIT_TRACK_PARAM(MsgHandler);
        ORBIT_TRACK_PARAM(Context);

        auto win32_impl_result = g_api_table.SetupIterateCabinetW(CabinetFile, Reserved, MsgHandler, Context);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SetupPromptReboot(void* FileQueue, win32::Windows::Win32::Foundation::HWND Owner, win32::Windows::Win32::Foundation::BOOL ScanOnly) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileQueue);
        ORBIT_TRACK_PARAM(Owner);
        ORBIT_TRACK_PARAM(ScanOnly);

        auto win32_impl_result = g_api_table.SetupPromptReboot(FileQueue, Owner, ScanOnly);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SetupInitDefaultQueueCallback(win32::Windows::Win32::Foundation::HWND OwnerWindow) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(OwnerWindow);

        auto win32_impl_result = g_api_table.SetupInitDefaultQueueCallback(OwnerWindow);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SetupInitDefaultQueueCallbackEx(win32::Windows::Win32::Foundation::HWND OwnerWindow, win32::Windows::Win32::Foundation::HWND AlternateProgressWindow, uint32_t ProgressMessage, uint32_t Reserved1, void* Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(OwnerWindow);
        ORBIT_TRACK_PARAM(AlternateProgressWindow);
        ORBIT_TRACK_PARAM(ProgressMessage);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupInitDefaultQueueCallbackEx(OwnerWindow, AlternateProgressWindow, ProgressMessage, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_SetupTermDefaultQueueCallback(void* Context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Context);

        g_api_table.SetupTermDefaultQueueCallback(Context);
        
    }

    uint32_t __stdcall ORBIT_IMPL_SetupDefaultQueueCallbackA(void* Context, uint32_t Notification, size_t Param1, size_t Param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(Notification);
        ORBIT_TRACK_PARAM(Param1);
        ORBIT_TRACK_PARAM(Param2);

        auto win32_impl_result = g_api_table.SetupDefaultQueueCallbackA(Context, Notification, Param1, Param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetupDefaultQueueCallbackW(void* Context, uint32_t Notification, size_t Param1, size_t Param2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(Notification);
        ORBIT_TRACK_PARAM(Param1);
        ORBIT_TRACK_PARAM(Param2);

        auto win32_impl_result = g_api_table.SetupDefaultQueueCallbackW(Context, Notification, Param1, Param2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupInstallFromInfSectionA(win32::Windows::Win32::Foundation::HWND Owner, void* InfHandle, win32::Windows::Win32::Foundation::PSTR SectionName, uint32_t Flags, win32::Windows::Win32::System::Registry::HKEY RelativeKeyRoot, win32::Windows::Win32::Foundation::PSTR SourceRootPath, uint32_t CopyFlags, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PSP_FILE_CALLBACK_A* MsgHandler, void* Context, void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Owner);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(SectionName);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(RelativeKeyRoot);
        ORBIT_TRACK_PARAM(SourceRootPath);
        ORBIT_TRACK_PARAM(CopyFlags);
        ORBIT_TRACK_PARAM(MsgHandler);
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupInstallFromInfSectionA(Owner, InfHandle, SectionName, Flags, RelativeKeyRoot, SourceRootPath, CopyFlags, MsgHandler, Context, DeviceInfoSet, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupInstallFromInfSectionW(win32::Windows::Win32::Foundation::HWND Owner, void* InfHandle, win32::Windows::Win32::Foundation::PWSTR SectionName, uint32_t Flags, win32::Windows::Win32::System::Registry::HKEY RelativeKeyRoot, win32::Windows::Win32::Foundation::PWSTR SourceRootPath, uint32_t CopyFlags, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PSP_FILE_CALLBACK_W* MsgHandler, void* Context, void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Owner);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(SectionName);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(RelativeKeyRoot);
        ORBIT_TRACK_PARAM(SourceRootPath);
        ORBIT_TRACK_PARAM(CopyFlags);
        ORBIT_TRACK_PARAM(MsgHandler);
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupInstallFromInfSectionW(Owner, InfHandle, SectionName, Flags, RelativeKeyRoot, SourceRootPath, CopyFlags, MsgHandler, Context, DeviceInfoSet, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupInstallFilesFromInfSectionA(void* InfHandle, void* LayoutInfHandle, void* FileQueue, win32::Windows::Win32::Foundation::PSTR SectionName, win32::Windows::Win32::Foundation::PSTR SourceRootPath, uint32_t CopyFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(LayoutInfHandle);
        ORBIT_TRACK_PARAM(FileQueue);
        ORBIT_TRACK_PARAM(SectionName);
        ORBIT_TRACK_PARAM(SourceRootPath);
        ORBIT_TRACK_PARAM(CopyFlags);

        auto win32_impl_result = g_api_table.SetupInstallFilesFromInfSectionA(InfHandle, LayoutInfHandle, FileQueue, SectionName, SourceRootPath, CopyFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupInstallFilesFromInfSectionW(void* InfHandle, void* LayoutInfHandle, void* FileQueue, win32::Windows::Win32::Foundation::PWSTR SectionName, win32::Windows::Win32::Foundation::PWSTR SourceRootPath, uint32_t CopyFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(LayoutInfHandle);
        ORBIT_TRACK_PARAM(FileQueue);
        ORBIT_TRACK_PARAM(SectionName);
        ORBIT_TRACK_PARAM(SourceRootPath);
        ORBIT_TRACK_PARAM(CopyFlags);

        auto win32_impl_result = g_api_table.SetupInstallFilesFromInfSectionW(InfHandle, LayoutInfHandle, FileQueue, SectionName, SourceRootPath, CopyFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupInstallServicesFromInfSectionA(void* InfHandle, win32::Windows::Win32::Foundation::PSTR SectionName, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(SectionName);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupInstallServicesFromInfSectionA(InfHandle, SectionName, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupInstallServicesFromInfSectionW(void* InfHandle, win32::Windows::Win32::Foundation::PWSTR SectionName, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(SectionName);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupInstallServicesFromInfSectionW(InfHandle, SectionName, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupInstallServicesFromInfSectionExA(void* InfHandle, win32::Windows::Win32::Foundation::PSTR SectionName, uint32_t Flags, void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, void* Reserved1, void* Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(SectionName);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupInstallServicesFromInfSectionExA(InfHandle, SectionName, Flags, DeviceInfoSet, DeviceInfoData, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupInstallServicesFromInfSectionExW(void* InfHandle, win32::Windows::Win32::Foundation::PWSTR SectionName, uint32_t Flags, void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, void* Reserved1, void* Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(SectionName);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupInstallServicesFromInfSectionExW(InfHandle, SectionName, Flags, DeviceInfoSet, DeviceInfoData, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_InstallHinfSectionA(win32::Windows::Win32::Foundation::HWND Window, win32::Windows::Win32::Foundation::HINSTANCE ModuleHandle, win32::Windows::Win32::Foundation::PSTR CommandLine, int32_t ShowCommand) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Window);
        ORBIT_TRACK_PARAM(ModuleHandle);
        ORBIT_TRACK_PARAM(CommandLine);
        ORBIT_TRACK_PARAM(ShowCommand);

        g_api_table.InstallHinfSectionA(Window, ModuleHandle, CommandLine, ShowCommand);
        
    }

    void __stdcall ORBIT_IMPL_InstallHinfSectionW(win32::Windows::Win32::Foundation::HWND Window, win32::Windows::Win32::Foundation::HINSTANCE ModuleHandle, win32::Windows::Win32::Foundation::PWSTR CommandLine, int32_t ShowCommand) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Window);
        ORBIT_TRACK_PARAM(ModuleHandle);
        ORBIT_TRACK_PARAM(CommandLine);
        ORBIT_TRACK_PARAM(ShowCommand);

        g_api_table.InstallHinfSectionW(Window, ModuleHandle, CommandLine, ShowCommand);
        
    }

    void* __stdcall ORBIT_IMPL_SetupInitializeFileLogA(win32::Windows::Win32::Foundation::PSTR LogFileName, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LogFileName);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupInitializeFileLogA(LogFileName, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SetupInitializeFileLogW(win32::Windows::Win32::Foundation::PWSTR LogFileName, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LogFileName);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupInitializeFileLogW(LogFileName, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupTerminateFileLog(void* FileLogHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileLogHandle);

        auto win32_impl_result = g_api_table.SetupTerminateFileLog(FileLogHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupLogFileA(void* FileLogHandle, win32::Windows::Win32::Foundation::PSTR LogSectionName, win32::Windows::Win32::Foundation::PSTR SourceFilename, win32::Windows::Win32::Foundation::PSTR TargetFilename, uint32_t Checksum, win32::Windows::Win32::Foundation::PSTR DiskTagfile, win32::Windows::Win32::Foundation::PSTR DiskDescription, win32::Windows::Win32::Foundation::PSTR OtherInfo, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileLogHandle);
        ORBIT_TRACK_PARAM(LogSectionName);
        ORBIT_TRACK_PARAM(SourceFilename);
        ORBIT_TRACK_PARAM(TargetFilename);
        ORBIT_TRACK_PARAM(Checksum);
        ORBIT_TRACK_PARAM(DiskTagfile);
        ORBIT_TRACK_PARAM(DiskDescription);
        ORBIT_TRACK_PARAM(OtherInfo);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupLogFileA(FileLogHandle, LogSectionName, SourceFilename, TargetFilename, Checksum, DiskTagfile, DiskDescription, OtherInfo, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupLogFileW(void* FileLogHandle, win32::Windows::Win32::Foundation::PWSTR LogSectionName, win32::Windows::Win32::Foundation::PWSTR SourceFilename, win32::Windows::Win32::Foundation::PWSTR TargetFilename, uint32_t Checksum, win32::Windows::Win32::Foundation::PWSTR DiskTagfile, win32::Windows::Win32::Foundation::PWSTR DiskDescription, win32::Windows::Win32::Foundation::PWSTR OtherInfo, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileLogHandle);
        ORBIT_TRACK_PARAM(LogSectionName);
        ORBIT_TRACK_PARAM(SourceFilename);
        ORBIT_TRACK_PARAM(TargetFilename);
        ORBIT_TRACK_PARAM(Checksum);
        ORBIT_TRACK_PARAM(DiskTagfile);
        ORBIT_TRACK_PARAM(DiskDescription);
        ORBIT_TRACK_PARAM(OtherInfo);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupLogFileW(FileLogHandle, LogSectionName, SourceFilename, TargetFilename, Checksum, DiskTagfile, DiskDescription, OtherInfo, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupRemoveFileLogEntryA(void* FileLogHandle, win32::Windows::Win32::Foundation::PSTR LogSectionName, win32::Windows::Win32::Foundation::PSTR TargetFilename) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileLogHandle);
        ORBIT_TRACK_PARAM(LogSectionName);
        ORBIT_TRACK_PARAM(TargetFilename);

        auto win32_impl_result = g_api_table.SetupRemoveFileLogEntryA(FileLogHandle, LogSectionName, TargetFilename);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupRemoveFileLogEntryW(void* FileLogHandle, win32::Windows::Win32::Foundation::PWSTR LogSectionName, win32::Windows::Win32::Foundation::PWSTR TargetFilename) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileLogHandle);
        ORBIT_TRACK_PARAM(LogSectionName);
        ORBIT_TRACK_PARAM(TargetFilename);

        auto win32_impl_result = g_api_table.SetupRemoveFileLogEntryW(FileLogHandle, LogSectionName, TargetFilename);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueryFileLogA(void* FileLogHandle, win32::Windows::Win32::Foundation::PSTR LogSectionName, win32::Windows::Win32::Foundation::PSTR TargetFilename, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SetupFileLogInfo DesiredInfo, win32::Windows::Win32::Foundation::PSTR DataOut, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileLogHandle);
        ORBIT_TRACK_PARAM(LogSectionName);
        ORBIT_TRACK_PARAM(TargetFilename);
        ORBIT_TRACK_PARAM(DesiredInfo);
        ORBIT_TRACK_PARAM(DataOut);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupQueryFileLogA(FileLogHandle, LogSectionName, TargetFilename, DesiredInfo, DataOut, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupQueryFileLogW(void* FileLogHandle, win32::Windows::Win32::Foundation::PWSTR LogSectionName, win32::Windows::Win32::Foundation::PWSTR TargetFilename, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SetupFileLogInfo DesiredInfo, win32::Windows::Win32::Foundation::PWSTR DataOut, uint32_t ReturnBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(FileLogHandle);
        ORBIT_TRACK_PARAM(LogSectionName);
        ORBIT_TRACK_PARAM(TargetFilename);
        ORBIT_TRACK_PARAM(DesiredInfo);
        ORBIT_TRACK_PARAM(DataOut);
        ORBIT_TRACK_PARAM(ReturnBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupQueryFileLogW(FileLogHandle, LogSectionName, TargetFilename, DesiredInfo, DataOut, ReturnBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupOpenLog(win32::Windows::Win32::Foundation::BOOL Erase) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Erase);

        auto win32_impl_result = g_api_table.SetupOpenLog(Erase);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupLogErrorA(win32::Windows::Win32::Foundation::PSTR MessageString, uint32_t Severity) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(MessageString);
        ORBIT_TRACK_PARAM(Severity);

        auto win32_impl_result = g_api_table.SetupLogErrorA(MessageString, Severity);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupLogErrorW(win32::Windows::Win32::Foundation::PWSTR MessageString, uint32_t Severity) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(MessageString);
        ORBIT_TRACK_PARAM(Severity);

        auto win32_impl_result = g_api_table.SetupLogErrorW(MessageString, Severity);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_SetupCloseLog() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        g_api_table.SetupCloseLog();
        
    }

    uint64_t __stdcall ORBIT_IMPL_SetupGetThreadLogToken() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.SetupGetThreadLogToken();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_SetupSetThreadLogToken(uint64_t LogToken) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LogToken);

        g_api_table.SetupSetThreadLogToken(LogToken);
        
    }

    void __stdcall ORBIT_IMPL_SetupWriteTextLog(uint64_t LogToken, uint32_t Category, uint32_t Flags, win32::Windows::Win32::Foundation::PSTR MessageStr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LogToken);
        ORBIT_TRACK_PARAM(Category);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(MessageStr);

        g_api_table.SetupWriteTextLog(LogToken, Category, Flags, MessageStr);
        
    }

    void __stdcall ORBIT_IMPL_SetupWriteTextLogError(uint64_t LogToken, uint32_t Category, uint32_t LogFlags, uint32_t Error, win32::Windows::Win32::Foundation::PSTR MessageStr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LogToken);
        ORBIT_TRACK_PARAM(Category);
        ORBIT_TRACK_PARAM(LogFlags);
        ORBIT_TRACK_PARAM(Error);
        ORBIT_TRACK_PARAM(MessageStr);

        g_api_table.SetupWriteTextLogError(LogToken, Category, LogFlags, Error, MessageStr);
        
    }

    void __stdcall ORBIT_IMPL_SetupWriteTextLogInfLine(uint64_t LogToken, uint32_t Flags, void* InfHandle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* Context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(LogToken);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(Context);

        g_api_table.SetupWriteTextLogInfLine(LogToken, Flags, InfHandle, Context);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetBackupInformationA(void* QueueHandle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_BACKUP_QUEUE_PARAMS_V2_A* BackupParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(BackupParams);

        auto win32_impl_result = g_api_table.SetupGetBackupInformationA(QueueHandle, BackupParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetBackupInformationW(void* QueueHandle, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_BACKUP_QUEUE_PARAMS_V2_W* BackupParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(BackupParams);

        auto win32_impl_result = g_api_table.SetupGetBackupInformationW(QueueHandle, BackupParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupPrepareQueueForRestoreA(void* QueueHandle, win32::Windows::Win32::Foundation::PSTR BackupPath, uint32_t RestoreFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(BackupPath);
        ORBIT_TRACK_PARAM(RestoreFlags);

        auto win32_impl_result = g_api_table.SetupPrepareQueueForRestoreA(QueueHandle, BackupPath, RestoreFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupPrepareQueueForRestoreW(void* QueueHandle, win32::Windows::Win32::Foundation::PWSTR BackupPath, uint32_t RestoreFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(QueueHandle);
        ORBIT_TRACK_PARAM(BackupPath);
        ORBIT_TRACK_PARAM(RestoreFlags);

        auto win32_impl_result = g_api_table.SetupPrepareQueueForRestoreW(QueueHandle, BackupPath, RestoreFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupSetNonInteractiveMode(win32::Windows::Win32::Foundation::BOOL NonInteractiveFlag) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NonInteractiveFlag);

        auto win32_impl_result = g_api_table.SetupSetNonInteractiveMode(NonInteractiveFlag);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupGetNonInteractiveMode() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.SetupGetNonInteractiveMode();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SetupDiCreateDeviceInfoList(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::HWND hwndParent) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(hwndParent);

        auto win32_impl_result = g_api_table.SetupDiCreateDeviceInfoList(ClassGuid, hwndParent);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SetupDiCreateDeviceInfoListExA(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiCreateDeviceInfoListExA(ClassGuid, hwndParent, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SetupDiCreateDeviceInfoListExW(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PWSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiCreateDeviceInfoListExW(ClassGuid, hwndParent, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDeviceInfoListClass(void* DeviceInfoSet, ::win32::guid* ClassGuid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(ClassGuid);

        auto win32_impl_result = g_api_table.SetupDiGetDeviceInfoListClass(DeviceInfoSet, ClassGuid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDeviceInfoListDetailA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_LIST_DETAIL_DATA_A* DeviceInfoSetDetailData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoSetDetailData);

        auto win32_impl_result = g_api_table.SetupDiGetDeviceInfoListDetailA(DeviceInfoSet, DeviceInfoSetDetailData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDeviceInfoListDetailW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_LIST_DETAIL_DATA_W* DeviceInfoSetDetailData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoSetDetailData);

        auto win32_impl_result = g_api_table.SetupDiGetDeviceInfoListDetailW(DeviceInfoSet, DeviceInfoSetDetailData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiCreateDeviceInfoA(void* DeviceInfoSet, win32::Windows::Win32::Foundation::PSTR DeviceName, ::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PSTR DeviceDescription, win32::Windows::Win32::Foundation::HWND hwndParent, uint32_t CreationFlags, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceName);
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(DeviceDescription);
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(CreationFlags);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiCreateDeviceInfoA(DeviceInfoSet, DeviceName, ClassGuid, DeviceDescription, hwndParent, CreationFlags, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiCreateDeviceInfoW(void* DeviceInfoSet, win32::Windows::Win32::Foundation::PWSTR DeviceName, ::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PWSTR DeviceDescription, win32::Windows::Win32::Foundation::HWND hwndParent, uint32_t CreationFlags, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceName);
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(DeviceDescription);
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(CreationFlags);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiCreateDeviceInfoW(DeviceInfoSet, DeviceName, ClassGuid, DeviceDescription, hwndParent, CreationFlags, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiOpenDeviceInfoA(void* DeviceInfoSet, win32::Windows::Win32::Foundation::PSTR DeviceInstanceId, win32::Windows::Win32::Foundation::HWND hwndParent, uint32_t OpenFlags, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInstanceId);
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(OpenFlags);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiOpenDeviceInfoA(DeviceInfoSet, DeviceInstanceId, hwndParent, OpenFlags, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiOpenDeviceInfoW(void* DeviceInfoSet, win32::Windows::Win32::Foundation::PWSTR DeviceInstanceId, win32::Windows::Win32::Foundation::HWND hwndParent, uint32_t OpenFlags, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInstanceId);
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(OpenFlags);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiOpenDeviceInfoW(DeviceInfoSet, DeviceInstanceId, hwndParent, OpenFlags, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDeviceInstanceIdA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Foundation::PSTR DeviceInstanceId, uint32_t DeviceInstanceIdSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DeviceInstanceId);
        ORBIT_TRACK_PARAM(DeviceInstanceIdSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiGetDeviceInstanceIdA(DeviceInfoSet, DeviceInfoData, DeviceInstanceId, DeviceInstanceIdSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDeviceInstanceIdW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Foundation::PWSTR DeviceInstanceId, uint32_t DeviceInstanceIdSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DeviceInstanceId);
        ORBIT_TRACK_PARAM(DeviceInstanceIdSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiGetDeviceInstanceIdW(DeviceInfoSet, DeviceInfoData, DeviceInstanceId, DeviceInstanceIdSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiDeleteDeviceInfo(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiDeleteDeviceInfo(DeviceInfoSet, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiEnumDeviceInfo(void* DeviceInfoSet, uint32_t MemberIndex, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(MemberIndex);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiEnumDeviceInfo(DeviceInfoSet, MemberIndex, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiDestroyDeviceInfoList(void* DeviceInfoSet) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);

        auto win32_impl_result = g_api_table.SetupDiDestroyDeviceInfoList(DeviceInfoSet);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiEnumDeviceInterfaces(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, ::win32::guid* InterfaceClassGuid, uint32_t MemberIndex, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* DeviceInterfaceData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(InterfaceClassGuid);
        ORBIT_TRACK_PARAM(MemberIndex);
        ORBIT_TRACK_PARAM(DeviceInterfaceData);

        auto win32_impl_result = g_api_table.SetupDiEnumDeviceInterfaces(DeviceInfoSet, DeviceInfoData, InterfaceClassGuid, MemberIndex, DeviceInterfaceData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiCreateDeviceInterfaceA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, ::win32::guid* InterfaceClassGuid, win32::Windows::Win32::Foundation::PSTR ReferenceString, uint32_t CreationFlags, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* DeviceInterfaceData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(InterfaceClassGuid);
        ORBIT_TRACK_PARAM(ReferenceString);
        ORBIT_TRACK_PARAM(CreationFlags);
        ORBIT_TRACK_PARAM(DeviceInterfaceData);

        auto win32_impl_result = g_api_table.SetupDiCreateDeviceInterfaceA(DeviceInfoSet, DeviceInfoData, InterfaceClassGuid, ReferenceString, CreationFlags, DeviceInterfaceData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiCreateDeviceInterfaceW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, ::win32::guid* InterfaceClassGuid, win32::Windows::Win32::Foundation::PWSTR ReferenceString, uint32_t CreationFlags, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* DeviceInterfaceData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(InterfaceClassGuid);
        ORBIT_TRACK_PARAM(ReferenceString);
        ORBIT_TRACK_PARAM(CreationFlags);
        ORBIT_TRACK_PARAM(DeviceInterfaceData);

        auto win32_impl_result = g_api_table.SetupDiCreateDeviceInterfaceW(DeviceInfoSet, DeviceInfoData, InterfaceClassGuid, ReferenceString, CreationFlags, DeviceInterfaceData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiOpenDeviceInterfaceA(void* DeviceInfoSet, win32::Windows::Win32::Foundation::PSTR DevicePath, uint32_t OpenFlags, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* DeviceInterfaceData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DevicePath);
        ORBIT_TRACK_PARAM(OpenFlags);
        ORBIT_TRACK_PARAM(DeviceInterfaceData);

        auto win32_impl_result = g_api_table.SetupDiOpenDeviceInterfaceA(DeviceInfoSet, DevicePath, OpenFlags, DeviceInterfaceData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiOpenDeviceInterfaceW(void* DeviceInfoSet, win32::Windows::Win32::Foundation::PWSTR DevicePath, uint32_t OpenFlags, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* DeviceInterfaceData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DevicePath);
        ORBIT_TRACK_PARAM(OpenFlags);
        ORBIT_TRACK_PARAM(DeviceInterfaceData);

        auto win32_impl_result = g_api_table.SetupDiOpenDeviceInterfaceW(DeviceInfoSet, DevicePath, OpenFlags, DeviceInterfaceData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDeviceInterfaceAlias(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* DeviceInterfaceData, ::win32::guid* AliasInterfaceClassGuid, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* AliasDeviceInterfaceData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInterfaceData);
        ORBIT_TRACK_PARAM(AliasInterfaceClassGuid);
        ORBIT_TRACK_PARAM(AliasDeviceInterfaceData);

        auto win32_impl_result = g_api_table.SetupDiGetDeviceInterfaceAlias(DeviceInfoSet, DeviceInterfaceData, AliasInterfaceClassGuid, AliasDeviceInterfaceData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiDeleteDeviceInterfaceData(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* DeviceInterfaceData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInterfaceData);

        auto win32_impl_result = g_api_table.SetupDiDeleteDeviceInterfaceData(DeviceInfoSet, DeviceInterfaceData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiRemoveDeviceInterface(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* DeviceInterfaceData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInterfaceData);

        auto win32_impl_result = g_api_table.SetupDiRemoveDeviceInterface(DeviceInfoSet, DeviceInterfaceData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDeviceInterfaceDetailA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* DeviceInterfaceData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DETAIL_DATA_A* DeviceInterfaceDetailData, uint32_t DeviceInterfaceDetailDataSize, uint32_t* RequiredSize, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInterfaceData);
        ORBIT_TRACK_PARAM(DeviceInterfaceDetailData);
        ORBIT_TRACK_PARAM(DeviceInterfaceDetailDataSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiGetDeviceInterfaceDetailA(DeviceInfoSet, DeviceInterfaceData, DeviceInterfaceDetailData, DeviceInterfaceDetailDataSize, RequiredSize, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDeviceInterfaceDetailW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* DeviceInterfaceData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DETAIL_DATA_W* DeviceInterfaceDetailData, uint32_t DeviceInterfaceDetailDataSize, uint32_t* RequiredSize, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInterfaceData);
        ORBIT_TRACK_PARAM(DeviceInterfaceDetailData);
        ORBIT_TRACK_PARAM(DeviceInterfaceDetailDataSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiGetDeviceInterfaceDetailW(DeviceInfoSet, DeviceInterfaceData, DeviceInterfaceDetailData, DeviceInterfaceDetailDataSize, RequiredSize, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiInstallDeviceInterfaces(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiInstallDeviceInterfaces(DeviceInfoSet, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSetDeviceInterfaceDefault(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* DeviceInterfaceData, uint32_t Flags, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInterfaceData);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiSetDeviceInterfaceDefault(DeviceInfoSet, DeviceInterfaceData, Flags, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiRegisterDeviceInfo(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, uint32_t Flags, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PSP_DETSIG_CMPPROC* CompareProc, void* CompareContext, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DupDeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(CompareProc);
        ORBIT_TRACK_PARAM(CompareContext);
        ORBIT_TRACK_PARAM(DupDeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiRegisterDeviceInfo(DeviceInfoSet, DeviceInfoData, Flags, CompareProc, CompareContext, DupDeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiBuildDriverInfoList(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SETUP_DI_BUILD_DRIVER_DRIVER_TYPE DriverType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DriverType);

        auto win32_impl_result = g_api_table.SetupDiBuildDriverInfoList(DeviceInfoSet, DeviceInfoData, DriverType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiCancelDriverInfoSearch(void* DeviceInfoSet) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);

        auto win32_impl_result = g_api_table.SetupDiCancelDriverInfoSearch(DeviceInfoSet);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiEnumDriverInfoA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, uint32_t DriverType, uint32_t MemberIndex, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINFO_DATA_V2_A* DriverInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DriverType);
        ORBIT_TRACK_PARAM(MemberIndex);
        ORBIT_TRACK_PARAM(DriverInfoData);

        auto win32_impl_result = g_api_table.SetupDiEnumDriverInfoA(DeviceInfoSet, DeviceInfoData, DriverType, MemberIndex, DriverInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiEnumDriverInfoW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, uint32_t DriverType, uint32_t MemberIndex, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINFO_DATA_V2_W* DriverInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DriverType);
        ORBIT_TRACK_PARAM(MemberIndex);
        ORBIT_TRACK_PARAM(DriverInfoData);

        auto win32_impl_result = g_api_table.SetupDiEnumDriverInfoW(DeviceInfoSet, DeviceInfoData, DriverType, MemberIndex, DriverInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetSelectedDriverA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINFO_DATA_V2_A* DriverInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DriverInfoData);

        auto win32_impl_result = g_api_table.SetupDiGetSelectedDriverA(DeviceInfoSet, DeviceInfoData, DriverInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetSelectedDriverW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINFO_DATA_V2_W* DriverInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DriverInfoData);

        auto win32_impl_result = g_api_table.SetupDiGetSelectedDriverW(DeviceInfoSet, DeviceInfoData, DriverInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSetSelectedDriverA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINFO_DATA_V2_A* DriverInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DriverInfoData);

        auto win32_impl_result = g_api_table.SetupDiSetSelectedDriverA(DeviceInfoSet, DeviceInfoData, DriverInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSetSelectedDriverW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINFO_DATA_V2_W* DriverInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DriverInfoData);

        auto win32_impl_result = g_api_table.SetupDiSetSelectedDriverW(DeviceInfoSet, DeviceInfoData, DriverInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDriverInfoDetailA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINFO_DATA_V2_A* DriverInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINFO_DETAIL_DATA_A* DriverInfoDetailData, uint32_t DriverInfoDetailDataSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DriverInfoData);
        ORBIT_TRACK_PARAM(DriverInfoDetailData);
        ORBIT_TRACK_PARAM(DriverInfoDetailDataSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiGetDriverInfoDetailA(DeviceInfoSet, DeviceInfoData, DriverInfoData, DriverInfoDetailData, DriverInfoDetailDataSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDriverInfoDetailW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINFO_DATA_V2_W* DriverInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINFO_DETAIL_DATA_W* DriverInfoDetailData, uint32_t DriverInfoDetailDataSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DriverInfoData);
        ORBIT_TRACK_PARAM(DriverInfoDetailData);
        ORBIT_TRACK_PARAM(DriverInfoDetailDataSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiGetDriverInfoDetailW(DeviceInfoSet, DeviceInfoData, DriverInfoData, DriverInfoDetailData, DriverInfoDetailDataSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiDestroyDriverInfoList(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, uint32_t DriverType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DriverType);

        auto win32_impl_result = g_api_table.SetupDiDestroyDriverInfoList(DeviceInfoSet, DeviceInfoData, DriverType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SetupDiGetClassDevsA(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PSTR Enumerator, win32::Windows::Win32::Foundation::HWND hwndParent, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(Enumerator);
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupDiGetClassDevsA(ClassGuid, Enumerator, hwndParent, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SetupDiGetClassDevsW(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PWSTR Enumerator, win32::Windows::Win32::Foundation::HWND hwndParent, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(Enumerator);
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupDiGetClassDevsW(ClassGuid, Enumerator, hwndParent, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SetupDiGetClassDevsExA(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PSTR Enumerator, win32::Windows::Win32::Foundation::HWND hwndParent, uint32_t Flags, void* DeviceInfoSet, win32::Windows::Win32::Foundation::PSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(Enumerator);
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiGetClassDevsExA(ClassGuid, Enumerator, hwndParent, Flags, DeviceInfoSet, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_SetupDiGetClassDevsExW(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PWSTR Enumerator, win32::Windows::Win32::Foundation::HWND hwndParent, uint32_t Flags, void* DeviceInfoSet, win32::Windows::Win32::Foundation::PWSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(Enumerator);
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiGetClassDevsExW(ClassGuid, Enumerator, hwndParent, Flags, DeviceInfoSet, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetINFClassA(win32::Windows::Win32::Foundation::PSTR InfName, ::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PSTR ClassName, uint32_t ClassNameSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfName);
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ClassName);
        ORBIT_TRACK_PARAM(ClassNameSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiGetINFClassA(InfName, ClassGuid, ClassName, ClassNameSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetINFClassW(win32::Windows::Win32::Foundation::PWSTR InfName, ::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PWSTR ClassName, uint32_t ClassNameSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfName);
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ClassName);
        ORBIT_TRACK_PARAM(ClassNameSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiGetINFClassW(InfName, ClassGuid, ClassName, ClassNameSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiBuildClassInfoList(uint32_t Flags, ::win32::guid* ClassGuidList, uint32_t ClassGuidListSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(ClassGuidList);
        ORBIT_TRACK_PARAM(ClassGuidListSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiBuildClassInfoList(Flags, ClassGuidList, ClassGuidListSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiBuildClassInfoListExA(uint32_t Flags, ::win32::guid* ClassGuidList, uint32_t ClassGuidListSize, uint32_t* RequiredSize, win32::Windows::Win32::Foundation::PSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(ClassGuidList);
        ORBIT_TRACK_PARAM(ClassGuidListSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiBuildClassInfoListExA(Flags, ClassGuidList, ClassGuidListSize, RequiredSize, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiBuildClassInfoListExW(uint32_t Flags, ::win32::guid* ClassGuidList, uint32_t ClassGuidListSize, uint32_t* RequiredSize, win32::Windows::Win32::Foundation::PWSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(ClassGuidList);
        ORBIT_TRACK_PARAM(ClassGuidListSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiBuildClassInfoListExW(Flags, ClassGuidList, ClassGuidListSize, RequiredSize, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassDescriptionA(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PSTR ClassDescription, uint32_t ClassDescriptionSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ClassDescription);
        ORBIT_TRACK_PARAM(ClassDescriptionSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiGetClassDescriptionA(ClassGuid, ClassDescription, ClassDescriptionSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassDescriptionW(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PWSTR ClassDescription, uint32_t ClassDescriptionSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ClassDescription);
        ORBIT_TRACK_PARAM(ClassDescriptionSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiGetClassDescriptionW(ClassGuid, ClassDescription, ClassDescriptionSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassDescriptionExA(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PSTR ClassDescription, uint32_t ClassDescriptionSize, uint32_t* RequiredSize, win32::Windows::Win32::Foundation::PSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ClassDescription);
        ORBIT_TRACK_PARAM(ClassDescriptionSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiGetClassDescriptionExA(ClassGuid, ClassDescription, ClassDescriptionSize, RequiredSize, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassDescriptionExW(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PWSTR ClassDescription, uint32_t ClassDescriptionSize, uint32_t* RequiredSize, win32::Windows::Win32::Foundation::PWSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ClassDescription);
        ORBIT_TRACK_PARAM(ClassDescriptionSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiGetClassDescriptionExW(ClassGuid, ClassDescription, ClassDescriptionSize, RequiredSize, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiCallClassInstaller(uint32_t InstallFunction, void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InstallFunction);
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiCallClassInstaller(InstallFunction, DeviceInfoSet, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSelectDevice(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiSelectDevice(DeviceInfoSet, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSelectBestCompatDrv(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiSelectBestCompatDrv(DeviceInfoSet, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiInstallDevice(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiInstallDevice(DeviceInfoSet, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiInstallDriverFiles(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiInstallDriverFiles(DeviceInfoSet, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiRegisterCoDeviceInstallers(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiRegisterCoDeviceInstallers(DeviceInfoSet, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiRemoveDevice(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiRemoveDevice(DeviceInfoSet, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiUnremoveDevice(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiUnremoveDevice(DeviceInfoSet, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiRestartDevices(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiRestartDevices(DeviceInfoSet, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiChangeState(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiChangeState(DeviceInfoSet, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiInstallClassA(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PSTR InfFileName, uint32_t Flags, void* FileQueue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(InfFileName);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(FileQueue);

        auto win32_impl_result = g_api_table.SetupDiInstallClassA(hwndParent, InfFileName, Flags, FileQueue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiInstallClassW(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PWSTR InfFileName, uint32_t Flags, void* FileQueue) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(InfFileName);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(FileQueue);

        auto win32_impl_result = g_api_table.SetupDiInstallClassW(hwndParent, InfFileName, Flags, FileQueue);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiInstallClassExA(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PSTR InfFileName, uint32_t Flags, void* FileQueue, ::win32::guid* InterfaceClassGuid, void* Reserved1, void* Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(InfFileName);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(FileQueue);
        ORBIT_TRACK_PARAM(InterfaceClassGuid);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupDiInstallClassExA(hwndParent, InfFileName, Flags, FileQueue, InterfaceClassGuid, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiInstallClassExW(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PWSTR InfFileName, uint32_t Flags, void* FileQueue, ::win32::guid* InterfaceClassGuid, void* Reserved1, void* Reserved2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(InfFileName);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(FileQueue);
        ORBIT_TRACK_PARAM(InterfaceClassGuid);
        ORBIT_TRACK_PARAM(Reserved1);
        ORBIT_TRACK_PARAM(Reserved2);

        auto win32_impl_result = g_api_table.SetupDiInstallClassExW(hwndParent, InfFileName, Flags, FileQueue, InterfaceClassGuid, Reserved1, Reserved2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Registry::HKEY __stdcall ORBIT_IMPL_SetupDiOpenClassRegKey(::win32::guid* ClassGuid, uint32_t samDesired) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(samDesired);

        auto win32_impl_result = g_api_table.SetupDiOpenClassRegKey(ClassGuid, samDesired);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Registry::HKEY __stdcall ORBIT_IMPL_SetupDiOpenClassRegKeyExA(::win32::guid* ClassGuid, uint32_t samDesired, uint32_t Flags, win32::Windows::Win32::Foundation::PSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(samDesired);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiOpenClassRegKeyExA(ClassGuid, samDesired, Flags, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Registry::HKEY __stdcall ORBIT_IMPL_SetupDiOpenClassRegKeyExW(::win32::guid* ClassGuid, uint32_t samDesired, uint32_t Flags, win32::Windows::Win32::Foundation::PWSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(samDesired);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiOpenClassRegKeyExW(ClassGuid, samDesired, Flags, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Registry::HKEY __stdcall ORBIT_IMPL_SetupDiCreateDeviceInterfaceRegKeyA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* DeviceInterfaceData, uint32_t Reserved, uint32_t samDesired, void* InfHandle, win32::Windows::Win32::Foundation::PSTR InfSectionName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInterfaceData);
        ORBIT_TRACK_PARAM(Reserved);
        ORBIT_TRACK_PARAM(samDesired);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(InfSectionName);

        auto win32_impl_result = g_api_table.SetupDiCreateDeviceInterfaceRegKeyA(DeviceInfoSet, DeviceInterfaceData, Reserved, samDesired, InfHandle, InfSectionName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Registry::HKEY __stdcall ORBIT_IMPL_SetupDiCreateDeviceInterfaceRegKeyW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* DeviceInterfaceData, uint32_t Reserved, uint32_t samDesired, void* InfHandle, win32::Windows::Win32::Foundation::PWSTR InfSectionName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInterfaceData);
        ORBIT_TRACK_PARAM(Reserved);
        ORBIT_TRACK_PARAM(samDesired);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(InfSectionName);

        auto win32_impl_result = g_api_table.SetupDiCreateDeviceInterfaceRegKeyW(DeviceInfoSet, DeviceInterfaceData, Reserved, samDesired, InfHandle, InfSectionName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Registry::HKEY __stdcall ORBIT_IMPL_SetupDiOpenDeviceInterfaceRegKey(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* DeviceInterfaceData, uint32_t Reserved, uint32_t samDesired) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInterfaceData);
        ORBIT_TRACK_PARAM(Reserved);
        ORBIT_TRACK_PARAM(samDesired);

        auto win32_impl_result = g_api_table.SetupDiOpenDeviceInterfaceRegKey(DeviceInfoSet, DeviceInterfaceData, Reserved, samDesired);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiDeleteDeviceInterfaceRegKey(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* DeviceInterfaceData, uint32_t Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInterfaceData);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiDeleteDeviceInterfaceRegKey(DeviceInfoSet, DeviceInterfaceData, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Registry::HKEY __stdcall ORBIT_IMPL_SetupDiCreateDevRegKeyA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, uint32_t Scope, uint32_t HwProfile, uint32_t KeyType, void* InfHandle, win32::Windows::Win32::Foundation::PSTR InfSectionName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(Scope);
        ORBIT_TRACK_PARAM(HwProfile);
        ORBIT_TRACK_PARAM(KeyType);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(InfSectionName);

        auto win32_impl_result = g_api_table.SetupDiCreateDevRegKeyA(DeviceInfoSet, DeviceInfoData, Scope, HwProfile, KeyType, InfHandle, InfSectionName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Registry::HKEY __stdcall ORBIT_IMPL_SetupDiCreateDevRegKeyW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, uint32_t Scope, uint32_t HwProfile, uint32_t KeyType, void* InfHandle, win32::Windows::Win32::Foundation::PWSTR InfSectionName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(Scope);
        ORBIT_TRACK_PARAM(HwProfile);
        ORBIT_TRACK_PARAM(KeyType);
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(InfSectionName);

        auto win32_impl_result = g_api_table.SetupDiCreateDevRegKeyW(DeviceInfoSet, DeviceInfoData, Scope, HwProfile, KeyType, InfHandle, InfSectionName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::Registry::HKEY __stdcall ORBIT_IMPL_SetupDiOpenDevRegKey(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, uint32_t Scope, uint32_t HwProfile, uint32_t KeyType, uint32_t samDesired) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(Scope);
        ORBIT_TRACK_PARAM(HwProfile);
        ORBIT_TRACK_PARAM(KeyType);
        ORBIT_TRACK_PARAM(samDesired);

        auto win32_impl_result = g_api_table.SetupDiOpenDevRegKey(DeviceInfoSet, DeviceInfoData, Scope, HwProfile, KeyType, samDesired);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiDeleteDevRegKey(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, uint32_t Scope, uint32_t HwProfile, uint32_t KeyType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(Scope);
        ORBIT_TRACK_PARAM(HwProfile);
        ORBIT_TRACK_PARAM(KeyType);

        auto win32_impl_result = g_api_table.SetupDiDeleteDevRegKey(DeviceInfoSet, DeviceInfoData, Scope, HwProfile, KeyType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetHwProfileList(uint32_t* HwProfileList, uint32_t HwProfileListSize, uint32_t* RequiredSize, uint32_t* CurrentlyActiveIndex) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HwProfileList);
        ORBIT_TRACK_PARAM(HwProfileListSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(CurrentlyActiveIndex);

        auto win32_impl_result = g_api_table.SetupDiGetHwProfileList(HwProfileList, HwProfileListSize, RequiredSize, CurrentlyActiveIndex);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetHwProfileListExA(uint32_t* HwProfileList, uint32_t HwProfileListSize, uint32_t* RequiredSize, uint32_t* CurrentlyActiveIndex, win32::Windows::Win32::Foundation::PSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HwProfileList);
        ORBIT_TRACK_PARAM(HwProfileListSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(CurrentlyActiveIndex);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiGetHwProfileListExA(HwProfileList, HwProfileListSize, RequiredSize, CurrentlyActiveIndex, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetHwProfileListExW(uint32_t* HwProfileList, uint32_t HwProfileListSize, uint32_t* RequiredSize, uint32_t* CurrentlyActiveIndex, win32::Windows::Win32::Foundation::PWSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HwProfileList);
        ORBIT_TRACK_PARAM(HwProfileListSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(CurrentlyActiveIndex);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiGetHwProfileListExW(HwProfileList, HwProfileListSize, RequiredSize, CurrentlyActiveIndex, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDevicePropertyKeys(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKeyArray, uint32_t PropertyKeyCount, uint32_t* RequiredPropertyKeyCount, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(PropertyKeyArray);
        ORBIT_TRACK_PARAM(PropertyKeyCount);
        ORBIT_TRACK_PARAM(RequiredPropertyKeyCount);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupDiGetDevicePropertyKeys(DeviceInfoSet, DeviceInfoData, PropertyKeyArray, PropertyKeyCount, RequiredPropertyKeyCount, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDevicePropertyW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t* PropertyType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t* RequiredSize, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupDiGetDevicePropertyW(DeviceInfoSet, DeviceInfoData, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, RequiredSize, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSetDevicePropertyW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t PropertyType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupDiSetDevicePropertyW(DeviceInfoSet, DeviceInfoData, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDeviceInterfacePropertyKeys(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* DeviceInterfaceData, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKeyArray, uint32_t PropertyKeyCount, uint32_t* RequiredPropertyKeyCount, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInterfaceData);
        ORBIT_TRACK_PARAM(PropertyKeyArray);
        ORBIT_TRACK_PARAM(PropertyKeyCount);
        ORBIT_TRACK_PARAM(RequiredPropertyKeyCount);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupDiGetDeviceInterfacePropertyKeys(DeviceInfoSet, DeviceInterfaceData, PropertyKeyArray, PropertyKeyCount, RequiredPropertyKeyCount, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDeviceInterfacePropertyW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* DeviceInterfaceData, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t* PropertyType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t* RequiredSize, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInterfaceData);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupDiGetDeviceInterfacePropertyW(DeviceInfoSet, DeviceInterfaceData, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, RequiredSize, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSetDeviceInterfacePropertyW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVICE_INTERFACE_DATA* DeviceInterfaceData, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t PropertyType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInterfaceData);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupDiSetDeviceInterfacePropertyW(DeviceInfoSet, DeviceInterfaceData, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassPropertyKeys(::win32::guid* ClassGuid, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKeyArray, uint32_t PropertyKeyCount, uint32_t* RequiredPropertyKeyCount, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(PropertyKeyArray);
        ORBIT_TRACK_PARAM(PropertyKeyCount);
        ORBIT_TRACK_PARAM(RequiredPropertyKeyCount);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupDiGetClassPropertyKeys(ClassGuid, PropertyKeyArray, PropertyKeyCount, RequiredPropertyKeyCount, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassPropertyKeysExW(::win32::guid* ClassGuid, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKeyArray, uint32_t PropertyKeyCount, uint32_t* RequiredPropertyKeyCount, uint32_t Flags, win32::Windows::Win32::Foundation::PWSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(PropertyKeyArray);
        ORBIT_TRACK_PARAM(PropertyKeyCount);
        ORBIT_TRACK_PARAM(RequiredPropertyKeyCount);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiGetClassPropertyKeysExW(ClassGuid, PropertyKeyArray, PropertyKeyCount, RequiredPropertyKeyCount, Flags, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassPropertyW(::win32::guid* ClassGuid, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t* PropertyType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t* RequiredSize, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupDiGetClassPropertyW(ClassGuid, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, RequiredSize, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassPropertyExW(::win32::guid* ClassGuid, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t* PropertyType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t* RequiredSize, uint32_t Flags, win32::Windows::Win32::Foundation::PWSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiGetClassPropertyExW(ClassGuid, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, RequiredSize, Flags, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSetClassPropertyW(::win32::guid* ClassGuid, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t PropertyType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupDiSetClassPropertyW(ClassGuid, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSetClassPropertyExW(::win32::guid* ClassGuid, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t PropertyType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t Flags, win32::Windows::Win32::Foundation::PWSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiSetClassPropertyExW(ClassGuid, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, Flags, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDeviceRegistryPropertyA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, uint32_t Property, uint32_t* PropertyRegDataType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(Property);
        ORBIT_TRACK_PARAM(PropertyRegDataType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiGetDeviceRegistryPropertyA(DeviceInfoSet, DeviceInfoData, Property, PropertyRegDataType, PropertyBuffer, PropertyBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDeviceRegistryPropertyW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, uint32_t Property, uint32_t* PropertyRegDataType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(Property);
        ORBIT_TRACK_PARAM(PropertyRegDataType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiGetDeviceRegistryPropertyW(DeviceInfoSet, DeviceInfoData, Property, PropertyRegDataType, PropertyBuffer, PropertyBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassRegistryPropertyA(::win32::guid* ClassGuid, uint32_t Property, uint32_t* PropertyRegDataType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t* RequiredSize, win32::Windows::Win32::Foundation::PSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(Property);
        ORBIT_TRACK_PARAM(PropertyRegDataType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiGetClassRegistryPropertyA(ClassGuid, Property, PropertyRegDataType, PropertyBuffer, PropertyBufferSize, RequiredSize, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassRegistryPropertyW(::win32::guid* ClassGuid, uint32_t Property, uint32_t* PropertyRegDataType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t* RequiredSize, win32::Windows::Win32::Foundation::PWSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(Property);
        ORBIT_TRACK_PARAM(PropertyRegDataType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiGetClassRegistryPropertyW(ClassGuid, Property, PropertyRegDataType, PropertyBuffer, PropertyBufferSize, RequiredSize, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSetDeviceRegistryPropertyA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, uint32_t Property, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(Property);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);

        auto win32_impl_result = g_api_table.SetupDiSetDeviceRegistryPropertyA(DeviceInfoSet, DeviceInfoData, Property, PropertyBuffer, PropertyBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSetDeviceRegistryPropertyW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, uint32_t Property, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(Property);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);

        auto win32_impl_result = g_api_table.SetupDiSetDeviceRegistryPropertyW(DeviceInfoSet, DeviceInfoData, Property, PropertyBuffer, PropertyBufferSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSetClassRegistryPropertyA(::win32::guid* ClassGuid, uint32_t Property, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, win32::Windows::Win32::Foundation::PSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(Property);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiSetClassRegistryPropertyA(ClassGuid, Property, PropertyBuffer, PropertyBufferSize, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSetClassRegistryPropertyW(::win32::guid* ClassGuid, uint32_t Property, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, win32::Windows::Win32::Foundation::PWSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(Property);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiSetClassRegistryPropertyW(ClassGuid, Property, PropertyBuffer, PropertyBufferSize, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDeviceInstallParamsA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINSTALL_PARAMS_A* DeviceInstallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DeviceInstallParams);

        auto win32_impl_result = g_api_table.SetupDiGetDeviceInstallParamsA(DeviceInfoSet, DeviceInfoData, DeviceInstallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDeviceInstallParamsW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINSTALL_PARAMS_W* DeviceInstallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DeviceInstallParams);

        auto win32_impl_result = g_api_table.SetupDiGetDeviceInstallParamsW(DeviceInfoSet, DeviceInfoData, DeviceInstallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassInstallParamsA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_CLASSINSTALL_HEADER* ClassInstallParams, uint32_t ClassInstallParamsSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(ClassInstallParams);
        ORBIT_TRACK_PARAM(ClassInstallParamsSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiGetClassInstallParamsA(DeviceInfoSet, DeviceInfoData, ClassInstallParams, ClassInstallParamsSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassInstallParamsW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_CLASSINSTALL_HEADER* ClassInstallParams, uint32_t ClassInstallParamsSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(ClassInstallParams);
        ORBIT_TRACK_PARAM(ClassInstallParamsSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiGetClassInstallParamsW(DeviceInfoSet, DeviceInfoData, ClassInstallParams, ClassInstallParamsSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSetDeviceInstallParamsA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINSTALL_PARAMS_A* DeviceInstallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DeviceInstallParams);

        auto win32_impl_result = g_api_table.SetupDiSetDeviceInstallParamsA(DeviceInfoSet, DeviceInfoData, DeviceInstallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSetDeviceInstallParamsW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINSTALL_PARAMS_W* DeviceInstallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DeviceInstallParams);

        auto win32_impl_result = g_api_table.SetupDiSetDeviceInstallParamsW(DeviceInfoSet, DeviceInfoData, DeviceInstallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSetClassInstallParamsA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_CLASSINSTALL_HEADER* ClassInstallParams, uint32_t ClassInstallParamsSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(ClassInstallParams);
        ORBIT_TRACK_PARAM(ClassInstallParamsSize);

        auto win32_impl_result = g_api_table.SetupDiSetClassInstallParamsA(DeviceInfoSet, DeviceInfoData, ClassInstallParams, ClassInstallParamsSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSetClassInstallParamsW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_CLASSINSTALL_HEADER* ClassInstallParams, uint32_t ClassInstallParamsSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(ClassInstallParams);
        ORBIT_TRACK_PARAM(ClassInstallParamsSize);

        auto win32_impl_result = g_api_table.SetupDiSetClassInstallParamsW(DeviceInfoSet, DeviceInfoData, ClassInstallParams, ClassInstallParamsSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDriverInstallParamsA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINFO_DATA_V2_A* DriverInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINSTALL_PARAMS* DriverInstallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DriverInfoData);
        ORBIT_TRACK_PARAM(DriverInstallParams);

        auto win32_impl_result = g_api_table.SetupDiGetDriverInstallParamsA(DeviceInfoSet, DeviceInfoData, DriverInfoData, DriverInstallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetDriverInstallParamsW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINFO_DATA_V2_W* DriverInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINSTALL_PARAMS* DriverInstallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DriverInfoData);
        ORBIT_TRACK_PARAM(DriverInstallParams);

        auto win32_impl_result = g_api_table.SetupDiGetDriverInstallParamsW(DeviceInfoSet, DeviceInfoData, DriverInfoData, DriverInstallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSetDriverInstallParamsA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINFO_DATA_V2_A* DriverInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINSTALL_PARAMS* DriverInstallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DriverInfoData);
        ORBIT_TRACK_PARAM(DriverInstallParams);

        auto win32_impl_result = g_api_table.SetupDiSetDriverInstallParamsA(DeviceInfoSet, DeviceInfoData, DriverInfoData, DriverInstallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSetDriverInstallParamsW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINFO_DATA_V2_W* DriverInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINSTALL_PARAMS* DriverInstallParams) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DriverInfoData);
        ORBIT_TRACK_PARAM(DriverInstallParams);

        auto win32_impl_result = g_api_table.SetupDiSetDriverInstallParamsW(DeviceInfoSet, DeviceInfoData, DriverInfoData, DriverInstallParams);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiLoadClassIcon(::win32::guid* ClassGuid, win32::Windows::Win32::UI::WindowsAndMessaging::HICON* LargeIcon, int32_t* MiniIconIndex) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(LargeIcon);
        ORBIT_TRACK_PARAM(MiniIconIndex);

        auto win32_impl_result = g_api_table.SetupDiLoadClassIcon(ClassGuid, LargeIcon, MiniIconIndex);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiLoadDeviceIcon(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, uint32_t cxIcon, uint32_t cyIcon, uint32_t Flags, win32::Windows::Win32::UI::WindowsAndMessaging::HICON* hIcon) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(cxIcon);
        ORBIT_TRACK_PARAM(cyIcon);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(hIcon);

        auto win32_impl_result = g_api_table.SetupDiLoadDeviceIcon(DeviceInfoSet, DeviceInfoData, cxIcon, cyIcon, Flags, hIcon);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    int32_t __stdcall ORBIT_IMPL_SetupDiDrawMiniIcon(win32::Windows::Win32::Graphics::Gdi::HDC hdc, win32::Windows::Win32::Foundation::RECT rc, int32_t MiniIconIndex, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hdc);
        ORBIT_TRACK_PARAM(rc);
        ORBIT_TRACK_PARAM(MiniIconIndex);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupDiDrawMiniIcon(hdc, rc, MiniIconIndex, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassBitmapIndex(::win32::guid* ClassGuid, int32_t* MiniIconIndex) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(MiniIconIndex);

        auto win32_impl_result = g_api_table.SetupDiGetClassBitmapIndex(ClassGuid, MiniIconIndex);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassImageList(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_CLASSIMAGELIST_DATA* ClassImageListData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassImageListData);

        auto win32_impl_result = g_api_table.SetupDiGetClassImageList(ClassImageListData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassImageListExA(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_CLASSIMAGELIST_DATA* ClassImageListData, win32::Windows::Win32::Foundation::PSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassImageListData);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiGetClassImageListExA(ClassImageListData, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassImageListExW(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_CLASSIMAGELIST_DATA* ClassImageListData, win32::Windows::Win32::Foundation::PWSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassImageListData);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiGetClassImageListExW(ClassImageListData, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassImageIndex(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_CLASSIMAGELIST_DATA* ClassImageListData, ::win32::guid* ClassGuid, int32_t* ImageIndex) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassImageListData);
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ImageIndex);

        auto win32_impl_result = g_api_table.SetupDiGetClassImageIndex(ClassImageListData, ClassGuid, ImageIndex);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiDestroyClassImageList(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_CLASSIMAGELIST_DATA* ClassImageListData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassImageListData);

        auto win32_impl_result = g_api_table.SetupDiDestroyClassImageList(ClassImageListData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassDevPropertySheetsA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::UI::Controls::PROPSHEETHEADERA_V2* PropertySheetHeader, uint32_t PropertySheetHeaderPageListSize, uint32_t* RequiredSize, uint32_t PropertySheetType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(PropertySheetHeader);
        ORBIT_TRACK_PARAM(PropertySheetHeaderPageListSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(PropertySheetType);

        auto win32_impl_result = g_api_table.SetupDiGetClassDevPropertySheetsA(DeviceInfoSet, DeviceInfoData, PropertySheetHeader, PropertySheetHeaderPageListSize, RequiredSize, PropertySheetType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetClassDevPropertySheetsW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::UI::Controls::PROPSHEETHEADERW_V2* PropertySheetHeader, uint32_t PropertySheetHeaderPageListSize, uint32_t* RequiredSize, uint32_t PropertySheetType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(PropertySheetHeader);
        ORBIT_TRACK_PARAM(PropertySheetHeaderPageListSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(PropertySheetType);

        auto win32_impl_result = g_api_table.SetupDiGetClassDevPropertySheetsW(DeviceInfoSet, DeviceInfoData, PropertySheetHeader, PropertySheetHeaderPageListSize, RequiredSize, PropertySheetType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiAskForOEMDisk(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiAskForOEMDisk(DeviceInfoSet, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSelectOEMDrv(win32::Windows::Win32::Foundation::HWND hwndParent, void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiSelectOEMDrv(hwndParent, DeviceInfoSet, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiClassNameFromGuidA(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PSTR ClassName, uint32_t ClassNameSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ClassName);
        ORBIT_TRACK_PARAM(ClassNameSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiClassNameFromGuidA(ClassGuid, ClassName, ClassNameSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiClassNameFromGuidW(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PWSTR ClassName, uint32_t ClassNameSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ClassName);
        ORBIT_TRACK_PARAM(ClassNameSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiClassNameFromGuidW(ClassGuid, ClassName, ClassNameSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiClassNameFromGuidExA(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PSTR ClassName, uint32_t ClassNameSize, uint32_t* RequiredSize, win32::Windows::Win32::Foundation::PSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ClassName);
        ORBIT_TRACK_PARAM(ClassNameSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiClassNameFromGuidExA(ClassGuid, ClassName, ClassNameSize, RequiredSize, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiClassNameFromGuidExW(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PWSTR ClassName, uint32_t ClassNameSize, uint32_t* RequiredSize, win32::Windows::Win32::Foundation::PWSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ClassName);
        ORBIT_TRACK_PARAM(ClassNameSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiClassNameFromGuidExW(ClassGuid, ClassName, ClassNameSize, RequiredSize, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiClassGuidsFromNameA(win32::Windows::Win32::Foundation::PSTR ClassName, ::win32::guid* ClassGuidList, uint32_t ClassGuidListSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassName);
        ORBIT_TRACK_PARAM(ClassGuidList);
        ORBIT_TRACK_PARAM(ClassGuidListSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiClassGuidsFromNameA(ClassName, ClassGuidList, ClassGuidListSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiClassGuidsFromNameW(win32::Windows::Win32::Foundation::PWSTR ClassName, ::win32::guid* ClassGuidList, uint32_t ClassGuidListSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassName);
        ORBIT_TRACK_PARAM(ClassGuidList);
        ORBIT_TRACK_PARAM(ClassGuidListSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiClassGuidsFromNameW(ClassName, ClassGuidList, ClassGuidListSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiClassGuidsFromNameExA(win32::Windows::Win32::Foundation::PSTR ClassName, ::win32::guid* ClassGuidList, uint32_t ClassGuidListSize, uint32_t* RequiredSize, win32::Windows::Win32::Foundation::PSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassName);
        ORBIT_TRACK_PARAM(ClassGuidList);
        ORBIT_TRACK_PARAM(ClassGuidListSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiClassGuidsFromNameExA(ClassName, ClassGuidList, ClassGuidListSize, RequiredSize, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiClassGuidsFromNameExW(win32::Windows::Win32::Foundation::PWSTR ClassName, ::win32::guid* ClassGuidList, uint32_t ClassGuidListSize, uint32_t* RequiredSize, win32::Windows::Win32::Foundation::PWSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassName);
        ORBIT_TRACK_PARAM(ClassGuidList);
        ORBIT_TRACK_PARAM(ClassGuidListSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiClassGuidsFromNameExW(ClassName, ClassGuidList, ClassGuidListSize, RequiredSize, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetHwProfileFriendlyNameA(uint32_t HwProfile, win32::Windows::Win32::Foundation::PSTR FriendlyName, uint32_t FriendlyNameSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HwProfile);
        ORBIT_TRACK_PARAM(FriendlyName);
        ORBIT_TRACK_PARAM(FriendlyNameSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiGetHwProfileFriendlyNameA(HwProfile, FriendlyName, FriendlyNameSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetHwProfileFriendlyNameW(uint32_t HwProfile, win32::Windows::Win32::Foundation::PWSTR FriendlyName, uint32_t FriendlyNameSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HwProfile);
        ORBIT_TRACK_PARAM(FriendlyName);
        ORBIT_TRACK_PARAM(FriendlyNameSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiGetHwProfileFriendlyNameW(HwProfile, FriendlyName, FriendlyNameSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetHwProfileFriendlyNameExA(uint32_t HwProfile, win32::Windows::Win32::Foundation::PSTR FriendlyName, uint32_t FriendlyNameSize, uint32_t* RequiredSize, win32::Windows::Win32::Foundation::PSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HwProfile);
        ORBIT_TRACK_PARAM(FriendlyName);
        ORBIT_TRACK_PARAM(FriendlyNameSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiGetHwProfileFriendlyNameExA(HwProfile, FriendlyName, FriendlyNameSize, RequiredSize, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetHwProfileFriendlyNameExW(uint32_t HwProfile, win32::Windows::Win32::Foundation::PWSTR FriendlyName, uint32_t FriendlyNameSize, uint32_t* RequiredSize, win32::Windows::Win32::Foundation::PWSTR MachineName, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(HwProfile);
        ORBIT_TRACK_PARAM(FriendlyName);
        ORBIT_TRACK_PARAM(FriendlyNameSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(MachineName);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiGetHwProfileFriendlyNameExW(HwProfile, FriendlyName, FriendlyNameSize, RequiredSize, MachineName, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::UI::Controls::HPROPSHEETPAGE __stdcall ORBIT_IMPL_SetupDiGetWizardPage(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_INSTALLWIZARD_DATA* InstallWizardData, uint32_t PageType, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(InstallWizardData);
        ORBIT_TRACK_PARAM(PageType);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupDiGetWizardPage(DeviceInfoSet, DeviceInfoData, InstallWizardData, PageType, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetSelectedDevice(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiGetSelectedDevice(DeviceInfoSet, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiSetSelectedDevice(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);

        auto win32_impl_result = g_api_table.SetupDiSetSelectedDevice(DeviceInfoSet, DeviceInfoData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetActualModelsSectionA(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* Context, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_ALTPLATFORM_INFO_V2* AlternatePlatformInfo, win32::Windows::Win32::Foundation::PSTR InfSectionWithExt, uint32_t InfSectionWithExtSize, uint32_t* RequiredSize, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(AlternatePlatformInfo);
        ORBIT_TRACK_PARAM(InfSectionWithExt);
        ORBIT_TRACK_PARAM(InfSectionWithExtSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiGetActualModelsSectionA(Context, AlternatePlatformInfo, InfSectionWithExt, InfSectionWithExtSize, RequiredSize, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetActualModelsSectionW(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::INFCONTEXT* Context, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_ALTPLATFORM_INFO_V2* AlternatePlatformInfo, win32::Windows::Win32::Foundation::PWSTR InfSectionWithExt, uint32_t InfSectionWithExtSize, uint32_t* RequiredSize, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Context);
        ORBIT_TRACK_PARAM(AlternatePlatformInfo);
        ORBIT_TRACK_PARAM(InfSectionWithExt);
        ORBIT_TRACK_PARAM(InfSectionWithExtSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiGetActualModelsSectionW(Context, AlternatePlatformInfo, InfSectionWithExt, InfSectionWithExtSize, RequiredSize, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetActualSectionToInstallA(void* InfHandle, win32::Windows::Win32::Foundation::PSTR InfSectionName, win32::Windows::Win32::Foundation::PSTR InfSectionWithExt, uint32_t InfSectionWithExtSize, uint32_t* RequiredSize, win32::Windows::Win32::Foundation::PSTR* Extension) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(InfSectionName);
        ORBIT_TRACK_PARAM(InfSectionWithExt);
        ORBIT_TRACK_PARAM(InfSectionWithExtSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(Extension);

        auto win32_impl_result = g_api_table.SetupDiGetActualSectionToInstallA(InfHandle, InfSectionName, InfSectionWithExt, InfSectionWithExtSize, RequiredSize, Extension);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetActualSectionToInstallW(void* InfHandle, win32::Windows::Win32::Foundation::PWSTR InfSectionName, win32::Windows::Win32::Foundation::PWSTR InfSectionWithExt, uint32_t InfSectionWithExtSize, uint32_t* RequiredSize, win32::Windows::Win32::Foundation::PWSTR* Extension) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(InfSectionName);
        ORBIT_TRACK_PARAM(InfSectionWithExt);
        ORBIT_TRACK_PARAM(InfSectionWithExtSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(Extension);

        auto win32_impl_result = g_api_table.SetupDiGetActualSectionToInstallW(InfHandle, InfSectionName, InfSectionWithExt, InfSectionWithExtSize, RequiredSize, Extension);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetActualSectionToInstallExA(void* InfHandle, win32::Windows::Win32::Foundation::PSTR InfSectionName, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_ALTPLATFORM_INFO_V2* AlternatePlatformInfo, win32::Windows::Win32::Foundation::PSTR InfSectionWithExt, uint32_t InfSectionWithExtSize, uint32_t* RequiredSize, win32::Windows::Win32::Foundation::PSTR* Extension, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(InfSectionName);
        ORBIT_TRACK_PARAM(AlternatePlatformInfo);
        ORBIT_TRACK_PARAM(InfSectionWithExt);
        ORBIT_TRACK_PARAM(InfSectionWithExtSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(Extension);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiGetActualSectionToInstallExA(InfHandle, InfSectionName, AlternatePlatformInfo, InfSectionWithExt, InfSectionWithExtSize, RequiredSize, Extension, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetActualSectionToInstallExW(void* InfHandle, win32::Windows::Win32::Foundation::PWSTR InfSectionName, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_ALTPLATFORM_INFO_V2* AlternatePlatformInfo, win32::Windows::Win32::Foundation::PWSTR InfSectionWithExt, uint32_t InfSectionWithExtSize, uint32_t* RequiredSize, win32::Windows::Win32::Foundation::PWSTR* Extension, void* Reserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(InfSectionName);
        ORBIT_TRACK_PARAM(AlternatePlatformInfo);
        ORBIT_TRACK_PARAM(InfSectionWithExt);
        ORBIT_TRACK_PARAM(InfSectionWithExtSize);
        ORBIT_TRACK_PARAM(RequiredSize);
        ORBIT_TRACK_PARAM(Extension);
        ORBIT_TRACK_PARAM(Reserved);

        auto win32_impl_result = g_api_table.SetupDiGetActualSectionToInstallExW(InfHandle, InfSectionName, AlternatePlatformInfo, InfSectionWithExt, InfSectionWithExtSize, RequiredSize, Extension, Reserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupEnumInfSectionsA(void* InfHandle, uint32_t Index, win32::Windows::Win32::Foundation::PSTR Buffer, uint32_t Size, uint32_t* SizeNeeded) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(Index);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(Size);
        ORBIT_TRACK_PARAM(SizeNeeded);

        auto win32_impl_result = g_api_table.SetupEnumInfSectionsA(InfHandle, Index, Buffer, Size, SizeNeeded);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupEnumInfSectionsW(void* InfHandle, uint32_t Index, win32::Windows::Win32::Foundation::PWSTR Buffer, uint32_t Size, uint32_t* SizeNeeded) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(Index);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(Size);
        ORBIT_TRACK_PARAM(SizeNeeded);

        auto win32_impl_result = g_api_table.SetupEnumInfSectionsW(InfHandle, Index, Buffer, Size, SizeNeeded);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupVerifyInfFileA(win32::Windows::Win32::Foundation::PSTR InfName, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_ALTPLATFORM_INFO_V2* AltPlatformInfo, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_INF_SIGNER_INFO_V2_A* InfSignerInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfName);
        ORBIT_TRACK_PARAM(AltPlatformInfo);
        ORBIT_TRACK_PARAM(InfSignerInfo);

        auto win32_impl_result = g_api_table.SetupVerifyInfFileA(InfName, AltPlatformInfo, InfSignerInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupVerifyInfFileW(win32::Windows::Win32::Foundation::PWSTR InfName, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_ALTPLATFORM_INFO_V2* AltPlatformInfo, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_INF_SIGNER_INFO_V2_W* InfSignerInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfName);
        ORBIT_TRACK_PARAM(AltPlatformInfo);
        ORBIT_TRACK_PARAM(InfSignerInfo);

        auto win32_impl_result = g_api_table.SetupVerifyInfFileW(InfName, AltPlatformInfo, InfSignerInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetCustomDevicePropertyA(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Foundation::PSTR CustomPropertyName, uint32_t Flags, uint32_t* PropertyRegDataType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(CustomPropertyName);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(PropertyRegDataType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiGetCustomDevicePropertyA(DeviceInfoSet, DeviceInfoData, CustomPropertyName, Flags, PropertyRegDataType, PropertyBuffer, PropertyBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupDiGetCustomDevicePropertyW(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Foundation::PWSTR CustomPropertyName, uint32_t Flags, uint32_t* PropertyRegDataType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t* RequiredSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(CustomPropertyName);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(PropertyRegDataType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(RequiredSize);

        auto win32_impl_result = g_api_table.SetupDiGetCustomDevicePropertyW(DeviceInfoSet, DeviceInfoData, CustomPropertyName, Flags, PropertyRegDataType, PropertyBuffer, PropertyBufferSize, RequiredSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupConfigureWmiFromInfSectionA(void* InfHandle, win32::Windows::Win32::Foundation::PSTR SectionName, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(SectionName);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupConfigureWmiFromInfSectionA(InfHandle, SectionName, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetupConfigureWmiFromInfSectionW(void* InfHandle, win32::Windows::Win32::Foundation::PWSTR SectionName, uint32_t Flags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InfHandle);
        ORBIT_TRACK_PARAM(SectionName);
        ORBIT_TRACK_PARAM(Flags);

        auto win32_impl_result = g_api_table.SetupConfigureWmiFromInfSectionW(InfHandle, SectionName, Flags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Add_Empty_Log_Conf(size_t* plcLogConf, uint32_t dnDevInst, win32::Windows::Win32::Data::HtmlHelp::PRIORITY Priority, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(plcLogConf);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(Priority);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Add_Empty_Log_Conf(plcLogConf, dnDevInst, Priority, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Add_Empty_Log_Conf_Ex(size_t* plcLogConf, uint32_t dnDevInst, win32::Windows::Win32::Data::HtmlHelp::PRIORITY Priority, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(plcLogConf);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(Priority);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Add_Empty_Log_Conf_Ex(plcLogConf, dnDevInst, Priority, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Add_IDA(uint32_t dnDevInst, win32::Windows::Win32::Foundation::PSTR pszID, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(pszID);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Add_IDA(dnDevInst, pszID, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Add_IDW(uint32_t dnDevInst, win32::Windows::Win32::Foundation::PWSTR pszID, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(pszID);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Add_IDW(dnDevInst, pszID, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Add_ID_ExA(uint32_t dnDevInst, win32::Windows::Win32::Foundation::PSTR pszID, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(pszID);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Add_ID_ExA(dnDevInst, pszID, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Add_ID_ExW(uint32_t dnDevInst, win32::Windows::Win32::Foundation::PWSTR pszID, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(pszID);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Add_ID_ExW(dnDevInst, pszID, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Add_Range(uint64_t ullStartValue, uint64_t ullEndValue, size_t rlh, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ullStartValue);
        ORBIT_TRACK_PARAM(ullEndValue);
        ORBIT_TRACK_PARAM(rlh);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Add_Range(ullStartValue, ullEndValue, rlh, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Add_Res_Des(size_t* prdResDes, size_t lcLogConf, uint32_t ResourceID, void* ResourceData, uint32_t ResourceLen, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(prdResDes);
        ORBIT_TRACK_PARAM(lcLogConf);
        ORBIT_TRACK_PARAM(ResourceID);
        ORBIT_TRACK_PARAM(ResourceData);
        ORBIT_TRACK_PARAM(ResourceLen);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Add_Res_Des(prdResDes, lcLogConf, ResourceID, ResourceData, ResourceLen, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Add_Res_Des_Ex(size_t* prdResDes, size_t lcLogConf, uint32_t ResourceID, void* ResourceData, uint32_t ResourceLen, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(prdResDes);
        ORBIT_TRACK_PARAM(lcLogConf);
        ORBIT_TRACK_PARAM(ResourceID);
        ORBIT_TRACK_PARAM(ResourceData);
        ORBIT_TRACK_PARAM(ResourceLen);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Add_Res_Des_Ex(prdResDes, lcLogConf, ResourceID, ResourceData, ResourceLen, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Connect_MachineA(win32::Windows::Win32::Foundation::PSTR UNCServerName, intptr_t* phMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(UNCServerName);
        ORBIT_TRACK_PARAM(phMachine);

        auto win32_impl_result = g_api_table.CM_Connect_MachineA(UNCServerName, phMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Connect_MachineW(win32::Windows::Win32::Foundation::PWSTR UNCServerName, intptr_t* phMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(UNCServerName);
        ORBIT_TRACK_PARAM(phMachine);

        auto win32_impl_result = g_api_table.CM_Connect_MachineW(UNCServerName, phMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Create_DevNodeA(uint32_t* pdnDevInst, int8_t* pDeviceID, uint32_t dnParent, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdnDevInst);
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(dnParent);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Create_DevNodeA(pdnDevInst, pDeviceID, dnParent, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Create_DevNodeW(uint32_t* pdnDevInst, uint16_t* pDeviceID, uint32_t dnParent, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdnDevInst);
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(dnParent);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Create_DevNodeW(pdnDevInst, pDeviceID, dnParent, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Create_DevNode_ExA(uint32_t* pdnDevInst, int8_t* pDeviceID, uint32_t dnParent, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdnDevInst);
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(dnParent);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Create_DevNode_ExA(pdnDevInst, pDeviceID, dnParent, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Create_DevNode_ExW(uint32_t* pdnDevInst, uint16_t* pDeviceID, uint32_t dnParent, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdnDevInst);
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(dnParent);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Create_DevNode_ExW(pdnDevInst, pDeviceID, dnParent, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Create_Range_List(size_t* prlh, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(prlh);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Create_Range_List(prlh, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Delete_Class_Key(::win32::guid* ClassGuid, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Delete_Class_Key(ClassGuid, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Delete_Class_Key_Ex(::win32::guid* ClassGuid, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Delete_Class_Key_Ex(ClassGuid, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Delete_DevNode_Key(uint32_t dnDevNode, uint32_t ulHardwareProfile, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevNode);
        ORBIT_TRACK_PARAM(ulHardwareProfile);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Delete_DevNode_Key(dnDevNode, ulHardwareProfile, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Delete_DevNode_Key_Ex(uint32_t dnDevNode, uint32_t ulHardwareProfile, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevNode);
        ORBIT_TRACK_PARAM(ulHardwareProfile);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Delete_DevNode_Key_Ex(dnDevNode, ulHardwareProfile, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Delete_Range(uint64_t ullStartValue, uint64_t ullEndValue, size_t rlh, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ullStartValue);
        ORBIT_TRACK_PARAM(ullEndValue);
        ORBIT_TRACK_PARAM(rlh);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Delete_Range(ullStartValue, ullEndValue, rlh, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Detect_Resource_Conflict(uint32_t dnDevInst, uint32_t ResourceID, void* ResourceData, uint32_t ResourceLen, win32::Windows::Win32::Foundation::BOOL* pbConflictDetected, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ResourceID);
        ORBIT_TRACK_PARAM(ResourceData);
        ORBIT_TRACK_PARAM(ResourceLen);
        ORBIT_TRACK_PARAM(pbConflictDetected);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Detect_Resource_Conflict(dnDevInst, ResourceID, ResourceData, ResourceLen, pbConflictDetected, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Detect_Resource_Conflict_Ex(uint32_t dnDevInst, uint32_t ResourceID, void* ResourceData, uint32_t ResourceLen, win32::Windows::Win32::Foundation::BOOL* pbConflictDetected, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ResourceID);
        ORBIT_TRACK_PARAM(ResourceData);
        ORBIT_TRACK_PARAM(ResourceLen);
        ORBIT_TRACK_PARAM(pbConflictDetected);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Detect_Resource_Conflict_Ex(dnDevInst, ResourceID, ResourceData, ResourceLen, pbConflictDetected, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Disable_DevNode(uint32_t dnDevInst, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Disable_DevNode(dnDevInst, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Disable_DevNode_Ex(uint32_t dnDevInst, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Disable_DevNode_Ex(dnDevInst, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Disconnect_Machine(intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Disconnect_Machine(hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Dup_Range_List(size_t rlhOld, size_t rlhNew, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rlhOld);
        ORBIT_TRACK_PARAM(rlhNew);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Dup_Range_List(rlhOld, rlhNew, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Enable_DevNode(uint32_t dnDevInst, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Enable_DevNode(dnDevInst, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Enable_DevNode_Ex(uint32_t dnDevInst, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Enable_DevNode_Ex(dnDevInst, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Enumerate_Classes(uint32_t ulClassIndex, ::win32::guid* ClassGuid, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ulClassIndex);
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Enumerate_Classes(ulClassIndex, ClassGuid, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Enumerate_Classes_Ex(uint32_t ulClassIndex, ::win32::guid* ClassGuid, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ulClassIndex);
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Enumerate_Classes_Ex(ulClassIndex, ClassGuid, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Enumerate_EnumeratorsA(uint32_t ulEnumIndex, win32::Windows::Win32::Foundation::PSTR Buffer, uint32_t* pulLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ulEnumIndex);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Enumerate_EnumeratorsA(ulEnumIndex, Buffer, pulLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Enumerate_EnumeratorsW(uint32_t ulEnumIndex, win32::Windows::Win32::Foundation::PWSTR Buffer, uint32_t* pulLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ulEnumIndex);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Enumerate_EnumeratorsW(ulEnumIndex, Buffer, pulLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Enumerate_Enumerators_ExA(uint32_t ulEnumIndex, win32::Windows::Win32::Foundation::PSTR Buffer, uint32_t* pulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ulEnumIndex);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Enumerate_Enumerators_ExA(ulEnumIndex, Buffer, pulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Enumerate_Enumerators_ExW(uint32_t ulEnumIndex, win32::Windows::Win32::Foundation::PWSTR Buffer, uint32_t* pulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ulEnumIndex);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Enumerate_Enumerators_ExW(ulEnumIndex, Buffer, pulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Find_Range(uint64_t* pullStart, uint64_t ullStart, uint32_t ulLength, uint64_t ullAlignment, uint64_t ullEnd, size_t rlh, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pullStart);
        ORBIT_TRACK_PARAM(ullStart);
        ORBIT_TRACK_PARAM(ulLength);
        ORBIT_TRACK_PARAM(ullAlignment);
        ORBIT_TRACK_PARAM(ullEnd);
        ORBIT_TRACK_PARAM(rlh);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Find_Range(pullStart, ullStart, ulLength, ullAlignment, ullEnd, rlh, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_First_Range(size_t rlh, uint64_t* pullStart, uint64_t* pullEnd, size_t* preElement, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rlh);
        ORBIT_TRACK_PARAM(pullStart);
        ORBIT_TRACK_PARAM(pullEnd);
        ORBIT_TRACK_PARAM(preElement);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_First_Range(rlh, pullStart, pullEnd, preElement, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Free_Log_Conf(size_t lcLogConfToBeFreed, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lcLogConfToBeFreed);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Free_Log_Conf(lcLogConfToBeFreed, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Free_Log_Conf_Ex(size_t lcLogConfToBeFreed, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lcLogConfToBeFreed);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Free_Log_Conf_Ex(lcLogConfToBeFreed, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Free_Log_Conf_Handle(size_t lcLogConf) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lcLogConf);

        auto win32_impl_result = g_api_table.CM_Free_Log_Conf_Handle(lcLogConf);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Free_Range_List(size_t rlh, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rlh);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Free_Range_List(rlh, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Free_Res_Des(size_t* prdResDes, size_t rdResDes, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(prdResDes);
        ORBIT_TRACK_PARAM(rdResDes);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Free_Res_Des(prdResDes, rdResDes, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Free_Res_Des_Ex(size_t* prdResDes, size_t rdResDes, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(prdResDes);
        ORBIT_TRACK_PARAM(rdResDes);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Free_Res_Des_Ex(prdResDes, rdResDes, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Free_Res_Des_Handle(size_t rdResDes) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rdResDes);

        auto win32_impl_result = g_api_table.CM_Free_Res_Des_Handle(rdResDes);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Child(uint32_t* pdnDevInst, uint32_t dnDevInst, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdnDevInst);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Child(pdnDevInst, dnDevInst, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Child_Ex(uint32_t* pdnDevInst, uint32_t dnDevInst, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdnDevInst);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Child_Ex(pdnDevInst, dnDevInst, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Class_NameA(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PSTR Buffer, uint32_t* pulLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Class_NameA(ClassGuid, Buffer, pulLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Class_NameW(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PWSTR Buffer, uint32_t* pulLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Class_NameW(ClassGuid, Buffer, pulLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Class_Name_ExA(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PSTR Buffer, uint32_t* pulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Class_Name_ExA(ClassGuid, Buffer, pulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Class_Name_ExW(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PWSTR Buffer, uint32_t* pulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Class_Name_ExW(ClassGuid, Buffer, pulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Class_Key_NameA(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PSTR pszKeyName, uint32_t* pulLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(pszKeyName);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Class_Key_NameA(ClassGuid, pszKeyName, pulLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Class_Key_NameW(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PWSTR pszKeyName, uint32_t* pulLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(pszKeyName);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Class_Key_NameW(ClassGuid, pszKeyName, pulLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Class_Key_Name_ExA(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PSTR pszKeyName, uint32_t* pulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(pszKeyName);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Class_Key_Name_ExA(ClassGuid, pszKeyName, pulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Class_Key_Name_ExW(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PWSTR pszKeyName, uint32_t* pulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(pszKeyName);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Class_Key_Name_ExW(ClassGuid, pszKeyName, pulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Depth(uint32_t* pulDepth, uint32_t dnDevInst, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulDepth);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Depth(pulDepth, dnDevInst, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Depth_Ex(uint32_t* pulDepth, uint32_t dnDevInst, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulDepth);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Depth_Ex(pulDepth, dnDevInst, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_IDA(uint32_t dnDevInst, win32::Windows::Win32::Foundation::PSTR Buffer, uint32_t BufferLen, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLen);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Device_IDA(dnDevInst, Buffer, BufferLen, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_IDW(uint32_t dnDevInst, win32::Windows::Win32::Foundation::PWSTR Buffer, uint32_t BufferLen, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLen);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Device_IDW(dnDevInst, Buffer, BufferLen, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_ID_ExA(uint32_t dnDevInst, win32::Windows::Win32::Foundation::PSTR Buffer, uint32_t BufferLen, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLen);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Device_ID_ExA(dnDevInst, Buffer, BufferLen, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_ID_ExW(uint32_t dnDevInst, win32::Windows::Win32::Foundation::PWSTR Buffer, uint32_t BufferLen, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLen);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Device_ID_ExW(dnDevInst, Buffer, BufferLen, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_ID_ListA(win32::Windows::Win32::Foundation::PSTR pszFilter, win32::Windows::Win32::Foundation::PSTR Buffer, uint32_t BufferLen, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszFilter);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLen);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Device_ID_ListA(pszFilter, Buffer, BufferLen, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_ID_ListW(win32::Windows::Win32::Foundation::PWSTR pszFilter, win32::Windows::Win32::Foundation::PWSTR Buffer, uint32_t BufferLen, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszFilter);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLen);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Device_ID_ListW(pszFilter, Buffer, BufferLen, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_ID_List_ExA(win32::Windows::Win32::Foundation::PSTR pszFilter, win32::Windows::Win32::Foundation::PSTR Buffer, uint32_t BufferLen, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszFilter);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLen);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Device_ID_List_ExA(pszFilter, Buffer, BufferLen, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_ID_List_ExW(win32::Windows::Win32::Foundation::PWSTR pszFilter, win32::Windows::Win32::Foundation::PWSTR Buffer, uint32_t BufferLen, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszFilter);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLen);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Device_ID_List_ExW(pszFilter, Buffer, BufferLen, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_ID_List_SizeA(uint32_t* pulLen, win32::Windows::Win32::Foundation::PSTR pszFilter, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulLen);
        ORBIT_TRACK_PARAM(pszFilter);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Device_ID_List_SizeA(pulLen, pszFilter, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_ID_List_SizeW(uint32_t* pulLen, win32::Windows::Win32::Foundation::PWSTR pszFilter, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulLen);
        ORBIT_TRACK_PARAM(pszFilter);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Device_ID_List_SizeW(pulLen, pszFilter, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_ID_List_Size_ExA(uint32_t* pulLen, win32::Windows::Win32::Foundation::PSTR pszFilter, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulLen);
        ORBIT_TRACK_PARAM(pszFilter);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Device_ID_List_Size_ExA(pulLen, pszFilter, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_ID_List_Size_ExW(uint32_t* pulLen, win32::Windows::Win32::Foundation::PWSTR pszFilter, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulLen);
        ORBIT_TRACK_PARAM(pszFilter);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Device_ID_List_Size_ExW(pulLen, pszFilter, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_ID_Size(uint32_t* pulLen, uint32_t dnDevInst, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulLen);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Device_ID_Size(pulLen, dnDevInst, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_ID_Size_Ex(uint32_t* pulLen, uint32_t dnDevInst, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulLen);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Device_ID_Size_Ex(pulLen, dnDevInst, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_DevNode_PropertyW(uint32_t dnDevInst, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t* PropertyType, uint8_t* PropertyBuffer, uint32_t* PropertyBufferSize, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_DevNode_PropertyW(dnDevInst, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_DevNode_Property_ExW(uint32_t dnDevInst, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t* PropertyType, uint8_t* PropertyBuffer, uint32_t* PropertyBufferSize, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_DevNode_Property_ExW(dnDevInst, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_DevNode_Property_Keys(uint32_t dnDevInst, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKeyArray, uint32_t* PropertyKeyCount, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(PropertyKeyArray);
        ORBIT_TRACK_PARAM(PropertyKeyCount);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_DevNode_Property_Keys(dnDevInst, PropertyKeyArray, PropertyKeyCount, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_DevNode_Property_Keys_Ex(uint32_t dnDevInst, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKeyArray, uint32_t* PropertyKeyCount, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(PropertyKeyArray);
        ORBIT_TRACK_PARAM(PropertyKeyCount);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_DevNode_Property_Keys_Ex(dnDevInst, PropertyKeyArray, PropertyKeyCount, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_DevNode_Registry_PropertyA(uint32_t dnDevInst, uint32_t ulProperty, uint32_t* pulRegDataType, void* Buffer, uint32_t* pulLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulProperty);
        ORBIT_TRACK_PARAM(pulRegDataType);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_DevNode_Registry_PropertyA(dnDevInst, ulProperty, pulRegDataType, Buffer, pulLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_DevNode_Registry_PropertyW(uint32_t dnDevInst, uint32_t ulProperty, uint32_t* pulRegDataType, void* Buffer, uint32_t* pulLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulProperty);
        ORBIT_TRACK_PARAM(pulRegDataType);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_DevNode_Registry_PropertyW(dnDevInst, ulProperty, pulRegDataType, Buffer, pulLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_DevNode_Registry_Property_ExA(uint32_t dnDevInst, uint32_t ulProperty, uint32_t* pulRegDataType, void* Buffer, uint32_t* pulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulProperty);
        ORBIT_TRACK_PARAM(pulRegDataType);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_DevNode_Registry_Property_ExA(dnDevInst, ulProperty, pulRegDataType, Buffer, pulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_DevNode_Registry_Property_ExW(uint32_t dnDevInst, uint32_t ulProperty, uint32_t* pulRegDataType, void* Buffer, uint32_t* pulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulProperty);
        ORBIT_TRACK_PARAM(pulRegDataType);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_DevNode_Registry_Property_ExW(dnDevInst, ulProperty, pulRegDataType, Buffer, pulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_DevNode_Custom_PropertyA(uint32_t dnDevInst, win32::Windows::Win32::Foundation::PSTR pszCustomPropertyName, uint32_t* pulRegDataType, void* Buffer, uint32_t* pulLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(pszCustomPropertyName);
        ORBIT_TRACK_PARAM(pulRegDataType);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_DevNode_Custom_PropertyA(dnDevInst, pszCustomPropertyName, pulRegDataType, Buffer, pulLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_DevNode_Custom_PropertyW(uint32_t dnDevInst, win32::Windows::Win32::Foundation::PWSTR pszCustomPropertyName, uint32_t* pulRegDataType, void* Buffer, uint32_t* pulLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(pszCustomPropertyName);
        ORBIT_TRACK_PARAM(pulRegDataType);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_DevNode_Custom_PropertyW(dnDevInst, pszCustomPropertyName, pulRegDataType, Buffer, pulLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_DevNode_Custom_Property_ExA(uint32_t dnDevInst, win32::Windows::Win32::Foundation::PSTR pszCustomPropertyName, uint32_t* pulRegDataType, void* Buffer, uint32_t* pulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(pszCustomPropertyName);
        ORBIT_TRACK_PARAM(pulRegDataType);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_DevNode_Custom_Property_ExA(dnDevInst, pszCustomPropertyName, pulRegDataType, Buffer, pulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_DevNode_Custom_Property_ExW(uint32_t dnDevInst, win32::Windows::Win32::Foundation::PWSTR pszCustomPropertyName, uint32_t* pulRegDataType, void* Buffer, uint32_t* pulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(pszCustomPropertyName);
        ORBIT_TRACK_PARAM(pulRegDataType);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_DevNode_Custom_Property_ExW(dnDevInst, pszCustomPropertyName, pulRegDataType, Buffer, pulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_DevNode_Status(uint32_t* pulStatus, uint32_t* pulProblemNumber, uint32_t dnDevInst, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulStatus);
        ORBIT_TRACK_PARAM(pulProblemNumber);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_DevNode_Status(pulStatus, pulProblemNumber, dnDevInst, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_DevNode_Status_Ex(uint32_t* pulStatus, uint32_t* pulProblemNumber, uint32_t dnDevInst, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulStatus);
        ORBIT_TRACK_PARAM(pulProblemNumber);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_DevNode_Status_Ex(pulStatus, pulProblemNumber, dnDevInst, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_First_Log_Conf(size_t* plcLogConf, uint32_t dnDevInst, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(plcLogConf);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_First_Log_Conf(plcLogConf, dnDevInst, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_First_Log_Conf_Ex(size_t* plcLogConf, uint32_t dnDevInst, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(plcLogConf);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_First_Log_Conf_Ex(plcLogConf, dnDevInst, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Global_State(uint32_t* pulState, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulState);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Global_State(pulState, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Global_State_Ex(uint32_t* pulState, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulState);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Global_State_Ex(pulState, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Hardware_Profile_InfoA(uint32_t ulIndex, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::HWProfileInfo_sA* pHWProfileInfo, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ulIndex);
        ORBIT_TRACK_PARAM(pHWProfileInfo);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Hardware_Profile_InfoA(ulIndex, pHWProfileInfo, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Hardware_Profile_Info_ExA(uint32_t ulIndex, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::HWProfileInfo_sA* pHWProfileInfo, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ulIndex);
        ORBIT_TRACK_PARAM(pHWProfileInfo);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Hardware_Profile_Info_ExA(ulIndex, pHWProfileInfo, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Hardware_Profile_InfoW(uint32_t ulIndex, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::HWProfileInfo_sW* pHWProfileInfo, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ulIndex);
        ORBIT_TRACK_PARAM(pHWProfileInfo);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Hardware_Profile_InfoW(ulIndex, pHWProfileInfo, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Hardware_Profile_Info_ExW(uint32_t ulIndex, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::HWProfileInfo_sW* pHWProfileInfo, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ulIndex);
        ORBIT_TRACK_PARAM(pHWProfileInfo);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Hardware_Profile_Info_ExW(ulIndex, pHWProfileInfo, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_HW_Prof_FlagsA(int8_t* pDeviceID, uint32_t ulHardwareProfile, uint32_t* pulValue, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(ulHardwareProfile);
        ORBIT_TRACK_PARAM(pulValue);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_HW_Prof_FlagsA(pDeviceID, ulHardwareProfile, pulValue, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_HW_Prof_FlagsW(uint16_t* pDeviceID, uint32_t ulHardwareProfile, uint32_t* pulValue, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(ulHardwareProfile);
        ORBIT_TRACK_PARAM(pulValue);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_HW_Prof_FlagsW(pDeviceID, ulHardwareProfile, pulValue, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_HW_Prof_Flags_ExA(int8_t* pDeviceID, uint32_t ulHardwareProfile, uint32_t* pulValue, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(ulHardwareProfile);
        ORBIT_TRACK_PARAM(pulValue);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_HW_Prof_Flags_ExA(pDeviceID, ulHardwareProfile, pulValue, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_HW_Prof_Flags_ExW(uint16_t* pDeviceID, uint32_t ulHardwareProfile, uint32_t* pulValue, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(ulHardwareProfile);
        ORBIT_TRACK_PARAM(pulValue);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_HW_Prof_Flags_ExW(pDeviceID, ulHardwareProfile, pulValue, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_Interface_AliasA(win32::Windows::Win32::Foundation::PSTR pszDeviceInterface, ::win32::guid* AliasInterfaceGuid, win32::Windows::Win32::Foundation::PSTR pszAliasDeviceInterface, uint32_t* pulLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(AliasInterfaceGuid);
        ORBIT_TRACK_PARAM(pszAliasDeviceInterface);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Device_Interface_AliasA(pszDeviceInterface, AliasInterfaceGuid, pszAliasDeviceInterface, pulLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_Interface_AliasW(win32::Windows::Win32::Foundation::PWSTR pszDeviceInterface, ::win32::guid* AliasInterfaceGuid, win32::Windows::Win32::Foundation::PWSTR pszAliasDeviceInterface, uint32_t* pulLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(AliasInterfaceGuid);
        ORBIT_TRACK_PARAM(pszAliasDeviceInterface);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Device_Interface_AliasW(pszDeviceInterface, AliasInterfaceGuid, pszAliasDeviceInterface, pulLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_Interface_Alias_ExA(win32::Windows::Win32::Foundation::PSTR pszDeviceInterface, ::win32::guid* AliasInterfaceGuid, win32::Windows::Win32::Foundation::PSTR pszAliasDeviceInterface, uint32_t* pulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(AliasInterfaceGuid);
        ORBIT_TRACK_PARAM(pszAliasDeviceInterface);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Device_Interface_Alias_ExA(pszDeviceInterface, AliasInterfaceGuid, pszAliasDeviceInterface, pulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_Interface_Alias_ExW(win32::Windows::Win32::Foundation::PWSTR pszDeviceInterface, ::win32::guid* AliasInterfaceGuid, win32::Windows::Win32::Foundation::PWSTR pszAliasDeviceInterface, uint32_t* pulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(AliasInterfaceGuid);
        ORBIT_TRACK_PARAM(pszAliasDeviceInterface);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Device_Interface_Alias_ExW(pszDeviceInterface, AliasInterfaceGuid, pszAliasDeviceInterface, pulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_Interface_ListA(::win32::guid* InterfaceClassGuid, int8_t* pDeviceID, win32::Windows::Win32::Foundation::PSTR Buffer, uint32_t BufferLen, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InterfaceClassGuid);
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLen);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Device_Interface_ListA(InterfaceClassGuid, pDeviceID, Buffer, BufferLen, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_Interface_ListW(::win32::guid* InterfaceClassGuid, uint16_t* pDeviceID, win32::Windows::Win32::Foundation::PWSTR Buffer, uint32_t BufferLen, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InterfaceClassGuid);
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLen);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Device_Interface_ListW(InterfaceClassGuid, pDeviceID, Buffer, BufferLen, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_Interface_List_ExA(::win32::guid* InterfaceClassGuid, int8_t* pDeviceID, win32::Windows::Win32::Foundation::PSTR Buffer, uint32_t BufferLen, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InterfaceClassGuid);
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLen);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Device_Interface_List_ExA(InterfaceClassGuid, pDeviceID, Buffer, BufferLen, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_Interface_List_ExW(::win32::guid* InterfaceClassGuid, uint16_t* pDeviceID, win32::Windows::Win32::Foundation::PWSTR Buffer, uint32_t BufferLen, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(InterfaceClassGuid);
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLen);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Device_Interface_List_ExW(InterfaceClassGuid, pDeviceID, Buffer, BufferLen, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_Interface_List_SizeA(uint32_t* pulLen, ::win32::guid* InterfaceClassGuid, int8_t* pDeviceID, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulLen);
        ORBIT_TRACK_PARAM(InterfaceClassGuid);
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Device_Interface_List_SizeA(pulLen, InterfaceClassGuid, pDeviceID, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_Interface_List_SizeW(uint32_t* pulLen, ::win32::guid* InterfaceClassGuid, uint16_t* pDeviceID, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulLen);
        ORBIT_TRACK_PARAM(InterfaceClassGuid);
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Device_Interface_List_SizeW(pulLen, InterfaceClassGuid, pDeviceID, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_Interface_List_Size_ExA(uint32_t* pulLen, ::win32::guid* InterfaceClassGuid, int8_t* pDeviceID, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulLen);
        ORBIT_TRACK_PARAM(InterfaceClassGuid);
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Device_Interface_List_Size_ExA(pulLen, InterfaceClassGuid, pDeviceID, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_Interface_List_Size_ExW(uint32_t* pulLen, ::win32::guid* InterfaceClassGuid, uint16_t* pDeviceID, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulLen);
        ORBIT_TRACK_PARAM(InterfaceClassGuid);
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Device_Interface_List_Size_ExW(pulLen, InterfaceClassGuid, pDeviceID, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_Interface_PropertyW(win32::Windows::Win32::Foundation::PWSTR pszDeviceInterface, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t* PropertyType, uint8_t* PropertyBuffer, uint32_t* PropertyBufferSize, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Device_Interface_PropertyW(pszDeviceInterface, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_Interface_Property_ExW(win32::Windows::Win32::Foundation::PWSTR pszDeviceInterface, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t* PropertyType, uint8_t* PropertyBuffer, uint32_t* PropertyBufferSize, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Device_Interface_Property_ExW(pszDeviceInterface, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_Interface_Property_KeysW(win32::Windows::Win32::Foundation::PWSTR pszDeviceInterface, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKeyArray, uint32_t* PropertyKeyCount, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(PropertyKeyArray);
        ORBIT_TRACK_PARAM(PropertyKeyCount);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Device_Interface_Property_KeysW(pszDeviceInterface, PropertyKeyArray, PropertyKeyCount, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Device_Interface_Property_Keys_ExW(win32::Windows::Win32::Foundation::PWSTR pszDeviceInterface, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKeyArray, uint32_t* PropertyKeyCount, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(PropertyKeyArray);
        ORBIT_TRACK_PARAM(PropertyKeyCount);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Device_Interface_Property_Keys_ExW(pszDeviceInterface, PropertyKeyArray, PropertyKeyCount, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Log_Conf_Priority(size_t lcLogConf, uint32_t* pPriority, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lcLogConf);
        ORBIT_TRACK_PARAM(pPriority);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Log_Conf_Priority(lcLogConf, pPriority, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Log_Conf_Priority_Ex(size_t lcLogConf, uint32_t* pPriority, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lcLogConf);
        ORBIT_TRACK_PARAM(pPriority);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Log_Conf_Priority_Ex(lcLogConf, pPriority, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Next_Log_Conf(size_t* plcLogConf, size_t lcLogConf, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(plcLogConf);
        ORBIT_TRACK_PARAM(lcLogConf);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Next_Log_Conf(plcLogConf, lcLogConf, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Next_Log_Conf_Ex(size_t* plcLogConf, size_t lcLogConf, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(plcLogConf);
        ORBIT_TRACK_PARAM(lcLogConf);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Next_Log_Conf_Ex(plcLogConf, lcLogConf, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Parent(uint32_t* pdnDevInst, uint32_t dnDevInst, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdnDevInst);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Parent(pdnDevInst, dnDevInst, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Parent_Ex(uint32_t* pdnDevInst, uint32_t dnDevInst, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdnDevInst);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Parent_Ex(pdnDevInst, dnDevInst, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Res_Des_Data(size_t rdResDes, void* Buffer, uint32_t BufferLen, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rdResDes);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLen);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Res_Des_Data(rdResDes, Buffer, BufferLen, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Res_Des_Data_Ex(size_t rdResDes, void* Buffer, uint32_t BufferLen, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rdResDes);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(BufferLen);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Res_Des_Data_Ex(rdResDes, Buffer, BufferLen, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Res_Des_Data_Size(uint32_t* pulSize, size_t rdResDes, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulSize);
        ORBIT_TRACK_PARAM(rdResDes);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Res_Des_Data_Size(pulSize, rdResDes, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Res_Des_Data_Size_Ex(uint32_t* pulSize, size_t rdResDes, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulSize);
        ORBIT_TRACK_PARAM(rdResDes);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Res_Des_Data_Size_Ex(pulSize, rdResDes, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Sibling(uint32_t* pdnDevInst, uint32_t dnDevInst, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdnDevInst);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Sibling(pdnDevInst, dnDevInst, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Sibling_Ex(uint32_t* pdnDevInst, uint32_t dnDevInst, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdnDevInst);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Sibling_Ex(pdnDevInst, dnDevInst, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint16_t __stdcall ORBIT_IMPL_CM_Get_Version() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.CM_Get_Version();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint16_t __stdcall ORBIT_IMPL_CM_Get_Version_Ex(intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Version_Ex(hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CM_Is_Version_Available(uint16_t wVersion) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(wVersion);

        auto win32_impl_result = g_api_table.CM_Is_Version_Available(wVersion);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CM_Is_Version_Available_Ex(uint16_t wVersion, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(wVersion);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Is_Version_Available_Ex(wVersion, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Intersect_Range_List(size_t rlhOld1, size_t rlhOld2, size_t rlhNew, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rlhOld1);
        ORBIT_TRACK_PARAM(rlhOld2);
        ORBIT_TRACK_PARAM(rlhNew);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Intersect_Range_List(rlhOld1, rlhOld2, rlhNew, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Invert_Range_List(size_t rlhOld, size_t rlhNew, uint64_t ullMaxValue, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rlhOld);
        ORBIT_TRACK_PARAM(rlhNew);
        ORBIT_TRACK_PARAM(ullMaxValue);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Invert_Range_List(rlhOld, rlhNew, ullMaxValue, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Locate_DevNodeA(uint32_t* pdnDevInst, int8_t* pDeviceID, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdnDevInst);
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Locate_DevNodeA(pdnDevInst, pDeviceID, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Locate_DevNodeW(uint32_t* pdnDevInst, uint16_t* pDeviceID, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdnDevInst);
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Locate_DevNodeW(pdnDevInst, pDeviceID, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Locate_DevNode_ExA(uint32_t* pdnDevInst, int8_t* pDeviceID, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdnDevInst);
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Locate_DevNode_ExA(pdnDevInst, pDeviceID, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Locate_DevNode_ExW(uint32_t* pdnDevInst, uint16_t* pDeviceID, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pdnDevInst);
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Locate_DevNode_ExW(pdnDevInst, pDeviceID, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Merge_Range_List(size_t rlhOld1, size_t rlhOld2, size_t rlhNew, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(rlhOld1);
        ORBIT_TRACK_PARAM(rlhOld2);
        ORBIT_TRACK_PARAM(rlhNew);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Merge_Range_List(rlhOld1, rlhOld2, rlhNew, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Modify_Res_Des(size_t* prdResDes, size_t rdResDes, uint32_t ResourceID, void* ResourceData, uint32_t ResourceLen, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(prdResDes);
        ORBIT_TRACK_PARAM(rdResDes);
        ORBIT_TRACK_PARAM(ResourceID);
        ORBIT_TRACK_PARAM(ResourceData);
        ORBIT_TRACK_PARAM(ResourceLen);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Modify_Res_Des(prdResDes, rdResDes, ResourceID, ResourceData, ResourceLen, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Modify_Res_Des_Ex(size_t* prdResDes, size_t rdResDes, uint32_t ResourceID, void* ResourceData, uint32_t ResourceLen, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(prdResDes);
        ORBIT_TRACK_PARAM(rdResDes);
        ORBIT_TRACK_PARAM(ResourceID);
        ORBIT_TRACK_PARAM(ResourceData);
        ORBIT_TRACK_PARAM(ResourceLen);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Modify_Res_Des_Ex(prdResDes, rdResDes, ResourceID, ResourceData, ResourceLen, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Move_DevNode(uint32_t dnFromDevInst, uint32_t dnToDevInst, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnFromDevInst);
        ORBIT_TRACK_PARAM(dnToDevInst);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Move_DevNode(dnFromDevInst, dnToDevInst, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Move_DevNode_Ex(uint32_t dnFromDevInst, uint32_t dnToDevInst, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnFromDevInst);
        ORBIT_TRACK_PARAM(dnToDevInst);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Move_DevNode_Ex(dnFromDevInst, dnToDevInst, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Next_Range(size_t* preElement, uint64_t* pullStart, uint64_t* pullEnd, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(preElement);
        ORBIT_TRACK_PARAM(pullStart);
        ORBIT_TRACK_PARAM(pullEnd);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Next_Range(preElement, pullStart, pullEnd, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Next_Res_Des(size_t* prdResDes, size_t rdResDes, uint32_t ForResource, uint32_t* pResourceID, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(prdResDes);
        ORBIT_TRACK_PARAM(rdResDes);
        ORBIT_TRACK_PARAM(ForResource);
        ORBIT_TRACK_PARAM(pResourceID);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Next_Res_Des(prdResDes, rdResDes, ForResource, pResourceID, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Next_Res_Des_Ex(size_t* prdResDes, size_t rdResDes, uint32_t ForResource, uint32_t* pResourceID, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(prdResDes);
        ORBIT_TRACK_PARAM(rdResDes);
        ORBIT_TRACK_PARAM(ForResource);
        ORBIT_TRACK_PARAM(pResourceID);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Next_Res_Des_Ex(prdResDes, rdResDes, ForResource, pResourceID, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Open_Class_KeyA(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PSTR pszClassName, uint32_t samDesired, uint32_t Disposition, win32::Windows::Win32::System::Registry::HKEY* phkClass, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(pszClassName);
        ORBIT_TRACK_PARAM(samDesired);
        ORBIT_TRACK_PARAM(Disposition);
        ORBIT_TRACK_PARAM(phkClass);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Open_Class_KeyA(ClassGuid, pszClassName, samDesired, Disposition, phkClass, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Open_Class_KeyW(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PWSTR pszClassName, uint32_t samDesired, uint32_t Disposition, win32::Windows::Win32::System::Registry::HKEY* phkClass, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(pszClassName);
        ORBIT_TRACK_PARAM(samDesired);
        ORBIT_TRACK_PARAM(Disposition);
        ORBIT_TRACK_PARAM(phkClass);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Open_Class_KeyW(ClassGuid, pszClassName, samDesired, Disposition, phkClass, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Open_Class_Key_ExA(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PSTR pszClassName, uint32_t samDesired, uint32_t Disposition, win32::Windows::Win32::System::Registry::HKEY* phkClass, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(pszClassName);
        ORBIT_TRACK_PARAM(samDesired);
        ORBIT_TRACK_PARAM(Disposition);
        ORBIT_TRACK_PARAM(phkClass);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Open_Class_Key_ExA(ClassGuid, pszClassName, samDesired, Disposition, phkClass, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Open_Class_Key_ExW(::win32::guid* ClassGuid, win32::Windows::Win32::Foundation::PWSTR pszClassName, uint32_t samDesired, uint32_t Disposition, win32::Windows::Win32::System::Registry::HKEY* phkClass, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(pszClassName);
        ORBIT_TRACK_PARAM(samDesired);
        ORBIT_TRACK_PARAM(Disposition);
        ORBIT_TRACK_PARAM(phkClass);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Open_Class_Key_ExW(ClassGuid, pszClassName, samDesired, Disposition, phkClass, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Open_DevNode_Key(uint32_t dnDevNode, uint32_t samDesired, uint32_t ulHardwareProfile, uint32_t Disposition, win32::Windows::Win32::System::Registry::HKEY* phkDevice, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevNode);
        ORBIT_TRACK_PARAM(samDesired);
        ORBIT_TRACK_PARAM(ulHardwareProfile);
        ORBIT_TRACK_PARAM(Disposition);
        ORBIT_TRACK_PARAM(phkDevice);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Open_DevNode_Key(dnDevNode, samDesired, ulHardwareProfile, Disposition, phkDevice, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Open_DevNode_Key_Ex(uint32_t dnDevNode, uint32_t samDesired, uint32_t ulHardwareProfile, uint32_t Disposition, win32::Windows::Win32::System::Registry::HKEY* phkDevice, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevNode);
        ORBIT_TRACK_PARAM(samDesired);
        ORBIT_TRACK_PARAM(ulHardwareProfile);
        ORBIT_TRACK_PARAM(Disposition);
        ORBIT_TRACK_PARAM(phkDevice);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Open_DevNode_Key_Ex(dnDevNode, samDesired, ulHardwareProfile, Disposition, phkDevice, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Open_Device_Interface_KeyA(win32::Windows::Win32::Foundation::PSTR pszDeviceInterface, uint32_t samDesired, uint32_t Disposition, win32::Windows::Win32::System::Registry::HKEY* phkDeviceInterface, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(samDesired);
        ORBIT_TRACK_PARAM(Disposition);
        ORBIT_TRACK_PARAM(phkDeviceInterface);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Open_Device_Interface_KeyA(pszDeviceInterface, samDesired, Disposition, phkDeviceInterface, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Open_Device_Interface_KeyW(win32::Windows::Win32::Foundation::PWSTR pszDeviceInterface, uint32_t samDesired, uint32_t Disposition, win32::Windows::Win32::System::Registry::HKEY* phkDeviceInterface, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(samDesired);
        ORBIT_TRACK_PARAM(Disposition);
        ORBIT_TRACK_PARAM(phkDeviceInterface);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Open_Device_Interface_KeyW(pszDeviceInterface, samDesired, Disposition, phkDeviceInterface, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Open_Device_Interface_Key_ExA(win32::Windows::Win32::Foundation::PSTR pszDeviceInterface, uint32_t samDesired, uint32_t Disposition, win32::Windows::Win32::System::Registry::HKEY* phkDeviceInterface, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(samDesired);
        ORBIT_TRACK_PARAM(Disposition);
        ORBIT_TRACK_PARAM(phkDeviceInterface);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Open_Device_Interface_Key_ExA(pszDeviceInterface, samDesired, Disposition, phkDeviceInterface, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Open_Device_Interface_Key_ExW(win32::Windows::Win32::Foundation::PWSTR pszDeviceInterface, uint32_t samDesired, uint32_t Disposition, win32::Windows::Win32::System::Registry::HKEY* phkDeviceInterface, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(samDesired);
        ORBIT_TRACK_PARAM(Disposition);
        ORBIT_TRACK_PARAM(phkDeviceInterface);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Open_Device_Interface_Key_ExW(pszDeviceInterface, samDesired, Disposition, phkDeviceInterface, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Delete_Device_Interface_KeyA(win32::Windows::Win32::Foundation::PSTR pszDeviceInterface, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Delete_Device_Interface_KeyA(pszDeviceInterface, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Delete_Device_Interface_KeyW(win32::Windows::Win32::Foundation::PWSTR pszDeviceInterface, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Delete_Device_Interface_KeyW(pszDeviceInterface, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Delete_Device_Interface_Key_ExA(win32::Windows::Win32::Foundation::PSTR pszDeviceInterface, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Delete_Device_Interface_Key_ExA(pszDeviceInterface, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Delete_Device_Interface_Key_ExW(win32::Windows::Win32::Foundation::PWSTR pszDeviceInterface, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Delete_Device_Interface_Key_ExW(pszDeviceInterface, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Query_Arbitrator_Free_Data(void* pData, uint32_t DataLen, uint32_t dnDevInst, uint32_t ResourceID, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pData);
        ORBIT_TRACK_PARAM(DataLen);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ResourceID);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Query_Arbitrator_Free_Data(pData, DataLen, dnDevInst, ResourceID, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Query_Arbitrator_Free_Data_Ex(void* pData, uint32_t DataLen, uint32_t dnDevInst, uint32_t ResourceID, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pData);
        ORBIT_TRACK_PARAM(DataLen);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ResourceID);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Query_Arbitrator_Free_Data_Ex(pData, DataLen, dnDevInst, ResourceID, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Query_Arbitrator_Free_Size(uint32_t* pulSize, uint32_t dnDevInst, uint32_t ResourceID, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulSize);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ResourceID);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Query_Arbitrator_Free_Size(pulSize, dnDevInst, ResourceID, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Query_Arbitrator_Free_Size_Ex(uint32_t* pulSize, uint32_t dnDevInst, uint32_t ResourceID, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pulSize);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ResourceID);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Query_Arbitrator_Free_Size_Ex(pulSize, dnDevInst, ResourceID, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Query_Remove_SubTree(uint32_t dnAncestor, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnAncestor);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Query_Remove_SubTree(dnAncestor, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Query_Remove_SubTree_Ex(uint32_t dnAncestor, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnAncestor);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Query_Remove_SubTree_Ex(dnAncestor, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Query_And_Remove_SubTreeA(uint32_t dnAncestor, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PNP_VETO_TYPE* pVetoType, win32::Windows::Win32::Foundation::PSTR pszVetoName, uint32_t ulNameLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnAncestor);
        ORBIT_TRACK_PARAM(pVetoType);
        ORBIT_TRACK_PARAM(pszVetoName);
        ORBIT_TRACK_PARAM(ulNameLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Query_And_Remove_SubTreeA(dnAncestor, pVetoType, pszVetoName, ulNameLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Query_And_Remove_SubTreeW(uint32_t dnAncestor, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PNP_VETO_TYPE* pVetoType, win32::Windows::Win32::Foundation::PWSTR pszVetoName, uint32_t ulNameLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnAncestor);
        ORBIT_TRACK_PARAM(pVetoType);
        ORBIT_TRACK_PARAM(pszVetoName);
        ORBIT_TRACK_PARAM(ulNameLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Query_And_Remove_SubTreeW(dnAncestor, pVetoType, pszVetoName, ulNameLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Query_And_Remove_SubTree_ExA(uint32_t dnAncestor, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PNP_VETO_TYPE* pVetoType, win32::Windows::Win32::Foundation::PSTR pszVetoName, uint32_t ulNameLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnAncestor);
        ORBIT_TRACK_PARAM(pVetoType);
        ORBIT_TRACK_PARAM(pszVetoName);
        ORBIT_TRACK_PARAM(ulNameLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Query_And_Remove_SubTree_ExA(dnAncestor, pVetoType, pszVetoName, ulNameLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Query_And_Remove_SubTree_ExW(uint32_t dnAncestor, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PNP_VETO_TYPE* pVetoType, win32::Windows::Win32::Foundation::PWSTR pszVetoName, uint32_t ulNameLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnAncestor);
        ORBIT_TRACK_PARAM(pVetoType);
        ORBIT_TRACK_PARAM(pszVetoName);
        ORBIT_TRACK_PARAM(ulNameLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Query_And_Remove_SubTree_ExW(dnAncestor, pVetoType, pszVetoName, ulNameLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Request_Device_EjectA(uint32_t dnDevInst, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PNP_VETO_TYPE* pVetoType, win32::Windows::Win32::Foundation::PSTR pszVetoName, uint32_t ulNameLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(pVetoType);
        ORBIT_TRACK_PARAM(pszVetoName);
        ORBIT_TRACK_PARAM(ulNameLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Request_Device_EjectA(dnDevInst, pVetoType, pszVetoName, ulNameLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Request_Device_Eject_ExA(uint32_t dnDevInst, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PNP_VETO_TYPE* pVetoType, win32::Windows::Win32::Foundation::PSTR pszVetoName, uint32_t ulNameLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(pVetoType);
        ORBIT_TRACK_PARAM(pszVetoName);
        ORBIT_TRACK_PARAM(ulNameLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Request_Device_Eject_ExA(dnDevInst, pVetoType, pszVetoName, ulNameLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Request_Device_EjectW(uint32_t dnDevInst, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PNP_VETO_TYPE* pVetoType, win32::Windows::Win32::Foundation::PWSTR pszVetoName, uint32_t ulNameLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(pVetoType);
        ORBIT_TRACK_PARAM(pszVetoName);
        ORBIT_TRACK_PARAM(ulNameLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Request_Device_EjectW(dnDevInst, pVetoType, pszVetoName, ulNameLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Request_Device_Eject_ExW(uint32_t dnDevInst, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PNP_VETO_TYPE* pVetoType, win32::Windows::Win32::Foundation::PWSTR pszVetoName, uint32_t ulNameLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(pVetoType);
        ORBIT_TRACK_PARAM(pszVetoName);
        ORBIT_TRACK_PARAM(ulNameLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Request_Device_Eject_ExW(dnDevInst, pVetoType, pszVetoName, ulNameLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Reenumerate_DevNode(uint32_t dnDevInst, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Reenumerate_DevNode(dnDevInst, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Reenumerate_DevNode_Ex(uint32_t dnDevInst, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Reenumerate_DevNode_Ex(dnDevInst, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Register_Device_InterfaceA(uint32_t dnDevInst, ::win32::guid* InterfaceClassGuid, win32::Windows::Win32::Foundation::PSTR pszReference, win32::Windows::Win32::Foundation::PSTR pszDeviceInterface, uint32_t* pulLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(InterfaceClassGuid);
        ORBIT_TRACK_PARAM(pszReference);
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Register_Device_InterfaceA(dnDevInst, InterfaceClassGuid, pszReference, pszDeviceInterface, pulLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Register_Device_InterfaceW(uint32_t dnDevInst, ::win32::guid* InterfaceClassGuid, win32::Windows::Win32::Foundation::PWSTR pszReference, win32::Windows::Win32::Foundation::PWSTR pszDeviceInterface, uint32_t* pulLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(InterfaceClassGuid);
        ORBIT_TRACK_PARAM(pszReference);
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Register_Device_InterfaceW(dnDevInst, InterfaceClassGuid, pszReference, pszDeviceInterface, pulLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Register_Device_Interface_ExA(uint32_t dnDevInst, ::win32::guid* InterfaceClassGuid, win32::Windows::Win32::Foundation::PSTR pszReference, win32::Windows::Win32::Foundation::PSTR pszDeviceInterface, uint32_t* pulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(InterfaceClassGuid);
        ORBIT_TRACK_PARAM(pszReference);
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Register_Device_Interface_ExA(dnDevInst, InterfaceClassGuid, pszReference, pszDeviceInterface, pulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Register_Device_Interface_ExW(uint32_t dnDevInst, ::win32::guid* InterfaceClassGuid, win32::Windows::Win32::Foundation::PWSTR pszReference, win32::Windows::Win32::Foundation::PWSTR pszDeviceInterface, uint32_t* pulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(InterfaceClassGuid);
        ORBIT_TRACK_PARAM(pszReference);
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Register_Device_Interface_ExW(dnDevInst, InterfaceClassGuid, pszReference, pszDeviceInterface, pulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_DevNode_Problem_Ex(uint32_t dnDevInst, uint32_t ulProblem, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulProblem);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Set_DevNode_Problem_Ex(dnDevInst, ulProblem, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_DevNode_Problem(uint32_t dnDevInst, uint32_t ulProblem, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulProblem);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Set_DevNode_Problem(dnDevInst, ulProblem, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Unregister_Device_InterfaceA(win32::Windows::Win32::Foundation::PSTR pszDeviceInterface, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Unregister_Device_InterfaceA(pszDeviceInterface, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Unregister_Device_InterfaceW(win32::Windows::Win32::Foundation::PWSTR pszDeviceInterface, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Unregister_Device_InterfaceW(pszDeviceInterface, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Unregister_Device_Interface_ExA(win32::Windows::Win32::Foundation::PSTR pszDeviceInterface, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Unregister_Device_Interface_ExA(pszDeviceInterface, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Unregister_Device_Interface_ExW(win32::Windows::Win32::Foundation::PWSTR pszDeviceInterface, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Unregister_Device_Interface_ExW(pszDeviceInterface, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Register_Device_Driver(uint32_t dnDevInst, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Register_Device_Driver(dnDevInst, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Register_Device_Driver_Ex(uint32_t dnDevInst, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Register_Device_Driver_Ex(dnDevInst, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Remove_SubTree(uint32_t dnAncestor, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnAncestor);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Remove_SubTree(dnAncestor, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Remove_SubTree_Ex(uint32_t dnAncestor, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnAncestor);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Remove_SubTree_Ex(dnAncestor, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_DevNode_PropertyW(uint32_t dnDevInst, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t PropertyType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Set_DevNode_PropertyW(dnDevInst, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_DevNode_Property_ExW(uint32_t dnDevInst, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t PropertyType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Set_DevNode_Property_ExW(dnDevInst, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_DevNode_Registry_PropertyA(uint32_t dnDevInst, uint32_t ulProperty, void* Buffer, uint32_t ulLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulProperty);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(ulLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Set_DevNode_Registry_PropertyA(dnDevInst, ulProperty, Buffer, ulLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_DevNode_Registry_PropertyW(uint32_t dnDevInst, uint32_t ulProperty, void* Buffer, uint32_t ulLength, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulProperty);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(ulLength);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Set_DevNode_Registry_PropertyW(dnDevInst, ulProperty, Buffer, ulLength, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_DevNode_Registry_Property_ExA(uint32_t dnDevInst, uint32_t ulProperty, void* Buffer, uint32_t ulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulProperty);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(ulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Set_DevNode_Registry_Property_ExA(dnDevInst, ulProperty, Buffer, ulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_DevNode_Registry_Property_ExW(uint32_t dnDevInst, uint32_t ulProperty, void* Buffer, uint32_t ulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulProperty);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(ulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Set_DevNode_Registry_Property_ExW(dnDevInst, ulProperty, Buffer, ulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_Device_Interface_PropertyW(win32::Windows::Win32::Foundation::PWSTR pszDeviceInterface, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t PropertyType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Set_Device_Interface_PropertyW(pszDeviceInterface, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_Device_Interface_Property_ExW(win32::Windows::Win32::Foundation::PWSTR pszDeviceInterface, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t PropertyType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszDeviceInterface);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Set_Device_Interface_Property_ExW(pszDeviceInterface, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Is_Dock_Station_Present(win32::Windows::Win32::Foundation::BOOL* pbPresent) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pbPresent);

        auto win32_impl_result = g_api_table.CM_Is_Dock_Station_Present(pbPresent);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Is_Dock_Station_Present_Ex(win32::Windows::Win32::Foundation::BOOL* pbPresent, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pbPresent);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Is_Dock_Station_Present_Ex(pbPresent, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Request_Eject_PC() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.CM_Request_Eject_PC();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Request_Eject_PC_Ex(intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Request_Eject_PC_Ex(hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_HW_Prof_FlagsA(int8_t* pDeviceID, uint32_t ulConfig, uint32_t ulValue, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(ulConfig);
        ORBIT_TRACK_PARAM(ulValue);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Set_HW_Prof_FlagsA(pDeviceID, ulConfig, ulValue, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_HW_Prof_FlagsW(uint16_t* pDeviceID, uint32_t ulConfig, uint32_t ulValue, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(ulConfig);
        ORBIT_TRACK_PARAM(ulValue);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Set_HW_Prof_FlagsW(pDeviceID, ulConfig, ulValue, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_HW_Prof_Flags_ExA(int8_t* pDeviceID, uint32_t ulConfig, uint32_t ulValue, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(ulConfig);
        ORBIT_TRACK_PARAM(ulValue);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Set_HW_Prof_Flags_ExA(pDeviceID, ulConfig, ulValue, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_HW_Prof_Flags_ExW(uint16_t* pDeviceID, uint32_t ulConfig, uint32_t ulValue, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDeviceID);
        ORBIT_TRACK_PARAM(ulConfig);
        ORBIT_TRACK_PARAM(ulValue);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Set_HW_Prof_Flags_ExW(pDeviceID, ulConfig, ulValue, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Setup_DevNode(uint32_t dnDevInst, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Setup_DevNode(dnDevInst, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Setup_DevNode_Ex(uint32_t dnDevInst, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Setup_DevNode_Ex(dnDevInst, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Test_Range_Available(uint64_t ullStartValue, uint64_t ullEndValue, size_t rlh, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ullStartValue);
        ORBIT_TRACK_PARAM(ullEndValue);
        ORBIT_TRACK_PARAM(rlh);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Test_Range_Available(ullStartValue, ullEndValue, rlh, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Uninstall_DevNode(uint32_t dnDevInst, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Uninstall_DevNode(dnDevInst, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Uninstall_DevNode_Ex(uint32_t dnDevInst, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Uninstall_DevNode_Ex(dnDevInst, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Run_Detection(uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Run_Detection(ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Run_Detection_Ex(uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Run_Detection_Ex(ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_HW_Prof(uint32_t ulHardwareProfile, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ulHardwareProfile);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Set_HW_Prof(ulHardwareProfile, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_HW_Prof_Ex(uint32_t ulHardwareProfile, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ulHardwareProfile);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Set_HW_Prof_Ex(ulHardwareProfile, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Query_Resource_Conflict_List(size_t* pclConflictList, uint32_t dnDevInst, uint32_t ResourceID, void* ResourceData, uint32_t ResourceLen, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pclConflictList);
        ORBIT_TRACK_PARAM(dnDevInst);
        ORBIT_TRACK_PARAM(ResourceID);
        ORBIT_TRACK_PARAM(ResourceData);
        ORBIT_TRACK_PARAM(ResourceLen);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Query_Resource_Conflict_List(pclConflictList, dnDevInst, ResourceID, ResourceData, ResourceLen, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Free_Resource_Conflict_Handle(size_t clConflictList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(clConflictList);

        auto win32_impl_result = g_api_table.CM_Free_Resource_Conflict_Handle(clConflictList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Resource_Conflict_Count(size_t clConflictList, uint32_t* pulCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(clConflictList);
        ORBIT_TRACK_PARAM(pulCount);

        auto win32_impl_result = g_api_table.CM_Get_Resource_Conflict_Count(clConflictList, pulCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Resource_Conflict_DetailsA(size_t clConflictList, uint32_t ulIndex, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFLICT_DETAILS_A* pConflictDetails) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(clConflictList);
        ORBIT_TRACK_PARAM(ulIndex);
        ORBIT_TRACK_PARAM(pConflictDetails);

        auto win32_impl_result = g_api_table.CM_Get_Resource_Conflict_DetailsA(clConflictList, ulIndex, pConflictDetails);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Resource_Conflict_DetailsW(size_t clConflictList, uint32_t ulIndex, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFLICT_DETAILS_W* pConflictDetails) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(clConflictList);
        ORBIT_TRACK_PARAM(ulIndex);
        ORBIT_TRACK_PARAM(pConflictDetails);

        auto win32_impl_result = g_api_table.CM_Get_Resource_Conflict_DetailsW(clConflictList, ulIndex, pConflictDetails);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Class_PropertyW(::win32::guid* ClassGUID, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t* PropertyType, uint8_t* PropertyBuffer, uint32_t* PropertyBufferSize, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGUID);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Class_PropertyW(ClassGUID, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Class_Property_ExW(::win32::guid* ClassGUID, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t* PropertyType, uint8_t* PropertyBuffer, uint32_t* PropertyBufferSize, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGUID);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Class_Property_ExW(ClassGUID, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Class_Property_Keys(::win32::guid* ClassGUID, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKeyArray, uint32_t* PropertyKeyCount, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGUID);
        ORBIT_TRACK_PARAM(PropertyKeyArray);
        ORBIT_TRACK_PARAM(PropertyKeyCount);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Get_Class_Property_Keys(ClassGUID, PropertyKeyArray, PropertyKeyCount, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Class_Property_Keys_Ex(::win32::guid* ClassGUID, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKeyArray, uint32_t* PropertyKeyCount, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGUID);
        ORBIT_TRACK_PARAM(PropertyKeyArray);
        ORBIT_TRACK_PARAM(PropertyKeyCount);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Class_Property_Keys_Ex(ClassGUID, PropertyKeyArray, PropertyKeyCount, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_Class_PropertyW(::win32::guid* ClassGUID, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t PropertyType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t ulFlags) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGUID);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(ulFlags);

        auto win32_impl_result = g_api_table.CM_Set_Class_PropertyW(ClassGUID, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, ulFlags);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_Class_Property_ExW(::win32::guid* ClassGUID, win32::Windows::Win32::System::SystemServices::DEVPROPKEY* PropertyKey, uint32_t PropertyType, uint8_t* PropertyBuffer, uint32_t PropertyBufferSize, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGUID);
        ORBIT_TRACK_PARAM(PropertyKey);
        ORBIT_TRACK_PARAM(PropertyType);
        ORBIT_TRACK_PARAM(PropertyBuffer);
        ORBIT_TRACK_PARAM(PropertyBufferSize);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Set_Class_Property_ExW(ClassGUID, PropertyKey, PropertyType, PropertyBuffer, PropertyBufferSize, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Class_Registry_PropertyA(::win32::guid* ClassGuid, uint32_t ulProperty, uint32_t* pulRegDataType, void* Buffer, uint32_t* pulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ulProperty);
        ORBIT_TRACK_PARAM(pulRegDataType);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Class_Registry_PropertyA(ClassGuid, ulProperty, pulRegDataType, Buffer, pulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Get_Class_Registry_PropertyW(::win32::guid* ClassGuid, uint32_t ulProperty, uint32_t* pulRegDataType, void* Buffer, uint32_t* pulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ulProperty);
        ORBIT_TRACK_PARAM(pulRegDataType);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(pulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Get_Class_Registry_PropertyW(ClassGuid, ulProperty, pulRegDataType, Buffer, pulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_Class_Registry_PropertyA(::win32::guid* ClassGuid, uint32_t ulProperty, void* Buffer, uint32_t ulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ulProperty);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(ulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Set_Class_Registry_PropertyA(ClassGuid, ulProperty, Buffer, ulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Set_Class_Registry_PropertyW(::win32::guid* ClassGuid, uint32_t ulProperty, void* Buffer, uint32_t ulLength, uint32_t ulFlags, intptr_t hMachine) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClassGuid);
        ORBIT_TRACK_PARAM(ulProperty);
        ORBIT_TRACK_PARAM(Buffer);
        ORBIT_TRACK_PARAM(ulLength);
        ORBIT_TRACK_PARAM(ulFlags);
        ORBIT_TRACK_PARAM(hMachine);

        auto win32_impl_result = g_api_table.CM_Set_Class_Registry_PropertyW(ClassGuid, ulProperty, Buffer, ulLength, ulFlags, hMachine);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_CMP_WaitNoPendingInstallEvents(uint32_t dwTimeout) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwTimeout);

        auto win32_impl_result = g_api_table.CMP_WaitNoPendingInstallEvents(dwTimeout);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Register_Notification(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CM_NOTIFY_FILTER* pFilter, void* pContext, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::PCM_NOTIFY_CALLBACK* pCallback, intptr_t* pNotifyContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pFilter);
        ORBIT_TRACK_PARAM(pContext);
        ORBIT_TRACK_PARAM(pCallback);
        ORBIT_TRACK_PARAM(pNotifyContext);

        auto win32_impl_result = g_api_table.CM_Register_Notification(pFilter, pContext, pCallback, pNotifyContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET __stdcall ORBIT_IMPL_CM_Unregister_Notification(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::HCMNOTIFICATION NotifyContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(NotifyContext);

        auto win32_impl_result = g_api_table.CM_Unregister_Notification(NotifyContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_CM_MapCrToWin32Err(win32::Windows::Win32::Devices::DeviceAndDriverInstallation::CONFIGRET CmReturnCode, uint32_t DefaultErr) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CmReturnCode);
        ORBIT_TRACK_PARAM(DefaultErr);

        auto win32_impl_result = g_api_table.CM_MapCrToWin32Err(CmReturnCode, DefaultErr);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UpdateDriverForPlugAndPlayDevicesA(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PSTR HardwareId, win32::Windows::Win32::Foundation::PSTR FullInfPath, uint32_t InstallFlags, win32::Windows::Win32::Foundation::BOOL* bRebootRequired) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(HardwareId);
        ORBIT_TRACK_PARAM(FullInfPath);
        ORBIT_TRACK_PARAM(InstallFlags);
        ORBIT_TRACK_PARAM(bRebootRequired);

        auto win32_impl_result = g_api_table.UpdateDriverForPlugAndPlayDevicesA(hwndParent, HardwareId, FullInfPath, InstallFlags, bRebootRequired);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UpdateDriverForPlugAndPlayDevicesW(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PWSTR HardwareId, win32::Windows::Win32::Foundation::PWSTR FullInfPath, uint32_t InstallFlags, win32::Windows::Win32::Foundation::BOOL* bRebootRequired) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(HardwareId);
        ORBIT_TRACK_PARAM(FullInfPath);
        ORBIT_TRACK_PARAM(InstallFlags);
        ORBIT_TRACK_PARAM(bRebootRequired);

        auto win32_impl_result = g_api_table.UpdateDriverForPlugAndPlayDevicesW(hwndParent, HardwareId, FullInfPath, InstallFlags, bRebootRequired);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DiInstallDevice(win32::Windows::Win32::Foundation::HWND hwndParent, void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DRVINFO_DATA_V2_A* DriverInfoData, uint32_t Flags, win32::Windows::Win32::Foundation::BOOL* NeedReboot) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(DriverInfoData);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(NeedReboot);

        auto win32_impl_result = g_api_table.DiInstallDevice(hwndParent, DeviceInfoSet, DeviceInfoData, DriverInfoData, Flags, NeedReboot);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DiInstallDriverW(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PWSTR InfPath, uint32_t Flags, win32::Windows::Win32::Foundation::BOOL* NeedReboot) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(InfPath);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(NeedReboot);

        auto win32_impl_result = g_api_table.DiInstallDriverW(hwndParent, InfPath, Flags, NeedReboot);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DiInstallDriverA(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PSTR InfPath, uint32_t Flags, win32::Windows::Win32::Foundation::BOOL* NeedReboot) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(InfPath);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(NeedReboot);

        auto win32_impl_result = g_api_table.DiInstallDriverA(hwndParent, InfPath, Flags, NeedReboot);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DiUninstallDevice(win32::Windows::Win32::Foundation::HWND hwndParent, void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, uint32_t Flags, win32::Windows::Win32::Foundation::BOOL* NeedReboot) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(NeedReboot);

        auto win32_impl_result = g_api_table.DiUninstallDevice(hwndParent, DeviceInfoSet, DeviceInfoData, Flags, NeedReboot);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DiUninstallDriverW(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PWSTR InfPath, uint32_t Flags, win32::Windows::Win32::Foundation::BOOL* NeedReboot) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(InfPath);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(NeedReboot);

        auto win32_impl_result = g_api_table.DiUninstallDriverW(hwndParent, InfPath, Flags, NeedReboot);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DiUninstallDriverA(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PSTR InfPath, uint32_t Flags, win32::Windows::Win32::Foundation::BOOL* NeedReboot) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(InfPath);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(NeedReboot);

        auto win32_impl_result = g_api_table.DiUninstallDriverA(hwndParent, InfPath, Flags, NeedReboot);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DiShowUpdateDevice(win32::Windows::Win32::Foundation::HWND hwndParent, void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, uint32_t Flags, win32::Windows::Win32::Foundation::BOOL* NeedReboot) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(NeedReboot);

        auto win32_impl_result = g_api_table.DiShowUpdateDevice(hwndParent, DeviceInfoSet, DeviceInfoData, Flags, NeedReboot);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DiRollbackDriver(void* DeviceInfoSet, win32::Windows::Win32::Devices::DeviceAndDriverInstallation::SP_DEVINFO_DATA* DeviceInfoData, win32::Windows::Win32::Foundation::HWND hwndParent, uint32_t Flags, win32::Windows::Win32::Foundation::BOOL* NeedReboot) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(DeviceInfoSet);
        ORBIT_TRACK_PARAM(DeviceInfoData);
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(NeedReboot);

        auto win32_impl_result = g_api_table.DiRollbackDriver(DeviceInfoSet, DeviceInfoData, hwndParent, Flags, NeedReboot);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DiShowUpdateDriver(win32::Windows::Win32::Foundation::HWND hwndParent, win32::Windows::Win32::Foundation::PWSTR FilePath, uint32_t Flags, win32::Windows::Win32::Foundation::BOOL* NeedReboot) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hwndParent);
        ORBIT_TRACK_PARAM(FilePath);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(NeedReboot);

        auto win32_impl_result = g_api_table.DiShowUpdateDriver(hwndParent, FilePath, Flags, NeedReboot);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
