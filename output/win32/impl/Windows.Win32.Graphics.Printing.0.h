// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Graphics_Printing_0_H
#define WIN32_Windows_Win32_Graphics_Printing_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct BOOL;
    struct HANDLE;
    struct LPARAM;
    struct PSTR;
}
WIN32_EXPORT namespace win32::Windows::Win32::Graphics::Gdi
{
    struct HDC;
}
WIN32_EXPORT namespace win32::Windows::Win32::Graphics::Printing
{
#pragma region enums
    enum class BIDI_TYPE : int32_t
    {
        BIDI_NULL = 0,
        BIDI_INT = 1,
        BIDI_FLOAT = 2,
        BIDI_BOOL = 3,
        BIDI_STRING = 4,
        BIDI_TEXT = 5,
        BIDI_ENUM = 6,
        BIDI_BLOB = 7,
    };
    enum class EATTRIBUTE_DATATYPE : int32_t
    {
        kADT_UNKNOWN = 0,
        kADT_BOOL = 1,
        kADT_INT = 2,
        kADT_LONG = 3,
        kADT_DWORD = 4,
        kADT_ASCII = 5,
        kADT_UNICODE = 6,
        kADT_BINARY = 7,
        kADT_SIZE = 8,
        kADT_RECT = 9,
        kADT_CUSTOMSIZEPARAMS = 10,
    };
    enum class EBranchOfficeJobEventType : int32_t
    {
        kInvalidJobState = 0,
        kLogJobPrinted = 1,
        kLogJobRendered = 2,
        kLogJobError = 3,
        kLogJobPipelineError = 4,
        kLogOfflineFileFull = 5,
    };
    enum class EPrintPropertyType : int32_t
    {
        kPropertyTypeString = 1,
        kPropertyTypeInt32 = 2,
        kPropertyTypeInt64 = 3,
        kPropertyTypeByte = 4,
        kPropertyTypeTime = 5,
        kPropertyTypeDevMode = 6,
        kPropertyTypeSD = 7,
        kPropertyTypeNotificationReply = 8,
        kPropertyTypeNotificationOptions = 9,
        kPropertyTypeBuffer = 10,
    };
    enum class EPrintXPSJobOperation : int32_t
    {
        kJobProduction = 1,
        kJobConsumption = 2,
    };
    enum class EPrintXPSJobProgress : int32_t
    {
        kAddingDocumentSequence = 0,
        kDocumentSequenceAdded = 1,
        kAddingFixedDocument = 2,
        kFixedDocumentAdded = 3,
        kAddingFixedPage = 4,
        kFixedPageAdded = 5,
        kResourceAdded = 6,
        kFontAdded = 7,
        kImageAdded = 8,
        kXpsDocumentCommitted = 9,
    };
    enum class EXpsCompressionOptions : int32_t
    {
        Compression_NotCompressed = 0,
        Compression_Normal = 1,
        Compression_Small = 2,
        Compression_Fast = 3,
    };
    enum class EXpsFontOptions : int32_t
    {
        Font_Normal = 0,
        Font_Obfusticate = 1,
    };
    enum class EXpsFontRestriction : int32_t
    {
        Xps_Restricted_Font_Installable = 0,
        Xps_Restricted_Font_NoEmbedding = 2,
        Xps_Restricted_Font_PreviewPrint = 4,
        Xps_Restricted_Font_Editable = 8,
    };
    enum class EXpsJobConsumption : int32_t
    {
        XpsJob_DocumentSequenceAdded = 0,
        XpsJob_FixedDocumentAdded = 1,
        XpsJob_FixedPageAdded = 2,
    };
    enum class MxdcImageTypeEnums : int32_t
    {
        MXDC_IMAGETYPE_JPEGHIGH_COMPRESSION = 1,
        MXDC_IMAGETYPE_JPEGMEDIUM_COMPRESSION = 2,
        MXDC_IMAGETYPE_JPEGLOW_COMPRESSION = 3,
        MXDC_IMAGETYPE_PNG = 4,
    };
    enum class MxdcLandscapeRotationEnums : int32_t
    {
        MXDC_LANDSCAPE_ROTATE_COUNTERCLOCKWISE_90_DEGREES = 90,
        MXDC_LANDSCAPE_ROTATE_NONE = 0,
        MXDC_LANDSCAPE_ROTATE_COUNTERCLOCKWISE_270_DEGREES = -90,
    };
    enum class MxdcS0PageEnums : int32_t
    {
        MXDC_RESOURCE_TTF = 0,
        MXDC_RESOURCE_JPEG = 1,
        MXDC_RESOURCE_PNG = 2,
        MXDC_RESOURCE_TIFF = 3,
        MXDC_RESOURCE_WDP = 4,
        MXDC_RESOURCE_DICTIONARY = 5,
        MXDC_RESOURCE_ICC_PROFILE = 6,
        MXDC_RESOURCE_JPEG_THUMBNAIL = 7,
        MXDC_RESOURCE_PNG_THUMBNAIL = 8,
        MXDC_RESOURCE_MAX = 9,
    };
    enum class NOTIFICATION_CALLBACK_COMMANDS : int32_t
    {
        NOTIFICATION_COMMAND_NOTIFY = 0,
        NOTIFICATION_COMMAND_CONTEXT_ACQUIRE = 1,
        NOTIFICATION_COMMAND_CONTEXT_RELEASE = 2,
    };
    enum class NOTIFICATION_CONFIG_FLAGS : int32_t
    {
        NOTIFICATION_CONFIG_CREATE_EVENT = 1,
        NOTIFICATION_CONFIG_REGISTER_CALLBACK = 2,
        NOTIFICATION_CONFIG_EVENT_TRIGGER = 4,
        NOTIFICATION_CONFIG_ASYNC_CHANNEL = 8,
    };
    enum class PRINTER_OPTION_FLAGS : int32_t
    {
        PRINTER_OPTION_NO_CACHE = 1,
        PRINTER_OPTION_CACHE = 2,
        PRINTER_OPTION_CLIENT_CHANGE = 4,
        PRINTER_OPTION_NO_CLIENT_DATA = 8,
    };
    enum class PRINT_EXECUTION_CONTEXT : int32_t
    {
        PRINT_EXECUTION_CONTEXT_APPLICATION = 0,
        PRINT_EXECUTION_CONTEXT_SPOOLER_SERVICE = 1,
        PRINT_EXECUTION_CONTEXT_SPOOLER_ISOLATION_HOST = 2,
        PRINT_EXECUTION_CONTEXT_FILTER_PIPELINE = 3,
        PRINT_EXECUTION_CONTEXT_WOW64 = 4,
    };
    enum class PageCountType : int32_t
    {
        FinalPageCount = 0,
        IntermediatePageCount = 1,
    };
    enum class PrintAsyncNotifyConversationStyle : int32_t
    {
        kBiDirectional = 0,
        kUniDirectional = 1,
    };
    enum class PrintAsyncNotifyError : int32_t
    {
        CHANNEL_CLOSED_BY_SERVER = 1,
        CHANNEL_CLOSED_BY_ANOTHER_LISTENER = 2,
        CHANNEL_CLOSED_BY_SAME_LISTENER = 3,
        CHANNEL_RELEASED_BY_LISTENER = 4,
        UNIRECTIONAL_NOTIFICATION_LOST = 5,
        ASYNC_NOTIFICATION_FAILURE = 6,
        NO_LISTENERS = 7,
        CHANNEL_ALREADY_CLOSED = 8,
        CHANNEL_ALREADY_OPENED = 9,
        CHANNEL_WAITING_FOR_CLIENT_NOTIFICATION = 10,
        CHANNEL_NOT_OPENED = 11,
        ASYNC_CALL_ALREADY_PARKED = 12,
        NOT_REGISTERED = 13,
        ALREADY_UNREGISTERED = 14,
        ALREADY_REGISTERED = 15,
        CHANNEL_ACQUIRED = 16,
        ASYNC_CALL_IN_PROGRESS = 17,
        MAX_NOTIFICATION_SIZE_EXCEEDED = 18,
        INTERNAL_NOTIFICATION_QUEUE_IS_FULL = 19,
        INVALID_NOTIFICATION_TYPE = 20,
        MAX_REGISTRATION_COUNT_EXCEEDED = 21,
        MAX_CHANNEL_COUNT_EXCEEDED = 22,
        LOCAL_ONLY_REGISTRATION = 23,
        REMOTE_ONLY_REGISTRATION = 24,
    };
    enum class PrintAsyncNotifyUserFilter : int32_t
    {
        kPerUser = 0,
        kAllUsers = 1,
    };
    enum class PrintJobStatus : int32_t
    {
        PrintJobStatus_Paused = 1,
        PrintJobStatus_Error = 2,
        PrintJobStatus_Deleting = 4,
        PrintJobStatus_Spooling = 8,
        PrintJobStatus_Printing = 16,
        PrintJobStatus_Offline = 32,
        PrintJobStatus_PaperOut = 64,
        PrintJobStatus_Printed = 128,
        PrintJobStatus_Deleted = 256,
        PrintJobStatus_BlockedDeviceQueue = 512,
        PrintJobStatus_UserIntervention = 1024,
        PrintJobStatus_Restarted = 2048,
        PrintJobStatus_Complete = 4096,
        PrintJobStatus_Retained = 8192,
    };
    enum class PrintSchemaConstrainedSetting : int32_t
    {
        PrintSchemaConstrainedSetting_None = 0,
        PrintSchemaConstrainedSetting_PrintTicket = 1,
        PrintSchemaConstrainedSetting_Admin = 2,
        PrintSchemaConstrainedSetting_Device = 3,
    };
    enum class PrintSchemaParameterDataType : int32_t
    {
        PrintSchemaParameterDataType_Integer = 0,
        PrintSchemaParameterDataType_NumericString = 1,
        PrintSchemaParameterDataType_String = 2,
    };
    enum class PrintSchemaSelectionType : int32_t
    {
        PrintSchemaSelectionType_PickOne = 0,
        PrintSchemaSelectionType_PickMany = 1,
    };
    enum class SHIMOPTS : int32_t
    {
        PTSHIM_DEFAULT = 0,
        PTSHIM_NOSNAPSHOT = 1,
    };
    enum class UI_TYPE : int32_t
    {
        kMessageBox = 0,
    };
    enum class XPSRAS_BACKGROUND_COLOR : int32_t
    {
        XPSRAS_BACKGROUND_COLOR_TRANSPARENT = 0,
        XPSRAS_BACKGROUND_COLOR_OPAQUE = 1,
    };
    enum class XPSRAS_PIXEL_FORMAT : int32_t
    {
        XPSRAS_PIXEL_FORMAT_32BPP_PBGRA_UINT_SRGB = 1,
        XPSRAS_PIXEL_FORMAT_64BPP_PRGBA_HALF_SCRGB = 2,
        XPSRAS_PIXEL_FORMAT_128BPP_PRGBA_FLOAT_SCRGB = 3,
    };
    enum class XPSRAS_RENDERING_MODE : int32_t
    {
        XPSRAS_RENDERING_MODE_ANTIALIASED = 0,
        XPSRAS_RENDERING_MODE_ALIASED = 1,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct ADDJOB_INFO_1A;
    struct ADDJOB_INFO_1W;
    struct ATTRIBUTE_INFO_1;
    struct ATTRIBUTE_INFO_2;
    struct ATTRIBUTE_INFO_3;
    struct ATTRIBUTE_INFO_4;
    struct BIDI_DATA;
    struct BIDI_REQUEST_CONTAINER;
    struct BIDI_REQUEST_DATA;
    struct BIDI_RESPONSE_CONTAINER;
    struct BIDI_RESPONSE_DATA;
    struct BINARY_CONTAINER;
    struct BidiRequest;
    struct BidiRequestContainer;
    struct BidiSpl;
    struct BranchOfficeJobData;
    struct BranchOfficeJobDataContainer;
    struct BranchOfficeJobDataError;
    struct BranchOfficeJobDataPipelineFailed;
    struct BranchOfficeJobDataPrinted;
    struct BranchOfficeJobDataRendered;
    struct BranchOfficeLogOfflineFileFull;
    struct COMPROPSHEETUI;
    struct CONFIG_INFO_DATA_1;
    struct CORE_PRINTER_DRIVERA;
    struct CORE_PRINTER_DRIVERW;
    struct CPSUICBPARAM;
    struct CPSUIDATABLOCK;
    struct CUSTOMSIZEPARAM;
    struct DATATYPES_INFO_1A;
    struct DATATYPES_INFO_1W;
    struct DATA_HEADER;
    struct DELETE_PORT_DATA_1;
    struct DEVICEPROPERTYHEADER;
    struct DEVQUERYPRINT_INFO;
    struct DLGPAGE;
    struct DOCEVENT_CREATEDCPRE;
    struct DOCEVENT_ESCAPE;
    struct DOCEVENT_FILTER;
    struct DOCUMENTPROPERTYHEADER;
    struct DOC_INFO_1A;
    struct DOC_INFO_1W;
    struct DOC_INFO_2A;
    struct DOC_INFO_2W;
    struct DOC_INFO_3A;
    struct DOC_INFO_3W;
    struct DRIVER_INFO_1A;
    struct DRIVER_INFO_1W;
    struct DRIVER_INFO_2A;
    struct DRIVER_INFO_2W;
    struct DRIVER_INFO_3A;
    struct DRIVER_INFO_3W;
    struct DRIVER_INFO_4A;
    struct DRIVER_INFO_4W;
    struct DRIVER_INFO_5A;
    struct DRIVER_INFO_5W;
    struct DRIVER_INFO_6A;
    struct DRIVER_INFO_6W;
    struct DRIVER_INFO_8A;
    struct DRIVER_INFO_8W;
    struct DRIVER_UPGRADE_INFO_1;
    struct DRIVER_UPGRADE_INFO_2;
    struct EXTCHKBOX;
    struct EXTPUSH;
    struct EXTTEXTMETRIC;
    struct FORM_INFO_1A;
    struct FORM_INFO_1W;
    struct FORM_INFO_2A;
    struct FORM_INFO_2W;
    struct GLYPHRUN;
    struct IBidiRequest;
    struct IBidiRequestContainer;
    struct IBidiRequestContainerVtbl;
    struct IBidiRequestVtbl;
    struct IBidiSpl;
    struct IBidiSpl2;
    struct IBidiSpl2Vtbl;
    struct IBidiSplVtbl;
    struct IFixedDocument;
    struct IFixedDocumentSequence;
    struct IFixedDocumentSequenceVtbl;
    struct IFixedDocumentVtbl;
    struct IFixedPage;
    struct IFixedPageVtbl;
    struct IImgCreateErrorInfo;
    struct IImgCreateErrorInfoVtbl;
    struct IImgErrorInfo;
    struct IImgErrorInfoVtbl;
    struct IInterFilterCommunicator;
    struct IInterFilterCommunicatorVtbl;
    struct INSERTPSUIPAGE_INFO;
    struct INVOC;
    struct IPartBase;
    struct IPartBaseVtbl;
    struct IPartColorProfile;
    struct IPartColorProfileVtbl;
    struct IPartDiscardControl;
    struct IPartDiscardControlVtbl;
    struct IPartFont;
    struct IPartFont2;
    struct IPartFont2Vtbl;
    struct IPartFontVtbl;
    struct IPartImage;
    struct IPartImageVtbl;
    struct IPartPrintTicket;
    struct IPartPrintTicketVtbl;
    struct IPartResourceDictionary;
    struct IPartResourceDictionaryVtbl;
    struct IPartThumbnail;
    struct IPartThumbnailVtbl;
    struct IPrintClassObjectFactory;
    struct IPrintClassObjectFactoryVtbl;
    struct IPrintPipelineFilter;
    struct IPrintPipelineFilterVtbl;
    struct IPrintPipelineManagerControl;
    struct IPrintPipelineManagerControlVtbl;
    struct IPrintPipelineProgressReport;
    struct IPrintPipelineProgressReportVtbl;
    struct IPrintPipelinePropertyBag;
    struct IPrintPipelinePropertyBagVtbl;
    struct IPrintReadStream;
    struct IPrintReadStreamFactory;
    struct IPrintReadStreamFactoryVtbl;
    struct IPrintReadStreamVtbl;
    struct IPrintWriteStream;
    struct IPrintWriteStreamFlush;
    struct IPrintWriteStreamFlushVtbl;
    struct IPrintWriteStreamVtbl;
    struct IXpsDocument;
    struct IXpsDocumentConsumer;
    struct IXpsDocumentConsumerVtbl;
    struct IXpsDocumentProvider;
    struct IXpsDocumentProviderVtbl;
    struct IXpsDocumentVtbl;
    struct IXpsPartIterator;
    struct IXpsPartIteratorVtbl;
    struct JOB_INFO_1A;
    struct JOB_INFO_1W;
    struct JOB_INFO_2A;
    struct JOB_INFO_2W;
    struct JOB_INFO_3;
    struct JOB_INFO_4A;
    struct JOB_INFO_4W;
    struct KERNDATA;
    struct MAPTABLE;
    struct MESSAGEBOX_PARAMS;
    struct MONITOR;
    struct MONITOR2;
    struct MONITOREX;
    struct MONITORINIT;
    struct MONITORREG;
    struct MONITORUI;
    struct MONITOR_INFO_1A;
    struct MONITOR_INFO_1W;
    struct MONITOR_INFO_2A;
    struct MONITOR_INFO_2W;
    struct MxdcEscapeHeader;
    struct MxdcGetFileNameData;
    struct MxdcPrintTicketEscape;
    struct MxdcPrintTicketPassthrough;
    struct MxdcS0PageData;
    struct MxdcS0PagePassthroughEscape;
    struct MxdcS0PageResourceEscape;
    struct MxdcXpsS0PageResource;
    struct NOTIFICATION_CONFIG_1;
    struct OEMCUIPPARAM;
    struct OEMDMPARAM;
    struct OEMFONTINSTPARAM;
    struct OEMUIOBJ;
    struct OEMUIPROCS;
    struct OEMUIPSPARAM;
    struct OEM_DMEXTRAHEADER;
    struct OIEXT;
    struct OPTCOMBO;
    struct OPTITEM;
    struct OPTPARAM;
    struct OPTTYPE;
    struct PORT_DATA_1;
    struct PORT_DATA_2;
    struct PORT_DATA_LIST_1;
    struct PORT_INFO_1A;
    struct PORT_INFO_1W;
    struct PORT_INFO_2A;
    struct PORT_INFO_2W;
    struct PORT_INFO_3A;
    struct PORT_INFO_3W;
    struct PRINTER_CONNECTION_INFO_1A;
    struct PRINTER_CONNECTION_INFO_1W;
    struct PRINTER_DEFAULTSA;
    struct PRINTER_DEFAULTSW;
    struct PRINTER_ENUM_VALUESA;
    struct PRINTER_ENUM_VALUESW;
    struct PRINTER_EVENT_ATTRIBUTES_INFO;
    struct PRINTER_INFO_1A;
    struct PRINTER_INFO_1W;
    struct PRINTER_INFO_2A;
    struct PRINTER_INFO_2W;
    struct PRINTER_INFO_3;
    struct PRINTER_INFO_4A;
    struct PRINTER_INFO_4W;
    struct PRINTER_INFO_5A;
    struct PRINTER_INFO_5W;
    struct PRINTER_INFO_6;
    struct PRINTER_INFO_7A;
    struct PRINTER_INFO_7W;
    struct PRINTER_INFO_8A;
    struct PRINTER_INFO_8W;
    struct PRINTER_INFO_9A;
    struct PRINTER_INFO_9W;
    struct PRINTER_NOTIFY_INFO;
    struct PRINTER_NOTIFY_INFO_DATA;
    struct PRINTER_NOTIFY_INIT;
    struct PRINTER_NOTIFY_OPTIONS;
    struct PRINTER_NOTIFY_OPTIONS_TYPE;
    struct PRINTER_OPTIONSA;
    struct PRINTER_OPTIONSW;
    struct PRINTIFI32;
    struct PRINTPROCESSOROPENDATA;
    struct PRINTPROCESSOR_CAPS_1;
    struct PRINTPROCESSOR_CAPS_2;
    struct PRINTPROCESSOR_INFO_1A;
    struct PRINTPROCESSOR_INFO_1W;
    struct PRINTPROVIDOR;
    struct PRINT_EXECUTION_DATA;
    struct PRINT_FEATURE_OPTION;
    struct PROPSHEETUI_GETICON_INFO;
    struct PROPSHEETUI_INFO;
    struct PROPSHEETUI_INFO_HEADER;
    struct PROVIDOR_INFO_1A;
    struct PROVIDOR_INFO_1W;
    struct PROVIDOR_INFO_2A;
    struct PROVIDOR_INFO_2W;
    struct PSCRIPT5_PRIVATE_DEVMODE;
    struct PSPINFO;
    struct PUBLISHERINFO;
    struct PrintNamedProperty;
    struct PrintPropertiesCollection;
    struct PrintPropertyValue;
    struct PrintSchemaAsyncOperation;
    struct PrinterExtensionManager;
    struct PrinterQueue;
    struct PrinterQueueView;
    struct SETRESULT_INFO;
    struct SHOWUIPARAMS;
    struct SIMULATE_CAPS_1;
    struct SPLCLIENT_INFO_1;
    struct SPLCLIENT_INFO_3_VISTA;
    struct TRANSDATA;
    struct UFF_FILEHEADER;
    struct UFF_FONTDIRECTORY;
    struct UNIDRVINFO;
    struct UNIDRV_PRIVATE_DEVMODE;
    struct UNIFM_HDR;
    struct UNI_CODEPAGEINFO;
    struct UNI_GLYPHSETDATA;
    struct USERDATA;
    struct WIDTHRUN;
    struct WIDTHTABLE;
    struct _SPLCLIENT_INFO_2_V1;
    struct _SPLCLIENT_INFO_2_V2;
    struct _SPLCLIENT_INFO_2_V3;
    struct __MIDL___MIDL_itf_imgerror_0000_0000_0001;
    struct IAsyncGetSendNotificationCookie;
    struct IAsyncGetSrvReferralCookie;
    struct IBidiAsyncNotifyChannel;
    struct IPrintAsyncCookie;
    struct IPrintAsyncNewChannelCookie;
    struct IPrintAsyncNotify;
    struct IPrintAsyncNotifyCallback;
    struct IPrintAsyncNotifyChannel;
    struct IPrintAsyncNotifyDataObject;
    struct IPrintAsyncNotifyRegistration;
    struct IPrintAsyncNotifyServerReferral;
    struct IPrintBidiAsyncNotifyRegistration;
    struct IPrintCoreHelper;
    struct IPrintCoreHelperPS;
    struct IPrintCoreHelperUni;
    struct IPrintCoreHelperUni2;
    struct IPrintCoreUI2;
    struct IPrintJob;
    struct IPrintJobCollection;
    struct IPrintOemCommon;
    struct IPrintOemDriverUI;
    struct IPrintOemUI;
    struct IPrintOemUI2;
    struct IPrintOemUIMXDC;
    struct IPrintPreviewDxgiPackageTarget;
    struct IPrintSchemaAsyncOperation;
    struct IPrintSchemaAsyncOperationEvent;
    struct IPrintSchemaCapabilities;
    struct IPrintSchemaCapabilities2;
    struct IPrintSchemaDisplayableElement;
    struct IPrintSchemaElement;
    struct IPrintSchemaFeature;
    struct IPrintSchemaNUpOption;
    struct IPrintSchemaOption;
    struct IPrintSchemaOptionCollection;
    struct IPrintSchemaPageImageableSize;
    struct IPrintSchemaPageMediaSizeOption;
    struct IPrintSchemaParameterDefinition;
    struct IPrintSchemaParameterInitializer;
    struct IPrintSchemaTicket;
    struct IPrintSchemaTicket2;
    struct IPrintTicketProvider;
    struct IPrintTicketProvider2;
    struct IPrintUnidiAsyncNotifyRegistration;
    struct IPrinterBidiSetRequestCallback;
    struct IPrinterExtensionAsyncOperation;
    struct IPrinterExtensionContext;
    struct IPrinterExtensionContextCollection;
    struct IPrinterExtensionEvent;
    struct IPrinterExtensionEventArgs;
    struct IPrinterExtensionManager;
    struct IPrinterExtensionRequest;
    struct IPrinterPropertyBag;
    struct IPrinterQueue;
    struct IPrinterQueue2;
    struct IPrinterQueueEvent;
    struct IPrinterQueueView;
    struct IPrinterQueueViewEvent;
    struct IPrinterScriptContext;
    struct IPrinterScriptablePropertyBag;
    struct IPrinterScriptablePropertyBag2;
    struct IPrinterScriptableSequentialStream;
    struct IPrinterScriptableStream;
    struct IXpsRasterizationFactory;
    struct IXpsRasterizationFactory1;
    struct IXpsRasterizationFactory2;
    struct IXpsRasterizer;
    struct IXpsRasterizerNotificationCallback;
#pragma endregion forward_declarations

#pragma region delegates
    using _CPSUICALLBACK = int32_t __stdcall(Windows::Win32::Graphics::Printing::CPSUICBPARAM*);
    using PFNCOMPROPSHEET = intptr_t __stdcall(Windows::Win32::Foundation::HANDLE, uint32_t, Windows::Win32::Foundation::LPARAM, Windows::Win32::Foundation::LPARAM);
    using PFNPROPSHEETUI = int32_t __stdcall(Windows::Win32::Graphics::Printing::PROPSHEETUI_INFO*, Windows::Win32::Foundation::LPARAM);
    using PFN_DrvGetDriverSetting = Windows::Win32::Foundation::BOOL __stdcall(void*, Windows::Win32::Foundation::PSTR, void*, uint32_t, uint32_t*, uint32_t*);
    using PFN_DrvUpgradeRegistrySetting = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Foundation::HANDLE, Windows::Win32::Foundation::PSTR, Windows::Win32::Foundation::PSTR);
    using PFN_DrvUpdateUISetting = Windows::Win32::Foundation::BOOL __stdcall(void*, void*, uint32_t, uint32_t);
    using OEMCUIPCALLBACK = int32_t __stdcall(Windows::Win32::Graphics::Printing::CPSUICBPARAM*, Windows::Win32::Graphics::Printing::OEMCUIPPARAM*);
    using EMFPLAYPROC = int32_t __stdcall(Windows::Win32::Graphics::Gdi::HDC, int32_t, Windows::Win32::Foundation::HANDLE);
    using ROUTER_NOTIFY_CALLBACK = Windows::Win32::Foundation::BOOL __stdcall(uint32_t, void*, uint32_t, Windows::Win32::Graphics::Printing::PRINTER_NOTIFY_INFO*, uint32_t, uint32_t*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
