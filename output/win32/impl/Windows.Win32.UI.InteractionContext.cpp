// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_UI_InteractionContext_2_H
#define WIN32_Windows_Win32_UI_InteractionContext_2_H
#include "win32/Windows.Win32.UI.InteractionContext.h"
#include "win32/impl/Windows.Win32.UI.InteractionContext.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::UI::InteractionContext
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CreateInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT* interactionContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);

        auto win32_impl_result = g_api_table.CreateInteractionContext(interactionContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_DestroyInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);

        auto win32_impl_result = g_api_table.DestroyInteractionContext(interactionContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RegisterOutputCallbackInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, win32::Windows::Win32::UI::InteractionContext::INTERACTION_CONTEXT_OUTPUT_CALLBACK* outputCallback, void* clientData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(outputCallback);
        ORBIT_TRACK_PARAM(clientData);

        auto win32_impl_result = g_api_table.RegisterOutputCallbackInteractionContext(interactionContext, outputCallback, clientData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RegisterOutputCallbackInteractionContext2(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, win32::Windows::Win32::UI::InteractionContext::INTERACTION_CONTEXT_OUTPUT_CALLBACK2* outputCallback, void* clientData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(outputCallback);
        ORBIT_TRACK_PARAM(clientData);

        auto win32_impl_result = g_api_table.RegisterOutputCallbackInteractionContext2(interactionContext, outputCallback, clientData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SetInteractionConfigurationInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, uint32_t configurationCount, win32::Windows::Win32::UI::InteractionContext::INTERACTION_CONTEXT_CONFIGURATION* configuration) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(configurationCount);
        ORBIT_TRACK_PARAM(configuration);

        auto win32_impl_result = g_api_table.SetInteractionConfigurationInteractionContext(interactionContext, configurationCount, configuration);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetInteractionConfigurationInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, uint32_t configurationCount, win32::Windows::Win32::UI::InteractionContext::INTERACTION_CONTEXT_CONFIGURATION* configuration) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(configurationCount);
        ORBIT_TRACK_PARAM(configuration);

        auto win32_impl_result = g_api_table.GetInteractionConfigurationInteractionContext(interactionContext, configurationCount, configuration);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SetPropertyInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, win32::Windows::Win32::UI::InteractionContext::INTERACTION_CONTEXT_PROPERTY contextProperty, uint32_t value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(contextProperty);
        ORBIT_TRACK_PARAM(value);

        auto win32_impl_result = g_api_table.SetPropertyInteractionContext(interactionContext, contextProperty, value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetPropertyInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, win32::Windows::Win32::UI::InteractionContext::INTERACTION_CONTEXT_PROPERTY contextProperty, uint32_t* value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(contextProperty);
        ORBIT_TRACK_PARAM(value);

        auto win32_impl_result = g_api_table.GetPropertyInteractionContext(interactionContext, contextProperty, value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SetInertiaParameterInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, win32::Windows::Win32::UI::InteractionContext::INERTIA_PARAMETER inertiaParameter, float value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(inertiaParameter);
        ORBIT_TRACK_PARAM(value);

        auto win32_impl_result = g_api_table.SetInertiaParameterInteractionContext(interactionContext, inertiaParameter, value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetInertiaParameterInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, win32::Windows::Win32::UI::InteractionContext::INERTIA_PARAMETER inertiaParameter, float* value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(inertiaParameter);
        ORBIT_TRACK_PARAM(value);

        auto win32_impl_result = g_api_table.GetInertiaParameterInteractionContext(interactionContext, inertiaParameter, value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SetCrossSlideParametersInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, uint32_t parameterCount, win32::Windows::Win32::UI::InteractionContext::CROSS_SLIDE_PARAMETER* crossSlideParameters) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(parameterCount);
        ORBIT_TRACK_PARAM(crossSlideParameters);

        auto win32_impl_result = g_api_table.SetCrossSlideParametersInteractionContext(interactionContext, parameterCount, crossSlideParameters);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetCrossSlideParameterInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, win32::Windows::Win32::UI::InteractionContext::CROSS_SLIDE_THRESHOLD threshold, float* distance) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(threshold);
        ORBIT_TRACK_PARAM(distance);

        auto win32_impl_result = g_api_table.GetCrossSlideParameterInteractionContext(interactionContext, threshold, distance);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SetTapParameterInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, win32::Windows::Win32::UI::InteractionContext::TAP_PARAMETER parameter, float value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(parameter);
        ORBIT_TRACK_PARAM(value);

        auto win32_impl_result = g_api_table.SetTapParameterInteractionContext(interactionContext, parameter, value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetTapParameterInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, win32::Windows::Win32::UI::InteractionContext::TAP_PARAMETER parameter, float* value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(parameter);
        ORBIT_TRACK_PARAM(value);

        auto win32_impl_result = g_api_table.GetTapParameterInteractionContext(interactionContext, parameter, value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SetHoldParameterInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, win32::Windows::Win32::UI::InteractionContext::HOLD_PARAMETER parameter, float value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(parameter);
        ORBIT_TRACK_PARAM(value);

        auto win32_impl_result = g_api_table.SetHoldParameterInteractionContext(interactionContext, parameter, value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetHoldParameterInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, win32::Windows::Win32::UI::InteractionContext::HOLD_PARAMETER parameter, float* value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(parameter);
        ORBIT_TRACK_PARAM(value);

        auto win32_impl_result = g_api_table.GetHoldParameterInteractionContext(interactionContext, parameter, value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SetTranslationParameterInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, win32::Windows::Win32::UI::InteractionContext::TRANSLATION_PARAMETER parameter, float value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(parameter);
        ORBIT_TRACK_PARAM(value);

        auto win32_impl_result = g_api_table.SetTranslationParameterInteractionContext(interactionContext, parameter, value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetTranslationParameterInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, win32::Windows::Win32::UI::InteractionContext::TRANSLATION_PARAMETER parameter, float* value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(parameter);
        ORBIT_TRACK_PARAM(value);

        auto win32_impl_result = g_api_table.GetTranslationParameterInteractionContext(interactionContext, parameter, value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SetMouseWheelParameterInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, win32::Windows::Win32::UI::InteractionContext::MOUSE_WHEEL_PARAMETER parameter, float value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(parameter);
        ORBIT_TRACK_PARAM(value);

        auto win32_impl_result = g_api_table.SetMouseWheelParameterInteractionContext(interactionContext, parameter, value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetMouseWheelParameterInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, win32::Windows::Win32::UI::InteractionContext::MOUSE_WHEEL_PARAMETER parameter, float* value) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(parameter);
        ORBIT_TRACK_PARAM(value);

        auto win32_impl_result = g_api_table.GetMouseWheelParameterInteractionContext(interactionContext, parameter, value);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ResetInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);

        auto win32_impl_result = g_api_table.ResetInteractionContext(interactionContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetStateInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, win32::Windows::Win32::UI::Input::Pointer::POINTER_INFO* pointerInfo, win32::Windows::Win32::UI::InteractionContext::INTERACTION_STATE* state) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(pointerInfo);
        ORBIT_TRACK_PARAM(state);

        auto win32_impl_result = g_api_table.GetStateInteractionContext(interactionContext, pointerInfo, state);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_AddPointerInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, uint32_t pointerId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(pointerId);

        auto win32_impl_result = g_api_table.AddPointerInteractionContext(interactionContext, pointerId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_RemovePointerInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, uint32_t pointerId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(pointerId);

        auto win32_impl_result = g_api_table.RemovePointerInteractionContext(interactionContext, pointerId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ProcessPointerFramesInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, uint32_t entriesCount, uint32_t pointerCount, win32::Windows::Win32::UI::Input::Pointer::POINTER_INFO* pointerInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(entriesCount);
        ORBIT_TRACK_PARAM(pointerCount);
        ORBIT_TRACK_PARAM(pointerInfo);

        auto win32_impl_result = g_api_table.ProcessPointerFramesInteractionContext(interactionContext, entriesCount, pointerCount, pointerInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_BufferPointerPacketsInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, uint32_t entriesCount, win32::Windows::Win32::UI::Input::Pointer::POINTER_INFO* pointerInfo) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(entriesCount);
        ORBIT_TRACK_PARAM(pointerInfo);

        auto win32_impl_result = g_api_table.BufferPointerPacketsInteractionContext(interactionContext, entriesCount, pointerInfo);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ProcessBufferedPacketsInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);

        auto win32_impl_result = g_api_table.ProcessBufferedPacketsInteractionContext(interactionContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_ProcessInertiaInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);

        auto win32_impl_result = g_api_table.ProcessInertiaInteractionContext(interactionContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_StopInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);

        auto win32_impl_result = g_api_table.StopInteractionContext(interactionContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_SetPivotInteractionContext(win32::Windows::Win32::UI::InteractionContext::HINTERACTIONCONTEXT interactionContext, float x, float y, float radius) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(interactionContext);
        ORBIT_TRACK_PARAM(x);
        ORBIT_TRACK_PARAM(y);
        ORBIT_TRACK_PARAM(radius);

        auto win32_impl_result = g_api_table.SetPivotInteractionContext(interactionContext, x, y, radius);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
