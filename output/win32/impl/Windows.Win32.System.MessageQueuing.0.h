// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_MessageQueuing_0_H
#define WIN32_Windows_Win32_System_MessageQueuing_0_H
WIN32_EXPORT namespace win32::Windows::Win32::System::MessageQueuing
{
#pragma region enums
    enum class FOREIGN_STATUS : int32_t
    {
        MQ_STATUS_FOREIGN = 0,
        MQ_STATUS_NOT_FOREIGN = 1,
        MQ_STATUS_UNKNOWN = 2,
    };
    enum class MQACCESS : int32_t
    {
        MQ_RECEIVE_ACCESS = 1,
        MQ_SEND_ACCESS = 2,
        MQ_PEEK_ACCESS = 32,
        MQ_ADMIN_ACCESS = 128,
    };
    enum class MQAUTHENTICATE : int32_t
    {
        MQ_AUTHENTICATE_NONE = 0,
        MQ_AUTHENTICATE = 1,
    };
    enum class MQCALG : int32_t
    {
        MQMSG_CALG_MD2 = 32769,
        MQMSG_CALG_MD4 = 32770,
        MQMSG_CALG_MD5 = 32771,
        MQMSG_CALG_SHA = 32772,
        MQMSG_CALG_SHA1 = 32772,
        MQMSG_CALG_MAC = 32773,
        MQMSG_CALG_RSA_SIGN = 9216,
        MQMSG_CALG_DSS_SIGN = 8704,
        MQMSG_CALG_RSA_KEYX = 41984,
        MQMSG_CALG_DES = 26113,
        MQMSG_CALG_RC2 = 26114,
        MQMSG_CALG_RC4 = 26625,
        MQMSG_CALG_SEAL = 26626,
    };
    enum class MQCERT_REGISTER : int32_t
    {
        MQCERT_REGISTER_ALWAYS = 1,
        MQCERT_REGISTER_IF_NOT_EXIST = 2,
    };
    enum class MQDEFAULT : int32_t
    {
        DEFAULT_M_PRIORITY = 3,
        DEFAULT_M_DELIVERY = 0,
        DEFAULT_M_ACKNOWLEDGE = 0,
        DEFAULT_M_JOURNAL = 0,
        DEFAULT_M_APPSPECIFIC = 0,
        DEFAULT_M_PRIV_LEVEL = 0,
        DEFAULT_M_AUTH_LEVEL = 0,
        DEFAULT_M_SENDERID_TYPE = 1,
        DEFAULT_Q_JOURNAL = 0,
        DEFAULT_Q_BASEPRIORITY = 0,
        DEFAULT_Q_QUOTA = -1,
        DEFAULT_Q_JOURNAL_QUOTA = -1,
        DEFAULT_Q_TRANSACTION = 0,
        DEFAULT_Q_AUTHENTICATE = 0,
        DEFAULT_Q_PRIV_LEVEL = 1,
        DEFAULT_M_LOOKUPID = 0,
    };
    enum class MQERROR : int32_t
    {
        MQ_ERROR = -1072824319,
        MQ_ERROR_PROPERTY = -1072824318,
        MQ_ERROR_QUEUE_NOT_FOUND = -1072824317,
        MQ_ERROR_QUEUE_NOT_ACTIVE = -1072824316,
        MQ_ERROR_QUEUE_EXISTS = -1072824315,
        MQ_ERROR_INVALID_PARAMETER = -1072824314,
        MQ_ERROR_INVALID_HANDLE = -1072824313,
        MQ_ERROR_OPERATION_CANCELLED = -1072824312,
        MQ_ERROR_SHARING_VIOLATION = -1072824311,
        MQ_ERROR_SERVICE_NOT_AVAILABLE = -1072824309,
        MQ_ERROR_MACHINE_NOT_FOUND = -1072824307,
        MQ_ERROR_ILLEGAL_SORT = -1072824304,
        MQ_ERROR_ILLEGAL_USER = -1072824303,
        MQ_ERROR_NO_DS = -1072824301,
        MQ_ERROR_ILLEGAL_QUEUE_PATHNAME = -1072824300,
        MQ_ERROR_ILLEGAL_PROPERTY_VALUE = -1072824296,
        MQ_ERROR_ILLEGAL_PROPERTY_VT = -1072824295,
        MQ_ERROR_BUFFER_OVERFLOW = -1072824294,
        MQ_ERROR_IO_TIMEOUT = -1072824293,
        MQ_ERROR_ILLEGAL_CURSOR_ACTION = -1072824292,
        MQ_ERROR_MESSAGE_ALREADY_RECEIVED = -1072824291,
        MQ_ERROR_ILLEGAL_FORMATNAME = -1072824290,
        MQ_ERROR_FORMATNAME_BUFFER_TOO_SMALL = -1072824289,
        MQ_ERROR_UNSUPPORTED_FORMATNAME_OPERATION = -1072824288,
        MQ_ERROR_ILLEGAL_SECURITY_DESCRIPTOR = -1072824287,
        MQ_ERROR_SENDERID_BUFFER_TOO_SMALL = -1072824286,
        MQ_ERROR_SECURITY_DESCRIPTOR_TOO_SMALL = -1072824285,
        MQ_ERROR_CANNOT_IMPERSONATE_CLIENT = -1072824284,
        MQ_ERROR_ACCESS_DENIED = -1072824283,
        MQ_ERROR_PRIVILEGE_NOT_HELD = -1072824282,
        MQ_ERROR_INSUFFICIENT_RESOURCES = -1072824281,
        MQ_ERROR_USER_BUFFER_TOO_SMALL = -1072824280,
        MQ_ERROR_MESSAGE_STORAGE_FAILED = -1072824278,
        MQ_ERROR_SENDER_CERT_BUFFER_TOO_SMALL = -1072824277,
        MQ_ERROR_INVALID_CERTIFICATE = -1072824276,
        MQ_ERROR_CORRUPTED_INTERNAL_CERTIFICATE = -1072824275,
        MQ_ERROR_INTERNAL_USER_CERT_EXIST = -1072824274,
        MQ_ERROR_NO_INTERNAL_USER_CERT = -1072824273,
        MQ_ERROR_CORRUPTED_SECURITY_DATA = -1072824272,
        MQ_ERROR_CORRUPTED_PERSONAL_CERT_STORE = -1072824271,
        MQ_ERROR_COMPUTER_DOES_NOT_SUPPORT_ENCRYPTION = -1072824269,
        MQ_ERROR_BAD_SECURITY_CONTEXT = -1072824267,
        MQ_ERROR_COULD_NOT_GET_USER_SID = -1072824266,
        MQ_ERROR_COULD_NOT_GET_ACCOUNT_INFO = -1072824265,
        MQ_ERROR_ILLEGAL_MQCOLUMNS = -1072824264,
        MQ_ERROR_ILLEGAL_PROPID = -1072824263,
        MQ_ERROR_ILLEGAL_RELATION = -1072824262,
        MQ_ERROR_ILLEGAL_PROPERTY_SIZE = -1072824261,
        MQ_ERROR_ILLEGAL_RESTRICTION_PROPID = -1072824260,
        MQ_ERROR_ILLEGAL_MQQUEUEPROPS = -1072824259,
        MQ_ERROR_PROPERTY_NOTALLOWED = -1072824258,
        MQ_ERROR_INSUFFICIENT_PROPERTIES = -1072824257,
        MQ_ERROR_MACHINE_EXISTS = -1072824256,
        MQ_ERROR_ILLEGAL_MQQMPROPS = -1072824255,
        MQ_ERROR_DS_IS_FULL = -1072824254,
        MQ_ERROR_DS_ERROR = -1072824253,
        MQ_ERROR_INVALID_OWNER = -1072824252,
        MQ_ERROR_UNSUPPORTED_ACCESS_MODE = -1072824251,
        MQ_ERROR_RESULT_BUFFER_TOO_SMALL = -1072824250,
        MQ_ERROR_DELETE_CN_IN_USE = -1072824248,
        MQ_ERROR_NO_RESPONSE_FROM_OBJECT_SERVER = -1072824247,
        MQ_ERROR_OBJECT_SERVER_NOT_AVAILABLE = -1072824246,
        MQ_ERROR_QUEUE_NOT_AVAILABLE = -1072824245,
        MQ_ERROR_DTC_CONNECT = -1072824244,
        MQ_ERROR_TRANSACTION_IMPORT = -1072824242,
        MQ_ERROR_TRANSACTION_USAGE = -1072824240,
        MQ_ERROR_TRANSACTION_SEQUENCE = -1072824239,
        MQ_ERROR_MISSING_CONNECTOR_TYPE = -1072824235,
        MQ_ERROR_STALE_HANDLE = -1072824234,
        MQ_ERROR_TRANSACTION_ENLIST = -1072824232,
        MQ_ERROR_QUEUE_DELETED = -1072824230,
        MQ_ERROR_ILLEGAL_CONTEXT = -1072824229,
        MQ_ERROR_ILLEGAL_SORT_PROPID = -1072824228,
        MQ_ERROR_LABEL_TOO_LONG = -1072824227,
        MQ_ERROR_LABEL_BUFFER_TOO_SMALL = -1072824226,
        MQ_ERROR_MQIS_SERVER_EMPTY = -1072824225,
        MQ_ERROR_MQIS_READONLY_MODE = -1072824224,
        MQ_ERROR_SYMM_KEY_BUFFER_TOO_SMALL = -1072824223,
        MQ_ERROR_SIGNATURE_BUFFER_TOO_SMALL = -1072824222,
        MQ_ERROR_PROV_NAME_BUFFER_TOO_SMALL = -1072824221,
        MQ_ERROR_ILLEGAL_OPERATION = -1072824220,
        MQ_ERROR_WRITE_NOT_ALLOWED = -1072824219,
        MQ_ERROR_WKS_CANT_SERVE_CLIENT = -1072824218,
        MQ_ERROR_DEPEND_WKS_LICENSE_OVERFLOW = -1072824217,
        MQ_CORRUPTED_QUEUE_WAS_DELETED = -1072824216,
        MQ_ERROR_REMOTE_MACHINE_NOT_AVAILABLE = -1072824215,
        MQ_ERROR_UNSUPPORTED_OPERATION = -1072824214,
        MQ_ERROR_ENCRYPTION_PROVIDER_NOT_SUPPORTED = -1072824213,
        MQ_ERROR_CANNOT_SET_CRYPTO_SEC_DESCR = -1072824212,
        MQ_ERROR_CERTIFICATE_NOT_PROVIDED = -1072824211,
        MQ_ERROR_Q_DNS_PROPERTY_NOT_SUPPORTED = -1072824210,
        MQ_ERROR_CANT_CREATE_CERT_STORE = -1072824209,
        MQ_ERROR_CANNOT_CREATE_CERT_STORE = -1072824209,
        MQ_ERROR_CANT_OPEN_CERT_STORE = -1072824208,
        MQ_ERROR_CANNOT_OPEN_CERT_STORE = -1072824208,
        MQ_ERROR_ILLEGAL_ENTERPRISE_OPERATION = -1072824207,
        MQ_ERROR_CANNOT_GRANT_ADD_GUID = -1072824206,
        MQ_ERROR_CANNOT_LOAD_MSMQOCM = -1072824205,
        MQ_ERROR_NO_ENTRY_POINT_MSMQOCM = -1072824204,
        MQ_ERROR_NO_MSMQ_SERVERS_ON_DC = -1072824203,
        MQ_ERROR_CANNOT_JOIN_DOMAIN = -1072824202,
        MQ_ERROR_CANNOT_CREATE_ON_GC = -1072824201,
        MQ_ERROR_GUID_NOT_MATCHING = -1072824200,
        MQ_ERROR_PUBLIC_KEY_NOT_FOUND = -1072824199,
        MQ_ERROR_PUBLIC_KEY_DOES_NOT_EXIST = -1072824198,
        MQ_ERROR_ILLEGAL_MQPRIVATEPROPS = -1072824197,
        MQ_ERROR_NO_GC_IN_DOMAIN = -1072824196,
        MQ_ERROR_NO_MSMQ_SERVERS_ON_GC = -1072824195,
        MQ_ERROR_CANNOT_GET_DN = -1072824194,
        MQ_ERROR_CANNOT_HASH_DATA_EX = -1072824193,
        MQ_ERROR_CANNOT_SIGN_DATA_EX = -1072824192,
        MQ_ERROR_CANNOT_CREATE_HASH_EX = -1072824191,
        MQ_ERROR_FAIL_VERIFY_SIGNATURE_EX = -1072824190,
        MQ_ERROR_CANNOT_DELETE_PSC_OBJECTS = -1072824189,
        MQ_ERROR_NO_MQUSER_OU = -1072824188,
        MQ_ERROR_CANNOT_LOAD_MQAD = -1072824187,
        MQ_ERROR_CANNOT_LOAD_MQDSSRV = -1072824186,
        MQ_ERROR_PROPERTIES_CONFLICT = -1072824185,
        MQ_ERROR_MESSAGE_NOT_FOUND = -1072824184,
        MQ_ERROR_CANT_RESOLVE_SITES = -1072824183,
        MQ_ERROR_NOT_SUPPORTED_BY_DEPENDENT_CLIENTS = -1072824182,
        MQ_ERROR_OPERATION_NOT_SUPPORTED_BY_REMOTE_COMPUTER = -1072824181,
        MQ_ERROR_NOT_A_CORRECT_OBJECT_CLASS = -1072824180,
        MQ_ERROR_MULTI_SORT_KEYS = -1072824179,
        MQ_ERROR_GC_NEEDED = -1072824178,
        MQ_ERROR_DS_BIND_ROOT_FOREST = -1072824177,
        MQ_ERROR_DS_LOCAL_USER = -1072824176,
        MQ_ERROR_Q_ADS_PROPERTY_NOT_SUPPORTED = -1072824175,
        MQ_ERROR_BAD_XML_FORMAT = -1072824174,
        MQ_ERROR_UNSUPPORTED_CLASS = -1072824173,
        MQ_ERROR_UNINITIALIZED_OBJECT = -1072824172,
        MQ_ERROR_CANNOT_CREATE_PSC_OBJECTS = -1072824171,
        MQ_ERROR_CANNOT_UPDATE_PSC_OBJECTS = -1072824170,
    };
    enum class MQJOURNAL : int32_t
    {
        MQ_JOURNAL_NONE = 0,
        MQ_JOURNAL = 1,
    };
    enum class MQMAX : int32_t
    {
        MQ_MAX_Q_NAME_LEN = 124,
        MQ_MAX_Q_LABEL_LEN = 124,
    };
    enum class MQMSGACKNOWLEDGEMENT : int32_t
    {
        MQMSG_ACKNOWLEDGMENT_NONE = 0,
        MQMSG_ACKNOWLEDGMENT_POS_ARRIVAL = 1,
        MQMSG_ACKNOWLEDGMENT_POS_RECEIVE = 2,
        MQMSG_ACKNOWLEDGMENT_NEG_ARRIVAL = 4,
        MQMSG_ACKNOWLEDGMENT_NEG_RECEIVE = 8,
        MQMSG_ACKNOWLEDGMENT_NACK_REACH_QUEUE = 4,
        MQMSG_ACKNOWLEDGMENT_FULL_REACH_QUEUE = 5,
        MQMSG_ACKNOWLEDGMENT_NACK_RECEIVE = 12,
        MQMSG_ACKNOWLEDGMENT_FULL_RECEIVE = 14,
    };
    enum class MQMSGAUTHENTICATION : int32_t
    {
        MQMSG_AUTHENTICATION_NOT_REQUESTED = 0,
        MQMSG_AUTHENTICATION_REQUESTED = 1,
        MQMSG_AUTHENTICATED_SIG10 = 1,
        MQMSG_AUTHENTICATION_REQUESTED_EX = 3,
        MQMSG_AUTHENTICATED_SIG20 = 3,
        MQMSG_AUTHENTICATED_SIG30 = 5,
        MQMSG_AUTHENTICATED_SIGXML = 9,
    };
    enum class MQMSGAUTHLEVEL : int32_t
    {
        MQMSG_AUTH_LEVEL_NONE = 0,
        MQMSG_AUTH_LEVEL_ALWAYS = 1,
        MQMSG_AUTH_LEVEL_MSMQ10 = 2,
        MQMSG_AUTH_LEVEL_SIG10 = 2,
        MQMSG_AUTH_LEVEL_MSMQ20 = 4,
        MQMSG_AUTH_LEVEL_SIG20 = 4,
        MQMSG_AUTH_LEVEL_SIG30 = 8,
    };
    enum class MQMSGCLASS : int32_t
    {
        MQMSG_CLASS_NORMAL = 0,
        MQMSG_CLASS_REPORT = 1,
        MQMSG_CLASS_ACK_REACH_QUEUE = 2,
        MQMSG_CLASS_ACK_RECEIVE = 16384,
        MQMSG_CLASS_NACK_BAD_DST_Q = 32768,
        MQMSG_CLASS_NACK_PURGED = 32769,
        MQMSG_CLASS_NACK_REACH_QUEUE_TIMEOUT = 32770,
        MQMSG_CLASS_NACK_Q_EXCEED_QUOTA = 32771,
        MQMSG_CLASS_NACK_ACCESS_DENIED = 32772,
        MQMSG_CLASS_NACK_HOP_COUNT_EXCEEDED = 32773,
        MQMSG_CLASS_NACK_BAD_SIGNATURE = 32774,
        MQMSG_CLASS_NACK_BAD_ENCRYPTION = 32775,
        MQMSG_CLASS_NACK_COULD_NOT_ENCRYPT = 32776,
        MQMSG_CLASS_NACK_NOT_TRANSACTIONAL_Q = 32777,
        MQMSG_CLASS_NACK_NOT_TRANSACTIONAL_MSG = 32778,
        MQMSG_CLASS_NACK_UNSUPPORTED_CRYPTO_PROVIDER = 32779,
        MQMSG_CLASS_NACK_SOURCE_COMPUTER_GUID_CHANGED = 32780,
        MQMSG_CLASS_NACK_Q_DELETED = 49152,
        MQMSG_CLASS_NACK_Q_PURGED = 49153,
        MQMSG_CLASS_NACK_RECEIVE_TIMEOUT = 49154,
        MQMSG_CLASS_NACK_RECEIVE_TIMEOUT_AT_SENDER = 49155,
    };
    enum class MQMSGCURSOR : int32_t
    {
        MQMSG_FIRST = 0,
        MQMSG_CURRENT = 1,
        MQMSG_NEXT = 2,
    };
    enum class MQMSGDELIVERY : int32_t
    {
        MQMSG_DELIVERY_EXPRESS = 0,
        MQMSG_DELIVERY_RECOVERABLE = 1,
    };
    enum class MQMSGIDSIZE : int32_t
    {
        MQMSG_MSGID_SIZE = 20,
        MQMSG_CORRELATIONID_SIZE = 20,
        MQMSG_XACTID_SIZE = 20,
    };
    enum class MQMSGJOURNAL : int32_t
    {
        MQMSG_JOURNAL_NONE = 0,
        MQMSG_DEADLETTER = 1,
        MQMSG_JOURNAL = 2,
    };
    enum class MQMSGMAX : int32_t
    {
        MQ_MAX_MSG_LABEL_LEN = 249,
    };
    enum class MQMSGPRIVLEVEL : int32_t
    {
        MQMSG_PRIV_LEVEL_NONE = 0,
        MQMSG_PRIV_LEVEL_BODY_BASE = 1,
        MQMSG_PRIV_LEVEL_BODY_ENHANCED = 3,
    };
    enum class MQMSGSENDERIDTYPE : int32_t
    {
        MQMSG_SENDERID_TYPE_NONE = 0,
        MQMSG_SENDERID_TYPE_SID = 1,
    };
    enum class MQMSGTRACE : int32_t
    {
        MQMSG_TRACE_NONE = 0,
        MQMSG_SEND_ROUTE_TO_REPORT_QUEUE = 1,
    };
    enum class MQPRIORITY : int32_t
    {
        MQ_MIN_PRIORITY = 0,
        MQ_MAX_PRIORITY = 7,
    };
    enum class MQPRIVLEVEL : int32_t
    {
        MQ_PRIV_LEVEL_NONE = 0,
        MQ_PRIV_LEVEL_OPTIONAL = 1,
        MQ_PRIV_LEVEL_BODY = 2,
    };
    enum class MQSHARE : int32_t
    {
        MQ_DENY_NONE = 0,
        MQ_DENY_RECEIVE_SHARE = 1,
    };
    enum class MQTRANSACTION : int32_t
    {
        MQ_NO_TRANSACTION = 0,
        MQ_MTS_TRANSACTION = 1,
        MQ_XA_TRANSACTION = 2,
        MQ_SINGLE_MESSAGE = 3,
    };
    enum class MQTRANSACTIONAL : int32_t
    {
        MQ_TRANSACTIONAL_NONE = 0,
        MQ_TRANSACTIONAL = 1,
    };
    enum class MQWARNING : int32_t
    {
        MQ_INFORMATION_PROPERTY = 1074659329,
        MQ_INFORMATION_ILLEGAL_PROPERTY = 1074659330,
        MQ_INFORMATION_PROPERTY_IGNORED = 1074659331,
        MQ_INFORMATION_UNSUPPORTED_PROPERTY = 1074659332,
        MQ_INFORMATION_DUPLICATE_PROPERTY = 1074659333,
        MQ_INFORMATION_OPERATION_PENDING = 1074659334,
        MQ_INFORMATION_FORMATNAME_BUFFER_TOO_SMALL = 1074659337,
        MQ_INFORMATION_INTERNAL_USER_CERT_EXIST = 1074659338,
        MQ_INFORMATION_OWNER_IGNORED = 1074659339,
    };
    enum class QUEUE_STATE : int32_t
    {
        MQ_QUEUE_STATE_LOCAL_CONNECTION = 0,
        MQ_QUEUE_STATE_DISCONNECTED = 1,
        MQ_QUEUE_STATE_WAITING = 2,
        MQ_QUEUE_STATE_NEEDVALIDATE = 3,
        MQ_QUEUE_STATE_ONHOLD = 4,
        MQ_QUEUE_STATE_NONACTIVE = 5,
        MQ_QUEUE_STATE_CONNECTED = 6,
        MQ_QUEUE_STATE_DISCONNECTING = 7,
        MQ_QUEUE_STATE_LOCKED = 8,
    };
    enum class QUEUE_TYPE : int32_t
    {
        MQ_TYPE_PUBLIC = 0,
        MQ_TYPE_PRIVATE = 1,
        MQ_TYPE_MACHINE = 2,
        MQ_TYPE_CONNECTOR = 3,
        MQ_TYPE_MULTICAST = 4,
    };
    enum class RELOPS : int32_t
    {
        REL_NOP = 0,
        REL_EQ = 1,
        REL_NEQ = 2,
        REL_LT = 3,
        REL_GT = 4,
        REL_LE = 5,
        REL_GE = 6,
    };
    enum class XACT_STATUS : int32_t
    {
        MQ_XACT_STATUS_XACT = 0,
        MQ_XACT_STATUS_NOT_XACT = 1,
        MQ_XACT_STATUS_UNKNOWN = 2,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct MSMQApplication;
    struct MSMQCollection;
    struct MSMQCoordinatedTransactionDispenser;
    struct MSMQDestination;
    struct MSMQEvent;
    struct MSMQManagement;
    struct MSMQMessage;
    struct MSMQOutgoingQueueManagement;
    struct MSMQQuery;
    struct MSMQQueue;
    struct MSMQQueueInfo;
    struct MSMQQueueInfos;
    struct MSMQQueueManagement;
    struct MSMQTransaction;
    struct MSMQTransactionDispenser;
    struct IMSMQApplication;
    struct IMSMQApplication2;
    struct IMSMQApplication3;
    struct IMSMQCollection;
    struct IMSMQCoordinatedTransactionDispenser;
    struct IMSMQCoordinatedTransactionDispenser2;
    struct IMSMQCoordinatedTransactionDispenser3;
    struct IMSMQDestination;
    struct IMSMQEvent;
    struct IMSMQEvent2;
    struct IMSMQEvent3;
    struct IMSMQManagement;
    struct IMSMQMessage;
    struct IMSMQMessage2;
    struct IMSMQMessage3;
    struct IMSMQMessage4;
    struct IMSMQOutgoingQueueManagement;
    struct IMSMQPrivateDestination;
    struct IMSMQPrivateEvent;
    struct IMSMQQuery;
    struct IMSMQQuery2;
    struct IMSMQQuery3;
    struct IMSMQQuery4;
    struct IMSMQQueue;
    struct IMSMQQueue2;
    struct IMSMQQueue3;
    struct IMSMQQueue4;
    struct IMSMQQueueInfo;
    struct IMSMQQueueInfo2;
    struct IMSMQQueueInfo3;
    struct IMSMQQueueInfo4;
    struct IMSMQQueueInfos;
    struct IMSMQQueueInfos2;
    struct IMSMQQueueInfos3;
    struct IMSMQQueueInfos4;
    struct IMSMQQueueManagement;
    struct IMSMQTransaction;
    struct IMSMQTransaction2;
    struct IMSMQTransaction3;
    struct IMSMQTransactionDispenser;
    struct IMSMQTransactionDispenser2;
    struct IMSMQTransactionDispenser3;
    struct _DMSMQEventEvents;
#pragma endregion forward_declarations

#pragma region delegates
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
