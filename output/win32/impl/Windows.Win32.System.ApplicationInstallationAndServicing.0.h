// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_ApplicationInstallationAndServicing_0_H
#define WIN32_Windows_Win32_System_ApplicationInstallationAndServicing_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct BOOL;
    struct PSTR;
    struct PWSTR;
}
WIN32_EXPORT namespace win32::Windows::Win32::System::ApplicationInstallationAndServicing
{
#pragma region enums
    enum class ACTCTX_COMPATIBILITY_ELEMENT_TYPE : int32_t
    {
        ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN = 0,
        ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS = 1,
        ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION = 2,
        ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MAXVERSIONTESTED = 3,
    };
    enum class ACTCTX_REQUESTED_RUN_LEVEL : int32_t
    {
        ACTCTX_RUN_LEVEL_UNSPECIFIED = 0,
        ACTCTX_RUN_LEVEL_AS_INVOKER = 1,
        ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE = 2,
        ACTCTX_RUN_LEVEL_REQUIRE_ADMIN = 3,
        ACTCTX_RUN_LEVEL_NUMBERS = 4,
    };
    enum class ADVERTISEFLAGS : int32_t
    {
        ADVERTISEFLAGS_MACHINEASSIGN = 0,
        ADVERTISEFLAGS_USERASSIGN = 1,
    };
    enum class ASM_BIND_FLAGS : uint32_t
    {
        ASM_BINDF_FORCE_CACHE_INSTALL = 0x1,
        ASM_BINDF_RFS_INTEGRITY_CHECK = 0x2,
        ASM_BINDF_RFS_MODULE_CHECK = 0x4,
        ASM_BINDF_BINPATH_PROBE_ONLY = 0x8,
        ASM_BINDF_SHARED_BINPATH_HINT = 0x10,
        ASM_BINDF_PARENT_ASM_HINT = 0x20,
    };
    enum class ASM_CMP_FLAGS : int32_t
    {
        ASM_CMPF_NAME = 1,
        ASM_CMPF_MAJOR_VERSION = 2,
        ASM_CMPF_MINOR_VERSION = 4,
        ASM_CMPF_BUILD_NUMBER = 8,
        ASM_CMPF_REVISION_NUMBER = 16,
        ASM_CMPF_PUBLIC_KEY_TOKEN = 32,
        ASM_CMPF_CULTURE = 64,
        ASM_CMPF_CUSTOM = 128,
        ASM_CMPF_ALL = 255,
        ASM_CMPF_DEFAULT = 256,
    };
    enum class ASM_DISPLAY_FLAGS : int32_t
    {
        ASM_DISPLAYF_VERSION = 1,
        ASM_DISPLAYF_CULTURE = 2,
        ASM_DISPLAYF_PUBLIC_KEY_TOKEN = 4,
        ASM_DISPLAYF_PUBLIC_KEY = 8,
        ASM_DISPLAYF_CUSTOM = 16,
        ASM_DISPLAYF_PROCESSORARCHITECTURE = 32,
        ASM_DISPLAYF_LANGUAGEID = 64,
    };
    enum class ASM_NAME : int32_t
    {
        ASM_NAME_PUBLIC_KEY = 0,
        ASM_NAME_PUBLIC_KEY_TOKEN = 1,
        ASM_NAME_HASH_VALUE = 2,
        ASM_NAME_NAME = 3,
        ASM_NAME_MAJOR_VERSION = 4,
        ASM_NAME_MINOR_VERSION = 5,
        ASM_NAME_BUILD_NUMBER = 6,
        ASM_NAME_REVISION_NUMBER = 7,
        ASM_NAME_CULTURE = 8,
        ASM_NAME_PROCESSOR_ID_ARRAY = 9,
        ASM_NAME_OSINFO_ARRAY = 10,
        ASM_NAME_HASH_ALGID = 11,
        ASM_NAME_ALIAS = 12,
        ASM_NAME_CODEBASE_URL = 13,
        ASM_NAME_CODEBASE_LASTMOD = 14,
        ASM_NAME_NULL_PUBLIC_KEY = 15,
        ASM_NAME_NULL_PUBLIC_KEY_TOKEN = 16,
        ASM_NAME_CUSTOM = 17,
        ASM_NAME_NULL_CUSTOM = 18,
        ASM_NAME_MVID = 19,
        ASM_NAME_MAX_PARAMS = 20,
    };
    enum class CREATE_ASM_NAME_OBJ_FLAGS : int32_t
    {
        CANOF_PARSE_DISPLAY_NAME = 1,
        CANOF_SET_DEFAULT_VALUES = 2,
    };
    enum class IASSEMBLYCACHE_UNINSTALL_DISPOSITION : uint32_t
    {
        IASSEMBLYCACHE_UNINSTALL_DISPOSITION_UNINSTALLED = 0x1,
        IASSEMBLYCACHE_UNINSTALL_DISPOSITION_STILL_IN_USE = 0x2,
        IASSEMBLYCACHE_UNINSTALL_DISPOSITION_ALREADY_UNINSTALLED = 0x3,
        IASSEMBLYCACHE_UNINSTALL_DISPOSITION_DELETE_PENDING = 0x4,
    };
    enum class INSTALLFEATUREATTRIBUTE : int32_t
    {
        INSTALLFEATUREATTRIBUTE_FAVORLOCAL = 1,
        INSTALLFEATUREATTRIBUTE_FAVORSOURCE = 2,
        INSTALLFEATUREATTRIBUTE_FOLLOWPARENT = 4,
        INSTALLFEATUREATTRIBUTE_FAVORADVERTISE = 8,
        INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE = 16,
        INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE = 32,
    };
    enum class INSTALLLEVEL : int32_t
    {
        INSTALLLEVEL_DEFAULT = 0,
        INSTALLLEVEL_MINIMUM = 1,
        INSTALLLEVEL_MAXIMUM = 65535,
    };
    enum class INSTALLLOGATTRIBUTES : int32_t
    {
        INSTALLLOGATTRIBUTES_APPEND = 1,
        INSTALLLOGATTRIBUTES_FLUSHEACHLINE = 2,
    };
    enum class INSTALLMESSAGE : int32_t
    {
        INSTALLMESSAGE_FATALEXIT = 0,
        INSTALLMESSAGE_ERROR = 16777216,
        INSTALLMESSAGE_WARNING = 33554432,
        INSTALLMESSAGE_USER = 50331648,
        INSTALLMESSAGE_INFO = 67108864,
        INSTALLMESSAGE_FILESINUSE = 83886080,
        INSTALLMESSAGE_RESOLVESOURCE = 100663296,
        INSTALLMESSAGE_OUTOFDISKSPACE = 117440512,
        INSTALLMESSAGE_ACTIONSTART = 134217728,
        INSTALLMESSAGE_ACTIONDATA = 150994944,
        INSTALLMESSAGE_PROGRESS = 167772160,
        INSTALLMESSAGE_COMMONDATA = 184549376,
        INSTALLMESSAGE_INITIALIZE = 201326592,
        INSTALLMESSAGE_TERMINATE = 218103808,
        INSTALLMESSAGE_SHOWDIALOG = 234881024,
        INSTALLMESSAGE_PERFORMANCE = 251658240,
        INSTALLMESSAGE_RMFILESINUSE = 419430400,
        INSTALLMESSAGE_INSTALLSTART = 436207616,
        INSTALLMESSAGE_INSTALLEND = 452984832,
    };
    enum class INSTALLMODE : int32_t
    {
        INSTALLMODE_NODETECTION_ANY = -4,
        INSTALLMODE_NOSOURCERESOLUTION = -3,
        INSTALLMODE_NODETECTION = -2,
        INSTALLMODE_EXISTING = -1,
        INSTALLMODE_DEFAULT = 0,
    };
    enum class INSTALLOGMODE : int32_t
    {
        INSTALLLOGMODE_FATALEXIT = 1,
        INSTALLLOGMODE_ERROR = 2,
        INSTALLLOGMODE_WARNING = 4,
        INSTALLLOGMODE_USER = 8,
        INSTALLLOGMODE_INFO = 16,
        INSTALLLOGMODE_RESOLVESOURCE = 64,
        INSTALLLOGMODE_OUTOFDISKSPACE = 128,
        INSTALLLOGMODE_ACTIONSTART = 256,
        INSTALLLOGMODE_ACTIONDATA = 512,
        INSTALLLOGMODE_COMMONDATA = 2048,
        INSTALLLOGMODE_PROPERTYDUMP = 1024,
        INSTALLLOGMODE_VERBOSE = 4096,
        INSTALLLOGMODE_EXTRADEBUG = 8192,
        INSTALLLOGMODE_LOGONLYONERROR = 16384,
        INSTALLLOGMODE_LOGPERFORMANCE = 32768,
        INSTALLLOGMODE_PROGRESS = 1024,
        INSTALLLOGMODE_INITIALIZE = 4096,
        INSTALLLOGMODE_TERMINATE = 8192,
        INSTALLLOGMODE_SHOWDIALOG = 16384,
        INSTALLLOGMODE_FILESINUSE = 32,
        INSTALLLOGMODE_RMFILESINUSE = 33554432,
        INSTALLLOGMODE_INSTALLSTART = 67108864,
        INSTALLLOGMODE_INSTALLEND = 134217728,
    };
    enum class INSTALLSTATE : int32_t
    {
        INSTALLSTATE_NOTUSED = -7,
        INSTALLSTATE_BADCONFIG = -6,
        INSTALLSTATE_INCOMPLETE = -5,
        INSTALLSTATE_SOURCEABSENT = -4,
        INSTALLSTATE_MOREDATA = -3,
        INSTALLSTATE_INVALIDARG = -2,
        INSTALLSTATE_UNKNOWN = -1,
        INSTALLSTATE_BROKEN = 0,
        INSTALLSTATE_ADVERTISED = 1,
        INSTALLSTATE_REMOVED = 1,
        INSTALLSTATE_ABSENT = 2,
        INSTALLSTATE_LOCAL = 3,
        INSTALLSTATE_SOURCE = 4,
        INSTALLSTATE_DEFAULT = 5,
    };
    enum class INSTALLTYPE : int32_t
    {
        INSTALLTYPE_DEFAULT = 0,
        INSTALLTYPE_NETWORK_IMAGE = 1,
        INSTALLTYPE_SINGLE_INSTANCE = 2,
    };
    enum class INSTALLUILEVEL : int32_t
    {
        INSTALLUILEVEL_NOCHANGE = 0,
        INSTALLUILEVEL_DEFAULT = 1,
        INSTALLUILEVEL_NONE = 2,
        INSTALLUILEVEL_BASIC = 3,
        INSTALLUILEVEL_REDUCED = 4,
        INSTALLUILEVEL_FULL = 5,
        INSTALLUILEVEL_ENDDIALOG = 128,
        INSTALLUILEVEL_PROGRESSONLY = 64,
        INSTALLUILEVEL_HIDECANCEL = 32,
        INSTALLUILEVEL_SOURCERESONLY = 256,
        INSTALLUILEVEL_UACONLY = 512,
    };
    enum class MSIADVERTISEOPTIONFLAGS : int32_t
    {
        MSIADVERTISEOPTIONFLAGS_INSTANCE = 1,
    };
    enum class MSIARCHITECTUREFLAGS : int32_t
    {
        MSIARCHITECTUREFLAGS_X86 = 1,
        MSIARCHITECTUREFLAGS_IA64 = 2,
        MSIARCHITECTUREFLAGS_AMD64 = 4,
        MSIARCHITECTUREFLAGS_ARM = 8,
    };
    enum class MSIASSEMBLYINFO : uint32_t
    {
        MSIASSEMBLYINFO_NETASSEMBLY = 0x0,
        MSIASSEMBLYINFO_WIN32ASSEMBLY = 0x1,
    };
    enum class MSICODE : int32_t
    {
        MSICODE_PRODUCT = 0,
        MSICODE_PATCH = 1073741824,
    };
    enum class MSICOLINFO : int32_t
    {
        MSICOLINFO_NAMES = 0,
        MSICOLINFO_TYPES = 1,
    };
    enum class MSICONDITION : int32_t
    {
        MSICONDITION_FALSE = 0,
        MSICONDITION_TRUE = 1,
        MSICONDITION_NONE = 2,
        MSICONDITION_ERROR = 3,
    };
    enum class MSICOSTTREE : int32_t
    {
        MSICOSTTREE_SELFONLY = 0,
        MSICOSTTREE_CHILDREN = 1,
        MSICOSTTREE_PARENTS = 2,
        MSICOSTTREE_RESERVED = 3,
    };
    enum class MSIDBERROR : int32_t
    {
        MSIDBERROR_INVALIDARG = -3,
        MSIDBERROR_MOREDATA = -2,
        MSIDBERROR_FUNCTIONERROR = -1,
        MSIDBERROR_NOERROR = 0,
        MSIDBERROR_DUPLICATEKEY = 1,
        MSIDBERROR_REQUIRED = 2,
        MSIDBERROR_BADLINK = 3,
        MSIDBERROR_OVERFLOW = 4,
        MSIDBERROR_UNDERFLOW = 5,
        MSIDBERROR_NOTINSET = 6,
        MSIDBERROR_BADVERSION = 7,
        MSIDBERROR_BADCASE = 8,
        MSIDBERROR_BADGUID = 9,
        MSIDBERROR_BADWILDCARD = 10,
        MSIDBERROR_BADIDENTIFIER = 11,
        MSIDBERROR_BADLANGUAGE = 12,
        MSIDBERROR_BADFILENAME = 13,
        MSIDBERROR_BADPATH = 14,
        MSIDBERROR_BADCONDITION = 15,
        MSIDBERROR_BADFORMATTED = 16,
        MSIDBERROR_BADTEMPLATE = 17,
        MSIDBERROR_BADDEFAULTDIR = 18,
        MSIDBERROR_BADREGPATH = 19,
        MSIDBERROR_BADCUSTOMSOURCE = 20,
        MSIDBERROR_BADPROPERTY = 21,
        MSIDBERROR_MISSINGDATA = 22,
        MSIDBERROR_BADCATEGORY = 23,
        MSIDBERROR_BADKEYTABLE = 24,
        MSIDBERROR_BADMAXMINVALUES = 25,
        MSIDBERROR_BADCABINET = 26,
        MSIDBERROR_BADSHORTCUT = 27,
        MSIDBERROR_STRINGOVERFLOW = 28,
        MSIDBERROR_BADLOCALIZEATTRIB = 29,
    };
    enum class MSIDBSTATE : int32_t
    {
        MSIDBSTATE_ERROR = -1,
        MSIDBSTATE_READ = 0,
        MSIDBSTATE_WRITE = 1,
    };
    enum class MSIINSTALLCONTEXT : int32_t
    {
        MSIINSTALLCONTEXT_FIRSTVISIBLE = 0,
        MSIINSTALLCONTEXT_NONE = 0,
        MSIINSTALLCONTEXT_USERMANAGED = 1,
        MSIINSTALLCONTEXT_USERUNMANAGED = 2,
        MSIINSTALLCONTEXT_MACHINE = 4,
        MSIINSTALLCONTEXT_ALL = 7,
        MSIINSTALLCONTEXT_ALLUSERMANAGED = 8,
    };
    enum class MSIMODIFY : int32_t
    {
        MSIMODIFY_SEEK = -1,
        MSIMODIFY_REFRESH = 0,
        MSIMODIFY_INSERT = 1,
        MSIMODIFY_UPDATE = 2,
        MSIMODIFY_ASSIGN = 3,
        MSIMODIFY_REPLACE = 4,
        MSIMODIFY_MERGE = 5,
        MSIMODIFY_DELETE = 6,
        MSIMODIFY_INSERT_TEMPORARY = 7,
        MSIMODIFY_VALIDATE = 8,
        MSIMODIFY_VALIDATE_NEW = 9,
        MSIMODIFY_VALIDATE_FIELD = 10,
        MSIMODIFY_VALIDATE_DELETE = 11,
    };
    enum class MSIOPENPACKAGEFLAGS : int32_t
    {
        MSIOPENPACKAGEFLAGS_IGNOREMACHINESTATE = 1,
    };
    enum class MSIPATCHDATATYPE : int32_t
    {
        MSIPATCH_DATATYPE_PATCHFILE = 0,
        MSIPATCH_DATATYPE_XMLPATH = 1,
        MSIPATCH_DATATYPE_XMLBLOB = 2,
    };
    enum class MSIPATCHSTATE : int32_t
    {
        MSIPATCHSTATE_INVALID = 0,
        MSIPATCHSTATE_APPLIED = 1,
        MSIPATCHSTATE_SUPERSEDED = 2,
        MSIPATCHSTATE_OBSOLETED = 4,
        MSIPATCHSTATE_REGISTERED = 8,
        MSIPATCHSTATE_ALL = 15,
    };
    enum class MSIRUNMODE : int32_t
    {
        MSIRUNMODE_ADMIN = 0,
        MSIRUNMODE_ADVERTISE = 1,
        MSIRUNMODE_MAINTENANCE = 2,
        MSIRUNMODE_ROLLBACKENABLED = 3,
        MSIRUNMODE_LOGENABLED = 4,
        MSIRUNMODE_OPERATIONS = 5,
        MSIRUNMODE_REBOOTATEND = 6,
        MSIRUNMODE_REBOOTNOW = 7,
        MSIRUNMODE_CABINET = 8,
        MSIRUNMODE_SOURCESHORTNAMES = 9,
        MSIRUNMODE_TARGETSHORTNAMES = 10,
        MSIRUNMODE_RESERVED11 = 11,
        MSIRUNMODE_WINDOWS9X = 12,
        MSIRUNMODE_ZAWENABLED = 13,
        MSIRUNMODE_RESERVED14 = 14,
        MSIRUNMODE_RESERVED15 = 15,
        MSIRUNMODE_SCHEDULED = 16,
        MSIRUNMODE_ROLLBACK = 17,
        MSIRUNMODE_COMMIT = 18,
    };
    enum class MSISOURCETYPE : int32_t
    {
        MSISOURCETYPE_UNKNOWN = 0,
        MSISOURCETYPE_NETWORK = 1,
        MSISOURCETYPE_URL = 2,
        MSISOURCETYPE_MEDIA = 4,
    };
    enum class MSITRANSACTION : int32_t
    {
        MSITRANSACTION_CHAIN_EMBEDDEDUI = 1,
        MSITRANSACTION_JOIN_EXISTING_EMBEDDEDUI = 2,
    };
    enum class MSITRANSACTIONSTATE : uint32_t
    {
        MSITRANSACTIONSTATE_ROLLBACK = 0x0,
        MSITRANSACTIONSTATE_COMMIT = 0x1,
    };
    enum class MSITRANSFORM_ERROR : int32_t
    {
        MSITRANSFORM_ERROR_ADDEXISTINGROW = 1,
        MSITRANSFORM_ERROR_DELMISSINGROW = 2,
        MSITRANSFORM_ERROR_ADDEXISTINGTABLE = 4,
        MSITRANSFORM_ERROR_DELMISSINGTABLE = 8,
        MSITRANSFORM_ERROR_UPDATEMISSINGROW = 16,
        MSITRANSFORM_ERROR_CHANGECODEPAGE = 32,
        MSITRANSFORM_ERROR_VIEWTRANSFORM = 256,
        MSITRANSFORM_ERROR_NONE = 0,
    };
    enum class MSITRANSFORM_VALIDATE : int32_t
    {
        MSITRANSFORM_VALIDATE_LANGUAGE = 1,
        MSITRANSFORM_VALIDATE_PRODUCT = 2,
        MSITRANSFORM_VALIDATE_PLATFORM = 4,
        MSITRANSFORM_VALIDATE_MAJORVERSION = 8,
        MSITRANSFORM_VALIDATE_MINORVERSION = 16,
        MSITRANSFORM_VALIDATE_UPDATEVERSION = 32,
        MSITRANSFORM_VALIDATE_NEWLESSBASEVERSION = 64,
        MSITRANSFORM_VALIDATE_NEWLESSEQUALBASEVERSION = 128,
        MSITRANSFORM_VALIDATE_NEWEQUALBASEVERSION = 256,
        MSITRANSFORM_VALIDATE_NEWGREATEREQUALBASEVERSION = 512,
        MSITRANSFORM_VALIDATE_NEWGREATERBASEVERSION = 1024,
        MSITRANSFORM_VALIDATE_UPGRADECODE = 2048,
    };
    enum class PACKMAN_RUNTIME : int32_t
    {
        PACKMAN_RUNTIME_NATIVE = 1,
        PACKMAN_RUNTIME_SILVERLIGHTMOBILE = 2,
        PACKMAN_RUNTIME_XNA = 3,
        PACKMAN_RUNTIME_MODERN_NATIVE = 4,
        PACKMAN_RUNTIME_JUPITER = 5,
        PACKMAN_RUNTIME_INVALID = 6,
    };
    enum class PM_ACTIVATION_POLICY : int32_t
    {
        PM_ACTIVATION_POLICY_RESUME = 0,
        PM_ACTIVATION_POLICY_RESUMESAMEPARAMS = 1,
        PM_ACTIVATION_POLICY_REPLACE = 2,
        PM_ACTIVATION_POLICY_REPLACESAMEPARAMS = 3,
        PM_ACTIVATION_POLICY_MULTISESSION = 4,
        PM_ACTIVATION_POLICY_REPLACE_IGNOREFOREGROUND = 5,
        PM_ACTIVATION_POLICY_UNKNOWN = 6,
        PM_ACTIVATION_POLICY_INVALID = 7,
    };
    enum class PM_APPLICATION_HUBTYPE : int32_t
    {
        PM_APPLICATION_HUBTYPE_NONMUSIC = 0,
        PM_APPLICATION_HUBTYPE_MUSIC = 1,
        PM_APPLICATION_HUBTYPE_INVALID = 2,
    };
    enum class PM_APPLICATION_INSTALL_TYPE : int32_t
    {
        PM_APPLICATION_INSTALL_NORMAL = 0,
        PM_APPLICATION_INSTALL_IN_ROM = 1,
        PM_APPLICATION_INSTALL_PA = 2,
        PM_APPLICATION_INSTALL_DEBUG = 3,
        PM_APPLICATION_INSTALL_ENTERPRISE = 4,
        PM_APPLICATION_INSTALL_INVALID = 5,
    };
    enum class PM_APPLICATION_STATE : int32_t
    {
        PM_APPLICATION_STATE_MIN = 0,
        PM_APPLICATION_STATE_INSTALLED = 1,
        PM_APPLICATION_STATE_INSTALLING = 2,
        PM_APPLICATION_STATE_UPDATING = 3,
        PM_APPLICATION_STATE_UNINSTALLING = 4,
        PM_APPLICATION_STATE_LICENSE_UPDATING = 5,
        PM_APPLICATION_STATE_MOVING = 6,
        PM_APPLICATION_STATE_DISABLED_SD_CARD = 7,
        PM_APPLICATION_STATE_DISABLED_ENTERPRISE = 8,
        PM_APPLICATION_STATE_DISABLED_BACKING_UP = 9,
        PM_APPLICATION_STATE_DISABLED_MDIL_BINDING = 10,
        PM_APPLICATION_STATE_MAX = 10,
        PM_APPLICATION_STATE_INVALID = 11,
    };
    enum class PM_APP_GENRE : int32_t
    {
        PM_APP_GENRE_GAMES = 0,
        PM_APP_GENRE_OTHER = 1,
        PM_APP_GENRE_INVALID = 2,
    };
    enum class PM_ENUM_APP_FILTER : int32_t
    {
        PM_APP_FILTER_ALL = 0,
        PM_APP_FILTER_VISIBLE = 1,
        PM_APP_FILTER_GENRE = 2,
        PM_APP_FILTER_NONGAMES = 3,
        PM_APP_FILTER_HUBTYPE = 4,
        PM_APP_FILTER_PINABLEONKIDZONE = 5,
        PM_APP_FILTER_ALL_INCLUDE_MODERN = 6,
        PM_APP_FILTER_FRAMEWORK = 7,
        PM_APP_FILTER_MAX = 8,
    };
    enum class PM_ENUM_BSA_FILTER : int32_t
    {
        PM_ENUM_BSA_FILTER_ALL = 26,
        PM_ENUM_BSA_FILTER_BY_TASKID = 27,
        PM_ENUM_BSA_FILTER_BY_PRODUCTID = 28,
        PM_ENUM_BSA_FILTER_BY_PERIODIC = 29,
        PM_ENUM_BSA_FILTER_BY_ALL_LAUNCHONBOOT = 30,
        PM_ENUM_BSA_FILTER_MAX = 31,
    };
    enum class PM_ENUM_BW_FILTER : int32_t
    {
        PM_ENUM_BW_FILTER_BOOTWORKER_ALL = 31,
        PM_ENUM_BW_FILTER_BY_TASKID = 32,
        PM_ENUM_BW_FILTER_MAX = 33,
    };
    enum class PM_ENUM_EXTENSION_FILTER : int32_t
    {
        PM_ENUM_EXTENSION_FILTER_BY_CONSUMER = 17,
        PM_ENUM_EXTENSION_FILTER_APPCONNECT = 17,
        PM_ENUM_EXTENSION_FILTER_PROTOCOL_ALL = 18,
        PM_ENUM_EXTENSION_FILTER_FTASSOC_FILETYPE_ALL = 19,
        PM_ENUM_EXTENSION_FILTER_FTASSOC_CONTENTTYPE_ALL = 20,
        PM_ENUM_EXTENSION_FILTER_FTASSOC_APPLICATION_ALL = 21,
        PM_ENUM_EXTENSION_FILTER_SHARETARGET_ALL = 22,
        PM_ENUM_EXTENSION_FILTER_FILEOPENPICKER_ALL = 23,
        PM_ENUM_EXTENSION_FILTER_FILESAVEPICKER_ALL = 24,
        PM_ENUM_EXTENSION_FILTER_CACHEDFILEUPDATER_ALL = 25,
        PM_ENUM_EXTENSION_FILTER_MAX = 26,
    };
    enum class PM_ENUM_TASK_FILTER : int32_t
    {
        PM_TASK_FILTER_APP_ALL = 12,
        PM_TASK_FILTER_TASK_TYPE = 13,
        PM_TASK_FILTER_DEHYD_SUPRESSING = 14,
        PM_TASK_FILTER_APP_TASK_TYPE = 15,
        PM_TASK_FILTER_BGEXECUTION = 16,
        PM_TASK_FILTER_MAX = 17,
    };
    enum class PM_ENUM_TILE_FILTER : int32_t
    {
        PM_TILE_FILTER_APPLIST = 8,
        PM_TILE_FILTER_PINNED = 9,
        PM_TILE_FILTER_HUBTYPE = 10,
        PM_TILE_FILTER_APP_ALL = 11,
        PM_TILE_FILTER_MAX = 12,
    };
    enum class PM_LIVETILE_RECURRENCE_TYPE : int32_t
    {
        PM_LIVETILE_RECURRENCE_TYPE_INSTANT = 0,
        PM_LIVETILE_RECURRENCE_TYPE_ONETIME = 1,
        PM_LIVETILE_RECURRENCE_TYPE_INTERVAL = 2,
        PM_LIVETILE_RECURRENCE_TYPE_MAX = 2,
    };
    enum class PM_LOGO_SIZE : int32_t
    {
        PM_LOGO_SIZE_SMALL = 0,
        PM_LOGO_SIZE_MEDIUM = 1,
        PM_LOGO_SIZE_LARGE = 2,
        PM_LOGO_SIZE_INVALID = 3,
    };
    enum class PM_STARTTILE_TYPE : int32_t
    {
        PM_STARTTILE_TYPE_PRIMARY = 1,
        PM_STARTTILE_TYPE_SECONDARY = 2,
        PM_STARTTILE_TYPE_APPLIST = 3,
        PM_STARTTILE_TYPE_APPLISTPRIMARY = 4,
        PM_STARTTILE_TYPE_INVALID = 5,
    };
    enum class PM_TASK_TRANSITION : int32_t
    {
        PM_TASK_TRANSITION_DEFAULT = 0,
        PM_TASK_TRANSITION_NONE = 1,
        PM_TASK_TRANSITION_TURNSTILE = 2,
        PM_TASK_TRANSITION_SLIDE = 3,
        PM_TASK_TRANSITION_SWIVEL = 4,
        PM_TASK_TRANSITION_READERBOARD = 5,
        PM_TASK_TRANSITION_CUSTOM = 6,
        PM_TASK_TRANSITION_INVALID = 7,
    };
    enum class PM_TASK_TYPE : int32_t
    {
        PM_TASK_TYPE_NORMAL = 0,
        PM_TASK_TYPE_DEFAULT = 1,
        PM_TASK_TYPE_SETTINGS = 2,
        PM_TASK_TYPE_BACKGROUNDSERVICEAGENT = 3,
        PM_TASK_TYPE_BACKGROUNDWORKER = 4,
        PM_TASK_TYPE_INVALID = 5,
    };
    enum class PM_TILE_HUBTYPE : int32_t
    {
        PM_TILE_HUBTYPE_MUSIC = 1,
        PM_TILE_HUBTYPE_MOSETTINGS = 268435456,
        PM_TILE_HUBTYPE_GAMES = 536870912,
        PM_TILE_HUBTYPE_APPLIST = 1073741824,
        PM_TILE_HUBTYPE_STARTMENU = -2147483648,
        PM_TILE_HUBTYPE_LOCKSCREEN = 16777216,
        PM_TILE_HUBTYPE_KIDZONE = 33554432,
        PM_TILE_HUBTYPE_CACHED = 67108864,
        PM_TILE_HUBTYPE_INVALID = 67108865,
    };
    enum class PM_TILE_SIZE : int32_t
    {
        PM_TILE_SIZE_SMALL = 0,
        PM_TILE_SIZE_MEDIUM = 1,
        PM_TILE_SIZE_LARGE = 2,
        PM_TILE_SIZE_SQUARE310X310 = 3,
        PM_TILE_SIZE_TALL150X310 = 4,
        PM_TILE_SIZE_INVALID = 5,
    };
    enum class QUERYASMINFO_FLAGS : uint32_t
    {
        QUERYASMINFO_FLAG_VALIDATE = 0x1,
    };
    enum class REINSTALLMODE : int32_t
    {
        REINSTALLMODE_REPAIR = 1,
        REINSTALLMODE_FILEMISSING = 2,
        REINSTALLMODE_FILEOLDERVERSION = 4,
        REINSTALLMODE_FILEEQUALVERSION = 8,
        REINSTALLMODE_FILEEXACT = 16,
        REINSTALLMODE_FILEVERIFY = 32,
        REINSTALLMODE_FILEREPLACE = 64,
        REINSTALLMODE_MACHINEDATA = 128,
        REINSTALLMODE_USERDATA = 256,
        REINSTALLMODE_SHORTCUT = 512,
        REINSTALLMODE_PACKAGE = 1024,
    };
    enum class RESULTTYPES : int32_t
    {
        ieUnknown = 0,
        ieError = 1,
        ieWarning = 2,
        ieInfo = 3,
    };
    enum class SCRIPTFLAGS : int32_t
    {
        SCRIPTFLAGS_CACHEINFO = 1,
        SCRIPTFLAGS_SHORTCUTS = 4,
        SCRIPTFLAGS_MACHINEASSIGN = 8,
        SCRIPTFLAGS_REGDATA_CNFGINFO = 32,
        SCRIPTFLAGS_VALIDATE_TRANSFORMS_LIST = 64,
        SCRIPTFLAGS_REGDATA_CLASSINFO = 128,
        SCRIPTFLAGS_REGDATA_EXTENSIONINFO = 256,
        SCRIPTFLAGS_REGDATA_APPINFO = 384,
        SCRIPTFLAGS_REGDATA = 416,
    };
    enum class STATUSTYPES : int32_t
    {
        ieStatusGetCUB = 0,
        ieStatusICECount = 1,
        ieStatusMerge = 2,
        ieStatusSummaryInfo = 3,
        ieStatusCreateEngine = 4,
        ieStatusStarting = 5,
        ieStatusRunICE = 6,
        ieStatusShutdown = 7,
        ieStatusSuccess = 8,
        ieStatusFail = 9,
        ieStatusCancel = 10,
    };
    enum class TILE_TEMPLATE_TYPE : int32_t
    {
        TILE_TEMPLATE_INVALID = 0,
        TILE_TEMPLATE_FLIP = 5,
        TILE_TEMPLATE_DEEPLINK = 13,
        TILE_TEMPLATE_CYCLE = 14,
        TILE_TEMPLATE_METROCOUNT = 1,
        TILE_TEMPLATE_AGILESTORE = 2,
        TILE_TEMPLATE_GAMES = 3,
        TILE_TEMPLATE_CALENDAR = 4,
        TILE_TEMPLATE_MUSICVIDEO = 7,
        TILE_TEMPLATE_PEOPLE = 10,
        TILE_TEMPLATE_CONTACT = 11,
        TILE_TEMPLATE_GROUP = 12,
        TILE_TEMPLATE_DEFAULT = 15,
        TILE_TEMPLATE_BADGE = 16,
        TILE_TEMPLATE_BLOCK = 17,
        TILE_TEMPLATE_TEXT01 = 18,
        TILE_TEMPLATE_TEXT02 = 19,
        TILE_TEMPLATE_TEXT03 = 20,
        TILE_TEMPLATE_TEXT04 = 21,
        TILE_TEMPLATE_TEXT05 = 22,
        TILE_TEMPLATE_TEXT06 = 23,
        TILE_TEMPLATE_TEXT07 = 24,
        TILE_TEMPLATE_TEXT08 = 25,
        TILE_TEMPLATE_TEXT09 = 26,
        TILE_TEMPLATE_TEXT10 = 27,
        TILE_TEMPLATE_TEXT11 = 28,
        TILE_TEMPLATE_IMAGE = 29,
        TILE_TEMPLATE_IMAGECOLLECTION = 30,
        TILE_TEMPLATE_IMAGEANDTEXT01 = 31,
        TILE_TEMPLATE_IMAGEANDTEXT02 = 32,
        TILE_TEMPLATE_BLOCKANDTEXT01 = 33,
        TILE_TEMPLATE_BLOCKANDTEXT02 = 34,
        TILE_TEMPLATE_PEEKIMAGEANDTEXT01 = 35,
        TILE_TEMPLATE_PEEKIMAGEANDTEXT02 = 36,
        TILE_TEMPLATE_PEEKIMAGEANDTEXT03 = 37,
        TILE_TEMPLATE_PEEKIMAGEANDTEXT04 = 38,
        TILE_TEMPLATE_PEEKIMAGE01 = 39,
        TILE_TEMPLATE_PEEKIMAGE02 = 40,
        TILE_TEMPLATE_PEEKIMAGE03 = 41,
        TILE_TEMPLATE_PEEKIMAGE04 = 42,
        TILE_TEMPLATE_PEEKIMAGE05 = 43,
        TILE_TEMPLATE_PEEKIMAGE06 = 44,
        TILE_TEMPLATE_PEEKIMAGECOLLECTION01 = 45,
        TILE_TEMPLATE_PEEKIMAGECOLLECTION02 = 46,
        TILE_TEMPLATE_PEEKIMAGECOLLECTION03 = 47,
        TILE_TEMPLATE_PEEKIMAGECOLLECTION04 = 48,
        TILE_TEMPLATE_PEEKIMAGECOLLECTION05 = 49,
        TILE_TEMPLATE_PEEKIMAGECOLLECTION06 = 50,
        TILE_TEMPLATE_SMALLIMAGEANDTEXT01 = 51,
        TILE_TEMPLATE_SMALLIMAGEANDTEXT02 = 52,
        TILE_TEMPLATE_SMALLIMAGEANDTEXT03 = 53,
        TILE_TEMPLATE_SMALLIMAGEANDTEXT04 = 54,
        TILE_TEMPLATE_SMALLIMAGEANDTEXT05 = 55,
        TILE_TEMPLATE_METROCOUNTQUEUE = 56,
        TILE_TEMPLATE_SEARCH = 57,
        TILE_TEMPLATE_TILEFLYOUT01 = 58,
        TILE_TEMPLATE_FOLDER = 59,
        TILE_TEMPLATE_ALL = 100,
    };
    enum class USERINFOSTATE : int32_t
    {
        USERINFOSTATE_MOREDATA = -3,
        USERINFOSTATE_INVALIDARG = -2,
        USERINFOSTATE_UNKNOWN = -1,
        USERINFOSTATE_ABSENT = 0,
        USERINFOSTATE_PRESENT = 1,
    };
    enum class msidbAssemblyAttributes : int32_t
    {
        msidbAssemblyAttributesURT = 0,
        msidbAssemblyAttributesWin32 = 1,
    };
    enum class msidbClassAttributes : int32_t
    {
        msidbClassAttributesRelativePath = 1,
    };
    enum class msidbComponentAttributes : int32_t
    {
        msidbComponentAttributesLocalOnly = 0,
        msidbComponentAttributesSourceOnly = 1,
        msidbComponentAttributesOptional = 2,
        msidbComponentAttributesRegistryKeyPath = 4,
        msidbComponentAttributesSharedDllRefCount = 8,
        msidbComponentAttributesPermanent = 16,
        msidbComponentAttributesODBCDataSource = 32,
        msidbComponentAttributesTransitive = 64,
        msidbComponentAttributesNeverOverwrite = 128,
        msidbComponentAttributes64bit = 256,
        msidbComponentAttributesDisableRegistryReflection = 512,
        msidbComponentAttributesUninstallOnSupersedence = 1024,
        msidbComponentAttributesShared = 2048,
    };
    enum class msidbControlAttributes : int32_t
    {
        msidbControlAttributesVisible = 1,
        msidbControlAttributesEnabled = 2,
        msidbControlAttributesSunken = 4,
        msidbControlAttributesIndirect = 8,
        msidbControlAttributesInteger = 16,
        msidbControlAttributesRTLRO = 32,
        msidbControlAttributesRightAligned = 64,
        msidbControlAttributesLeftScroll = 128,
        msidbControlAttributesBiDi = 224,
        msidbControlAttributesTransparent = 65536,
        msidbControlAttributesNoPrefix = 131072,
        msidbControlAttributesNoWrap = 262144,
        msidbControlAttributesFormatSize = 524288,
        msidbControlAttributesUsersLanguage = 1048576,
        msidbControlAttributesMultiline = 65536,
        msidbControlAttributesPasswordInput = 2097152,
        msidbControlAttributesProgress95 = 65536,
        msidbControlAttributesRemovableVolume = 65536,
        msidbControlAttributesFixedVolume = 131072,
        msidbControlAttributesRemoteVolume = 262144,
        msidbControlAttributesCDROMVolume = 524288,
        msidbControlAttributesRAMDiskVolume = 1048576,
        msidbControlAttributesFloppyVolume = 2097152,
        msidbControlShowRollbackCost = 4194304,
        msidbControlAttributesSorted = 65536,
        msidbControlAttributesComboList = 131072,
        msidbControlAttributesImageHandle = 65536,
        msidbControlAttributesPushLike = 131072,
        msidbControlAttributesBitmap = 262144,
        msidbControlAttributesIcon = 524288,
        msidbControlAttributesFixedSize = 1048576,
        msidbControlAttributesIconSize16 = 2097152,
        msidbControlAttributesIconSize32 = 4194304,
        msidbControlAttributesIconSize48 = 6291456,
        msidbControlAttributesElevationShield = 8388608,
        msidbControlAttributesHasBorder = 16777216,
    };
    enum class msidbCustomActionType : int32_t
    {
        msidbCustomActionTypeDll = 1,
        msidbCustomActionTypeExe = 2,
        msidbCustomActionTypeTextData = 3,
        msidbCustomActionTypeJScript = 5,
        msidbCustomActionTypeVBScript = 6,
        msidbCustomActionTypeInstall = 7,
        msidbCustomActionTypeBinaryData = 0,
        msidbCustomActionTypeSourceFile = 16,
        msidbCustomActionTypeDirectory = 32,
        msidbCustomActionTypeProperty = 48,
        msidbCustomActionTypeContinue = 64,
        msidbCustomActionTypeAsync = 128,
        msidbCustomActionTypeFirstSequence = 256,
        msidbCustomActionTypeOncePerProcess = 512,
        msidbCustomActionTypeClientRepeat = 768,
        msidbCustomActionTypeInScript = 1024,
        msidbCustomActionTypeRollback = 256,
        msidbCustomActionTypeCommit = 512,
        msidbCustomActionTypeNoImpersonate = 2048,
        msidbCustomActionTypeTSAware = 16384,
        msidbCustomActionType64BitScript = 4096,
        msidbCustomActionTypeHideTarget = 8192,
        msidbCustomActionTypePatchUninstall = 32768,
    };
    enum class msidbDialogAttributes : int32_t
    {
        msidbDialogAttributesVisible = 1,
        msidbDialogAttributesModal = 2,
        msidbDialogAttributesMinimize = 4,
        msidbDialogAttributesSysModal = 8,
        msidbDialogAttributesKeepModeless = 16,
        msidbDialogAttributesTrackDiskSpace = 32,
        msidbDialogAttributesUseCustomPalette = 64,
        msidbDialogAttributesRTLRO = 128,
        msidbDialogAttributesRightAligned = 256,
        msidbDialogAttributesLeftScroll = 512,
        msidbDialogAttributesBiDi = 896,
        msidbDialogAttributesError = 65536,
    };
    enum class msidbEmbeddedUIAttributes : int32_t
    {
        msidbEmbeddedUI = 1,
        msidbEmbeddedHandlesBasic = 2,
    };
    enum class msidbFeatureAttributes : int32_t
    {
        msidbFeatureAttributesFavorLocal = 0,
        msidbFeatureAttributesFavorSource = 1,
        msidbFeatureAttributesFollowParent = 2,
        msidbFeatureAttributesFavorAdvertise = 4,
        msidbFeatureAttributesDisallowAdvertise = 8,
        msidbFeatureAttributesUIDisallowAbsent = 16,
        msidbFeatureAttributesNoUnsupportedAdvertise = 32,
    };
    enum class msidbFileAttributes : int32_t
    {
        msidbFileAttributesReadOnly = 1,
        msidbFileAttributesHidden = 2,
        msidbFileAttributesSystem = 4,
        msidbFileAttributesReserved0 = 8,
        msidbFileAttributesIsolatedComp = 16,
        msidbFileAttributesReserved1 = 64,
        msidbFileAttributesReserved2 = 128,
        msidbFileAttributesReserved3 = 256,
        msidbFileAttributesVital = 512,
        msidbFileAttributesChecksum = 1024,
        msidbFileAttributesPatchAdded = 4096,
        msidbFileAttributesNoncompressed = 8192,
        msidbFileAttributesCompressed = 16384,
        msidbFileAttributesReserved4 = 32768,
    };
    enum class msidbIniFileAction : int32_t
    {
        msidbIniFileActionAddLine = 0,
        msidbIniFileActionCreateLine = 1,
        msidbIniFileActionRemoveLine = 2,
        msidbIniFileActionAddTag = 3,
        msidbIniFileActionRemoveTag = 4,
    };
    enum class msidbLocatorType : int32_t
    {
        msidbLocatorTypeDirectory = 0,
        msidbLocatorTypeFileName = 1,
        msidbLocatorTypeRawValue = 2,
        msidbLocatorType64bit = 16,
    };
    enum class msidbMoveFileOptions : int32_t
    {
        msidbMoveFileOptionsMove = 1,
    };
    enum class msidbODBCDataSourceRegistration : int32_t
    {
        msidbODBCDataSourceRegistrationPerMachine = 0,
        msidbODBCDataSourceRegistrationPerUser = 1,
    };
    enum class msidbPatchAttributes : int32_t
    {
        msidbPatchAttributesNonVital = 1,
    };
    enum class msidbRegistryRoot : int32_t
    {
        msidbRegistryRootClassesRoot = 0,
        msidbRegistryRootCurrentUser = 1,
        msidbRegistryRootLocalMachine = 2,
        msidbRegistryRootUsers = 3,
    };
    enum class msidbRemoveFileInstallMode : int32_t
    {
        msidbRemoveFileInstallModeOnInstall = 1,
        msidbRemoveFileInstallModeOnRemove = 2,
        msidbRemoveFileInstallModeOnBoth = 3,
    };
    enum class msidbServiceConfigEvent : int32_t
    {
        msidbServiceConfigEventInstall = 1,
        msidbServiceConfigEventUninstall = 2,
        msidbServiceConfigEventReinstall = 4,
    };
    enum class msidbServiceControlEvent : int32_t
    {
        msidbServiceControlEventStart = 1,
        msidbServiceControlEventStop = 2,
        msidbServiceControlEventDelete = 8,
        msidbServiceControlEventUninstallStart = 16,
        msidbServiceControlEventUninstallStop = 32,
        msidbServiceControlEventUninstallDelete = 128,
    };
    enum class msidbServiceInstallErrorControl : int32_t
    {
        msidbServiceInstallErrorControlVital = 32768,
    };
    enum class msidbSumInfoSourceType : int32_t
    {
        msidbSumInfoSourceTypeSFN = 1,
        msidbSumInfoSourceTypeCompressed = 2,
        msidbSumInfoSourceTypeAdminImage = 4,
        msidbSumInfoSourceTypeLUAPackage = 8,
    };
    enum class msidbTextStyleStyleBits : int32_t
    {
        msidbTextStyleStyleBitsBold = 1,
        msidbTextStyleStyleBitsItalic = 2,
        msidbTextStyleStyleBitsUnderline = 4,
        msidbTextStyleStyleBitsStrike = 8,
    };
    enum class msidbUpgradeAttributes : int32_t
    {
        msidbUpgradeAttributesMigrateFeatures = 1,
        msidbUpgradeAttributesOnlyDetect = 2,
        msidbUpgradeAttributesIgnoreRemoveFailure = 4,
        msidbUpgradeAttributesVersionMinInclusive = 256,
        msidbUpgradeAttributesVersionMaxInclusive = 512,
        msidbUpgradeAttributesLanguagesExclusive = 1024,
    };
    enum class msifiFastInstallBits : int32_t
    {
        msifiFastInstallNoSR = 1,
        msifiFastInstallQuickCosting = 2,
        msifiFastInstallLessPrgMsg = 4,
    };
    enum class msirbRebootReason : int32_t
    {
        msirbRebootUndeterminedReason = 0,
        msirbRebootInUseFilesReason = 1,
        msirbRebootScheduleRebootReason = 2,
        msirbRebootForceRebootReason = 3,
        msirbRebootCustomActionReason = 4,
    };
    enum class msirbRebootType : int32_t
    {
        msirbRebootImmediate = 1,
        msirbRebootDeferred = 2,
    };
    enum class msmErrorType : int32_t
    {
        msmErrorLanguageUnsupported = 1,
        msmErrorLanguageFailed = 2,
        msmErrorExclusion = 3,
        msmErrorTableMerge = 4,
        msmErrorResequenceMerge = 5,
        msmErrorFileCreate = 6,
        msmErrorDirCreate = 7,
        msmErrorFeatureRequired = 8,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct ACTCTXA;
    struct ACTCTXW;
    struct ACTCTX_SECTION_KEYED_DATA;
    struct ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;
    struct ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION;
    struct ACTIVATION_CONTEXT_DETAILED_INFORMATION;
    struct ACTIVATION_CONTEXT_QUERY_INDEX;
    struct ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION;
    struct ASSEMBLY_FILE_DETAILED_INFORMATION;
    struct ASSEMBLY_INFO;
    struct COMPATIBILITY_CONTEXT_ELEMENT;
    struct DELTA_HASH;
    struct DELTA_HEADER_INFO;
    struct DELTA_INPUT;
    struct DELTA_OUTPUT;
    struct FUSION_INSTALL_REFERENCE;
    struct MSIFILEHASHINFO;
    struct MSIHANDLE;
    struct MSIPATCHSEQUENCEINFOA;
    struct MSIPATCHSEQUENCEINFOW;
    struct MsmMerge;
    struct PATCH_IGNORE_RANGE;
    struct PATCH_INTERLEAVE_MAP;
    struct PATCH_OLD_FILE_INFO;
    struct PATCH_OLD_FILE_INFO_A;
    struct PATCH_OLD_FILE_INFO_H;
    struct PATCH_OLD_FILE_INFO_W;
    struct PATCH_OPTION_DATA;
    struct PATCH_RETAIN_RANGE;
    struct PMSIHANDLE;
    struct PMSvc;
    struct PM_BSATASKID;
    struct PM_BWTASKID;
    struct PM_ENUM_FILTER;
    struct PM_EXTENSIONCONSUMER;
    struct PM_INSTALLINFO;
    struct PM_INVOCATIONINFO;
    struct PM_STARTAPPBLOB;
    struct PM_STARTTILEBLOB;
    struct PM_UPDATEINFO;
    struct PM_UPDATEINFO_LEGACY;
    struct PROTECTED_FILE_DATA;
    struct _tagAPPTASKTYPE;
    struct IAssemblyCache;
    struct IAssemblyCacheItem;
    struct IAssemblyName;
    struct IEnumMsmDependency;
    struct IEnumMsmError;
    struct IEnumMsmString;
    struct IMsmDependencies;
    struct IMsmDependency;
    struct IMsmError;
    struct IMsmErrors;
    struct IMsmGetFiles;
    struct IMsmMerge;
    struct IMsmStrings;
    struct IPMApplicationInfo;
    struct IPMApplicationInfoEnumerator;
    struct IPMBackgroundServiceAgentInfo;
    struct IPMBackgroundServiceAgentInfoEnumerator;
    struct IPMBackgroundWorkerInfo;
    struct IPMBackgroundWorkerInfoEnumerator;
    struct IPMDeploymentManager;
    struct IPMEnumerationManager;
    struct IPMExtensionCachedFileUpdaterInfo;
    struct IPMExtensionContractInfo;
    struct IPMExtensionFileExtensionInfo;
    struct IPMExtensionFileOpenPickerInfo;
    struct IPMExtensionFileSavePickerInfo;
    struct IPMExtensionInfo;
    struct IPMExtensionInfoEnumerator;
    struct IPMExtensionProtocolInfo;
    struct IPMExtensionShareTargetInfo;
    struct IPMLiveTileJobInfo;
    struct IPMLiveTileJobInfoEnumerator;
    struct IPMTaskInfo;
    struct IPMTaskInfoEnumerator;
    struct IPMTileInfo;
    struct IPMTileInfoEnumerator;
    struct IPMTilePropertyEnumerator;
    struct IPMTilePropertyInfo;
    struct IValidate;
#pragma endregion forward_declarations

#pragma region delegates
    using LPDISPLAYVAL = Windows::Win32::Foundation::BOOL __stdcall(void*, Windows::Win32::System::ApplicationInstallationAndServicing::RESULTTYPES, Windows::Win32::Foundation::PWSTR, Windows::Win32::Foundation::PWSTR, Windows::Win32::Foundation::PWSTR);
    using LPEVALCOMCALLBACK = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::System::ApplicationInstallationAndServicing::STATUSTYPES, Windows::Win32::Foundation::PWSTR, void*);
    using INSTALLUI_HANDLERA = int32_t __stdcall(void*, uint32_t, Windows::Win32::Foundation::PSTR);
    using INSTALLUI_HANDLERW = int32_t __stdcall(void*, uint32_t, Windows::Win32::Foundation::PWSTR);
    using PINSTALLUI_HANDLER_RECORD = int32_t __stdcall(void*, uint32_t, Windows::Win32::System::ApplicationInstallationAndServicing::MSIHANDLE);
    using PPATCH_PROGRESS_CALLBACK = Windows::Win32::Foundation::BOOL __stdcall(void*, uint32_t, uint32_t);
    using PPATCH_SYMLOAD_CALLBACK = Windows::Win32::Foundation::BOOL __stdcall(uint32_t, Windows::Win32::Foundation::PSTR, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, void*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
