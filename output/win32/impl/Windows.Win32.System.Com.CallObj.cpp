// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_Com_CallObj_2_H
#define WIN32_Windows_Win32_System_Com_CallObj_2_H
#include "win32/Windows.Win32.System.Com.CallObj.h"
#include "win32/impl/Windows.Win32.System.Com.CallObj.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::System::Com::CallObj
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoGetInterceptor(::win32::guid* iidIntercepted, win32::Windows::Win32::System::Com::IUnknown* punkOuter, ::win32::guid* iid, void** ppv) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(iidIntercepted);
        ORBIT_TRACK_PARAM(punkOuter);
        ORBIT_TRACK_PARAM(iid);
        ORBIT_TRACK_PARAM(ppv);

        auto win32_impl_result = g_api_table.CoGetInterceptor(iidIntercepted, punkOuter, iid, ppv);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_CoGetInterceptorFromTypeInfo(::win32::guid* iidIntercepted, win32::Windows::Win32::System::Com::IUnknown* punkOuter, win32::Windows::Win32::System::Ole::ITypeInfo* typeInfo, ::win32::guid* iid, void** ppv) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(iidIntercepted);
        ORBIT_TRACK_PARAM(punkOuter);
        ORBIT_TRACK_PARAM(typeInfo);
        ORBIT_TRACK_PARAM(iid);
        ORBIT_TRACK_PARAM(ppv);

        auto win32_impl_result = g_api_table.CoGetInterceptorFromTypeInfo(iidIntercepted, punkOuter, typeInfo, iid, ppv);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
