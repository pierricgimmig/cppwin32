// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_HostComputeSystem_2_H
#define WIN32_Windows_Win32_System_HostComputeSystem_2_H
#include "win32/Windows.Win32.System.HostComputeSystem.h"
#include "win32/impl/Windows.Win32.System.HostComputeSystem.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::System::HostComputeSystem
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsEnumerateComputeSystems(win32::Windows::Win32::Foundation::PWSTR query, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(query);
        ORBIT_TRACK_PARAM(operation);

        auto win32_impl_result = g_api_table.HcsEnumerateComputeSystems(query, operation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsEnumerateComputeSystemsInNamespace(win32::Windows::Win32::Foundation::PWSTR idNamespace, win32::Windows::Win32::Foundation::PWSTR query, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(idNamespace);
        ORBIT_TRACK_PARAM(query);
        ORBIT_TRACK_PARAM(operation);

        auto win32_impl_result = g_api_table.HcsEnumerateComputeSystemsInNamespace(idNamespace, query, operation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION __stdcall ORBIT_IMPL_HcsCreateOperation(void* context, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION_COMPLETION* callback) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(callback);

        auto win32_impl_result = g_api_table.HcsCreateOperation(context, callback);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_HcsCloseOperation(win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(operation);

        g_api_table.HcsCloseOperation(operation);
        
    }

    void* __stdcall ORBIT_IMPL_HcsGetOperationContext(win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(operation);

        auto win32_impl_result = g_api_table.HcsGetOperationContext(operation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsSetOperationContext(win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, void* context) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(context);

        auto win32_impl_result = g_api_table.HcsSetOperationContext(operation, context);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM __stdcall ORBIT_IMPL_HcsGetComputeSystemFromOperation(win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(operation);

        auto win32_impl_result = g_api_table.HcsGetComputeSystemFromOperation(operation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::HostComputeSystem::HCS_PROCESS __stdcall ORBIT_IMPL_HcsGetProcessFromOperation(win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(operation);

        auto win32_impl_result = g_api_table.HcsGetProcessFromOperation(operation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION_TYPE __stdcall ORBIT_IMPL_HcsGetOperationType(win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(operation);

        auto win32_impl_result = g_api_table.HcsGetOperationType(operation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint64_t __stdcall ORBIT_IMPL_HcsGetOperationId(win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(operation);

        auto win32_impl_result = g_api_table.HcsGetOperationId(operation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsGetOperationResult(win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, win32::Windows::Win32::Foundation::PWSTR* resultDocument) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(resultDocument);

        auto win32_impl_result = g_api_table.HcsGetOperationResult(operation, resultDocument);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsGetOperationResultAndProcessInfo(win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, win32::Windows::Win32::System::HostComputeSystem::HCS_PROCESS_INFORMATION* processInformation, win32::Windows::Win32::Foundation::PWSTR* resultDocument) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(processInformation);
        ORBIT_TRACK_PARAM(resultDocument);

        auto win32_impl_result = g_api_table.HcsGetOperationResultAndProcessInfo(operation, processInformation, resultDocument);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsGetProcessorCompatibilityFromSavedState(win32::Windows::Win32::Foundation::PWSTR RuntimeFileName, win32::Windows::Win32::Foundation::PWSTR* ProcessorFeaturesString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(RuntimeFileName);
        ORBIT_TRACK_PARAM(ProcessorFeaturesString);

        auto win32_impl_result = g_api_table.HcsGetProcessorCompatibilityFromSavedState(RuntimeFileName, ProcessorFeaturesString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsWaitForOperationResult(win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, uint32_t timeoutMs, win32::Windows::Win32::Foundation::PWSTR* resultDocument) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(timeoutMs);
        ORBIT_TRACK_PARAM(resultDocument);

        auto win32_impl_result = g_api_table.HcsWaitForOperationResult(operation, timeoutMs, resultDocument);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsWaitForOperationResultAndProcessInfo(win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, uint32_t timeoutMs, win32::Windows::Win32::System::HostComputeSystem::HCS_PROCESS_INFORMATION* processInformation, win32::Windows::Win32::Foundation::PWSTR* resultDocument) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(timeoutMs);
        ORBIT_TRACK_PARAM(processInformation);
        ORBIT_TRACK_PARAM(resultDocument);

        auto win32_impl_result = g_api_table.HcsWaitForOperationResultAndProcessInfo(operation, timeoutMs, processInformation, resultDocument);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsSetOperationCallback(win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, void* context, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION_COMPLETION* callback) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(callback);

        auto win32_impl_result = g_api_table.HcsSetOperationCallback(operation, context, callback);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsCancelOperation(win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(operation);

        auto win32_impl_result = g_api_table.HcsCancelOperation(operation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsCreateComputeSystem(win32::Windows::Win32::Foundation::PWSTR id, win32::Windows::Win32::Foundation::PWSTR configuration, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* securityDescriptor, win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM* computeSystem) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(configuration);
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(securityDescriptor);
        ORBIT_TRACK_PARAM(computeSystem);

        auto win32_impl_result = g_api_table.HcsCreateComputeSystem(id, configuration, operation, securityDescriptor, computeSystem);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsCreateComputeSystemInNamespace(win32::Windows::Win32::Foundation::PWSTR idNamespace, win32::Windows::Win32::Foundation::PWSTR id, win32::Windows::Win32::Foundation::PWSTR configuration, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, win32::Windows::Win32::System::HostComputeSystem::HCS_CREATE_OPTIONS* options, win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM* computeSystem) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(idNamespace);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(configuration);
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(options);
        ORBIT_TRACK_PARAM(computeSystem);

        auto win32_impl_result = g_api_table.HcsCreateComputeSystemInNamespace(idNamespace, id, configuration, operation, options, computeSystem);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsOpenComputeSystem(win32::Windows::Win32::Foundation::PWSTR id, uint32_t requestedAccess, win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM* computeSystem) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(requestedAccess);
        ORBIT_TRACK_PARAM(computeSystem);

        auto win32_impl_result = g_api_table.HcsOpenComputeSystem(id, requestedAccess, computeSystem);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsOpenComputeSystemInNamespace(win32::Windows::Win32::Foundation::PWSTR idNamespace, win32::Windows::Win32::Foundation::PWSTR id, uint32_t requestedAccess, win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM* computeSystem) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(idNamespace);
        ORBIT_TRACK_PARAM(id);
        ORBIT_TRACK_PARAM(requestedAccess);
        ORBIT_TRACK_PARAM(computeSystem);

        auto win32_impl_result = g_api_table.HcsOpenComputeSystemInNamespace(idNamespace, id, requestedAccess, computeSystem);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_HcsCloseComputeSystem(win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM computeSystem) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(computeSystem);

        g_api_table.HcsCloseComputeSystem(computeSystem);
        
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsStartComputeSystem(win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM computeSystem, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, win32::Windows::Win32::Foundation::PWSTR options) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(computeSystem);
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(options);

        auto win32_impl_result = g_api_table.HcsStartComputeSystem(computeSystem, operation, options);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsShutDownComputeSystem(win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM computeSystem, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, win32::Windows::Win32::Foundation::PWSTR options) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(computeSystem);
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(options);

        auto win32_impl_result = g_api_table.HcsShutDownComputeSystem(computeSystem, operation, options);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsTerminateComputeSystem(win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM computeSystem, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, win32::Windows::Win32::Foundation::PWSTR options) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(computeSystem);
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(options);

        auto win32_impl_result = g_api_table.HcsTerminateComputeSystem(computeSystem, operation, options);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsCrashComputeSystem(win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM computeSystem, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, win32::Windows::Win32::Foundation::PWSTR options) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(computeSystem);
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(options);

        auto win32_impl_result = g_api_table.HcsCrashComputeSystem(computeSystem, operation, options);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsPauseComputeSystem(win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM computeSystem, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, win32::Windows::Win32::Foundation::PWSTR options) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(computeSystem);
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(options);

        auto win32_impl_result = g_api_table.HcsPauseComputeSystem(computeSystem, operation, options);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsResumeComputeSystem(win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM computeSystem, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, win32::Windows::Win32::Foundation::PWSTR options) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(computeSystem);
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(options);

        auto win32_impl_result = g_api_table.HcsResumeComputeSystem(computeSystem, operation, options);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsSaveComputeSystem(win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM computeSystem, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, win32::Windows::Win32::Foundation::PWSTR options) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(computeSystem);
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(options);

        auto win32_impl_result = g_api_table.HcsSaveComputeSystem(computeSystem, operation, options);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsGetComputeSystemProperties(win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM computeSystem, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, win32::Windows::Win32::Foundation::PWSTR propertyQuery) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(computeSystem);
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(propertyQuery);

        auto win32_impl_result = g_api_table.HcsGetComputeSystemProperties(computeSystem, operation, propertyQuery);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsModifyComputeSystem(win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM computeSystem, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, win32::Windows::Win32::Foundation::PWSTR configuration, win32::Windows::Win32::Foundation::HANDLE identity) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(computeSystem);
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(configuration);
        ORBIT_TRACK_PARAM(identity);

        auto win32_impl_result = g_api_table.HcsModifyComputeSystem(computeSystem, operation, configuration, identity);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsWaitForComputeSystemExit(win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM computeSystem, uint32_t timeoutMs, win32::Windows::Win32::Foundation::PWSTR* result) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(computeSystem);
        ORBIT_TRACK_PARAM(timeoutMs);
        ORBIT_TRACK_PARAM(result);

        auto win32_impl_result = g_api_table.HcsWaitForComputeSystemExit(computeSystem, timeoutMs, result);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsSetComputeSystemCallback(win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM computeSystem, win32::Windows::Win32::System::HostComputeSystem::HCS_EVENT_OPTIONS callbackOptions, void* context, win32::Windows::Win32::System::HostComputeSystem::HCS_EVENT_CALLBACK* callback) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(computeSystem);
        ORBIT_TRACK_PARAM(callbackOptions);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(callback);

        auto win32_impl_result = g_api_table.HcsSetComputeSystemCallback(computeSystem, callbackOptions, context, callback);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsCreateProcess(win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM computeSystem, win32::Windows::Win32::Foundation::PWSTR processParameters, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* securityDescriptor, win32::Windows::Win32::System::HostComputeSystem::HCS_PROCESS* process) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(computeSystem);
        ORBIT_TRACK_PARAM(processParameters);
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(securityDescriptor);
        ORBIT_TRACK_PARAM(process);

        auto win32_impl_result = g_api_table.HcsCreateProcess(computeSystem, processParameters, operation, securityDescriptor, process);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsOpenProcess(win32::Windows::Win32::System::HostComputeSystem::HCS_SYSTEM computeSystem, uint32_t processId, uint32_t requestedAccess, win32::Windows::Win32::System::HostComputeSystem::HCS_PROCESS* process) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(computeSystem);
        ORBIT_TRACK_PARAM(processId);
        ORBIT_TRACK_PARAM(requestedAccess);
        ORBIT_TRACK_PARAM(process);

        auto win32_impl_result = g_api_table.HcsOpenProcess(computeSystem, processId, requestedAccess, process);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_HcsCloseProcess(win32::Windows::Win32::System::HostComputeSystem::HCS_PROCESS process) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(process);

        g_api_table.HcsCloseProcess(process);
        
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsTerminateProcess(win32::Windows::Win32::System::HostComputeSystem::HCS_PROCESS process, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, win32::Windows::Win32::Foundation::PWSTR options) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(process);
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(options);

        auto win32_impl_result = g_api_table.HcsTerminateProcess(process, operation, options);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsSignalProcess(win32::Windows::Win32::System::HostComputeSystem::HCS_PROCESS process, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, win32::Windows::Win32::Foundation::PWSTR options) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(process);
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(options);

        auto win32_impl_result = g_api_table.HcsSignalProcess(process, operation, options);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsGetProcessInfo(win32::Windows::Win32::System::HostComputeSystem::HCS_PROCESS process, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(process);
        ORBIT_TRACK_PARAM(operation);

        auto win32_impl_result = g_api_table.HcsGetProcessInfo(process, operation);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsGetProcessProperties(win32::Windows::Win32::System::HostComputeSystem::HCS_PROCESS process, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, win32::Windows::Win32::Foundation::PWSTR propertyQuery) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(process);
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(propertyQuery);

        auto win32_impl_result = g_api_table.HcsGetProcessProperties(process, operation, propertyQuery);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsModifyProcess(win32::Windows::Win32::System::HostComputeSystem::HCS_PROCESS process, win32::Windows::Win32::System::HostComputeSystem::HCS_OPERATION operation, win32::Windows::Win32::Foundation::PWSTR settings) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(process);
        ORBIT_TRACK_PARAM(operation);
        ORBIT_TRACK_PARAM(settings);

        auto win32_impl_result = g_api_table.HcsModifyProcess(process, operation, settings);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsSetProcessCallback(win32::Windows::Win32::System::HostComputeSystem::HCS_PROCESS process, win32::Windows::Win32::System::HostComputeSystem::HCS_EVENT_OPTIONS callbackOptions, void* context, win32::Windows::Win32::System::HostComputeSystem::HCS_EVENT_CALLBACK* callback) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(process);
        ORBIT_TRACK_PARAM(callbackOptions);
        ORBIT_TRACK_PARAM(context);
        ORBIT_TRACK_PARAM(callback);

        auto win32_impl_result = g_api_table.HcsSetProcessCallback(process, callbackOptions, context, callback);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsWaitForProcessExit(win32::Windows::Win32::System::HostComputeSystem::HCS_PROCESS computeSystem, uint32_t timeoutMs, win32::Windows::Win32::Foundation::PWSTR* result) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(computeSystem);
        ORBIT_TRACK_PARAM(timeoutMs);
        ORBIT_TRACK_PARAM(result);

        auto win32_impl_result = g_api_table.HcsWaitForProcessExit(computeSystem, timeoutMs, result);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsGetServiceProperties(win32::Windows::Win32::Foundation::PWSTR propertyQuery, win32::Windows::Win32::Foundation::PWSTR* result) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(propertyQuery);
        ORBIT_TRACK_PARAM(result);

        auto win32_impl_result = g_api_table.HcsGetServiceProperties(propertyQuery, result);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsModifyServiceSettings(win32::Windows::Win32::Foundation::PWSTR settings, win32::Windows::Win32::Foundation::PWSTR* result) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(settings);
        ORBIT_TRACK_PARAM(result);

        auto win32_impl_result = g_api_table.HcsModifyServiceSettings(settings, result);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsSubmitWerReport(win32::Windows::Win32::Foundation::PWSTR settings) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(settings);

        auto win32_impl_result = g_api_table.HcsSubmitWerReport(settings);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsCreateEmptyGuestStateFile(win32::Windows::Win32::Foundation::PWSTR guestStateFilePath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(guestStateFilePath);

        auto win32_impl_result = g_api_table.HcsCreateEmptyGuestStateFile(guestStateFilePath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsCreateEmptyRuntimeStateFile(win32::Windows::Win32::Foundation::PWSTR runtimeStateFilePath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(runtimeStateFilePath);

        auto win32_impl_result = g_api_table.HcsCreateEmptyRuntimeStateFile(runtimeStateFilePath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsGrantVmAccess(win32::Windows::Win32::Foundation::PWSTR vmId, win32::Windows::Win32::Foundation::PWSTR filePath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(vmId);
        ORBIT_TRACK_PARAM(filePath);

        auto win32_impl_result = g_api_table.HcsGrantVmAccess(vmId, filePath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsRevokeVmAccess(win32::Windows::Win32::Foundation::PWSTR vmId, win32::Windows::Win32::Foundation::PWSTR filePath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(vmId);
        ORBIT_TRACK_PARAM(filePath);

        auto win32_impl_result = g_api_table.HcsRevokeVmAccess(vmId, filePath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsGrantVmGroupAccess(win32::Windows::Win32::Foundation::PWSTR filePath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(filePath);

        auto win32_impl_result = g_api_table.HcsGrantVmGroupAccess(filePath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsRevokeVmGroupAccess(win32::Windows::Win32::Foundation::PWSTR filePath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(filePath);

        auto win32_impl_result = g_api_table.HcsRevokeVmGroupAccess(filePath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsImportLayer(win32::Windows::Win32::Foundation::PWSTR layerPath, win32::Windows::Win32::Foundation::PWSTR sourceFolderPath, win32::Windows::Win32::Foundation::PWSTR layerData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(layerPath);
        ORBIT_TRACK_PARAM(sourceFolderPath);
        ORBIT_TRACK_PARAM(layerData);

        auto win32_impl_result = g_api_table.HcsImportLayer(layerPath, sourceFolderPath, layerData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsExportLayer(win32::Windows::Win32::Foundation::PWSTR layerPath, win32::Windows::Win32::Foundation::PWSTR exportFolderPath, win32::Windows::Win32::Foundation::PWSTR layerData, win32::Windows::Win32::Foundation::PWSTR options) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(layerPath);
        ORBIT_TRACK_PARAM(exportFolderPath);
        ORBIT_TRACK_PARAM(layerData);
        ORBIT_TRACK_PARAM(options);

        auto win32_impl_result = g_api_table.HcsExportLayer(layerPath, exportFolderPath, layerData, options);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsExportLegacyWritableLayer(win32::Windows::Win32::Foundation::PWSTR writableLayerMountPath, win32::Windows::Win32::Foundation::PWSTR writableLayerFolderPath, win32::Windows::Win32::Foundation::PWSTR exportFolderPath, win32::Windows::Win32::Foundation::PWSTR layerData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(writableLayerMountPath);
        ORBIT_TRACK_PARAM(writableLayerFolderPath);
        ORBIT_TRACK_PARAM(exportFolderPath);
        ORBIT_TRACK_PARAM(layerData);

        auto win32_impl_result = g_api_table.HcsExportLegacyWritableLayer(writableLayerMountPath, writableLayerFolderPath, exportFolderPath, layerData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsDestroyLayer(win32::Windows::Win32::Foundation::PWSTR layerPath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(layerPath);

        auto win32_impl_result = g_api_table.HcsDestroyLayer(layerPath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsSetupBaseOSLayer(win32::Windows::Win32::Foundation::PWSTR layerPath, win32::Windows::Win32::Foundation::HANDLE vhdHandle, win32::Windows::Win32::Foundation::PWSTR options) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(layerPath);
        ORBIT_TRACK_PARAM(vhdHandle);
        ORBIT_TRACK_PARAM(options);

        auto win32_impl_result = g_api_table.HcsSetupBaseOSLayer(layerPath, vhdHandle, options);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsInitializeWritableLayer(win32::Windows::Win32::Foundation::PWSTR writableLayerPath, win32::Windows::Win32::Foundation::PWSTR layerData, win32::Windows::Win32::Foundation::PWSTR options) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(writableLayerPath);
        ORBIT_TRACK_PARAM(layerData);
        ORBIT_TRACK_PARAM(options);

        auto win32_impl_result = g_api_table.HcsInitializeWritableLayer(writableLayerPath, layerData, options);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsInitializeLegacyWritableLayer(win32::Windows::Win32::Foundation::PWSTR writableLayerMountPath, win32::Windows::Win32::Foundation::PWSTR writableLayerFolderPath, win32::Windows::Win32::Foundation::PWSTR layerData, win32::Windows::Win32::Foundation::PWSTR options) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(writableLayerMountPath);
        ORBIT_TRACK_PARAM(writableLayerFolderPath);
        ORBIT_TRACK_PARAM(layerData);
        ORBIT_TRACK_PARAM(options);

        auto win32_impl_result = g_api_table.HcsInitializeLegacyWritableLayer(writableLayerMountPath, writableLayerFolderPath, layerData, options);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsAttachLayerStorageFilter(win32::Windows::Win32::Foundation::PWSTR layerPath, win32::Windows::Win32::Foundation::PWSTR layerData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(layerPath);
        ORBIT_TRACK_PARAM(layerData);

        auto win32_impl_result = g_api_table.HcsAttachLayerStorageFilter(layerPath, layerData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsDetachLayerStorageFilter(win32::Windows::Win32::Foundation::PWSTR layerPath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(layerPath);

        auto win32_impl_result = g_api_table.HcsDetachLayerStorageFilter(layerPath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsFormatWritableLayerVhd(win32::Windows::Win32::Foundation::HANDLE vhdHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(vhdHandle);

        auto win32_impl_result = g_api_table.HcsFormatWritableLayerVhd(vhdHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsGetLayerVhdMountPath(win32::Windows::Win32::Foundation::HANDLE vhdHandle, win32::Windows::Win32::Foundation::PWSTR* mountPath) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(vhdHandle);
        ORBIT_TRACK_PARAM(mountPath);

        auto win32_impl_result = g_api_table.HcsGetLayerVhdMountPath(vhdHandle, mountPath);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_HcsSetupBaseOSVolume(win32::Windows::Win32::Foundation::PWSTR layerPath, win32::Windows::Win32::Foundation::PWSTR volumePath, win32::Windows::Win32::Foundation::PWSTR options) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(layerPath);
        ORBIT_TRACK_PARAM(volumePath);
        ORBIT_TRACK_PARAM(options);

        auto win32_impl_result = g_api_table.HcsSetupBaseOSVolume(layerPath, volumePath, options);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
