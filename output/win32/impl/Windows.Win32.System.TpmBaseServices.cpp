// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_TpmBaseServices_2_H
#define WIN32_Windows_Win32_System_TpmBaseServices_2_H
#include "win32/Windows.Win32.System.TpmBaseServices.h"
#include "win32/impl/Windows.Win32.System.TpmBaseServices.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::System::TpmBaseServices
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    uint32_t __stdcall ORBIT_IMPL_Tbsi_Context_Create(win32::Windows::Win32::System::TpmBaseServices::TBS_CONTEXT_PARAMS* pContextParams, void** phContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pContextParams);
        ORBIT_TRACK_PARAM(phContext);

        auto win32_impl_result = g_api_table.Tbsi_Context_Create(pContextParams, phContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_Tbsip_Context_Close(void* hContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);

        auto win32_impl_result = g_api_table.Tbsip_Context_Close(hContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_Tbsip_Submit_Command(void* hContext, win32::Windows::Win32::System::TpmBaseServices::TBS_COMMAND_LOCALITY Locality, win32::Windows::Win32::System::TpmBaseServices::TBS_COMMAND_PRIORITY Priority, uint8_t* pabCommand, uint32_t cbCommand, uint8_t* pabResult, uint32_t* pcbResult) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(Locality);
        ORBIT_TRACK_PARAM(Priority);
        ORBIT_TRACK_PARAM(pabCommand);
        ORBIT_TRACK_PARAM(cbCommand);
        ORBIT_TRACK_PARAM(pabResult);
        ORBIT_TRACK_PARAM(pcbResult);

        auto win32_impl_result = g_api_table.Tbsip_Submit_Command(hContext, Locality, Priority, pabCommand, cbCommand, pabResult, pcbResult);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_Tbsip_Cancel_Commands(void* hContext) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);

        auto win32_impl_result = g_api_table.Tbsip_Cancel_Commands(hContext);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_Tbsi_Physical_Presence_Command(void* hContext, uint8_t* pabInput, uint32_t cbInput, uint8_t* pabOutput, uint32_t* pcbOutput) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(pabInput);
        ORBIT_TRACK_PARAM(cbInput);
        ORBIT_TRACK_PARAM(pabOutput);
        ORBIT_TRACK_PARAM(pcbOutput);

        auto win32_impl_result = g_api_table.Tbsi_Physical_Presence_Command(hContext, pabInput, cbInput, pabOutput, pcbOutput);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_Tbsi_Get_TCG_Log(void* hContext, uint8_t* pOutputBuf, uint32_t* pOutputBufLen) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(pOutputBuf);
        ORBIT_TRACK_PARAM(pOutputBufLen);

        auto win32_impl_result = g_api_table.Tbsi_Get_TCG_Log(hContext, pOutputBuf, pOutputBufLen);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_Tbsi_GetDeviceInfo(uint32_t Size, void* Info) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Size);
        ORBIT_TRACK_PARAM(Info);

        auto win32_impl_result = g_api_table.Tbsi_GetDeviceInfo(Size, Info);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_Tbsi_Get_OwnerAuth(void* hContext, uint32_t ownerauthType, uint8_t* pOutputBuf, uint32_t* pOutputBufLen) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hContext);
        ORBIT_TRACK_PARAM(ownerauthType);
        ORBIT_TRACK_PARAM(pOutputBuf);
        ORBIT_TRACK_PARAM(pOutputBufLen);

        auto win32_impl_result = g_api_table.Tbsi_Get_OwnerAuth(hContext, ownerauthType, pOutputBuf, pOutputBufLen);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_Tbsi_Revoke_Attestation() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.Tbsi_Revoke_Attestation();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetDeviceID(uint8_t* pbWindowsAIK, uint32_t cbWindowsAIK, uint32_t* pcbResult, win32::Windows::Win32::Foundation::BOOL* pfProtectedByTPM) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pbWindowsAIK);
        ORBIT_TRACK_PARAM(cbWindowsAIK);
        ORBIT_TRACK_PARAM(pcbResult);
        ORBIT_TRACK_PARAM(pfProtectedByTPM);

        auto win32_impl_result = g_api_table.GetDeviceID(pbWindowsAIK, cbWindowsAIK, pcbResult, pfProtectedByTPM);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_GetDeviceIDString(win32::Windows::Win32::Foundation::PWSTR pszWindowsAIK, uint32_t cchWindowsAIK, uint32_t* pcchResult, win32::Windows::Win32::Foundation::BOOL* pfProtectedByTPM) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pszWindowsAIK);
        ORBIT_TRACK_PARAM(cchWindowsAIK);
        ORBIT_TRACK_PARAM(pcchResult);
        ORBIT_TRACK_PARAM(pfProtectedByTPM);

        auto win32_impl_result = g_api_table.GetDeviceIDString(pszWindowsAIK, cchWindowsAIK, pcchResult, pfProtectedByTPM);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_Tbsi_Create_Windows_Key(uint32_t keyHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(keyHandle);

        auto win32_impl_result = g_api_table.Tbsi_Create_Windows_Key(keyHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_Tbsi_Get_TCG_Log_Ex(uint32_t logType, uint8_t* pbOutput, uint32_t* pcbOutput) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(logType);
        ORBIT_TRACK_PARAM(pbOutput);
        ORBIT_TRACK_PARAM(pcbOutput);

        auto win32_impl_result = g_api_table.Tbsi_Get_TCG_Log_Ex(logType, pbOutput, pcbOutput);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
