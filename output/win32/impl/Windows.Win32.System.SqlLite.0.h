// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_System_SqlLite_0_H
#define WIN32_Windows_Win32_System_SqlLite_0_H
WIN32_EXPORT namespace win32::Windows::Win32::System::SqlLite
{
#pragma region enums
#pragma endregion enums

#pragma region forward_declarations
    struct Fts5Context;
    struct Fts5ExtensionApi;
    struct Fts5PhraseIter;
    struct Fts5Tokenizer;
    struct fts5_api;
    struct fts5_tokenizer;
    struct sqlite3;
    struct sqlite3_api_routines;
    struct sqlite3_backup;
    struct sqlite3_blob;
    struct sqlite3_context;
    struct sqlite3_file;
    struct sqlite3_index_info;
    struct sqlite3_io_methods;
    struct sqlite3_mem_methods;
    struct sqlite3_module;
    struct sqlite3_mutex;
    struct sqlite3_mutex_methods;
    struct sqlite3_pcache;
    struct sqlite3_pcache_methods;
    struct sqlite3_pcache_methods2;
    struct sqlite3_pcache_page;
    struct sqlite3_rtree_geometry;
    struct sqlite3_rtree_query_info;
    struct sqlite3_snapshot;
    struct sqlite3_stmt;
    struct sqlite3_str;
    struct sqlite3_value;
    struct sqlite3_vfs;
    struct sqlite3_vtab;
    struct sqlite3_vtab_cursor;
#pragma endregion forward_declarations

#pragma region delegates
    using sqlite3_callback = int32_t __stdcall(void*, int32_t, int8_t**, int8_t**);
    using sqlite3_syscall_ptr = void __stdcall();
    using sqlite3_destructor_type = void __stdcall(void*);
    using fts5_extension_function = void __stdcall(Windows::Win32::System::SqlLite::Fts5ExtensionApi*, Windows::Win32::System::SqlLite::Fts5Context*, Windows::Win32::System::SqlLite::sqlite3_context*, int32_t, Windows::Win32::System::SqlLite::sqlite3_value**);
    using sqlite3_loadext_entry = int32_t __stdcall(Windows::Win32::System::SqlLite::sqlite3*, int8_t**, Windows::Win32::System::SqlLite::sqlite3_api_routines*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
