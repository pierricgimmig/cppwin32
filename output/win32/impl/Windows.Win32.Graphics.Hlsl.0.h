// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Graphics_Hlsl_0_H
#define WIN32_Windows_Win32_Graphics_Hlsl_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct HRESULT;
    struct PSTR;
}
WIN32_EXPORT namespace win32::Windows::Win32::Graphics::Direct3D11
{
    struct D3D_SHADER_MACRO;
    struct ID3DBlob;
    struct ID3DInclude;
}
WIN32_EXPORT namespace win32::Windows::Win32::System::Com
{
    struct IMalloc;
}
WIN32_EXPORT namespace win32::Windows::Win32::Graphics::Hlsl
{
#pragma region enums
    enum class D3DCOMPILER_STRIP_FLAGS : int32_t
    {
        D3DCOMPILER_STRIP_REFLECTION_DATA = 1,
        D3DCOMPILER_STRIP_DEBUG_INFO = 2,
        D3DCOMPILER_STRIP_TEST_BLOBS = 4,
        D3DCOMPILER_STRIP_PRIVATE_DATA = 8,
        D3DCOMPILER_STRIP_ROOT_SIGNATURE = 16,
        D3DCOMPILER_STRIP_FORCE_DWORD = 2147483647,
    };
    enum class D3D_BLOB_PART : int32_t
    {
        D3D_BLOB_INPUT_SIGNATURE_BLOB = 0,
        D3D_BLOB_OUTPUT_SIGNATURE_BLOB = 1,
        D3D_BLOB_INPUT_AND_OUTPUT_SIGNATURE_BLOB = 2,
        D3D_BLOB_PATCH_CONSTANT_SIGNATURE_BLOB = 3,
        D3D_BLOB_ALL_SIGNATURE_BLOB = 4,
        D3D_BLOB_DEBUG_INFO = 5,
        D3D_BLOB_LEGACY_SHADER = 6,
        D3D_BLOB_XNA_PREPASS_SHADER = 7,
        D3D_BLOB_XNA_SHADER = 8,
        D3D_BLOB_PDB = 9,
        D3D_BLOB_PRIVATE_DATA = 10,
        D3D_BLOB_ROOT_SIGNATURE = 11,
        D3D_BLOB_DEBUG_NAME = 12,
        D3D_BLOB_TEST_ALTERNATE_SHADER = 32768,
        D3D_BLOB_TEST_COMPILE_DETAILS = 32769,
        D3D_BLOB_TEST_COMPILE_PERF = 32770,
        D3D_BLOB_TEST_COMPILE_REPORT = 32771,
    };
    enum class DXC_CP : uint32_t
    {
        DXC_CP_ACP = 0x0,
        DXC_CP_UTF16 = 0x4b0,
        DXC_CP_UTF8 = 0xfde9,
    };
    enum class DXC_OUT_KIND : int32_t
    {
        DXC_OUT_NONE = 0,
        DXC_OUT_OBJECT = 1,
        DXC_OUT_ERRORS = 2,
        DXC_OUT_PDB = 3,
        DXC_OUT_SHADER_HASH = 4,
        DXC_OUT_DISASSEMBLY = 5,
        DXC_OUT_HLSL = 6,
        DXC_OUT_TEXT = 7,
        DXC_OUT_REFLECTION = 8,
        DXC_OUT_ROOT_SIGNATURE = 9,
        DXC_OUT_EXTRA_OUTPUTS = 10,
        DXC_OUT_FORCE_DWORD = -1,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct D3D_SHADER_DATA;
    struct DxcArgPair;
    struct DxcBuffer;
    struct DxcDefine;
    struct DxcShaderHash;
    struct IDxcAssembler;
    struct IDxcBlob;
    struct IDxcBlobEncoding;
    struct IDxcBlobUtf16;
    struct IDxcBlobUtf8;
    struct IDxcCompiler;
    struct IDxcCompiler2;
    struct IDxcCompiler3;
    struct IDxcCompilerArgs;
    struct IDxcContainerBuilder;
    struct IDxcContainerReflection;
    struct IDxcExtraOutputs;
    struct IDxcIncludeHandler;
    struct IDxcLibrary;
    struct IDxcLinker;
    struct IDxcOperationResult;
    struct IDxcOptimizer;
    struct IDxcOptimizerPass;
    struct IDxcPdbUtils;
    struct IDxcResult;
    struct IDxcUtils;
    struct IDxcValidator;
    struct IDxcValidator2;
    struct IDxcVersionInfo;
    struct IDxcVersionInfo2;
    struct IDxcVersionInfo3;
#pragma endregion forward_declarations

#pragma region delegates
    using pD3DCompile = Windows::Win32::Foundation::HRESULT __stdcall(void*, size_t, Windows::Win32::Foundation::PSTR, Windows::Win32::Graphics::Direct3D11::D3D_SHADER_MACRO*, Windows::Win32::Graphics::Direct3D11::ID3DInclude*, Windows::Win32::Foundation::PSTR, Windows::Win32::Foundation::PSTR, uint32_t, uint32_t, Windows::Win32::Graphics::Direct3D11::ID3DBlob**, Windows::Win32::Graphics::Direct3D11::ID3DBlob**);
    using pD3DPreprocess = Windows::Win32::Foundation::HRESULT __stdcall(void*, size_t, Windows::Win32::Foundation::PSTR, Windows::Win32::Graphics::Direct3D11::D3D_SHADER_MACRO*, Windows::Win32::Graphics::Direct3D11::ID3DInclude*, Windows::Win32::Graphics::Direct3D11::ID3DBlob**, Windows::Win32::Graphics::Direct3D11::ID3DBlob**);
    using pD3DDisassemble = Windows::Win32::Foundation::HRESULT __stdcall(void*, size_t, uint32_t, Windows::Win32::Foundation::PSTR, Windows::Win32::Graphics::Direct3D11::ID3DBlob**);
    using DxcCreateInstanceProc = Windows::Win32::Foundation::HRESULT __stdcall(::win32::guid*, ::win32::guid*, void**);
    using DxcCreateInstance2Proc = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::System::Com::IMalloc*, ::win32::guid*, ::win32::guid*, void**);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
