// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Security_2_H
#define WIN32_Windows_Win32_Security_2_H
#include "win32/Windows.Win32.Security.h"
#include "win32/impl/Windows.Win32.Security.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::Security
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AccessCheck(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, win32::Windows::Win32::Foundation::HANDLE ClientToken, uint32_t DesiredAccess, win32::Windows::Win32::Security::GENERIC_MAPPING* GenericMapping, win32::Windows::Win32::Security::PRIVILEGE_SET* PrivilegeSet, uint32_t* PrivilegeSetLength, uint32_t* GrantedAccess, int32_t* AccessStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(ClientToken);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(GenericMapping);
        ORBIT_TRACK_PARAM(PrivilegeSet);
        ORBIT_TRACK_PARAM(PrivilegeSetLength);
        ORBIT_TRACK_PARAM(GrantedAccess);
        ORBIT_TRACK_PARAM(AccessStatus);

        auto win32_impl_result = g_api_table.AccessCheck(pSecurityDescriptor, ClientToken, DesiredAccess, GenericMapping, PrivilegeSet, PrivilegeSetLength, GrantedAccess, AccessStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AccessCheckAndAuditAlarmW(win32::Windows::Win32::Foundation::PWSTR SubsystemName, void* HandleId, win32::Windows::Win32::Foundation::PWSTR ObjectTypeName, win32::Windows::Win32::Foundation::PWSTR ObjectName, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* SecurityDescriptor, uint32_t DesiredAccess, win32::Windows::Win32::Security::GENERIC_MAPPING* GenericMapping, win32::Windows::Win32::Foundation::BOOL ObjectCreation, uint32_t* GrantedAccess, int32_t* AccessStatus, int32_t* pfGenerateOnClose) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SubsystemName);
        ORBIT_TRACK_PARAM(HandleId);
        ORBIT_TRACK_PARAM(ObjectTypeName);
        ORBIT_TRACK_PARAM(ObjectName);
        ORBIT_TRACK_PARAM(SecurityDescriptor);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(GenericMapping);
        ORBIT_TRACK_PARAM(ObjectCreation);
        ORBIT_TRACK_PARAM(GrantedAccess);
        ORBIT_TRACK_PARAM(AccessStatus);
        ORBIT_TRACK_PARAM(pfGenerateOnClose);

        auto win32_impl_result = g_api_table.AccessCheckAndAuditAlarmW(SubsystemName, HandleId, ObjectTypeName, ObjectName, SecurityDescriptor, DesiredAccess, GenericMapping, ObjectCreation, GrantedAccess, AccessStatus, pfGenerateOnClose);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AccessCheckByType(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, win32::Windows::Win32::Foundation::PSID PrincipalSelfSid, win32::Windows::Win32::Foundation::HANDLE ClientToken, uint32_t DesiredAccess, win32::Windows::Win32::Security::OBJECT_TYPE_LIST* ObjectTypeList, uint32_t ObjectTypeListLength, win32::Windows::Win32::Security::GENERIC_MAPPING* GenericMapping, win32::Windows::Win32::Security::PRIVILEGE_SET* PrivilegeSet, uint32_t* PrivilegeSetLength, uint32_t* GrantedAccess, int32_t* AccessStatus) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(PrincipalSelfSid);
        ORBIT_TRACK_PARAM(ClientToken);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(ObjectTypeList);
        ORBIT_TRACK_PARAM(ObjectTypeListLength);
        ORBIT_TRACK_PARAM(GenericMapping);
        ORBIT_TRACK_PARAM(PrivilegeSet);
        ORBIT_TRACK_PARAM(PrivilegeSetLength);
        ORBIT_TRACK_PARAM(GrantedAccess);
        ORBIT_TRACK_PARAM(AccessStatus);

        auto win32_impl_result = g_api_table.AccessCheckByType(pSecurityDescriptor, PrincipalSelfSid, ClientToken, DesiredAccess, ObjectTypeList, ObjectTypeListLength, GenericMapping, PrivilegeSet, PrivilegeSetLength, GrantedAccess, AccessStatus);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AccessCheckByTypeResultList(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, win32::Windows::Win32::Foundation::PSID PrincipalSelfSid, win32::Windows::Win32::Foundation::HANDLE ClientToken, uint32_t DesiredAccess, win32::Windows::Win32::Security::OBJECT_TYPE_LIST* ObjectTypeList, uint32_t ObjectTypeListLength, win32::Windows::Win32::Security::GENERIC_MAPPING* GenericMapping, win32::Windows::Win32::Security::PRIVILEGE_SET* PrivilegeSet, uint32_t* PrivilegeSetLength, uint32_t* GrantedAccessList, uint32_t* AccessStatusList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(PrincipalSelfSid);
        ORBIT_TRACK_PARAM(ClientToken);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(ObjectTypeList);
        ORBIT_TRACK_PARAM(ObjectTypeListLength);
        ORBIT_TRACK_PARAM(GenericMapping);
        ORBIT_TRACK_PARAM(PrivilegeSet);
        ORBIT_TRACK_PARAM(PrivilegeSetLength);
        ORBIT_TRACK_PARAM(GrantedAccessList);
        ORBIT_TRACK_PARAM(AccessStatusList);

        auto win32_impl_result = g_api_table.AccessCheckByTypeResultList(pSecurityDescriptor, PrincipalSelfSid, ClientToken, DesiredAccess, ObjectTypeList, ObjectTypeListLength, GenericMapping, PrivilegeSet, PrivilegeSetLength, GrantedAccessList, AccessStatusList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AccessCheckByTypeAndAuditAlarmW(win32::Windows::Win32::Foundation::PWSTR SubsystemName, void* HandleId, win32::Windows::Win32::Foundation::PWSTR ObjectTypeName, win32::Windows::Win32::Foundation::PWSTR ObjectName, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* SecurityDescriptor, win32::Windows::Win32::Foundation::PSID PrincipalSelfSid, uint32_t DesiredAccess, win32::Windows::Win32::Security::AUDIT_EVENT_TYPE AuditType, uint32_t Flags, win32::Windows::Win32::Security::OBJECT_TYPE_LIST* ObjectTypeList, uint32_t ObjectTypeListLength, win32::Windows::Win32::Security::GENERIC_MAPPING* GenericMapping, win32::Windows::Win32::Foundation::BOOL ObjectCreation, uint32_t* GrantedAccess, int32_t* AccessStatus, int32_t* pfGenerateOnClose) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SubsystemName);
        ORBIT_TRACK_PARAM(HandleId);
        ORBIT_TRACK_PARAM(ObjectTypeName);
        ORBIT_TRACK_PARAM(ObjectName);
        ORBIT_TRACK_PARAM(SecurityDescriptor);
        ORBIT_TRACK_PARAM(PrincipalSelfSid);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(AuditType);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(ObjectTypeList);
        ORBIT_TRACK_PARAM(ObjectTypeListLength);
        ORBIT_TRACK_PARAM(GenericMapping);
        ORBIT_TRACK_PARAM(ObjectCreation);
        ORBIT_TRACK_PARAM(GrantedAccess);
        ORBIT_TRACK_PARAM(AccessStatus);
        ORBIT_TRACK_PARAM(pfGenerateOnClose);

        auto win32_impl_result = g_api_table.AccessCheckByTypeAndAuditAlarmW(SubsystemName, HandleId, ObjectTypeName, ObjectName, SecurityDescriptor, PrincipalSelfSid, DesiredAccess, AuditType, Flags, ObjectTypeList, ObjectTypeListLength, GenericMapping, ObjectCreation, GrantedAccess, AccessStatus, pfGenerateOnClose);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AccessCheckByTypeResultListAndAuditAlarmW(win32::Windows::Win32::Foundation::PWSTR SubsystemName, void* HandleId, win32::Windows::Win32::Foundation::PWSTR ObjectTypeName, win32::Windows::Win32::Foundation::PWSTR ObjectName, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* SecurityDescriptor, win32::Windows::Win32::Foundation::PSID PrincipalSelfSid, uint32_t DesiredAccess, win32::Windows::Win32::Security::AUDIT_EVENT_TYPE AuditType, uint32_t Flags, win32::Windows::Win32::Security::OBJECT_TYPE_LIST* ObjectTypeList, uint32_t ObjectTypeListLength, win32::Windows::Win32::Security::GENERIC_MAPPING* GenericMapping, win32::Windows::Win32::Foundation::BOOL ObjectCreation, uint32_t* GrantedAccessList, uint32_t* AccessStatusList, int32_t* pfGenerateOnClose) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SubsystemName);
        ORBIT_TRACK_PARAM(HandleId);
        ORBIT_TRACK_PARAM(ObjectTypeName);
        ORBIT_TRACK_PARAM(ObjectName);
        ORBIT_TRACK_PARAM(SecurityDescriptor);
        ORBIT_TRACK_PARAM(PrincipalSelfSid);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(AuditType);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(ObjectTypeList);
        ORBIT_TRACK_PARAM(ObjectTypeListLength);
        ORBIT_TRACK_PARAM(GenericMapping);
        ORBIT_TRACK_PARAM(ObjectCreation);
        ORBIT_TRACK_PARAM(GrantedAccessList);
        ORBIT_TRACK_PARAM(AccessStatusList);
        ORBIT_TRACK_PARAM(pfGenerateOnClose);

        auto win32_impl_result = g_api_table.AccessCheckByTypeResultListAndAuditAlarmW(SubsystemName, HandleId, ObjectTypeName, ObjectName, SecurityDescriptor, PrincipalSelfSid, DesiredAccess, AuditType, Flags, ObjectTypeList, ObjectTypeListLength, GenericMapping, ObjectCreation, GrantedAccessList, AccessStatusList, pfGenerateOnClose);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AccessCheckByTypeResultListAndAuditAlarmByHandleW(win32::Windows::Win32::Foundation::PWSTR SubsystemName, void* HandleId, win32::Windows::Win32::Foundation::HANDLE ClientToken, win32::Windows::Win32::Foundation::PWSTR ObjectTypeName, win32::Windows::Win32::Foundation::PWSTR ObjectName, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* SecurityDescriptor, win32::Windows::Win32::Foundation::PSID PrincipalSelfSid, uint32_t DesiredAccess, win32::Windows::Win32::Security::AUDIT_EVENT_TYPE AuditType, uint32_t Flags, win32::Windows::Win32::Security::OBJECT_TYPE_LIST* ObjectTypeList, uint32_t ObjectTypeListLength, win32::Windows::Win32::Security::GENERIC_MAPPING* GenericMapping, win32::Windows::Win32::Foundation::BOOL ObjectCreation, uint32_t* GrantedAccessList, uint32_t* AccessStatusList, int32_t* pfGenerateOnClose) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SubsystemName);
        ORBIT_TRACK_PARAM(HandleId);
        ORBIT_TRACK_PARAM(ClientToken);
        ORBIT_TRACK_PARAM(ObjectTypeName);
        ORBIT_TRACK_PARAM(ObjectName);
        ORBIT_TRACK_PARAM(SecurityDescriptor);
        ORBIT_TRACK_PARAM(PrincipalSelfSid);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(AuditType);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(ObjectTypeList);
        ORBIT_TRACK_PARAM(ObjectTypeListLength);
        ORBIT_TRACK_PARAM(GenericMapping);
        ORBIT_TRACK_PARAM(ObjectCreation);
        ORBIT_TRACK_PARAM(GrantedAccessList);
        ORBIT_TRACK_PARAM(AccessStatusList);
        ORBIT_TRACK_PARAM(pfGenerateOnClose);

        auto win32_impl_result = g_api_table.AccessCheckByTypeResultListAndAuditAlarmByHandleW(SubsystemName, HandleId, ClientToken, ObjectTypeName, ObjectName, SecurityDescriptor, PrincipalSelfSid, DesiredAccess, AuditType, Flags, ObjectTypeList, ObjectTypeListLength, GenericMapping, ObjectCreation, GrantedAccessList, AccessStatusList, pfGenerateOnClose);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AddAccessAllowedAce(win32::Windows::Win32::Security::ACL* pAcl, uint32_t dwAceRevision, uint32_t AccessMask, win32::Windows::Win32::Foundation::PSID pSid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(dwAceRevision);
        ORBIT_TRACK_PARAM(AccessMask);
        ORBIT_TRACK_PARAM(pSid);

        auto win32_impl_result = g_api_table.AddAccessAllowedAce(pAcl, dwAceRevision, AccessMask, pSid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AddAccessAllowedAceEx(win32::Windows::Win32::Security::ACL* pAcl, uint32_t dwAceRevision, win32::Windows::Win32::Security::ACE_FLAGS AceFlags, uint32_t AccessMask, win32::Windows::Win32::Foundation::PSID pSid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(dwAceRevision);
        ORBIT_TRACK_PARAM(AceFlags);
        ORBIT_TRACK_PARAM(AccessMask);
        ORBIT_TRACK_PARAM(pSid);

        auto win32_impl_result = g_api_table.AddAccessAllowedAceEx(pAcl, dwAceRevision, AceFlags, AccessMask, pSid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AddAccessAllowedObjectAce(win32::Windows::Win32::Security::ACL* pAcl, uint32_t dwAceRevision, win32::Windows::Win32::Security::ACE_FLAGS AceFlags, uint32_t AccessMask, ::win32::guid* ObjectTypeGuid, ::win32::guid* InheritedObjectTypeGuid, win32::Windows::Win32::Foundation::PSID pSid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(dwAceRevision);
        ORBIT_TRACK_PARAM(AceFlags);
        ORBIT_TRACK_PARAM(AccessMask);
        ORBIT_TRACK_PARAM(ObjectTypeGuid);
        ORBIT_TRACK_PARAM(InheritedObjectTypeGuid);
        ORBIT_TRACK_PARAM(pSid);

        auto win32_impl_result = g_api_table.AddAccessAllowedObjectAce(pAcl, dwAceRevision, AceFlags, AccessMask, ObjectTypeGuid, InheritedObjectTypeGuid, pSid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AddAccessDeniedAce(win32::Windows::Win32::Security::ACL* pAcl, uint32_t dwAceRevision, uint32_t AccessMask, win32::Windows::Win32::Foundation::PSID pSid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(dwAceRevision);
        ORBIT_TRACK_PARAM(AccessMask);
        ORBIT_TRACK_PARAM(pSid);

        auto win32_impl_result = g_api_table.AddAccessDeniedAce(pAcl, dwAceRevision, AccessMask, pSid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AddAccessDeniedAceEx(win32::Windows::Win32::Security::ACL* pAcl, uint32_t dwAceRevision, win32::Windows::Win32::Security::ACE_FLAGS AceFlags, uint32_t AccessMask, win32::Windows::Win32::Foundation::PSID pSid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(dwAceRevision);
        ORBIT_TRACK_PARAM(AceFlags);
        ORBIT_TRACK_PARAM(AccessMask);
        ORBIT_TRACK_PARAM(pSid);

        auto win32_impl_result = g_api_table.AddAccessDeniedAceEx(pAcl, dwAceRevision, AceFlags, AccessMask, pSid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AddAccessDeniedObjectAce(win32::Windows::Win32::Security::ACL* pAcl, uint32_t dwAceRevision, win32::Windows::Win32::Security::ACE_FLAGS AceFlags, uint32_t AccessMask, ::win32::guid* ObjectTypeGuid, ::win32::guid* InheritedObjectTypeGuid, win32::Windows::Win32::Foundation::PSID pSid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(dwAceRevision);
        ORBIT_TRACK_PARAM(AceFlags);
        ORBIT_TRACK_PARAM(AccessMask);
        ORBIT_TRACK_PARAM(ObjectTypeGuid);
        ORBIT_TRACK_PARAM(InheritedObjectTypeGuid);
        ORBIT_TRACK_PARAM(pSid);

        auto win32_impl_result = g_api_table.AddAccessDeniedObjectAce(pAcl, dwAceRevision, AceFlags, AccessMask, ObjectTypeGuid, InheritedObjectTypeGuid, pSid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AddAce(win32::Windows::Win32::Security::ACL* pAcl, uint32_t dwAceRevision, uint32_t dwStartingAceIndex, void* pAceList, uint32_t nAceListLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(dwAceRevision);
        ORBIT_TRACK_PARAM(dwStartingAceIndex);
        ORBIT_TRACK_PARAM(pAceList);
        ORBIT_TRACK_PARAM(nAceListLength);

        auto win32_impl_result = g_api_table.AddAce(pAcl, dwAceRevision, dwStartingAceIndex, pAceList, nAceListLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AddAuditAccessAce(win32::Windows::Win32::Security::ACL* pAcl, uint32_t dwAceRevision, uint32_t dwAccessMask, win32::Windows::Win32::Foundation::PSID pSid, win32::Windows::Win32::Foundation::BOOL bAuditSuccess, win32::Windows::Win32::Foundation::BOOL bAuditFailure) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(dwAceRevision);
        ORBIT_TRACK_PARAM(dwAccessMask);
        ORBIT_TRACK_PARAM(pSid);
        ORBIT_TRACK_PARAM(bAuditSuccess);
        ORBIT_TRACK_PARAM(bAuditFailure);

        auto win32_impl_result = g_api_table.AddAuditAccessAce(pAcl, dwAceRevision, dwAccessMask, pSid, bAuditSuccess, bAuditFailure);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AddAuditAccessAceEx(win32::Windows::Win32::Security::ACL* pAcl, uint32_t dwAceRevision, win32::Windows::Win32::Security::ACE_FLAGS AceFlags, uint32_t dwAccessMask, win32::Windows::Win32::Foundation::PSID pSid, win32::Windows::Win32::Foundation::BOOL bAuditSuccess, win32::Windows::Win32::Foundation::BOOL bAuditFailure) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(dwAceRevision);
        ORBIT_TRACK_PARAM(AceFlags);
        ORBIT_TRACK_PARAM(dwAccessMask);
        ORBIT_TRACK_PARAM(pSid);
        ORBIT_TRACK_PARAM(bAuditSuccess);
        ORBIT_TRACK_PARAM(bAuditFailure);

        auto win32_impl_result = g_api_table.AddAuditAccessAceEx(pAcl, dwAceRevision, AceFlags, dwAccessMask, pSid, bAuditSuccess, bAuditFailure);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AddAuditAccessObjectAce(win32::Windows::Win32::Security::ACL* pAcl, uint32_t dwAceRevision, win32::Windows::Win32::Security::ACE_FLAGS AceFlags, uint32_t AccessMask, ::win32::guid* ObjectTypeGuid, ::win32::guid* InheritedObjectTypeGuid, win32::Windows::Win32::Foundation::PSID pSid, win32::Windows::Win32::Foundation::BOOL bAuditSuccess, win32::Windows::Win32::Foundation::BOOL bAuditFailure) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(dwAceRevision);
        ORBIT_TRACK_PARAM(AceFlags);
        ORBIT_TRACK_PARAM(AccessMask);
        ORBIT_TRACK_PARAM(ObjectTypeGuid);
        ORBIT_TRACK_PARAM(InheritedObjectTypeGuid);
        ORBIT_TRACK_PARAM(pSid);
        ORBIT_TRACK_PARAM(bAuditSuccess);
        ORBIT_TRACK_PARAM(bAuditFailure);

        auto win32_impl_result = g_api_table.AddAuditAccessObjectAce(pAcl, dwAceRevision, AceFlags, AccessMask, ObjectTypeGuid, InheritedObjectTypeGuid, pSid, bAuditSuccess, bAuditFailure);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AddMandatoryAce(win32::Windows::Win32::Security::ACL* pAcl, win32::Windows::Win32::Security::ACE_REVISION dwAceRevision, win32::Windows::Win32::Security::ACE_FLAGS AceFlags, uint32_t MandatoryPolicy, win32::Windows::Win32::Foundation::PSID pLabelSid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(dwAceRevision);
        ORBIT_TRACK_PARAM(AceFlags);
        ORBIT_TRACK_PARAM(MandatoryPolicy);
        ORBIT_TRACK_PARAM(pLabelSid);

        auto win32_impl_result = g_api_table.AddMandatoryAce(pAcl, dwAceRevision, AceFlags, MandatoryPolicy, pLabelSid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AddResourceAttributeAce(win32::Windows::Win32::Security::ACL* pAcl, uint32_t dwAceRevision, win32::Windows::Win32::Security::ACE_FLAGS AceFlags, uint32_t AccessMask, win32::Windows::Win32::Foundation::PSID pSid, win32::Windows::Win32::Security::CLAIM_SECURITY_ATTRIBUTES_INFORMATION* pAttributeInfo, uint32_t* pReturnLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(dwAceRevision);
        ORBIT_TRACK_PARAM(AceFlags);
        ORBIT_TRACK_PARAM(AccessMask);
        ORBIT_TRACK_PARAM(pSid);
        ORBIT_TRACK_PARAM(pAttributeInfo);
        ORBIT_TRACK_PARAM(pReturnLength);

        auto win32_impl_result = g_api_table.AddResourceAttributeAce(pAcl, dwAceRevision, AceFlags, AccessMask, pSid, pAttributeInfo, pReturnLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AddScopedPolicyIDAce(win32::Windows::Win32::Security::ACL* pAcl, uint32_t dwAceRevision, win32::Windows::Win32::Security::ACE_FLAGS AceFlags, uint32_t AccessMask, win32::Windows::Win32::Foundation::PSID pSid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(dwAceRevision);
        ORBIT_TRACK_PARAM(AceFlags);
        ORBIT_TRACK_PARAM(AccessMask);
        ORBIT_TRACK_PARAM(pSid);

        auto win32_impl_result = g_api_table.AddScopedPolicyIDAce(pAcl, dwAceRevision, AceFlags, AccessMask, pSid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AdjustTokenGroups(win32::Windows::Win32::Foundation::HANDLE TokenHandle, win32::Windows::Win32::Foundation::BOOL ResetToDefault, win32::Windows::Win32::Security::TOKEN_GROUPS* NewState, uint32_t BufferLength, win32::Windows::Win32::Security::TOKEN_GROUPS* PreviousState, uint32_t* ReturnLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TokenHandle);
        ORBIT_TRACK_PARAM(ResetToDefault);
        ORBIT_TRACK_PARAM(NewState);
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(PreviousState);
        ORBIT_TRACK_PARAM(ReturnLength);

        auto win32_impl_result = g_api_table.AdjustTokenGroups(TokenHandle, ResetToDefault, NewState, BufferLength, PreviousState, ReturnLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AdjustTokenPrivileges(win32::Windows::Win32::Foundation::HANDLE TokenHandle, win32::Windows::Win32::Foundation::BOOL DisableAllPrivileges, win32::Windows::Win32::Security::TOKEN_PRIVILEGES* NewState, uint32_t BufferLength, win32::Windows::Win32::Security::TOKEN_PRIVILEGES* PreviousState, uint32_t* ReturnLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TokenHandle);
        ORBIT_TRACK_PARAM(DisableAllPrivileges);
        ORBIT_TRACK_PARAM(NewState);
        ORBIT_TRACK_PARAM(BufferLength);
        ORBIT_TRACK_PARAM(PreviousState);
        ORBIT_TRACK_PARAM(ReturnLength);

        auto win32_impl_result = g_api_table.AdjustTokenPrivileges(TokenHandle, DisableAllPrivileges, NewState, BufferLength, PreviousState, ReturnLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AllocateAndInitializeSid(win32::Windows::Win32::Security::SID_IDENTIFIER_AUTHORITY* pIdentifierAuthority, uint8_t nSubAuthorityCount, uint32_t nSubAuthority0, uint32_t nSubAuthority1, uint32_t nSubAuthority2, uint32_t nSubAuthority3, uint32_t nSubAuthority4, uint32_t nSubAuthority5, uint32_t nSubAuthority6, uint32_t nSubAuthority7, win32::Windows::Win32::Foundation::PSID* pSid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pIdentifierAuthority);
        ORBIT_TRACK_PARAM(nSubAuthorityCount);
        ORBIT_TRACK_PARAM(nSubAuthority0);
        ORBIT_TRACK_PARAM(nSubAuthority1);
        ORBIT_TRACK_PARAM(nSubAuthority2);
        ORBIT_TRACK_PARAM(nSubAuthority3);
        ORBIT_TRACK_PARAM(nSubAuthority4);
        ORBIT_TRACK_PARAM(nSubAuthority5);
        ORBIT_TRACK_PARAM(nSubAuthority6);
        ORBIT_TRACK_PARAM(nSubAuthority7);
        ORBIT_TRACK_PARAM(pSid);

        auto win32_impl_result = g_api_table.AllocateAndInitializeSid(pIdentifierAuthority, nSubAuthorityCount, nSubAuthority0, nSubAuthority1, nSubAuthority2, nSubAuthority3, nSubAuthority4, nSubAuthority5, nSubAuthority6, nSubAuthority7, pSid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AllocateLocallyUniqueId(win32::Windows::Win32::Foundation::LUID* Luid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Luid);

        auto win32_impl_result = g_api_table.AllocateLocallyUniqueId(Luid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AreAllAccessesGranted(uint32_t GrantedAccess, uint32_t DesiredAccess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(GrantedAccess);
        ORBIT_TRACK_PARAM(DesiredAccess);

        auto win32_impl_result = g_api_table.AreAllAccessesGranted(GrantedAccess, DesiredAccess);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AreAnyAccessesGranted(uint32_t GrantedAccess, uint32_t DesiredAccess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(GrantedAccess);
        ORBIT_TRACK_PARAM(DesiredAccess);

        auto win32_impl_result = g_api_table.AreAnyAccessesGranted(GrantedAccess, DesiredAccess);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CheckTokenMembership(win32::Windows::Win32::Foundation::HANDLE TokenHandle, win32::Windows::Win32::Foundation::PSID SidToCheck, win32::Windows::Win32::Foundation::BOOL* IsMember) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TokenHandle);
        ORBIT_TRACK_PARAM(SidToCheck);
        ORBIT_TRACK_PARAM(IsMember);

        auto win32_impl_result = g_api_table.CheckTokenMembership(TokenHandle, SidToCheck, IsMember);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CheckTokenCapability(win32::Windows::Win32::Foundation::HANDLE TokenHandle, win32::Windows::Win32::Foundation::PSID CapabilitySidToCheck, win32::Windows::Win32::Foundation::BOOL* HasCapability) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TokenHandle);
        ORBIT_TRACK_PARAM(CapabilitySidToCheck);
        ORBIT_TRACK_PARAM(HasCapability);

        auto win32_impl_result = g_api_table.CheckTokenCapability(TokenHandle, CapabilitySidToCheck, HasCapability);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetAppContainerAce(win32::Windows::Win32::Security::ACL* Acl, uint32_t StartingAceIndex, void** AppContainerAce, uint32_t* AppContainerAceIndex) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Acl);
        ORBIT_TRACK_PARAM(StartingAceIndex);
        ORBIT_TRACK_PARAM(AppContainerAce);
        ORBIT_TRACK_PARAM(AppContainerAceIndex);

        auto win32_impl_result = g_api_table.GetAppContainerAce(Acl, StartingAceIndex, AppContainerAce, AppContainerAceIndex);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CheckTokenMembershipEx(win32::Windows::Win32::Foundation::HANDLE TokenHandle, win32::Windows::Win32::Foundation::PSID SidToCheck, uint32_t Flags, win32::Windows::Win32::Foundation::BOOL* IsMember) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TokenHandle);
        ORBIT_TRACK_PARAM(SidToCheck);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(IsMember);

        auto win32_impl_result = g_api_table.CheckTokenMembershipEx(TokenHandle, SidToCheck, Flags, IsMember);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ConvertToAutoInheritPrivateObjectSecurity(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* ParentDescriptor, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* CurrentSecurityDescriptor, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** NewSecurityDescriptor, ::win32::guid* ObjectType, win32::Windows::Win32::Foundation::BOOLEAN IsDirectoryObject, win32::Windows::Win32::Security::GENERIC_MAPPING* GenericMapping) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ParentDescriptor);
        ORBIT_TRACK_PARAM(CurrentSecurityDescriptor);
        ORBIT_TRACK_PARAM(NewSecurityDescriptor);
        ORBIT_TRACK_PARAM(ObjectType);
        ORBIT_TRACK_PARAM(IsDirectoryObject);
        ORBIT_TRACK_PARAM(GenericMapping);

        auto win32_impl_result = g_api_table.ConvertToAutoInheritPrivateObjectSecurity(ParentDescriptor, CurrentSecurityDescriptor, NewSecurityDescriptor, ObjectType, IsDirectoryObject, GenericMapping);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CopySid(uint32_t nDestinationSidLength, win32::Windows::Win32::Foundation::PSID pDestinationSid, win32::Windows::Win32::Foundation::PSID pSourceSid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(nDestinationSidLength);
        ORBIT_TRACK_PARAM(pDestinationSid);
        ORBIT_TRACK_PARAM(pSourceSid);

        auto win32_impl_result = g_api_table.CopySid(nDestinationSidLength, pDestinationSid, pSourceSid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CreatePrivateObjectSecurity(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* ParentDescriptor, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* CreatorDescriptor, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** NewDescriptor, win32::Windows::Win32::Foundation::BOOL IsDirectoryObject, win32::Windows::Win32::Foundation::HANDLE Token, win32::Windows::Win32::Security::GENERIC_MAPPING* GenericMapping) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ParentDescriptor);
        ORBIT_TRACK_PARAM(CreatorDescriptor);
        ORBIT_TRACK_PARAM(NewDescriptor);
        ORBIT_TRACK_PARAM(IsDirectoryObject);
        ORBIT_TRACK_PARAM(Token);
        ORBIT_TRACK_PARAM(GenericMapping);

        auto win32_impl_result = g_api_table.CreatePrivateObjectSecurity(ParentDescriptor, CreatorDescriptor, NewDescriptor, IsDirectoryObject, Token, GenericMapping);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CreatePrivateObjectSecurityEx(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* ParentDescriptor, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* CreatorDescriptor, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** NewDescriptor, ::win32::guid* ObjectType, win32::Windows::Win32::Foundation::BOOL IsContainerObject, win32::Windows::Win32::Security::SECURITY_AUTO_INHERIT_FLAGS AutoInheritFlags, win32::Windows::Win32::Foundation::HANDLE Token, win32::Windows::Win32::Security::GENERIC_MAPPING* GenericMapping) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ParentDescriptor);
        ORBIT_TRACK_PARAM(CreatorDescriptor);
        ORBIT_TRACK_PARAM(NewDescriptor);
        ORBIT_TRACK_PARAM(ObjectType);
        ORBIT_TRACK_PARAM(IsContainerObject);
        ORBIT_TRACK_PARAM(AutoInheritFlags);
        ORBIT_TRACK_PARAM(Token);
        ORBIT_TRACK_PARAM(GenericMapping);

        auto win32_impl_result = g_api_table.CreatePrivateObjectSecurityEx(ParentDescriptor, CreatorDescriptor, NewDescriptor, ObjectType, IsContainerObject, AutoInheritFlags, Token, GenericMapping);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CreatePrivateObjectSecurityWithMultipleInheritance(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* ParentDescriptor, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* CreatorDescriptor, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** NewDescriptor, ::win32::guid** ObjectTypes, uint32_t GuidCount, win32::Windows::Win32::Foundation::BOOL IsContainerObject, win32::Windows::Win32::Security::SECURITY_AUTO_INHERIT_FLAGS AutoInheritFlags, win32::Windows::Win32::Foundation::HANDLE Token, win32::Windows::Win32::Security::GENERIC_MAPPING* GenericMapping) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ParentDescriptor);
        ORBIT_TRACK_PARAM(CreatorDescriptor);
        ORBIT_TRACK_PARAM(NewDescriptor);
        ORBIT_TRACK_PARAM(ObjectTypes);
        ORBIT_TRACK_PARAM(GuidCount);
        ORBIT_TRACK_PARAM(IsContainerObject);
        ORBIT_TRACK_PARAM(AutoInheritFlags);
        ORBIT_TRACK_PARAM(Token);
        ORBIT_TRACK_PARAM(GenericMapping);

        auto win32_impl_result = g_api_table.CreatePrivateObjectSecurityWithMultipleInheritance(ParentDescriptor, CreatorDescriptor, NewDescriptor, ObjectTypes, GuidCount, IsContainerObject, AutoInheritFlags, Token, GenericMapping);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CreateRestrictedToken(win32::Windows::Win32::Foundation::HANDLE ExistingTokenHandle, win32::Windows::Win32::Security::CREATE_RESTRICTED_TOKEN_FLAGS Flags, uint32_t DisableSidCount, win32::Windows::Win32::Security::SID_AND_ATTRIBUTES* SidsToDisable, uint32_t DeletePrivilegeCount, win32::Windows::Win32::Security::LUID_AND_ATTRIBUTES* PrivilegesToDelete, uint32_t RestrictedSidCount, win32::Windows::Win32::Security::SID_AND_ATTRIBUTES* SidsToRestrict, win32::Windows::Win32::Foundation::HANDLE* NewTokenHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ExistingTokenHandle);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(DisableSidCount);
        ORBIT_TRACK_PARAM(SidsToDisable);
        ORBIT_TRACK_PARAM(DeletePrivilegeCount);
        ORBIT_TRACK_PARAM(PrivilegesToDelete);
        ORBIT_TRACK_PARAM(RestrictedSidCount);
        ORBIT_TRACK_PARAM(SidsToRestrict);
        ORBIT_TRACK_PARAM(NewTokenHandle);

        auto win32_impl_result = g_api_table.CreateRestrictedToken(ExistingTokenHandle, Flags, DisableSidCount, SidsToDisable, DeletePrivilegeCount, PrivilegesToDelete, RestrictedSidCount, SidsToRestrict, NewTokenHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_CreateWellKnownSid(win32::Windows::Win32::Security::WELL_KNOWN_SID_TYPE WellKnownSidType, win32::Windows::Win32::Foundation::PSID DomainSid, win32::Windows::Win32::Foundation::PSID pSid, uint32_t* cbSid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(WellKnownSidType);
        ORBIT_TRACK_PARAM(DomainSid);
        ORBIT_TRACK_PARAM(pSid);
        ORBIT_TRACK_PARAM(cbSid);

        auto win32_impl_result = g_api_table.CreateWellKnownSid(WellKnownSidType, DomainSid, pSid, cbSid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EqualDomainSid(win32::Windows::Win32::Foundation::PSID pSid1, win32::Windows::Win32::Foundation::PSID pSid2, win32::Windows::Win32::Foundation::BOOL* pfEqual) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSid1);
        ORBIT_TRACK_PARAM(pSid2);
        ORBIT_TRACK_PARAM(pfEqual);

        auto win32_impl_result = g_api_table.EqualDomainSid(pSid1, pSid2, pfEqual);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DeleteAce(win32::Windows::Win32::Security::ACL* pAcl, uint32_t dwAceIndex) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(dwAceIndex);

        auto win32_impl_result = g_api_table.DeleteAce(pAcl, dwAceIndex);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DestroyPrivateObjectSecurity(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** ObjectDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ObjectDescriptor);

        auto win32_impl_result = g_api_table.DestroyPrivateObjectSecurity(ObjectDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DuplicateToken(win32::Windows::Win32::Foundation::HANDLE ExistingTokenHandle, win32::Windows::Win32::Security::SECURITY_IMPERSONATION_LEVEL ImpersonationLevel, win32::Windows::Win32::Foundation::HANDLE* DuplicateTokenHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ExistingTokenHandle);
        ORBIT_TRACK_PARAM(ImpersonationLevel);
        ORBIT_TRACK_PARAM(DuplicateTokenHandle);

        auto win32_impl_result = g_api_table.DuplicateToken(ExistingTokenHandle, ImpersonationLevel, DuplicateTokenHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DuplicateTokenEx(win32::Windows::Win32::Foundation::HANDLE hExistingToken, win32::Windows::Win32::Security::TOKEN_ACCESS_MASK dwDesiredAccess, win32::Windows::Win32::Security::SECURITY_ATTRIBUTES* lpTokenAttributes, win32::Windows::Win32::Security::SECURITY_IMPERSONATION_LEVEL ImpersonationLevel, win32::Windows::Win32::Security::TOKEN_TYPE TokenType, win32::Windows::Win32::Foundation::HANDLE* phNewToken) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hExistingToken);
        ORBIT_TRACK_PARAM(dwDesiredAccess);
        ORBIT_TRACK_PARAM(lpTokenAttributes);
        ORBIT_TRACK_PARAM(ImpersonationLevel);
        ORBIT_TRACK_PARAM(TokenType);
        ORBIT_TRACK_PARAM(phNewToken);

        auto win32_impl_result = g_api_table.DuplicateTokenEx(hExistingToken, dwDesiredAccess, lpTokenAttributes, ImpersonationLevel, TokenType, phNewToken);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EqualPrefixSid(win32::Windows::Win32::Foundation::PSID pSid1, win32::Windows::Win32::Foundation::PSID pSid2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSid1);
        ORBIT_TRACK_PARAM(pSid2);

        auto win32_impl_result = g_api_table.EqualPrefixSid(pSid1, pSid2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EqualSid(win32::Windows::Win32::Foundation::PSID pSid1, win32::Windows::Win32::Foundation::PSID pSid2) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSid1);
        ORBIT_TRACK_PARAM(pSid2);

        auto win32_impl_result = g_api_table.EqualSid(pSid1, pSid2);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_FindFirstFreeAce(win32::Windows::Win32::Security::ACL* pAcl, void** pAce) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(pAce);

        auto win32_impl_result = g_api_table.FindFirstFreeAce(pAcl, pAce);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_FreeSid(win32::Windows::Win32::Foundation::PSID pSid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSid);

        auto win32_impl_result = g_api_table.FreeSid(pSid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetAce(win32::Windows::Win32::Security::ACL* pAcl, uint32_t dwAceIndex, void** pAce) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(dwAceIndex);
        ORBIT_TRACK_PARAM(pAce);

        auto win32_impl_result = g_api_table.GetAce(pAcl, dwAceIndex, pAce);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetAclInformation(win32::Windows::Win32::Security::ACL* pAcl, void* pAclInformation, uint32_t nAclInformationLength, win32::Windows::Win32::Security::ACL_INFORMATION_CLASS dwAclInformationClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(pAclInformation);
        ORBIT_TRACK_PARAM(nAclInformationLength);
        ORBIT_TRACK_PARAM(dwAclInformationClass);

        auto win32_impl_result = g_api_table.GetAclInformation(pAcl, pAclInformation, nAclInformationLength, dwAclInformationClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetFileSecurityW(win32::Windows::Win32::Foundation::PWSTR lpFileName, uint32_t RequestedInformation, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, uint32_t nLength, uint32_t* lpnLengthNeeded) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpFileName);
        ORBIT_TRACK_PARAM(RequestedInformation);
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(nLength);
        ORBIT_TRACK_PARAM(lpnLengthNeeded);

        auto win32_impl_result = g_api_table.GetFileSecurityW(lpFileName, RequestedInformation, pSecurityDescriptor, nLength, lpnLengthNeeded);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetKernelObjectSecurity(win32::Windows::Win32::Foundation::HANDLE Handle, uint32_t RequestedInformation, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, uint32_t nLength, uint32_t* lpnLengthNeeded) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Handle);
        ORBIT_TRACK_PARAM(RequestedInformation);
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(nLength);
        ORBIT_TRACK_PARAM(lpnLengthNeeded);

        auto win32_impl_result = g_api_table.GetKernelObjectSecurity(Handle, RequestedInformation, pSecurityDescriptor, nLength, lpnLengthNeeded);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetLengthSid(win32::Windows::Win32::Foundation::PSID pSid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSid);

        auto win32_impl_result = g_api_table.GetLengthSid(pSid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetPrivateObjectSecurity(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* ObjectDescriptor, uint32_t SecurityInformation, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* ResultantDescriptor, uint32_t DescriptorLength, uint32_t* ReturnLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ObjectDescriptor);
        ORBIT_TRACK_PARAM(SecurityInformation);
        ORBIT_TRACK_PARAM(ResultantDescriptor);
        ORBIT_TRACK_PARAM(DescriptorLength);
        ORBIT_TRACK_PARAM(ReturnLength);

        auto win32_impl_result = g_api_table.GetPrivateObjectSecurity(ObjectDescriptor, SecurityInformation, ResultantDescriptor, DescriptorLength, ReturnLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetSecurityDescriptorControl(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, uint16_t* pControl, uint32_t* lpdwRevision) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(pControl);
        ORBIT_TRACK_PARAM(lpdwRevision);

        auto win32_impl_result = g_api_table.GetSecurityDescriptorControl(pSecurityDescriptor, pControl, lpdwRevision);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetSecurityDescriptorDacl(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, int32_t* lpbDaclPresent, win32::Windows::Win32::Security::ACL** pDacl, int32_t* lpbDaclDefaulted) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(lpbDaclPresent);
        ORBIT_TRACK_PARAM(pDacl);
        ORBIT_TRACK_PARAM(lpbDaclDefaulted);

        auto win32_impl_result = g_api_table.GetSecurityDescriptorDacl(pSecurityDescriptor, lpbDaclPresent, pDacl, lpbDaclDefaulted);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetSecurityDescriptorGroup(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, win32::Windows::Win32::Foundation::PSID* pGroup, int32_t* lpbGroupDefaulted) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(pGroup);
        ORBIT_TRACK_PARAM(lpbGroupDefaulted);

        auto win32_impl_result = g_api_table.GetSecurityDescriptorGroup(pSecurityDescriptor, pGroup, lpbGroupDefaulted);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetSecurityDescriptorLength(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSecurityDescriptor);

        auto win32_impl_result = g_api_table.GetSecurityDescriptorLength(pSecurityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetSecurityDescriptorOwner(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, win32::Windows::Win32::Foundation::PSID* pOwner, int32_t* lpbOwnerDefaulted) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(pOwner);
        ORBIT_TRACK_PARAM(lpbOwnerDefaulted);

        auto win32_impl_result = g_api_table.GetSecurityDescriptorOwner(pSecurityDescriptor, pOwner, lpbOwnerDefaulted);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetSecurityDescriptorRMControl(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* SecurityDescriptor, uint8_t* RMControl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SecurityDescriptor);
        ORBIT_TRACK_PARAM(RMControl);

        auto win32_impl_result = g_api_table.GetSecurityDescriptorRMControl(SecurityDescriptor, RMControl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetSecurityDescriptorSacl(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, int32_t* lpbSaclPresent, win32::Windows::Win32::Security::ACL** pSacl, int32_t* lpbSaclDefaulted) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(lpbSaclPresent);
        ORBIT_TRACK_PARAM(pSacl);
        ORBIT_TRACK_PARAM(lpbSaclDefaulted);

        auto win32_impl_result = g_api_table.GetSecurityDescriptorSacl(pSecurityDescriptor, lpbSaclPresent, pSacl, lpbSaclDefaulted);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Security::SID_IDENTIFIER_AUTHORITY* __stdcall ORBIT_IMPL_GetSidIdentifierAuthority(win32::Windows::Win32::Foundation::PSID pSid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSid);

        auto win32_impl_result = g_api_table.GetSidIdentifierAuthority(pSid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_GetSidLengthRequired(uint8_t nSubAuthorityCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(nSubAuthorityCount);

        auto win32_impl_result = g_api_table.GetSidLengthRequired(nSubAuthorityCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t* __stdcall ORBIT_IMPL_GetSidSubAuthority(win32::Windows::Win32::Foundation::PSID pSid, uint32_t nSubAuthority) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSid);
        ORBIT_TRACK_PARAM(nSubAuthority);

        auto win32_impl_result = g_api_table.GetSidSubAuthority(pSid, nSubAuthority);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint8_t* __stdcall ORBIT_IMPL_GetSidSubAuthorityCount(win32::Windows::Win32::Foundation::PSID pSid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSid);

        auto win32_impl_result = g_api_table.GetSidSubAuthorityCount(pSid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetTokenInformation(win32::Windows::Win32::Foundation::HANDLE TokenHandle, win32::Windows::Win32::Security::TOKEN_INFORMATION_CLASS TokenInformationClass, void* TokenInformation, uint32_t TokenInformationLength, uint32_t* ReturnLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TokenHandle);
        ORBIT_TRACK_PARAM(TokenInformationClass);
        ORBIT_TRACK_PARAM(TokenInformation);
        ORBIT_TRACK_PARAM(TokenInformationLength);
        ORBIT_TRACK_PARAM(ReturnLength);

        auto win32_impl_result = g_api_table.GetTokenInformation(TokenHandle, TokenInformationClass, TokenInformation, TokenInformationLength, ReturnLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetWindowsAccountDomainSid(win32::Windows::Win32::Foundation::PSID pSid, win32::Windows::Win32::Foundation::PSID pDomainSid, uint32_t* cbDomainSid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSid);
        ORBIT_TRACK_PARAM(pDomainSid);
        ORBIT_TRACK_PARAM(cbDomainSid);

        auto win32_impl_result = g_api_table.GetWindowsAccountDomainSid(pSid, pDomainSid, cbDomainSid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ImpersonateAnonymousToken(win32::Windows::Win32::Foundation::HANDLE ThreadHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ThreadHandle);

        auto win32_impl_result = g_api_table.ImpersonateAnonymousToken(ThreadHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ImpersonateLoggedOnUser(win32::Windows::Win32::Foundation::HANDLE hToken) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hToken);

        auto win32_impl_result = g_api_table.ImpersonateLoggedOnUser(hToken);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ImpersonateSelf(win32::Windows::Win32::Security::SECURITY_IMPERSONATION_LEVEL ImpersonationLevel) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ImpersonationLevel);

        auto win32_impl_result = g_api_table.ImpersonateSelf(ImpersonationLevel);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_InitializeAcl(win32::Windows::Win32::Security::ACL* pAcl, uint32_t nAclLength, uint32_t dwAclRevision) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(nAclLength);
        ORBIT_TRACK_PARAM(dwAclRevision);

        auto win32_impl_result = g_api_table.InitializeAcl(pAcl, nAclLength, dwAclRevision);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_InitializeSecurityDescriptor(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, uint32_t dwRevision) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(dwRevision);

        auto win32_impl_result = g_api_table.InitializeSecurityDescriptor(pSecurityDescriptor, dwRevision);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_InitializeSid(win32::Windows::Win32::Foundation::PSID Sid, win32::Windows::Win32::Security::SID_IDENTIFIER_AUTHORITY* pIdentifierAuthority, uint8_t nSubAuthorityCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Sid);
        ORBIT_TRACK_PARAM(pIdentifierAuthority);
        ORBIT_TRACK_PARAM(nSubAuthorityCount);

        auto win32_impl_result = g_api_table.InitializeSid(Sid, pIdentifierAuthority, nSubAuthorityCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsTokenRestricted(win32::Windows::Win32::Foundation::HANDLE TokenHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TokenHandle);

        auto win32_impl_result = g_api_table.IsTokenRestricted(TokenHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsValidAcl(win32::Windows::Win32::Security::ACL* pAcl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);

        auto win32_impl_result = g_api_table.IsValidAcl(pAcl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsValidSecurityDescriptor(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSecurityDescriptor);

        auto win32_impl_result = g_api_table.IsValidSecurityDescriptor(pSecurityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsValidSid(win32::Windows::Win32::Foundation::PSID pSid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSid);

        auto win32_impl_result = g_api_table.IsValidSid(pSid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsWellKnownSid(win32::Windows::Win32::Foundation::PSID pSid, win32::Windows::Win32::Security::WELL_KNOWN_SID_TYPE WellKnownSidType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSid);
        ORBIT_TRACK_PARAM(WellKnownSidType);

        auto win32_impl_result = g_api_table.IsWellKnownSid(pSid, WellKnownSidType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_MakeAbsoluteSD(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSelfRelativeSecurityDescriptor, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pAbsoluteSecurityDescriptor, uint32_t* lpdwAbsoluteSecurityDescriptorSize, win32::Windows::Win32::Security::ACL* pDacl, uint32_t* lpdwDaclSize, win32::Windows::Win32::Security::ACL* pSacl, uint32_t* lpdwSaclSize, win32::Windows::Win32::Foundation::PSID pOwner, uint32_t* lpdwOwnerSize, win32::Windows::Win32::Foundation::PSID pPrimaryGroup, uint32_t* lpdwPrimaryGroupSize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSelfRelativeSecurityDescriptor);
        ORBIT_TRACK_PARAM(pAbsoluteSecurityDescriptor);
        ORBIT_TRACK_PARAM(lpdwAbsoluteSecurityDescriptorSize);
        ORBIT_TRACK_PARAM(pDacl);
        ORBIT_TRACK_PARAM(lpdwDaclSize);
        ORBIT_TRACK_PARAM(pSacl);
        ORBIT_TRACK_PARAM(lpdwSaclSize);
        ORBIT_TRACK_PARAM(pOwner);
        ORBIT_TRACK_PARAM(lpdwOwnerSize);
        ORBIT_TRACK_PARAM(pPrimaryGroup);
        ORBIT_TRACK_PARAM(lpdwPrimaryGroupSize);

        auto win32_impl_result = g_api_table.MakeAbsoluteSD(pSelfRelativeSecurityDescriptor, pAbsoluteSecurityDescriptor, lpdwAbsoluteSecurityDescriptorSize, pDacl, lpdwDaclSize, pSacl, lpdwSaclSize, pOwner, lpdwOwnerSize, pPrimaryGroup, lpdwPrimaryGroupSize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_MakeSelfRelativeSD(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pAbsoluteSecurityDescriptor, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSelfRelativeSecurityDescriptor, uint32_t* lpdwBufferLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAbsoluteSecurityDescriptor);
        ORBIT_TRACK_PARAM(pSelfRelativeSecurityDescriptor);
        ORBIT_TRACK_PARAM(lpdwBufferLength);

        auto win32_impl_result = g_api_table.MakeSelfRelativeSD(pAbsoluteSecurityDescriptor, pSelfRelativeSecurityDescriptor, lpdwBufferLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_MapGenericMask(uint32_t* AccessMask, win32::Windows::Win32::Security::GENERIC_MAPPING* GenericMapping) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(AccessMask);
        ORBIT_TRACK_PARAM(GenericMapping);

        g_api_table.MapGenericMask(AccessMask, GenericMapping);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ObjectCloseAuditAlarmW(win32::Windows::Win32::Foundation::PWSTR SubsystemName, void* HandleId, win32::Windows::Win32::Foundation::BOOL GenerateOnClose) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SubsystemName);
        ORBIT_TRACK_PARAM(HandleId);
        ORBIT_TRACK_PARAM(GenerateOnClose);

        auto win32_impl_result = g_api_table.ObjectCloseAuditAlarmW(SubsystemName, HandleId, GenerateOnClose);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ObjectDeleteAuditAlarmW(win32::Windows::Win32::Foundation::PWSTR SubsystemName, void* HandleId, win32::Windows::Win32::Foundation::BOOL GenerateOnClose) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SubsystemName);
        ORBIT_TRACK_PARAM(HandleId);
        ORBIT_TRACK_PARAM(GenerateOnClose);

        auto win32_impl_result = g_api_table.ObjectDeleteAuditAlarmW(SubsystemName, HandleId, GenerateOnClose);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ObjectOpenAuditAlarmW(win32::Windows::Win32::Foundation::PWSTR SubsystemName, void* HandleId, win32::Windows::Win32::Foundation::PWSTR ObjectTypeName, win32::Windows::Win32::Foundation::PWSTR ObjectName, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, win32::Windows::Win32::Foundation::HANDLE ClientToken, uint32_t DesiredAccess, uint32_t GrantedAccess, win32::Windows::Win32::Security::PRIVILEGE_SET* Privileges, win32::Windows::Win32::Foundation::BOOL ObjectCreation, win32::Windows::Win32::Foundation::BOOL AccessGranted, int32_t* GenerateOnClose) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SubsystemName);
        ORBIT_TRACK_PARAM(HandleId);
        ORBIT_TRACK_PARAM(ObjectTypeName);
        ORBIT_TRACK_PARAM(ObjectName);
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(ClientToken);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(GrantedAccess);
        ORBIT_TRACK_PARAM(Privileges);
        ORBIT_TRACK_PARAM(ObjectCreation);
        ORBIT_TRACK_PARAM(AccessGranted);
        ORBIT_TRACK_PARAM(GenerateOnClose);

        auto win32_impl_result = g_api_table.ObjectOpenAuditAlarmW(SubsystemName, HandleId, ObjectTypeName, ObjectName, pSecurityDescriptor, ClientToken, DesiredAccess, GrantedAccess, Privileges, ObjectCreation, AccessGranted, GenerateOnClose);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ObjectPrivilegeAuditAlarmW(win32::Windows::Win32::Foundation::PWSTR SubsystemName, void* HandleId, win32::Windows::Win32::Foundation::HANDLE ClientToken, uint32_t DesiredAccess, win32::Windows::Win32::Security::PRIVILEGE_SET* Privileges, win32::Windows::Win32::Foundation::BOOL AccessGranted) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SubsystemName);
        ORBIT_TRACK_PARAM(HandleId);
        ORBIT_TRACK_PARAM(ClientToken);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(Privileges);
        ORBIT_TRACK_PARAM(AccessGranted);

        auto win32_impl_result = g_api_table.ObjectPrivilegeAuditAlarmW(SubsystemName, HandleId, ClientToken, DesiredAccess, Privileges, AccessGranted);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_PrivilegeCheck(win32::Windows::Win32::Foundation::HANDLE ClientToken, win32::Windows::Win32::Security::PRIVILEGE_SET* RequiredPrivileges, int32_t* pfResult) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(ClientToken);
        ORBIT_TRACK_PARAM(RequiredPrivileges);
        ORBIT_TRACK_PARAM(pfResult);

        auto win32_impl_result = g_api_table.PrivilegeCheck(ClientToken, RequiredPrivileges, pfResult);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_PrivilegedServiceAuditAlarmW(win32::Windows::Win32::Foundation::PWSTR SubsystemName, win32::Windows::Win32::Foundation::PWSTR ServiceName, win32::Windows::Win32::Foundation::HANDLE ClientToken, win32::Windows::Win32::Security::PRIVILEGE_SET* Privileges, win32::Windows::Win32::Foundation::BOOL AccessGranted) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SubsystemName);
        ORBIT_TRACK_PARAM(ServiceName);
        ORBIT_TRACK_PARAM(ClientToken);
        ORBIT_TRACK_PARAM(Privileges);
        ORBIT_TRACK_PARAM(AccessGranted);

        auto win32_impl_result = g_api_table.PrivilegedServiceAuditAlarmW(SubsystemName, ServiceName, ClientToken, Privileges, AccessGranted);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_QuerySecurityAccessMask(uint32_t SecurityInformation, uint32_t* DesiredAccess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SecurityInformation);
        ORBIT_TRACK_PARAM(DesiredAccess);

        g_api_table.QuerySecurityAccessMask(SecurityInformation, DesiredAccess);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RevertToSelf() noexcept
    {
        ORBIT_SCOPE_FUNCTION();

        auto win32_impl_result = g_api_table.RevertToSelf();
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetAclInformation(win32::Windows::Win32::Security::ACL* pAcl, void* pAclInformation, uint32_t nAclInformationLength, win32::Windows::Win32::Security::ACL_INFORMATION_CLASS dwAclInformationClass) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(pAclInformation);
        ORBIT_TRACK_PARAM(nAclInformationLength);
        ORBIT_TRACK_PARAM(dwAclInformationClass);

        auto win32_impl_result = g_api_table.SetAclInformation(pAcl, pAclInformation, nAclInformationLength, dwAclInformationClass);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetFileSecurityW(win32::Windows::Win32::Foundation::PWSTR lpFileName, uint32_t SecurityInformation, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpFileName);
        ORBIT_TRACK_PARAM(SecurityInformation);
        ORBIT_TRACK_PARAM(pSecurityDescriptor);

        auto win32_impl_result = g_api_table.SetFileSecurityW(lpFileName, SecurityInformation, pSecurityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetKernelObjectSecurity(win32::Windows::Win32::Foundation::HANDLE Handle, uint32_t SecurityInformation, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* SecurityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(Handle);
        ORBIT_TRACK_PARAM(SecurityInformation);
        ORBIT_TRACK_PARAM(SecurityDescriptor);

        auto win32_impl_result = g_api_table.SetKernelObjectSecurity(Handle, SecurityInformation, SecurityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetPrivateObjectSecurity(uint32_t SecurityInformation, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* ModificationDescriptor, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** ObjectsSecurityDescriptor, win32::Windows::Win32::Security::GENERIC_MAPPING* GenericMapping, win32::Windows::Win32::Foundation::HANDLE Token) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SecurityInformation);
        ORBIT_TRACK_PARAM(ModificationDescriptor);
        ORBIT_TRACK_PARAM(ObjectsSecurityDescriptor);
        ORBIT_TRACK_PARAM(GenericMapping);
        ORBIT_TRACK_PARAM(Token);

        auto win32_impl_result = g_api_table.SetPrivateObjectSecurity(SecurityInformation, ModificationDescriptor, ObjectsSecurityDescriptor, GenericMapping, Token);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetPrivateObjectSecurityEx(uint32_t SecurityInformation, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* ModificationDescriptor, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR** ObjectsSecurityDescriptor, win32::Windows::Win32::Security::SECURITY_AUTO_INHERIT_FLAGS AutoInheritFlags, win32::Windows::Win32::Security::GENERIC_MAPPING* GenericMapping, win32::Windows::Win32::Foundation::HANDLE Token) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SecurityInformation);
        ORBIT_TRACK_PARAM(ModificationDescriptor);
        ORBIT_TRACK_PARAM(ObjectsSecurityDescriptor);
        ORBIT_TRACK_PARAM(AutoInheritFlags);
        ORBIT_TRACK_PARAM(GenericMapping);
        ORBIT_TRACK_PARAM(Token);

        auto win32_impl_result = g_api_table.SetPrivateObjectSecurityEx(SecurityInformation, ModificationDescriptor, ObjectsSecurityDescriptor, AutoInheritFlags, GenericMapping, Token);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_SetSecurityAccessMask(uint32_t SecurityInformation, uint32_t* DesiredAccess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SecurityInformation);
        ORBIT_TRACK_PARAM(DesiredAccess);

        g_api_table.SetSecurityAccessMask(SecurityInformation, DesiredAccess);
        
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetSecurityDescriptorControl(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, uint16_t ControlBitsOfInterest, uint16_t ControlBitsToSet) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(ControlBitsOfInterest);
        ORBIT_TRACK_PARAM(ControlBitsToSet);

        auto win32_impl_result = g_api_table.SetSecurityDescriptorControl(pSecurityDescriptor, ControlBitsOfInterest, ControlBitsToSet);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetSecurityDescriptorDacl(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, win32::Windows::Win32::Foundation::BOOL bDaclPresent, win32::Windows::Win32::Security::ACL* pDacl, win32::Windows::Win32::Foundation::BOOL bDaclDefaulted) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(bDaclPresent);
        ORBIT_TRACK_PARAM(pDacl);
        ORBIT_TRACK_PARAM(bDaclDefaulted);

        auto win32_impl_result = g_api_table.SetSecurityDescriptorDacl(pSecurityDescriptor, bDaclPresent, pDacl, bDaclDefaulted);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetSecurityDescriptorGroup(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, win32::Windows::Win32::Foundation::PSID pGroup, win32::Windows::Win32::Foundation::BOOL bGroupDefaulted) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(pGroup);
        ORBIT_TRACK_PARAM(bGroupDefaulted);

        auto win32_impl_result = g_api_table.SetSecurityDescriptorGroup(pSecurityDescriptor, pGroup, bGroupDefaulted);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetSecurityDescriptorOwner(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, win32::Windows::Win32::Foundation::PSID pOwner, win32::Windows::Win32::Foundation::BOOL bOwnerDefaulted) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(pOwner);
        ORBIT_TRACK_PARAM(bOwnerDefaulted);

        auto win32_impl_result = g_api_table.SetSecurityDescriptorOwner(pSecurityDescriptor, pOwner, bOwnerDefaulted);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_SetSecurityDescriptorRMControl(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* SecurityDescriptor, uint8_t* RMControl) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SecurityDescriptor);
        ORBIT_TRACK_PARAM(RMControl);

        auto win32_impl_result = g_api_table.SetSecurityDescriptorRMControl(SecurityDescriptor, RMControl);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetSecurityDescriptorSacl(win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, win32::Windows::Win32::Foundation::BOOL bSaclPresent, win32::Windows::Win32::Security::ACL* pSacl, win32::Windows::Win32::Foundation::BOOL bSaclDefaulted) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(bSaclPresent);
        ORBIT_TRACK_PARAM(pSacl);
        ORBIT_TRACK_PARAM(bSaclDefaulted);

        auto win32_impl_result = g_api_table.SetSecurityDescriptorSacl(pSecurityDescriptor, bSaclPresent, pSacl, bSaclDefaulted);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetTokenInformation(win32::Windows::Win32::Foundation::HANDLE TokenHandle, win32::Windows::Win32::Security::TOKEN_INFORMATION_CLASS TokenInformationClass, void* TokenInformation, uint32_t TokenInformationLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(TokenHandle);
        ORBIT_TRACK_PARAM(TokenInformationClass);
        ORBIT_TRACK_PARAM(TokenInformation);
        ORBIT_TRACK_PARAM(TokenInformationLength);

        auto win32_impl_result = g_api_table.SetTokenInformation(TokenHandle, TokenInformationClass, TokenInformation, TokenInformationLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetCachedSigningLevel(win32::Windows::Win32::Foundation::HANDLE* SourceFiles, uint32_t SourceFileCount, uint32_t Flags, win32::Windows::Win32::Foundation::HANDLE TargetFile) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SourceFiles);
        ORBIT_TRACK_PARAM(SourceFileCount);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(TargetFile);

        auto win32_impl_result = g_api_table.SetCachedSigningLevel(SourceFiles, SourceFileCount, Flags, TargetFile);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetCachedSigningLevel(win32::Windows::Win32::Foundation::HANDLE File, uint32_t* Flags, uint32_t* SigningLevel, uint8_t* Thumbprint, uint32_t* ThumbprintSize, uint32_t* ThumbprintAlgorithm) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(File);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(SigningLevel);
        ORBIT_TRACK_PARAM(Thumbprint);
        ORBIT_TRACK_PARAM(ThumbprintSize);
        ORBIT_TRACK_PARAM(ThumbprintAlgorithm);

        auto win32_impl_result = g_api_table.GetCachedSigningLevel(File, Flags, SigningLevel, Thumbprint, ThumbprintSize, ThumbprintAlgorithm);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DeriveCapabilitySidsFromName(win32::Windows::Win32::Foundation::PWSTR CapName, win32::Windows::Win32::Foundation::PSID** CapabilityGroupSids, uint32_t* CapabilityGroupSidCount, win32::Windows::Win32::Foundation::PSID** CapabilitySids, uint32_t* CapabilitySidCount) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(CapName);
        ORBIT_TRACK_PARAM(CapabilityGroupSids);
        ORBIT_TRACK_PARAM(CapabilityGroupSidCount);
        ORBIT_TRACK_PARAM(CapabilitySids);
        ORBIT_TRACK_PARAM(CapabilitySidCount);

        auto win32_impl_result = g_api_table.DeriveCapabilitySidsFromName(CapName, CapabilityGroupSids, CapabilityGroupSidCount, CapabilitySids, CapabilitySidCount);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetUserObjectSecurity(win32::Windows::Win32::Foundation::HANDLE hObj, win32::Windows::Win32::Security::OBJECT_SECURITY_INFORMATION* pSIRequested, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSID) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hObj);
        ORBIT_TRACK_PARAM(pSIRequested);
        ORBIT_TRACK_PARAM(pSID);

        auto win32_impl_result = g_api_table.SetUserObjectSecurity(hObj, pSIRequested, pSID);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetUserObjectSecurity(win32::Windows::Win32::Foundation::HANDLE hObj, uint32_t* pSIRequested, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSID, uint32_t nLength, uint32_t* lpnLengthNeeded) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hObj);
        ORBIT_TRACK_PARAM(pSIRequested);
        ORBIT_TRACK_PARAM(pSID);
        ORBIT_TRACK_PARAM(nLength);
        ORBIT_TRACK_PARAM(lpnLengthNeeded);

        auto win32_impl_result = g_api_table.GetUserObjectSecurity(hObj, pSIRequested, pSID, nLength, lpnLengthNeeded);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AccessCheckAndAuditAlarmA(win32::Windows::Win32::Foundation::PSTR SubsystemName, void* HandleId, win32::Windows::Win32::Foundation::PSTR ObjectTypeName, win32::Windows::Win32::Foundation::PSTR ObjectName, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* SecurityDescriptor, uint32_t DesiredAccess, win32::Windows::Win32::Security::GENERIC_MAPPING* GenericMapping, win32::Windows::Win32::Foundation::BOOL ObjectCreation, uint32_t* GrantedAccess, int32_t* AccessStatus, int32_t* pfGenerateOnClose) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SubsystemName);
        ORBIT_TRACK_PARAM(HandleId);
        ORBIT_TRACK_PARAM(ObjectTypeName);
        ORBIT_TRACK_PARAM(ObjectName);
        ORBIT_TRACK_PARAM(SecurityDescriptor);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(GenericMapping);
        ORBIT_TRACK_PARAM(ObjectCreation);
        ORBIT_TRACK_PARAM(GrantedAccess);
        ORBIT_TRACK_PARAM(AccessStatus);
        ORBIT_TRACK_PARAM(pfGenerateOnClose);

        auto win32_impl_result = g_api_table.AccessCheckAndAuditAlarmA(SubsystemName, HandleId, ObjectTypeName, ObjectName, SecurityDescriptor, DesiredAccess, GenericMapping, ObjectCreation, GrantedAccess, AccessStatus, pfGenerateOnClose);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AccessCheckByTypeAndAuditAlarmA(win32::Windows::Win32::Foundation::PSTR SubsystemName, void* HandleId, win32::Windows::Win32::Foundation::PSTR ObjectTypeName, win32::Windows::Win32::Foundation::PSTR ObjectName, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* SecurityDescriptor, win32::Windows::Win32::Foundation::PSID PrincipalSelfSid, uint32_t DesiredAccess, win32::Windows::Win32::Security::AUDIT_EVENT_TYPE AuditType, uint32_t Flags, win32::Windows::Win32::Security::OBJECT_TYPE_LIST* ObjectTypeList, uint32_t ObjectTypeListLength, win32::Windows::Win32::Security::GENERIC_MAPPING* GenericMapping, win32::Windows::Win32::Foundation::BOOL ObjectCreation, uint32_t* GrantedAccess, int32_t* AccessStatus, int32_t* pfGenerateOnClose) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SubsystemName);
        ORBIT_TRACK_PARAM(HandleId);
        ORBIT_TRACK_PARAM(ObjectTypeName);
        ORBIT_TRACK_PARAM(ObjectName);
        ORBIT_TRACK_PARAM(SecurityDescriptor);
        ORBIT_TRACK_PARAM(PrincipalSelfSid);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(AuditType);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(ObjectTypeList);
        ORBIT_TRACK_PARAM(ObjectTypeListLength);
        ORBIT_TRACK_PARAM(GenericMapping);
        ORBIT_TRACK_PARAM(ObjectCreation);
        ORBIT_TRACK_PARAM(GrantedAccess);
        ORBIT_TRACK_PARAM(AccessStatus);
        ORBIT_TRACK_PARAM(pfGenerateOnClose);

        auto win32_impl_result = g_api_table.AccessCheckByTypeAndAuditAlarmA(SubsystemName, HandleId, ObjectTypeName, ObjectName, SecurityDescriptor, PrincipalSelfSid, DesiredAccess, AuditType, Flags, ObjectTypeList, ObjectTypeListLength, GenericMapping, ObjectCreation, GrantedAccess, AccessStatus, pfGenerateOnClose);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AccessCheckByTypeResultListAndAuditAlarmA(win32::Windows::Win32::Foundation::PSTR SubsystemName, void* HandleId, win32::Windows::Win32::Foundation::PSTR ObjectTypeName, win32::Windows::Win32::Foundation::PSTR ObjectName, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* SecurityDescriptor, win32::Windows::Win32::Foundation::PSID PrincipalSelfSid, uint32_t DesiredAccess, win32::Windows::Win32::Security::AUDIT_EVENT_TYPE AuditType, uint32_t Flags, win32::Windows::Win32::Security::OBJECT_TYPE_LIST* ObjectTypeList, uint32_t ObjectTypeListLength, win32::Windows::Win32::Security::GENERIC_MAPPING* GenericMapping, win32::Windows::Win32::Foundation::BOOL ObjectCreation, uint32_t* GrantedAccess, uint32_t* AccessStatusList, int32_t* pfGenerateOnClose) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SubsystemName);
        ORBIT_TRACK_PARAM(HandleId);
        ORBIT_TRACK_PARAM(ObjectTypeName);
        ORBIT_TRACK_PARAM(ObjectName);
        ORBIT_TRACK_PARAM(SecurityDescriptor);
        ORBIT_TRACK_PARAM(PrincipalSelfSid);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(AuditType);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(ObjectTypeList);
        ORBIT_TRACK_PARAM(ObjectTypeListLength);
        ORBIT_TRACK_PARAM(GenericMapping);
        ORBIT_TRACK_PARAM(ObjectCreation);
        ORBIT_TRACK_PARAM(GrantedAccess);
        ORBIT_TRACK_PARAM(AccessStatusList);
        ORBIT_TRACK_PARAM(pfGenerateOnClose);

        auto win32_impl_result = g_api_table.AccessCheckByTypeResultListAndAuditAlarmA(SubsystemName, HandleId, ObjectTypeName, ObjectName, SecurityDescriptor, PrincipalSelfSid, DesiredAccess, AuditType, Flags, ObjectTypeList, ObjectTypeListLength, GenericMapping, ObjectCreation, GrantedAccess, AccessStatusList, pfGenerateOnClose);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AccessCheckByTypeResultListAndAuditAlarmByHandleA(win32::Windows::Win32::Foundation::PSTR SubsystemName, void* HandleId, win32::Windows::Win32::Foundation::HANDLE ClientToken, win32::Windows::Win32::Foundation::PSTR ObjectTypeName, win32::Windows::Win32::Foundation::PSTR ObjectName, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* SecurityDescriptor, win32::Windows::Win32::Foundation::PSID PrincipalSelfSid, uint32_t DesiredAccess, win32::Windows::Win32::Security::AUDIT_EVENT_TYPE AuditType, uint32_t Flags, win32::Windows::Win32::Security::OBJECT_TYPE_LIST* ObjectTypeList, uint32_t ObjectTypeListLength, win32::Windows::Win32::Security::GENERIC_MAPPING* GenericMapping, win32::Windows::Win32::Foundation::BOOL ObjectCreation, uint32_t* GrantedAccess, uint32_t* AccessStatusList, int32_t* pfGenerateOnClose) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SubsystemName);
        ORBIT_TRACK_PARAM(HandleId);
        ORBIT_TRACK_PARAM(ClientToken);
        ORBIT_TRACK_PARAM(ObjectTypeName);
        ORBIT_TRACK_PARAM(ObjectName);
        ORBIT_TRACK_PARAM(SecurityDescriptor);
        ORBIT_TRACK_PARAM(PrincipalSelfSid);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(AuditType);
        ORBIT_TRACK_PARAM(Flags);
        ORBIT_TRACK_PARAM(ObjectTypeList);
        ORBIT_TRACK_PARAM(ObjectTypeListLength);
        ORBIT_TRACK_PARAM(GenericMapping);
        ORBIT_TRACK_PARAM(ObjectCreation);
        ORBIT_TRACK_PARAM(GrantedAccess);
        ORBIT_TRACK_PARAM(AccessStatusList);
        ORBIT_TRACK_PARAM(pfGenerateOnClose);

        auto win32_impl_result = g_api_table.AccessCheckByTypeResultListAndAuditAlarmByHandleA(SubsystemName, HandleId, ClientToken, ObjectTypeName, ObjectName, SecurityDescriptor, PrincipalSelfSid, DesiredAccess, AuditType, Flags, ObjectTypeList, ObjectTypeListLength, GenericMapping, ObjectCreation, GrantedAccess, AccessStatusList, pfGenerateOnClose);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ObjectOpenAuditAlarmA(win32::Windows::Win32::Foundation::PSTR SubsystemName, void* HandleId, win32::Windows::Win32::Foundation::PSTR ObjectTypeName, win32::Windows::Win32::Foundation::PSTR ObjectName, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, win32::Windows::Win32::Foundation::HANDLE ClientToken, uint32_t DesiredAccess, uint32_t GrantedAccess, win32::Windows::Win32::Security::PRIVILEGE_SET* Privileges, win32::Windows::Win32::Foundation::BOOL ObjectCreation, win32::Windows::Win32::Foundation::BOOL AccessGranted, int32_t* GenerateOnClose) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SubsystemName);
        ORBIT_TRACK_PARAM(HandleId);
        ORBIT_TRACK_PARAM(ObjectTypeName);
        ORBIT_TRACK_PARAM(ObjectName);
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(ClientToken);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(GrantedAccess);
        ORBIT_TRACK_PARAM(Privileges);
        ORBIT_TRACK_PARAM(ObjectCreation);
        ORBIT_TRACK_PARAM(AccessGranted);
        ORBIT_TRACK_PARAM(GenerateOnClose);

        auto win32_impl_result = g_api_table.ObjectOpenAuditAlarmA(SubsystemName, HandleId, ObjectTypeName, ObjectName, pSecurityDescriptor, ClientToken, DesiredAccess, GrantedAccess, Privileges, ObjectCreation, AccessGranted, GenerateOnClose);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ObjectPrivilegeAuditAlarmA(win32::Windows::Win32::Foundation::PSTR SubsystemName, void* HandleId, win32::Windows::Win32::Foundation::HANDLE ClientToken, uint32_t DesiredAccess, win32::Windows::Win32::Security::PRIVILEGE_SET* Privileges, win32::Windows::Win32::Foundation::BOOL AccessGranted) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SubsystemName);
        ORBIT_TRACK_PARAM(HandleId);
        ORBIT_TRACK_PARAM(ClientToken);
        ORBIT_TRACK_PARAM(DesiredAccess);
        ORBIT_TRACK_PARAM(Privileges);
        ORBIT_TRACK_PARAM(AccessGranted);

        auto win32_impl_result = g_api_table.ObjectPrivilegeAuditAlarmA(SubsystemName, HandleId, ClientToken, DesiredAccess, Privileges, AccessGranted);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ObjectCloseAuditAlarmA(win32::Windows::Win32::Foundation::PSTR SubsystemName, void* HandleId, win32::Windows::Win32::Foundation::BOOL GenerateOnClose) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SubsystemName);
        ORBIT_TRACK_PARAM(HandleId);
        ORBIT_TRACK_PARAM(GenerateOnClose);

        auto win32_impl_result = g_api_table.ObjectCloseAuditAlarmA(SubsystemName, HandleId, GenerateOnClose);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ObjectDeleteAuditAlarmA(win32::Windows::Win32::Foundation::PSTR SubsystemName, void* HandleId, win32::Windows::Win32::Foundation::BOOL GenerateOnClose) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SubsystemName);
        ORBIT_TRACK_PARAM(HandleId);
        ORBIT_TRACK_PARAM(GenerateOnClose);

        auto win32_impl_result = g_api_table.ObjectDeleteAuditAlarmA(SubsystemName, HandleId, GenerateOnClose);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_PrivilegedServiceAuditAlarmA(win32::Windows::Win32::Foundation::PSTR SubsystemName, win32::Windows::Win32::Foundation::PSTR ServiceName, win32::Windows::Win32::Foundation::HANDLE ClientToken, win32::Windows::Win32::Security::PRIVILEGE_SET* Privileges, win32::Windows::Win32::Foundation::BOOL AccessGranted) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(SubsystemName);
        ORBIT_TRACK_PARAM(ServiceName);
        ORBIT_TRACK_PARAM(ClientToken);
        ORBIT_TRACK_PARAM(Privileges);
        ORBIT_TRACK_PARAM(AccessGranted);

        auto win32_impl_result = g_api_table.PrivilegedServiceAuditAlarmA(SubsystemName, ServiceName, ClientToken, Privileges, AccessGranted);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_AddConditionalAce(win32::Windows::Win32::Security::ACL* pAcl, uint32_t dwAceRevision, win32::Windows::Win32::Security::ACE_FLAGS AceFlags, uint8_t AceType, uint32_t AccessMask, win32::Windows::Win32::Foundation::PSID pSid, win32::Windows::Win32::Foundation::PWSTR ConditionStr, uint32_t* ReturnLength) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pAcl);
        ORBIT_TRACK_PARAM(dwAceRevision);
        ORBIT_TRACK_PARAM(AceFlags);
        ORBIT_TRACK_PARAM(AceType);
        ORBIT_TRACK_PARAM(AccessMask);
        ORBIT_TRACK_PARAM(pSid);
        ORBIT_TRACK_PARAM(ConditionStr);
        ORBIT_TRACK_PARAM(ReturnLength);

        auto win32_impl_result = g_api_table.AddConditionalAce(pAcl, dwAceRevision, AceFlags, AceType, AccessMask, pSid, ConditionStr, ReturnLength);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetFileSecurityA(win32::Windows::Win32::Foundation::PSTR lpFileName, uint32_t SecurityInformation, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpFileName);
        ORBIT_TRACK_PARAM(SecurityInformation);
        ORBIT_TRACK_PARAM(pSecurityDescriptor);

        auto win32_impl_result = g_api_table.SetFileSecurityA(lpFileName, SecurityInformation, pSecurityDescriptor);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetFileSecurityA(win32::Windows::Win32::Foundation::PSTR lpFileName, uint32_t RequestedInformation, win32::Windows::Win32::Security::SECURITY_DESCRIPTOR* pSecurityDescriptor, uint32_t nLength, uint32_t* lpnLengthNeeded) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpFileName);
        ORBIT_TRACK_PARAM(RequestedInformation);
        ORBIT_TRACK_PARAM(pSecurityDescriptor);
        ORBIT_TRACK_PARAM(nLength);
        ORBIT_TRACK_PARAM(lpnLengthNeeded);

        auto win32_impl_result = g_api_table.GetFileSecurityA(lpFileName, RequestedInformation, pSecurityDescriptor, nLength, lpnLengthNeeded);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LookupAccountSidA(win32::Windows::Win32::Foundation::PSTR lpSystemName, win32::Windows::Win32::Foundation::PSID Sid, win32::Windows::Win32::Foundation::PSTR Name, uint32_t* cchName, win32::Windows::Win32::Foundation::PSTR ReferencedDomainName, uint32_t* cchReferencedDomainName, win32::Windows::Win32::Security::SID_NAME_USE* peUse) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemName);
        ORBIT_TRACK_PARAM(Sid);
        ORBIT_TRACK_PARAM(Name);
        ORBIT_TRACK_PARAM(cchName);
        ORBIT_TRACK_PARAM(ReferencedDomainName);
        ORBIT_TRACK_PARAM(cchReferencedDomainName);
        ORBIT_TRACK_PARAM(peUse);

        auto win32_impl_result = g_api_table.LookupAccountSidA(lpSystemName, Sid, Name, cchName, ReferencedDomainName, cchReferencedDomainName, peUse);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LookupAccountSidW(win32::Windows::Win32::Foundation::PWSTR lpSystemName, win32::Windows::Win32::Foundation::PSID Sid, win32::Windows::Win32::Foundation::PWSTR Name, uint32_t* cchName, win32::Windows::Win32::Foundation::PWSTR ReferencedDomainName, uint32_t* cchReferencedDomainName, win32::Windows::Win32::Security::SID_NAME_USE* peUse) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemName);
        ORBIT_TRACK_PARAM(Sid);
        ORBIT_TRACK_PARAM(Name);
        ORBIT_TRACK_PARAM(cchName);
        ORBIT_TRACK_PARAM(ReferencedDomainName);
        ORBIT_TRACK_PARAM(cchReferencedDomainName);
        ORBIT_TRACK_PARAM(peUse);

        auto win32_impl_result = g_api_table.LookupAccountSidW(lpSystemName, Sid, Name, cchName, ReferencedDomainName, cchReferencedDomainName, peUse);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LookupAccountNameA(win32::Windows::Win32::Foundation::PSTR lpSystemName, win32::Windows::Win32::Foundation::PSTR lpAccountName, win32::Windows::Win32::Foundation::PSID Sid, uint32_t* cbSid, win32::Windows::Win32::Foundation::PSTR ReferencedDomainName, uint32_t* cchReferencedDomainName, win32::Windows::Win32::Security::SID_NAME_USE* peUse) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemName);
        ORBIT_TRACK_PARAM(lpAccountName);
        ORBIT_TRACK_PARAM(Sid);
        ORBIT_TRACK_PARAM(cbSid);
        ORBIT_TRACK_PARAM(ReferencedDomainName);
        ORBIT_TRACK_PARAM(cchReferencedDomainName);
        ORBIT_TRACK_PARAM(peUse);

        auto win32_impl_result = g_api_table.LookupAccountNameA(lpSystemName, lpAccountName, Sid, cbSid, ReferencedDomainName, cchReferencedDomainName, peUse);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LookupAccountNameW(win32::Windows::Win32::Foundation::PWSTR lpSystemName, win32::Windows::Win32::Foundation::PWSTR lpAccountName, win32::Windows::Win32::Foundation::PSID Sid, uint32_t* cbSid, win32::Windows::Win32::Foundation::PWSTR ReferencedDomainName, uint32_t* cchReferencedDomainName, win32::Windows::Win32::Security::SID_NAME_USE* peUse) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemName);
        ORBIT_TRACK_PARAM(lpAccountName);
        ORBIT_TRACK_PARAM(Sid);
        ORBIT_TRACK_PARAM(cbSid);
        ORBIT_TRACK_PARAM(ReferencedDomainName);
        ORBIT_TRACK_PARAM(cchReferencedDomainName);
        ORBIT_TRACK_PARAM(peUse);

        auto win32_impl_result = g_api_table.LookupAccountNameW(lpSystemName, lpAccountName, Sid, cbSid, ReferencedDomainName, cchReferencedDomainName, peUse);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LookupPrivilegeValueA(win32::Windows::Win32::Foundation::PSTR lpSystemName, win32::Windows::Win32::Foundation::PSTR lpName, win32::Windows::Win32::Foundation::LUID* lpLuid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemName);
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(lpLuid);

        auto win32_impl_result = g_api_table.LookupPrivilegeValueA(lpSystemName, lpName, lpLuid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LookupPrivilegeValueW(win32::Windows::Win32::Foundation::PWSTR lpSystemName, win32::Windows::Win32::Foundation::PWSTR lpName, win32::Windows::Win32::Foundation::LUID* lpLuid) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemName);
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(lpLuid);

        auto win32_impl_result = g_api_table.LookupPrivilegeValueW(lpSystemName, lpName, lpLuid);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LookupPrivilegeNameA(win32::Windows::Win32::Foundation::PSTR lpSystemName, win32::Windows::Win32::Foundation::LUID* lpLuid, win32::Windows::Win32::Foundation::PSTR lpName, uint32_t* cchName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemName);
        ORBIT_TRACK_PARAM(lpLuid);
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(cchName);

        auto win32_impl_result = g_api_table.LookupPrivilegeNameA(lpSystemName, lpLuid, lpName, cchName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LookupPrivilegeNameW(win32::Windows::Win32::Foundation::PWSTR lpSystemName, win32::Windows::Win32::Foundation::LUID* lpLuid, win32::Windows::Win32::Foundation::PWSTR lpName, uint32_t* cchName) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemName);
        ORBIT_TRACK_PARAM(lpLuid);
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(cchName);

        auto win32_impl_result = g_api_table.LookupPrivilegeNameW(lpSystemName, lpLuid, lpName, cchName);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LookupPrivilegeDisplayNameA(win32::Windows::Win32::Foundation::PSTR lpSystemName, win32::Windows::Win32::Foundation::PSTR lpName, win32::Windows::Win32::Foundation::PSTR lpDisplayName, uint32_t* cchDisplayName, uint32_t* lpLanguageId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemName);
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(lpDisplayName);
        ORBIT_TRACK_PARAM(cchDisplayName);
        ORBIT_TRACK_PARAM(lpLanguageId);

        auto win32_impl_result = g_api_table.LookupPrivilegeDisplayNameA(lpSystemName, lpName, lpDisplayName, cchDisplayName, lpLanguageId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LookupPrivilegeDisplayNameW(win32::Windows::Win32::Foundation::PWSTR lpSystemName, win32::Windows::Win32::Foundation::PWSTR lpName, win32::Windows::Win32::Foundation::PWSTR lpDisplayName, uint32_t* cchDisplayName, uint32_t* lpLanguageId) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpSystemName);
        ORBIT_TRACK_PARAM(lpName);
        ORBIT_TRACK_PARAM(lpDisplayName);
        ORBIT_TRACK_PARAM(cchDisplayName);
        ORBIT_TRACK_PARAM(lpLanguageId);

        auto win32_impl_result = g_api_table.LookupPrivilegeDisplayNameW(lpSystemName, lpName, lpDisplayName, cchDisplayName, lpLanguageId);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LogonUserA(win32::Windows::Win32::Foundation::PSTR lpszUsername, win32::Windows::Win32::Foundation::PSTR lpszDomain, win32::Windows::Win32::Foundation::PSTR lpszPassword, win32::Windows::Win32::Security::LOGON32_LOGON dwLogonType, win32::Windows::Win32::Security::LOGON32_PROVIDER dwLogonProvider, win32::Windows::Win32::Foundation::HANDLE* phToken) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszUsername);
        ORBIT_TRACK_PARAM(lpszDomain);
        ORBIT_TRACK_PARAM(lpszPassword);
        ORBIT_TRACK_PARAM(dwLogonType);
        ORBIT_TRACK_PARAM(dwLogonProvider);
        ORBIT_TRACK_PARAM(phToken);

        auto win32_impl_result = g_api_table.LogonUserA(lpszUsername, lpszDomain, lpszPassword, dwLogonType, dwLogonProvider, phToken);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LogonUserW(win32::Windows::Win32::Foundation::PWSTR lpszUsername, win32::Windows::Win32::Foundation::PWSTR lpszDomain, win32::Windows::Win32::Foundation::PWSTR lpszPassword, win32::Windows::Win32::Security::LOGON32_LOGON dwLogonType, win32::Windows::Win32::Security::LOGON32_PROVIDER dwLogonProvider, win32::Windows::Win32::Foundation::HANDLE* phToken) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszUsername);
        ORBIT_TRACK_PARAM(lpszDomain);
        ORBIT_TRACK_PARAM(lpszPassword);
        ORBIT_TRACK_PARAM(dwLogonType);
        ORBIT_TRACK_PARAM(dwLogonProvider);
        ORBIT_TRACK_PARAM(phToken);

        auto win32_impl_result = g_api_table.LogonUserW(lpszUsername, lpszDomain, lpszPassword, dwLogonType, dwLogonProvider, phToken);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LogonUserExA(win32::Windows::Win32::Foundation::PSTR lpszUsername, win32::Windows::Win32::Foundation::PSTR lpszDomain, win32::Windows::Win32::Foundation::PSTR lpszPassword, win32::Windows::Win32::Security::LOGON32_LOGON dwLogonType, win32::Windows::Win32::Security::LOGON32_PROVIDER dwLogonProvider, win32::Windows::Win32::Foundation::HANDLE* phToken, win32::Windows::Win32::Foundation::PSID* ppLogonSid, void** ppProfileBuffer, uint32_t* pdwProfileLength, win32::Windows::Win32::Security::QUOTA_LIMITS* pQuotaLimits) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszUsername);
        ORBIT_TRACK_PARAM(lpszDomain);
        ORBIT_TRACK_PARAM(lpszPassword);
        ORBIT_TRACK_PARAM(dwLogonType);
        ORBIT_TRACK_PARAM(dwLogonProvider);
        ORBIT_TRACK_PARAM(phToken);
        ORBIT_TRACK_PARAM(ppLogonSid);
        ORBIT_TRACK_PARAM(ppProfileBuffer);
        ORBIT_TRACK_PARAM(pdwProfileLength);
        ORBIT_TRACK_PARAM(pQuotaLimits);

        auto win32_impl_result = g_api_table.LogonUserExA(lpszUsername, lpszDomain, lpszPassword, dwLogonType, dwLogonProvider, phToken, ppLogonSid, ppProfileBuffer, pdwProfileLength, pQuotaLimits);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_LogonUserExW(win32::Windows::Win32::Foundation::PWSTR lpszUsername, win32::Windows::Win32::Foundation::PWSTR lpszDomain, win32::Windows::Win32::Foundation::PWSTR lpszPassword, win32::Windows::Win32::Security::LOGON32_LOGON dwLogonType, win32::Windows::Win32::Security::LOGON32_PROVIDER dwLogonProvider, win32::Windows::Win32::Foundation::HANDLE* phToken, win32::Windows::Win32::Foundation::PSID* ppLogonSid, void** ppProfileBuffer, uint32_t* pdwProfileLength, win32::Windows::Win32::Security::QUOTA_LIMITS* pQuotaLimits) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(lpszUsername);
        ORBIT_TRACK_PARAM(lpszDomain);
        ORBIT_TRACK_PARAM(lpszPassword);
        ORBIT_TRACK_PARAM(dwLogonType);
        ORBIT_TRACK_PARAM(dwLogonProvider);
        ORBIT_TRACK_PARAM(phToken);
        ORBIT_TRACK_PARAM(ppLogonSid);
        ORBIT_TRACK_PARAM(ppProfileBuffer);
        ORBIT_TRACK_PARAM(pdwProfileLength);
        ORBIT_TRACK_PARAM(pQuotaLimits);

        auto win32_impl_result = g_api_table.LogonUserExW(lpszUsername, lpszDomain, lpszPassword, dwLogonType, dwLogonProvider, phToken, ppLogonSid, ppProfileBuffer, pdwProfileLength, pQuotaLimits);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    win32::Windows::Win32::Foundation::NTSTATUS __stdcall ORBIT_IMPL_RtlConvertSidToUnicodeString(win32::Windows::Win32::Foundation::UNICODE_STRING* UnicodeString, win32::Windows::Win32::Foundation::PSID Sid, win32::Windows::Win32::Foundation::BOOLEAN AllocateDestinationString) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(UnicodeString);
        ORBIT_TRACK_PARAM(Sid);
        ORBIT_TRACK_PARAM(AllocateDestinationString);

        auto win32_impl_result = g_api_table.RtlConvertSidToUnicodeString(UnicodeString, Sid, AllocateDestinationString);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
