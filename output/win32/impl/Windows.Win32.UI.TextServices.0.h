// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_UI_TextServices_0_H
#define WIN32_Windows_Win32_UI_TextServices_0_H
WIN32_EXPORT namespace win32::Windows::Win32::UI::TextServices
{
#pragma region enums
    enum class ANCHOR_CHANGE_HISTORY_FLAGS : uint32_t
    {
        TS_CH_PRECEDING_DEL = 0x1,
        TS_CH_FOLLOWING_DEL = 0x2,
    };
    enum class GET_TEXT_AND_PROPERTY_UPDATES_FLAGS : uint32_t
    {
        TF_GTP_NONE = 0x0,
        TF_GTP_INCL_TEXT = 0x1,
    };
    enum class INSERT_TEXT_AT_SELECTION_FLAGS : uint32_t
    {
        TF_IAS_NOQUERY = 0x1,
        TF_IAS_QUERYONLY = 0x2,
        TF_IAS_NO_DEFAULT_COMPOSITION = 0x80000000,
    };
    enum class InputScope : int32_t
    {
        IS_DEFAULT = 0,
        IS_URL = 1,
        IS_FILE_FULLFILEPATH = 2,
        IS_FILE_FILENAME = 3,
        IS_EMAIL_USERNAME = 4,
        IS_EMAIL_SMTPEMAILADDRESS = 5,
        IS_LOGINNAME = 6,
        IS_PERSONALNAME_FULLNAME = 7,
        IS_PERSONALNAME_PREFIX = 8,
        IS_PERSONALNAME_GIVENNAME = 9,
        IS_PERSONALNAME_MIDDLENAME = 10,
        IS_PERSONALNAME_SURNAME = 11,
        IS_PERSONALNAME_SUFFIX = 12,
        IS_ADDRESS_FULLPOSTALADDRESS = 13,
        IS_ADDRESS_POSTALCODE = 14,
        IS_ADDRESS_STREET = 15,
        IS_ADDRESS_STATEORPROVINCE = 16,
        IS_ADDRESS_CITY = 17,
        IS_ADDRESS_COUNTRYNAME = 18,
        IS_ADDRESS_COUNTRYSHORTNAME = 19,
        IS_CURRENCY_AMOUNTANDSYMBOL = 20,
        IS_CURRENCY_AMOUNT = 21,
        IS_DATE_FULLDATE = 22,
        IS_DATE_MONTH = 23,
        IS_DATE_DAY = 24,
        IS_DATE_YEAR = 25,
        IS_DATE_MONTHNAME = 26,
        IS_DATE_DAYNAME = 27,
        IS_DIGITS = 28,
        IS_NUMBER = 29,
        IS_ONECHAR = 30,
        IS_PASSWORD = 31,
        IS_TELEPHONE_FULLTELEPHONENUMBER = 32,
        IS_TELEPHONE_COUNTRYCODE = 33,
        IS_TELEPHONE_AREACODE = 34,
        IS_TELEPHONE_LOCALNUMBER = 35,
        IS_TIME_FULLTIME = 36,
        IS_TIME_HOUR = 37,
        IS_TIME_MINORSEC = 38,
        IS_NUMBER_FULLWIDTH = 39,
        IS_ALPHANUMERIC_HALFWIDTH = 40,
        IS_ALPHANUMERIC_FULLWIDTH = 41,
        IS_CURRENCY_CHINESE = 42,
        IS_BOPOMOFO = 43,
        IS_HIRAGANA = 44,
        IS_KATAKANA_HALFWIDTH = 45,
        IS_KATAKANA_FULLWIDTH = 46,
        IS_HANJA = 47,
        IS_HANGUL_HALFWIDTH = 48,
        IS_HANGUL_FULLWIDTH = 49,
        IS_SEARCH = 50,
        IS_FORMULA = 51,
        IS_SEARCH_INCREMENTAL = 52,
        IS_CHINESE_HALFWIDTH = 53,
        IS_CHINESE_FULLWIDTH = 54,
        IS_NATIVE_SCRIPT = 55,
        IS_YOMI = 56,
        IS_TEXT = 57,
        IS_CHAT = 58,
        IS_NAME_OR_PHONENUMBER = 59,
        IS_EMAILNAME_OR_ADDRESS = 60,
        IS_PRIVATE = 61,
        IS_MAPS = 62,
        IS_NUMERIC_PASSWORD = 63,
        IS_NUMERIC_PIN = 64,
        IS_ALPHANUMERIC_PIN = 65,
        IS_ALPHANUMERIC_PIN_SET = 66,
        IS_FORMULA_NUMBER = 67,
        IS_CHAT_WITHOUT_EMOJI = 68,
        IS_PHRASELIST = -1,
        IS_REGULAREXPRESSION = -2,
        IS_SRGS = -3,
        IS_XML = -4,
        IS_ENUMSTRING = -5,
    };
    enum class LANG_BAR_ITEM_ICON_MODE_FLAGS : uint32_t
    {
        TF_DTLBI_NONE = 0x0,
        TF_DTLBI_USEPROFILEICON = 0x1,
    };
    enum class TEXT_STORE_CHANGE_FLAGS : uint32_t
    {
        TS_TC_NONE = 0x0,
        TS_TC_CORRECTION = 0x1,
    };
    enum class TEXT_STORE_LOCK_FLAGS : uint32_t
    {
        TS_LF_READ = 0x2,
        TS_LF_READWRITE = 0x6,
    };
    enum class TEXT_STORE_TEXT_CHANGE_FLAGS : uint32_t
    {
        TS_ST_NONE = 0x0,
        TS_ST_CORRECTION = 0x1,
    };
    enum class TF_CONTEXT_EDIT_CONTEXT_FLAGS : uint32_t
    {
        TF_ES_ASYNCDONTCARE = 0x0,
        TF_ES_SYNC = 0x1,
        TF_ES_READ = 0x2,
        TF_ES_READWRITE = 0x6,
        TF_ES_ASYNC = 0x8,
    };
    enum class TF_DA_ATTR_INFO : int32_t
    {
        TF_ATTR_INPUT = 0,
        TF_ATTR_TARGET_CONVERTED = 1,
        TF_ATTR_CONVERTED = 2,
        TF_ATTR_TARGET_NOTCONVERTED = 3,
        TF_ATTR_INPUT_ERROR = 4,
        TF_ATTR_FIXEDCONVERTED = 5,
        TF_ATTR_OTHER = -1,
    };
    enum class TF_DA_COLORTYPE : int32_t
    {
        TF_CT_NONE = 0,
        TF_CT_SYSCOLOR = 1,
        TF_CT_COLORREF = 2,
    };
    enum class TF_DA_LINESTYLE : int32_t
    {
        TF_LS_NONE = 0,
        TF_LS_SOLID = 1,
        TF_LS_DOT = 2,
        TF_LS_DASH = 3,
        TF_LS_SQUIGGLE = 4,
    };
    enum class TKBLayoutType : int32_t
    {
        TKBLT_UNDEFINED = 0,
        TKBLT_CLASSIC = 1,
        TKBLT_OPTIMIZED = 2,
    };
    enum class TfActiveSelEnd : int32_t
    {
        TF_AE_NONE = 0,
        TF_AE_START = 1,
        TF_AE_END = 2,
    };
    enum class TfAnchor : int32_t
    {
        TF_ANCHOR_START = 0,
        TF_ANCHOR_END = 1,
    };
    enum class TfCandidateResult : int32_t
    {
        CAND_FINALIZED = 0,
        CAND_SELECTED = 1,
        CAND_CANCELED = 2,
    };
    enum class TfGravity : int32_t
    {
        TF_GRAVITY_BACKWARD = 0,
        TF_GRAVITY_FORWARD = 1,
    };
    enum class TfIntegratableCandidateListSelectionStyle : int32_t
    {
        STYLE_ACTIVE_SELECTION = 0,
        STYLE_IMPLIED_SELECTION = 1,
    };
    enum class TfLBBalloonStyle : int32_t
    {
        TF_LB_BALLOON_RECO = 0,
        TF_LB_BALLOON_SHOW = 1,
        TF_LB_BALLOON_MISS = 2,
    };
    enum class TfLBIClick : int32_t
    {
        TF_LBI_CLK_RIGHT = 1,
        TF_LBI_CLK_LEFT = 2,
    };
    enum class TfLayoutCode : int32_t
    {
        TF_LC_CREATE = 0,
        TF_LC_CHANGE = 1,
        TF_LC_DESTROY = 2,
    };
    enum class TfSapiObject : int32_t
    {
        GETIF_RESMGR = 0,
        GETIF_RECOCONTEXT = 1,
        GETIF_RECOGNIZER = 2,
        GETIF_VOICE = 3,
        GETIF_DICTGRAM = 4,
        GETIF_RECOGNIZERNOINIT = 5,
    };
    enum class TfShiftDir : int32_t
    {
        TF_SD_BACKWARD = 0,
        TF_SD_FORWARD = 1,
    };
    enum class TsActiveSelEnd : int32_t
    {
        TS_AE_NONE = 0,
        TS_AE_START = 1,
        TS_AE_END = 2,
    };
    enum class TsGravity : int32_t
    {
        TS_GR_BACKWARD = 0,
        TS_GR_FORWARD = 1,
    };
    enum class TsLayoutCode : int32_t
    {
        TS_LC_CREATE = 0,
        TS_LC_CHANGE = 1,
        TS_LC_DESTROY = 2,
    };
    enum class TsRunType : int32_t
    {
        TS_RT_PLAIN = 0,
        TS_RT_HIDDEN = 1,
        TS_RT_OPAQUE = 2,
    };
    enum class TsShiftDir : int32_t
    {
        TS_SD_BACKWARD = 0,
        TS_SD_FORWARD = 1,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct AccClientDocMgr;
    struct AccDictionary;
    struct AccServerDocMgr;
    struct AccStore;
    struct DocWrap;
    struct HKL;
    struct MSAAControl;
    struct TF_DA_COLOR;
    struct TF_DISPLAYATTRIBUTE;
    struct TF_HALTCOND;
    struct TF_INPUTPROCESSORPROFILE;
    struct TF_LANGBARITEMINFO;
    struct TF_LANGUAGEPROFILE;
    struct TF_LBBALLOONINFO;
    struct TF_LMLATTELEMENT;
    struct TF_PERSISTENT_PROPERTY_HEADER_ACP;
    struct TF_PRESERVEDKEY;
    struct TF_PROPERTYVAL;
    struct TF_SELECTION;
    struct TF_SELECTIONSTYLE;
    struct TS_ATTRVAL;
    struct TS_RUNINFO;
    struct TS_SELECTIONSTYLE;
    struct TS_SELECTION_ACP;
    struct TS_SELECTION_ANCHOR;
    struct TS_STATUS;
    struct TS_TEXTCHANGE;
    struct IAccClientDocMgr;
    struct IAccDictionary;
    struct IAccServerDocMgr;
    struct IAccStore;
    struct IAnchor;
    struct IClonableWrapper;
    struct ICoCreateLocally;
    struct ICoCreatedLocally;
    struct IDocWrap;
    struct IEnumITfCompositionView;
    struct IEnumSpeechCommands;
    struct IEnumTfCandidates;
    struct IEnumTfContextViews;
    struct IEnumTfContexts;
    struct IEnumTfDisplayAttributeInfo;
    struct IEnumTfDocumentMgrs;
    struct IEnumTfFunctionProviders;
    struct IEnumTfInputProcessorProfiles;
    struct IEnumTfLangBarItems;
    struct IEnumTfLanguageProfiles;
    struct IEnumTfLatticeElements;
    struct IEnumTfProperties;
    struct IEnumTfPropertyValue;
    struct IEnumTfRanges;
    struct IEnumTfUIElements;
    struct IInternalDocWrap;
    struct ISpeechCommandProvider;
    struct ITextStoreACP;
    struct ITextStoreACP2;
    struct ITextStoreACPEx;
    struct ITextStoreACPServices;
    struct ITextStoreACPSink;
    struct ITextStoreACPSinkEx;
    struct ITextStoreAnchor;
    struct ITextStoreAnchorEx;
    struct ITextStoreAnchorSink;
    struct ITextStoreSinkAnchorEx;
    struct ITfActiveLanguageProfileNotifySink;
    struct ITfCandidateList;
    struct ITfCandidateListUIElement;
    struct ITfCandidateListUIElementBehavior;
    struct ITfCandidateString;
    struct ITfCategoryMgr;
    struct ITfCleanupContextDurationSink;
    struct ITfCleanupContextSink;
    struct ITfClientId;
    struct ITfCompartment;
    struct ITfCompartmentEventSink;
    struct ITfCompartmentMgr;
    struct ITfComposition;
    struct ITfCompositionSink;
    struct ITfCompositionView;
    struct ITfConfigureSystemKeystrokeFeed;
    struct ITfContext;
    struct ITfContextComposition;
    struct ITfContextKeyEventSink;
    struct ITfContextOwner;
    struct ITfContextOwnerCompositionServices;
    struct ITfContextOwnerCompositionSink;
    struct ITfContextOwnerServices;
    struct ITfContextView;
    struct ITfCreatePropertyStore;
    struct ITfDisplayAttributeInfo;
    struct ITfDisplayAttributeMgr;
    struct ITfDisplayAttributeNotifySink;
    struct ITfDisplayAttributeProvider;
    struct ITfDocumentMgr;
    struct ITfEditRecord;
    struct ITfEditSession;
    struct ITfEditTransactionSink;
    struct ITfFnAdviseText;
    struct ITfFnBalloon;
    struct ITfFnConfigure;
    struct ITfFnConfigureRegisterEudc;
    struct ITfFnConfigureRegisterWord;
    struct ITfFnCustomSpeechCommand;
    struct ITfFnGetLinguisticAlternates;
    struct ITfFnGetPreferredTouchKeyboardLayout;
    struct ITfFnGetSAPIObject;
    struct ITfFnLMInternal;
    struct ITfFnLMProcessor;
    struct ITfFnLangProfileUtil;
    struct ITfFnPlayBack;
    struct ITfFnPropertyUIStatus;
    struct ITfFnReconversion;
    struct ITfFnSearchCandidateProvider;
    struct ITfFnShowHelp;
    struct ITfFunction;
    struct ITfFunctionProvider;
    struct ITfInputProcessorProfileActivationSink;
    struct ITfInputProcessorProfileMgr;
    struct ITfInputProcessorProfileSubstituteLayout;
    struct ITfInputProcessorProfiles;
    struct ITfInputProcessorProfilesEx;
    struct ITfInputScope;
    struct ITfInputScope2;
    struct ITfInsertAtSelection;
    struct ITfIntegratableCandidateListUIElement;
    struct ITfKeyEventSink;
    struct ITfKeyTraceEventSink;
    struct ITfKeystrokeMgr;
    struct ITfLMLattice;
    struct ITfLangBarEventSink;
    struct ITfLangBarItem;
    struct ITfLangBarItemBalloon;
    struct ITfLangBarItemBitmap;
    struct ITfLangBarItemBitmapButton;
    struct ITfLangBarItemButton;
    struct ITfLangBarItemMgr;
    struct ITfLangBarItemSink;
    struct ITfLangBarMgr;
    struct ITfLanguageProfileNotifySink;
    struct ITfMSAAControl;
    struct ITfMenu;
    struct ITfMessagePump;
    struct ITfMouseSink;
    struct ITfMouseTracker;
    struct ITfMouseTrackerACP;
    struct ITfPersistentPropertyLoaderACP;
    struct ITfPreservedKeyNotifySink;
    struct ITfProperty;
    struct ITfPropertyStore;
    struct ITfQueryEmbedded;
    struct ITfRange;
    struct ITfRangeACP;
    struct ITfRangeBackup;
    struct ITfReadOnlyProperty;
    struct ITfReadingInformationUIElement;
    struct ITfReverseConversion;
    struct ITfReverseConversionList;
    struct ITfReverseConversionMgr;
    struct ITfSource;
    struct ITfSourceSingle;
    struct ITfSpeechUIServer;
    struct ITfStatusSink;
    struct ITfSystemDeviceTypeLangBarItem;
    struct ITfSystemLangBarItem;
    struct ITfSystemLangBarItemSink;
    struct ITfSystemLangBarItemText;
    struct ITfTextEditSink;
    struct ITfTextInputProcessor;
    struct ITfTextInputProcessorEx;
    struct ITfTextLayoutSink;
    struct ITfThreadFocusSink;
    struct ITfThreadMgr;
    struct ITfThreadMgr2;
    struct ITfThreadMgrEventSink;
    struct ITfThreadMgrEx;
    struct ITfToolTipUIElement;
    struct ITfTransitoryExtensionSink;
    struct ITfTransitoryExtensionUIElement;
    struct ITfUIElement;
    struct ITfUIElementMgr;
    struct ITfUIElementSink;
    struct IUIManagerEventSink;
    struct IVersionInfo;
#pragma endregion forward_declarations

#pragma region delegates
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
