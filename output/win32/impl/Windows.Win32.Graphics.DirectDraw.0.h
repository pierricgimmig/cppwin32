// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Graphics_DirectDraw_0_H
#define WIN32_Windows_Win32_Graphics_DirectDraw_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Foundation
{
    struct BOOL;
    struct HRESULT;
    struct HWND;
    struct PSTR;
    struct PWSTR;
}
WIN32_EXPORT namespace win32::Windows::Win32::Graphics::Gdi
{
    struct HMONITOR;
}
WIN32_EXPORT namespace win32::Windows::Win32::Graphics::DirectDraw
{
#pragma region enums
#pragma endregion enums

#pragma region forward_declarations
    struct ACCESSRECTLIST;
    struct ATTACHLIST;
    struct DBLNODE;
    struct DD32BITDRIVERDATA;
    struct DDARGB;
    struct DDBLTBATCH;
    struct DDBLTFX;
    struct DDBOBNEXTFIELDINFO;
    struct DDCAPS_DX1;
    struct DDCAPS_DX3;
    struct DDCAPS_DX5;
    struct DDCAPS_DX6;
    struct DDCAPS_DX7;
    struct DDCOLORCONTROL;
    struct DDCOLORKEY;
    struct DDCOMPBUFFERINFO;
    struct DDCORECAPS;
    struct DDDEVICEIDENTIFIER;
    struct DDDEVICEIDENTIFIER2;
    struct DDENABLEIRQINFO;
    struct DDFLIPOVERLAYINFO;
    struct DDFLIPVIDEOPORTINFO;
    struct DDGAMMARAMP;
    struct DDGETCURRENTAUTOFLIPININFO;
    struct DDGETCURRENTAUTOFLIPOUTINFO;
    struct DDGETIRQINFO;
    struct DDGETPOLARITYININFO;
    struct DDGETPOLARITYOUTINFO;
    struct DDGETPREVIOUSAUTOFLIPININFO;
    struct DDGETPREVIOUSAUTOFLIPOUTINFO;
    struct DDGETTRANSFERSTATUSOUTINFO;
    struct DDHALDDRAWFNS;
    struct DDHALINFO;
    struct DDHALMODEINFO;
    struct DDHAL_ADDATTACHEDSURFACEDATA;
    struct DDHAL_BEGINMOCOMPFRAMEDATA;
    struct DDHAL_BLTDATA;
    struct DDHAL_CALLBACKS;
    struct DDHAL_CANCREATESURFACEDATA;
    struct DDHAL_CANCREATEVPORTDATA;
    struct DDHAL_COLORCONTROLDATA;
    struct DDHAL_CREATEMOCOMPDATA;
    struct DDHAL_CREATEPALETTEDATA;
    struct DDHAL_CREATESURFACEDATA;
    struct DDHAL_CREATESURFACEEXDATA;
    struct DDHAL_CREATEVPORTDATA;
    struct DDHAL_DDCALLBACKS;
    struct DDHAL_DDCOLORCONTROLCALLBACKS;
    struct DDHAL_DDEXEBUFCALLBACKS;
    struct DDHAL_DDKERNELCALLBACKS;
    struct DDHAL_DDMISCELLANEOUS2CALLBACKS;
    struct DDHAL_DDMISCELLANEOUSCALLBACKS;
    struct DDHAL_DDMOTIONCOMPCALLBACKS;
    struct DDHAL_DDPALETTECALLBACKS;
    struct DDHAL_DDSURFACECALLBACKS;
    struct DDHAL_DDVIDEOPORTCALLBACKS;
    struct DDHAL_DESTROYDDLOCALDATA;
    struct DDHAL_DESTROYDRIVERDATA;
    struct DDHAL_DESTROYMOCOMPDATA;
    struct DDHAL_DESTROYPALETTEDATA;
    struct DDHAL_DESTROYSURFACEDATA;
    struct DDHAL_DESTROYVPORTDATA;
    struct DDHAL_DRVSETCOLORKEYDATA;
    struct DDHAL_ENDMOCOMPFRAMEDATA;
    struct DDHAL_FLIPDATA;
    struct DDHAL_FLIPTOGDISURFACEDATA;
    struct DDHAL_FLIPVPORTDATA;
    struct DDHAL_GETAVAILDRIVERMEMORYDATA;
    struct DDHAL_GETBLTSTATUSDATA;
    struct DDHAL_GETDRIVERINFODATA;
    struct DDHAL_GETDRIVERSTATEDATA;
    struct DDHAL_GETFLIPSTATUSDATA;
    struct DDHAL_GETHEAPALIGNMENTDATA;
    struct DDHAL_GETINTERNALMOCOMPDATA;
    struct DDHAL_GETMOCOMPCOMPBUFFDATA;
    struct DDHAL_GETMOCOMPFORMATSDATA;
    struct DDHAL_GETMOCOMPGUIDSDATA;
    struct DDHAL_GETSCANLINEDATA;
    struct DDHAL_GETVPORTBANDWIDTHDATA;
    struct DDHAL_GETVPORTCONNECTDATA;
    struct DDHAL_GETVPORTFIELDDATA;
    struct DDHAL_GETVPORTFLIPSTATUSDATA;
    struct DDHAL_GETVPORTINPUTFORMATDATA;
    struct DDHAL_GETVPORTLINEDATA;
    struct DDHAL_GETVPORTOUTPUTFORMATDATA;
    struct DDHAL_GETVPORTSIGNALDATA;
    struct DDHAL_LOCKDATA;
    struct DDHAL_QUERYMOCOMPSTATUSDATA;
    struct DDHAL_RENDERMOCOMPDATA;
    struct DDHAL_SETCLIPLISTDATA;
    struct DDHAL_SETCOLORKEYDATA;
    struct DDHAL_SETENTRIESDATA;
    struct DDHAL_SETEXCLUSIVEMODEDATA;
    struct DDHAL_SETMODEDATA;
    struct DDHAL_SETOVERLAYPOSITIONDATA;
    struct DDHAL_SETPALETTEDATA;
    struct DDHAL_SYNCSURFACEDATA;
    struct DDHAL_SYNCVIDEOPORTDATA;
    struct DDHAL_UNLOCKDATA;
    struct DDHAL_UPDATENONLOCALHEAPDATA;
    struct DDHAL_UPDATEOVERLAYDATA;
    struct DDHAL_UPDATEVPORTDATA;
    struct DDHAL_VPORTCOLORDATA;
    struct DDHAL_WAITFORVERTICALBLANKDATA;
    struct DDHAL_WAITFORVPORTSYNCDATA;
    struct DDKERNELCAPS;
    struct DDLOCKININFO;
    struct DDLOCKOUTINFO;
    struct DDMCBUFFERINFO;
    struct DDMCCOMPBUFFERINFO;
    struct DDMOCOMPBUFFERINFO;
    struct DDMONITORINFO;
    struct DDMORESURFACECAPS;
    struct DDNONLOCALVIDMEMCAPS;
    struct DDNTCORECAPS;
    struct DDOPTSURFACEDESC;
    struct DDOSCAPS;
    struct DDOVERLAYFX;
    struct DDPIXELFORMAT;
    struct DDRAWI_DDMOTIONCOMP_INT;
    struct DDRAWI_DDMOTIONCOMP_LCL;
    struct DDRAWI_DDRAWCLIPPER_GBL;
    struct DDRAWI_DDRAWCLIPPER_INT;
    struct DDRAWI_DDRAWCLIPPER_LCL;
    struct DDRAWI_DDRAWPALETTE_GBL;
    struct DDRAWI_DDRAWPALETTE_INT;
    struct DDRAWI_DDRAWPALETTE_LCL;
    struct DDRAWI_DDRAWSURFACE_GBL;
    struct DDRAWI_DDRAWSURFACE_GBL_MORE;
    struct DDRAWI_DDRAWSURFACE_INT;
    struct DDRAWI_DDRAWSURFACE_LCL;
    struct DDRAWI_DDRAWSURFACE_MORE;
    struct DDRAWI_DDVIDEOPORT_INT;
    struct DDRAWI_DDVIDEOPORT_LCL;
    struct DDRAWI_DIRECTDRAW_GBL;
    struct DDRAWI_DIRECTDRAW_INT;
    struct DDRAWI_DIRECTDRAW_LCL;
    struct DDRGBA;
    struct DDSCAPS;
    struct DDSCAPS2;
    struct DDSCAPSEX;
    struct DDSETSTATEININFO;
    struct DDSETSTATEOUTINFO;
    struct DDSKIPNEXTFIELDINFO;
    struct DDSTEREOMODE;
    struct DDSURFACEDATA;
    struct DDSURFACEDESC;
    struct DDSURFACEDESC2;
    struct DDTRANSFERININFO;
    struct DDTRANSFEROUTINFO;
    struct DDVERSIONDATA;
    struct DDVIDEOPORTBANDWIDTH;
    struct DDVIDEOPORTCAPS;
    struct DDVIDEOPORTCONNECT;
    struct DDVIDEOPORTDATA;
    struct DDVIDEOPORTDESC;
    struct DDVIDEOPORTINFO;
    struct DDVIDEOPORTNOTIFY;
    struct DDVIDEOPORTSTATUS;
    struct DD_ADDATTACHEDSURFACEDATA;
    struct DD_ATTACHLIST;
    struct DD_BEGINMOCOMPFRAMEDATA;
    struct DD_BLTDATA;
    struct DD_CALLBACKS;
    struct DD_CANCREATESURFACEDATA;
    struct DD_CANCREATEVPORTDATA;
    struct DD_CLIPPER_GLOBAL;
    struct DD_CLIPPER_LOCAL;
    struct DD_COLORCONTROLCALLBACKS;
    struct DD_COLORCONTROLDATA;
    struct DD_CREATEMOCOMPDATA;
    struct DD_CREATEPALETTEDATA;
    struct DD_CREATESURFACEDATA;
    struct DD_CREATESURFACEEXDATA;
    struct DD_CREATEVPORTDATA;
    struct DD_D3DBUFCALLBACKS;
    struct DD_DESTROYDDLOCALDATA;
    struct DD_DESTROYMOCOMPDATA;
    struct DD_DESTROYPALETTEDATA;
    struct DD_DESTROYSURFACEDATA;
    struct DD_DESTROYVPORTDATA;
    struct DD_DIRECTDRAW_GLOBAL;
    struct DD_DIRECTDRAW_LOCAL;
    struct DD_DRVSETCOLORKEYDATA;
    struct DD_ENDMOCOMPFRAMEDATA;
    struct DD_FLIPDATA;
    struct DD_FLIPTOGDISURFACEDATA;
    struct DD_FLIPVPORTDATA;
    struct DD_FREEDRIVERMEMORYDATA;
    struct DD_GETAVAILDRIVERMEMORYDATA;
    struct DD_GETBLTSTATUSDATA;
    struct DD_GETDRIVERINFODATA;
    struct DD_GETDRIVERSTATEDATA;
    struct DD_GETFLIPSTATUSDATA;
    struct DD_GETHEAPALIGNMENTDATA;
    struct DD_GETINTERNALMOCOMPDATA;
    struct DD_GETMOCOMPCOMPBUFFDATA;
    struct DD_GETMOCOMPFORMATSDATA;
    struct DD_GETMOCOMPGUIDSDATA;
    struct DD_GETSCANLINEDATA;
    struct DD_GETVPORTBANDWIDTHDATA;
    struct DD_GETVPORTCONNECTDATA;
    struct DD_GETVPORTFIELDDATA;
    struct DD_GETVPORTFLIPSTATUSDATA;
    struct DD_GETVPORTINPUTFORMATDATA;
    struct DD_GETVPORTLINEDATA;
    struct DD_GETVPORTOUTPUTFORMATDATA;
    struct DD_GETVPORTSIGNALDATA;
    struct DD_HALINFO;
    struct DD_HALINFO_V4;
    struct DD_KERNELCALLBACKS;
    struct DD_LOCKDATA;
    struct DD_MAPMEMORYDATA;
    struct DD_MISCELLANEOUS2CALLBACKS;
    struct DD_MISCELLANEOUSCALLBACKS;
    struct DD_MORECAPS;
    struct DD_MORESURFACECAPS;
    struct DD_MOTIONCOMPCALLBACKS;
    struct DD_MOTIONCOMP_LOCAL;
    struct DD_NONLOCALVIDMEMCAPS;
    struct DD_NTCALLBACKS;
    struct DD_NTPRIVATEDRIVERCAPS;
    struct DD_PALETTECALLBACKS;
    struct DD_PALETTE_GLOBAL;
    struct DD_PALETTE_LOCAL;
    struct DD_QUERYMOCOMPSTATUSDATA;
    struct DD_RENDERMOCOMPDATA;
    struct DD_SETCLIPLISTDATA;
    struct DD_SETCOLORKEYDATA;
    struct DD_SETENTRIESDATA;
    struct DD_SETEXCLUSIVEMODEDATA;
    struct DD_SETOVERLAYPOSITIONDATA;
    struct DD_SETPALETTEDATA;
    struct DD_STEREOMODE;
    struct DD_SURFACECALLBACKS;
    struct DD_SURFACE_GLOBAL;
    struct DD_SURFACE_INT;
    struct DD_SURFACE_LOCAL;
    struct DD_SURFACE_MORE;
    struct DD_SYNCSURFACEDATA;
    struct DD_SYNCVIDEOPORTDATA;
    struct DD_UNLOCKDATA;
    struct DD_UPDATENONLOCALHEAPDATA;
    struct DD_UPDATEOVERLAYDATA;
    struct DD_UPDATEVPORTDATA;
    struct DD_VIDEOPORTCALLBACKS;
    struct DD_VIDEOPORT_LOCAL;
    struct DD_VPORTCOLORDATA;
    struct DD_WAITFORVERTICALBLANKDATA;
    struct DD_WAITFORVPORTSYNCDATA;
    struct DXAPI_INTERFACE;
    struct DX_IRQDATA;
    struct HEAPALIAS;
    struct HEAPALIASINFO;
    struct HEAPALIGNMENT;
    struct IDDVideoPortContainerVtbl;
    struct IDirectDraw2Vtbl;
    struct IDirectDraw4Vtbl;
    struct IDirectDraw7Vtbl;
    struct IDirectDrawClipperVtbl;
    struct IDirectDrawColorControlVtbl;
    struct IDirectDrawGammaControlVtbl;
    struct IDirectDrawKernelVtbl;
    struct IDirectDrawPaletteVtbl;
    struct IDirectDrawSurface2Vtbl;
    struct IDirectDrawSurface3Vtbl;
    struct IDirectDrawSurface4Vtbl;
    struct IDirectDrawSurface7Vtbl;
    struct IDirectDrawSurfaceKernelVtbl;
    struct IDirectDrawSurfaceVtbl;
    struct IDirectDrawVideoPortNotifyVtbl;
    struct IDirectDrawVideoPortVtbl;
    struct IDirectDrawVtbl;
    struct IUNKNOWN_LIST;
    struct MDL;
    struct PROCESS_LIST;
    struct SURFACEALIGNMENT;
    struct VIDEOMEMORY;
    struct VIDEOMEMORYINFO;
    struct VIDMEM;
    struct VIDMEMINFO;
    struct VMEMHEAP;
    struct VMEML;
    struct VMEMR;
    struct _DDFXROP;
    struct _DD_DESTROYDRIVERDATA;
    struct _DD_GETVPORTAUTOFLIPSURFACEDATA;
    struct _DD_SETMODEDATA;
    struct IDDVideoPortContainer;
    struct IDirectDraw;
    struct IDirectDraw2;
    struct IDirectDraw4;
    struct IDirectDraw7;
    struct IDirectDrawClipper;
    struct IDirectDrawColorControl;
    struct IDirectDrawGammaControl;
    struct IDirectDrawKernel;
    struct IDirectDrawPalette;
    struct IDirectDrawSurface;
    struct IDirectDrawSurface2;
    struct IDirectDrawSurface3;
    struct IDirectDrawSurface4;
    struct IDirectDrawSurface7;
    struct IDirectDrawSurfaceKernel;
    struct IDirectDrawVideoPort;
    struct IDirectDrawVideoPortNotify;
#pragma endregion forward_declarations

#pragma region delegates
    using LPDDENUMCALLBACKA = Windows::Win32::Foundation::BOOL __stdcall(::win32::guid*, Windows::Win32::Foundation::PSTR, Windows::Win32::Foundation::PSTR, void*);
    using LPDDENUMCALLBACKW = Windows::Win32::Foundation::BOOL __stdcall(::win32::guid*, Windows::Win32::Foundation::PWSTR, Windows::Win32::Foundation::PWSTR, void*);
    using LPDDENUMCALLBACKEXA = Windows::Win32::Foundation::BOOL __stdcall(::win32::guid*, Windows::Win32::Foundation::PSTR, Windows::Win32::Foundation::PSTR, void*, Windows::Win32::Graphics::Gdi::HMONITOR);
    using LPDDENUMCALLBACKEXW = Windows::Win32::Foundation::BOOL __stdcall(::win32::guid*, Windows::Win32::Foundation::PWSTR, Windows::Win32::Foundation::PWSTR, void*, Windows::Win32::Graphics::Gdi::HMONITOR);
    using LPDIRECTDRAWENUMERATEEXA = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Graphics::DirectDraw::LPDDENUMCALLBACKEXA*, void*, uint32_t);
    using LPDIRECTDRAWENUMERATEEXW = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Graphics::DirectDraw::LPDDENUMCALLBACKEXW*, void*, uint32_t);
    using LPDDENUMMODESCALLBACK = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Graphics::DirectDraw::DDSURFACEDESC*, void*);
    using LPDDENUMMODESCALLBACK2 = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Graphics::DirectDraw::DDSURFACEDESC2*, void*);
    using LPDDENUMSURFACESCALLBACK = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Graphics::DirectDraw::IDirectDrawSurface*, Windows::Win32::Graphics::DirectDraw::DDSURFACEDESC*, void*);
    using LPDDENUMSURFACESCALLBACK2 = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Graphics::DirectDraw::IDirectDrawSurface4*, Windows::Win32::Graphics::DirectDraw::DDSURFACEDESC2*, void*);
    using LPDDENUMSURFACESCALLBACK7 = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Graphics::DirectDraw::IDirectDrawSurface7*, Windows::Win32::Graphics::DirectDraw::DDSURFACEDESC2*, void*);
    using LPCLIPPERCALLBACK = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::IDirectDrawClipper*, Windows::Win32::Foundation::HWND, uint32_t, void*);
    using LPDDENUMVIDEOCALLBACK = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Graphics::DirectDraw::DDVIDEOPORTCAPS*, void*);
    using LPDD32BITDRIVERINIT = uint32_t __stdcall(uint32_t);
    using LPDDHEL_INIT = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Graphics::DirectDraw::DDRAWI_DIRECTDRAW_GBL*, Windows::Win32::Foundation::BOOL);
    using LPDDHAL_SETCOLORKEY = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_DRVSETCOLORKEYDATA*);
    using LPDDHAL_CANCREATESURFACE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_CANCREATESURFACEDATA*);
    using LPDDHAL_WAITFORVERTICALBLANK = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_WAITFORVERTICALBLANKDATA*);
    using LPDDHAL_CREATESURFACE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_CREATESURFACEDATA*);
    using LPDDHAL_DESTROYDRIVER = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_DESTROYDRIVERDATA*);
    using LPDDHAL_SETMODE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_SETMODEDATA*);
    using LPDDHAL_CREATEPALETTE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_CREATEPALETTEDATA*);
    using LPDDHAL_GETSCANLINE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETSCANLINEDATA*);
    using LPDDHAL_SETEXCLUSIVEMODE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_SETEXCLUSIVEMODEDATA*);
    using LPDDHAL_FLIPTOGDISURFACE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_FLIPTOGDISURFACEDATA*);
    using LPDDHAL_GETDRIVERINFO = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETDRIVERINFODATA*);
    using LPDDHALPALCB_DESTROYPALETTE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_DESTROYPALETTEDATA*);
    using LPDDHALPALCB_SETENTRIES = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_SETENTRIESDATA*);
    using LPDDHALSURFCB_LOCK = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_LOCKDATA*);
    using LPDDHALSURFCB_UNLOCK = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_UNLOCKDATA*);
    using LPDDHALSURFCB_BLT = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_BLTDATA*);
    using LPDDHALSURFCB_UPDATEOVERLAY = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_UPDATEOVERLAYDATA*);
    using LPDDHALSURFCB_SETOVERLAYPOSITION = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_SETOVERLAYPOSITIONDATA*);
    using LPDDHALSURFCB_SETPALETTE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_SETPALETTEDATA*);
    using LPDDHALSURFCB_FLIP = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_FLIPDATA*);
    using LPDDHALSURFCB_DESTROYSURFACE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_DESTROYSURFACEDATA*);
    using LPDDHALSURFCB_SETCLIPLIST = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_SETCLIPLISTDATA*);
    using LPDDHALSURFCB_ADDATTACHEDSURFACE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_ADDATTACHEDSURFACEDATA*);
    using LPDDHALSURFCB_SETCOLORKEY = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_SETCOLORKEYDATA*);
    using LPDDHALSURFCB_GETBLTSTATUS = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETBLTSTATUSDATA*);
    using LPDDHALSURFCB_GETFLIPSTATUS = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETFLIPSTATUSDATA*);
    using LPDDHAL_GETAVAILDRIVERMEMORY = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETAVAILDRIVERMEMORYDATA*);
    using LPDDHAL_UPDATENONLOCALHEAP = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_UPDATENONLOCALHEAPDATA*);
    using LPDDHAL_GETHEAPALIGNMENT = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETHEAPALIGNMENTDATA*);
    using LPDDHAL_CREATESURFACEEX = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_CREATESURFACEEXDATA*);
    using LPDDHAL_GETDRIVERSTATE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETDRIVERSTATEDATA*);
    using LPDDHAL_DESTROYDDLOCAL = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_DESTROYDDLOCALDATA*);
    using LPDDHALEXEBUFCB_CANCREATEEXEBUF = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_CANCREATESURFACEDATA*);
    using LPDDHALEXEBUFCB_CREATEEXEBUF = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_CREATESURFACEDATA*);
    using LPDDHALEXEBUFCB_DESTROYEXEBUF = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_DESTROYSURFACEDATA*);
    using LPDDHALEXEBUFCB_LOCKEXEBUF = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_LOCKDATA*);
    using LPDDHALEXEBUFCB_UNLOCKEXEBUF = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_UNLOCKDATA*);
    using LPDDHALVPORTCB_CANCREATEVIDEOPORT = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_CANCREATEVPORTDATA*);
    using LPDDHALVPORTCB_CREATEVIDEOPORT = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_CREATEVPORTDATA*);
    using LPDDHALVPORTCB_FLIP = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_FLIPVPORTDATA*);
    using LPDDHALVPORTCB_GETBANDWIDTH = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETVPORTBANDWIDTHDATA*);
    using LPDDHALVPORTCB_GETINPUTFORMATS = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETVPORTINPUTFORMATDATA*);
    using LPDDHALVPORTCB_GETOUTPUTFORMATS = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETVPORTOUTPUTFORMATDATA*);
    using LPDDHALVPORTCB_GETFIELD = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETVPORTFIELDDATA*);
    using LPDDHALVPORTCB_GETLINE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETVPORTLINEDATA*);
    using LPDDHALVPORTCB_GETVPORTCONNECT = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETVPORTCONNECTDATA*);
    using LPDDHALVPORTCB_DESTROYVPORT = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_DESTROYVPORTDATA*);
    using LPDDHALVPORTCB_GETFLIPSTATUS = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETVPORTFLIPSTATUSDATA*);
    using LPDDHALVPORTCB_UPDATE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_UPDATEVPORTDATA*);
    using LPDDHALVPORTCB_WAITFORSYNC = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_WAITFORVPORTSYNCDATA*);
    using LPDDHALVPORTCB_GETSIGNALSTATUS = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETVPORTSIGNALDATA*);
    using LPDDHALVPORTCB_COLORCONTROL = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_VPORTCOLORDATA*);
    using LPDDHALCOLORCB_COLORCONTROL = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_COLORCONTROLDATA*);
    using LPDDHALKERNELCB_SYNCSURFACE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_SYNCSURFACEDATA*);
    using LPDDHALKERNELCB_SYNCVIDEOPORT = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_SYNCVIDEOPORTDATA*);
    using LPDDGAMMACALIBRATORPROC = Windows::Win32::Foundation::HRESULT __stdcall(Windows::Win32::Graphics::DirectDraw::DDGAMMARAMP*, uint8_t*);
    using LPDDHALMOCOMPCB_GETGUIDS = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETMOCOMPGUIDSDATA*);
    using LPDDHALMOCOMPCB_GETFORMATS = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETMOCOMPFORMATSDATA*);
    using LPDDHALMOCOMPCB_CREATE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_CREATEMOCOMPDATA*);
    using LPDDHALMOCOMPCB_GETCOMPBUFFINFO = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETMOCOMPCOMPBUFFDATA*);
    using LPDDHALMOCOMPCB_GETINTERNALINFO = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_GETINTERNALMOCOMPDATA*);
    using LPDDHALMOCOMPCB_BEGINFRAME = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_BEGINMOCOMPFRAMEDATA*);
    using LPDDHALMOCOMPCB_ENDFRAME = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_ENDMOCOMPFRAMEDATA*);
    using LPDDHALMOCOMPCB_RENDER = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_RENDERMOCOMPDATA*);
    using LPDDHALMOCOMPCB_QUERYSTATUS = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_QUERYMOCOMPSTATUSDATA*);
    using LPDDHALMOCOMPCB_DESTROY = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDHAL_DESTROYMOCOMPDATA*);
    using LPDDHAL_SETINFO = Windows::Win32::Foundation::BOOL __stdcall(Windows::Win32::Graphics::DirectDraw::DDHALINFO*, Windows::Win32::Foundation::BOOL);
    using LPDDHAL_VIDMEMALLOC = size_t __stdcall(Windows::Win32::Graphics::DirectDraw::DDRAWI_DIRECTDRAW_GBL*, int32_t, uint32_t, uint32_t);
    using LPDDHAL_VIDMEMFREE = void __stdcall(Windows::Win32::Graphics::DirectDraw::DDRAWI_DIRECTDRAW_GBL*, int32_t, size_t);
    using PDD_SETCOLORKEY = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_DRVSETCOLORKEYDATA*);
    using PDD_CANCREATESURFACE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_CANCREATESURFACEDATA*);
    using PDD_WAITFORVERTICALBLANK = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_WAITFORVERTICALBLANKDATA*);
    using PDD_CREATESURFACE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_CREATESURFACEDATA*);
    using PDD_DESTROYDRIVER = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::_DD_DESTROYDRIVERDATA*);
    using PDD_SETMODE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::_DD_SETMODEDATA*);
    using PDD_CREATEPALETTE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_CREATEPALETTEDATA*);
    using PDD_GETSCANLINE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_GETSCANLINEDATA*);
    using PDD_MAPMEMORY = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_MAPMEMORYDATA*);
    using PDD_GETDRIVERINFO = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_GETDRIVERINFODATA*);
    using PDD_GETAVAILDRIVERMEMORY = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_GETAVAILDRIVERMEMORYDATA*);
    using PDD_ALPHABLT = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_BLTDATA*);
    using PDD_CREATESURFACEEX = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_CREATESURFACEEXDATA*);
    using PDD_GETDRIVERSTATE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_GETDRIVERSTATEDATA*);
    using PDD_DESTROYDDLOCAL = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_DESTROYDDLOCALDATA*);
    using PDD_FREEDRIVERMEMORY = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_FREEDRIVERMEMORYDATA*);
    using PDD_SETEXCLUSIVEMODE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_SETEXCLUSIVEMODEDATA*);
    using PDD_FLIPTOGDISURFACE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_FLIPTOGDISURFACEDATA*);
    using PDD_PALCB_DESTROYPALETTE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_DESTROYPALETTEDATA*);
    using PDD_PALCB_SETENTRIES = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_SETENTRIESDATA*);
    using PDD_SURFCB_LOCK = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_LOCKDATA*);
    using PDD_SURFCB_UNLOCK = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_UNLOCKDATA*);
    using PDD_SURFCB_BLT = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_BLTDATA*);
    using PDD_SURFCB_UPDATEOVERLAY = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_UPDATEOVERLAYDATA*);
    using PDD_SURFCB_SETOVERLAYPOSITION = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_SETOVERLAYPOSITIONDATA*);
    using PDD_SURFCB_SETPALETTE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_SETPALETTEDATA*);
    using PDD_SURFCB_FLIP = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_FLIPDATA*);
    using PDD_SURFCB_DESTROYSURFACE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_DESTROYSURFACEDATA*);
    using PDD_SURFCB_SETCLIPLIST = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_SETCLIPLISTDATA*);
    using PDD_SURFCB_ADDATTACHEDSURFACE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_ADDATTACHEDSURFACEDATA*);
    using PDD_SURFCB_SETCOLORKEY = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_SETCOLORKEYDATA*);
    using PDD_SURFCB_GETBLTSTATUS = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_GETBLTSTATUSDATA*);
    using PDD_SURFCB_GETFLIPSTATUS = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_GETFLIPSTATUSDATA*);
    using PDD_VPORTCB_CANCREATEVIDEOPORT = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_CANCREATEVPORTDATA*);
    using PDD_VPORTCB_CREATEVIDEOPORT = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_CREATEVPORTDATA*);
    using PDD_VPORTCB_FLIP = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_FLIPVPORTDATA*);
    using PDD_VPORTCB_GETBANDWIDTH = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_GETVPORTBANDWIDTHDATA*);
    using PDD_VPORTCB_GETINPUTFORMATS = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_GETVPORTINPUTFORMATDATA*);
    using PDD_VPORTCB_GETOUTPUTFORMATS = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_GETVPORTOUTPUTFORMATDATA*);
    using PDD_VPORTCB_GETAUTOFLIPSURF = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::_DD_GETVPORTAUTOFLIPSURFACEDATA*);
    using PDD_VPORTCB_GETFIELD = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_GETVPORTFIELDDATA*);
    using PDD_VPORTCB_GETLINE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_GETVPORTLINEDATA*);
    using PDD_VPORTCB_GETVPORTCONNECT = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_GETVPORTCONNECTDATA*);
    using PDD_VPORTCB_DESTROYVPORT = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_DESTROYVPORTDATA*);
    using PDD_VPORTCB_GETFLIPSTATUS = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_GETVPORTFLIPSTATUSDATA*);
    using PDD_VPORTCB_UPDATE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_UPDATEVPORTDATA*);
    using PDD_VPORTCB_WAITFORSYNC = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_WAITFORVPORTSYNCDATA*);
    using PDD_VPORTCB_GETSIGNALSTATUS = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_GETVPORTSIGNALDATA*);
    using PDD_VPORTCB_COLORCONTROL = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_VPORTCOLORDATA*);
    using PDD_COLORCB_COLORCONTROL = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_COLORCONTROLDATA*);
    using PDD_KERNELCB_SYNCSURFACE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_SYNCSURFACEDATA*);
    using PDD_KERNELCB_SYNCVIDEOPORT = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_SYNCVIDEOPORTDATA*);
    using PDD_MOCOMPCB_GETGUIDS = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_GETMOCOMPGUIDSDATA*);
    using PDD_MOCOMPCB_GETFORMATS = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_GETMOCOMPFORMATSDATA*);
    using PDD_MOCOMPCB_CREATE = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_CREATEMOCOMPDATA*);
    using PDD_MOCOMPCB_GETCOMPBUFFINFO = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_GETMOCOMPCOMPBUFFDATA*);
    using PDD_MOCOMPCB_GETINTERNALINFO = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_GETINTERNALMOCOMPDATA*);
    using PDD_MOCOMPCB_BEGINFRAME = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_BEGINMOCOMPFRAMEDATA*);
    using PDD_MOCOMPCB_ENDFRAME = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_ENDMOCOMPFRAMEDATA*);
    using PDD_MOCOMPCB_RENDER = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_RENDERMOCOMPDATA*);
    using PDD_MOCOMPCB_QUERYSTATUS = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_QUERYMOCOMPSTATUSDATA*);
    using PDD_MOCOMPCB_DESTROY = uint32_t __stdcall(Windows::Win32::Graphics::DirectDraw::DD_DESTROYMOCOMPDATA*);
    using PDX_IRQCALLBACK = void __stdcall(Windows::Win32::Graphics::DirectDraw::DX_IRQDATA*);
    using PDX_GETIRQINFO = uint32_t __stdcall(void*, void*, Windows::Win32::Graphics::DirectDraw::DDGETIRQINFO*);
    using PDX_ENABLEIRQ = uint32_t __stdcall(void*, Windows::Win32::Graphics::DirectDraw::DDENABLEIRQINFO*, void*);
    using PDX_SKIPNEXTFIELD = uint32_t __stdcall(void*, Windows::Win32::Graphics::DirectDraw::DDSKIPNEXTFIELDINFO*, void*);
    using PDX_BOBNEXTFIELD = uint32_t __stdcall(void*, Windows::Win32::Graphics::DirectDraw::DDBOBNEXTFIELDINFO*, void*);
    using PDX_SETSTATE = uint32_t __stdcall(void*, Windows::Win32::Graphics::DirectDraw::DDSETSTATEININFO*, Windows::Win32::Graphics::DirectDraw::DDSETSTATEOUTINFO*);
    using PDX_LOCK = uint32_t __stdcall(void*, Windows::Win32::Graphics::DirectDraw::DDLOCKININFO*, Windows::Win32::Graphics::DirectDraw::DDLOCKOUTINFO*);
    using PDX_FLIPOVERLAY = uint32_t __stdcall(void*, Windows::Win32::Graphics::DirectDraw::DDFLIPOVERLAYINFO*, void*);
    using PDX_FLIPVIDEOPORT = uint32_t __stdcall(void*, Windows::Win32::Graphics::DirectDraw::DDFLIPVIDEOPORTINFO*, void*);
    using PDX_GETPOLARITY = uint32_t __stdcall(void*, Windows::Win32::Graphics::DirectDraw::DDGETPOLARITYININFO*, Windows::Win32::Graphics::DirectDraw::DDGETPOLARITYOUTINFO*);
    using PDX_GETCURRENTAUTOFLIP = uint32_t __stdcall(void*, Windows::Win32::Graphics::DirectDraw::DDGETCURRENTAUTOFLIPININFO*, Windows::Win32::Graphics::DirectDraw::DDGETCURRENTAUTOFLIPOUTINFO*);
    using PDX_GETPREVIOUSAUTOFLIP = uint32_t __stdcall(void*, Windows::Win32::Graphics::DirectDraw::DDGETPREVIOUSAUTOFLIPININFO*, Windows::Win32::Graphics::DirectDraw::DDGETPREVIOUSAUTOFLIPOUTINFO*);
    using PDX_TRANSFER = uint32_t __stdcall(void*, Windows::Win32::Graphics::DirectDraw::DDTRANSFERININFO*, Windows::Win32::Graphics::DirectDraw::DDTRANSFEROUTINFO*);
    using PDX_GETTRANSFERSTATUS = uint32_t __stdcall(void*, void*, Windows::Win32::Graphics::DirectDraw::DDGETTRANSFERSTATUSOUTINFO*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
