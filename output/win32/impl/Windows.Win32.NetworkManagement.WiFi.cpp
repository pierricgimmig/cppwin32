// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_NetworkManagement_WiFi_2_H
#define WIN32_Windows_Win32_NetworkManagement_WiFi_2_H
#include "win32/Windows.Win32.NetworkManagement.WiFi.h"
#include "win32/impl/Windows.Win32.NetworkManagement.WiFi.1.h"
WIN32_EXPORT namespace win32::Windows::Win32::NetworkManagement::WiFi
{
ApiTable g_api_table;

#pragma region abi_methods
extern "C"
{
    uint32_t __stdcall ORBIT_IMPL_WlanOpenHandle(uint32_t dwClientVersion, void* pReserved, uint32_t* pdwNegotiatedVersion, win32::Windows::Win32::Foundation::HANDLE* phClientHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwClientVersion);
        ORBIT_TRACK_PARAM(pReserved);
        ORBIT_TRACK_PARAM(pdwNegotiatedVersion);
        ORBIT_TRACK_PARAM(phClientHandle);

        auto win32_impl_result = g_api_table.WlanOpenHandle(dwClientVersion, pReserved, pdwNegotiatedVersion, phClientHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanCloseHandle(win32::Windows::Win32::Foundation::HANDLE hClientHandle, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanCloseHandle(hClientHandle, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanEnumInterfaces(win32::Windows::Win32::Foundation::HANDLE hClientHandle, void* pReserved, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_INTERFACE_INFO_LIST** ppInterfaceList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pReserved);
        ORBIT_TRACK_PARAM(ppInterfaceList);

        auto win32_impl_result = g_api_table.WlanEnumInterfaces(hClientHandle, pReserved, ppInterfaceList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanSetAutoConfigParameter(win32::Windows::Win32::Foundation::HANDLE hClientHandle, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_AUTOCONF_OPCODE OpCode, uint32_t dwDataSize, void* pData, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(OpCode);
        ORBIT_TRACK_PARAM(dwDataSize);
        ORBIT_TRACK_PARAM(pData);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanSetAutoConfigParameter(hClientHandle, OpCode, dwDataSize, pData, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanQueryAutoConfigParameter(win32::Windows::Win32::Foundation::HANDLE hClientHandle, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_AUTOCONF_OPCODE OpCode, void* pReserved, uint32_t* pdwDataSize, void** ppData, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_OPCODE_VALUE_TYPE* pWlanOpcodeValueType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(OpCode);
        ORBIT_TRACK_PARAM(pReserved);
        ORBIT_TRACK_PARAM(pdwDataSize);
        ORBIT_TRACK_PARAM(ppData);
        ORBIT_TRACK_PARAM(pWlanOpcodeValueType);

        auto win32_impl_result = g_api_table.WlanQueryAutoConfigParameter(hClientHandle, OpCode, pReserved, pdwDataSize, ppData, pWlanOpcodeValueType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanGetInterfaceCapability(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, void* pReserved, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_INTERFACE_CAPABILITY** ppCapability) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(pReserved);
        ORBIT_TRACK_PARAM(ppCapability);

        auto win32_impl_result = g_api_table.WlanGetInterfaceCapability(hClientHandle, pInterfaceGuid, pReserved, ppCapability);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanSetInterface(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_INTF_OPCODE OpCode, uint32_t dwDataSize, void* pData, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(OpCode);
        ORBIT_TRACK_PARAM(dwDataSize);
        ORBIT_TRACK_PARAM(pData);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanSetInterface(hClientHandle, pInterfaceGuid, OpCode, dwDataSize, pData, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanQueryInterface(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_INTF_OPCODE OpCode, void* pReserved, uint32_t* pdwDataSize, void** ppData, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_OPCODE_VALUE_TYPE* pWlanOpcodeValueType) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(OpCode);
        ORBIT_TRACK_PARAM(pReserved);
        ORBIT_TRACK_PARAM(pdwDataSize);
        ORBIT_TRACK_PARAM(ppData);
        ORBIT_TRACK_PARAM(pWlanOpcodeValueType);

        auto win32_impl_result = g_api_table.WlanQueryInterface(hClientHandle, pInterfaceGuid, OpCode, pReserved, pdwDataSize, ppData, pWlanOpcodeValueType);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanIhvControl(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_IHV_CONTROL_TYPE Type, uint32_t dwInBufferSize, void* pInBuffer, uint32_t dwOutBufferSize, void* pOutBuffer, uint32_t* pdwBytesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(Type);
        ORBIT_TRACK_PARAM(dwInBufferSize);
        ORBIT_TRACK_PARAM(pInBuffer);
        ORBIT_TRACK_PARAM(dwOutBufferSize);
        ORBIT_TRACK_PARAM(pOutBuffer);
        ORBIT_TRACK_PARAM(pdwBytesReturned);

        auto win32_impl_result = g_api_table.WlanIhvControl(hClientHandle, pInterfaceGuid, Type, dwInBufferSize, pInBuffer, dwOutBufferSize, pOutBuffer, pdwBytesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanScan(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, win32::Windows::Win32::NetworkManagement::WiFi::DOT11_SSID* pDot11Ssid, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_RAW_DATA* pIeData, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(pDot11Ssid);
        ORBIT_TRACK_PARAM(pIeData);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanScan(hClientHandle, pInterfaceGuid, pDot11Ssid, pIeData, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanGetAvailableNetworkList(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, uint32_t dwFlags, void* pReserved, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_AVAILABLE_NETWORK_LIST** ppAvailableNetworkList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(pReserved);
        ORBIT_TRACK_PARAM(ppAvailableNetworkList);

        auto win32_impl_result = g_api_table.WlanGetAvailableNetworkList(hClientHandle, pInterfaceGuid, dwFlags, pReserved, ppAvailableNetworkList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanGetAvailableNetworkList2(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, uint32_t dwFlags, void* pReserved, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_AVAILABLE_NETWORK_LIST_V2** ppAvailableNetworkList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(pReserved);
        ORBIT_TRACK_PARAM(ppAvailableNetworkList);

        auto win32_impl_result = g_api_table.WlanGetAvailableNetworkList2(hClientHandle, pInterfaceGuid, dwFlags, pReserved, ppAvailableNetworkList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanGetNetworkBssList(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, win32::Windows::Win32::NetworkManagement::WiFi::DOT11_SSID* pDot11Ssid, win32::Windows::Win32::NetworkManagement::WiFi::DOT11_BSS_TYPE dot11BssType, win32::Windows::Win32::Foundation::BOOL bSecurityEnabled, void* pReserved, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_BSS_LIST** ppWlanBssList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(pDot11Ssid);
        ORBIT_TRACK_PARAM(dot11BssType);
        ORBIT_TRACK_PARAM(bSecurityEnabled);
        ORBIT_TRACK_PARAM(pReserved);
        ORBIT_TRACK_PARAM(ppWlanBssList);

        auto win32_impl_result = g_api_table.WlanGetNetworkBssList(hClientHandle, pInterfaceGuid, pDot11Ssid, dot11BssType, bSecurityEnabled, pReserved, ppWlanBssList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanConnect(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_CONNECTION_PARAMETERS* pConnectionParameters, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(pConnectionParameters);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanConnect(hClientHandle, pInterfaceGuid, pConnectionParameters, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanConnect2(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_CONNECTION_PARAMETERS_V2* pConnectionParameters, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(pConnectionParameters);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanConnect2(hClientHandle, pInterfaceGuid, pConnectionParameters, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanDisconnect(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanDisconnect(hClientHandle, pInterfaceGuid, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanRegisterNotification(win32::Windows::Win32::Foundation::HANDLE hClientHandle, uint32_t dwNotifSource, win32::Windows::Win32::Foundation::BOOL bIgnoreDuplicate, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_NOTIFICATION_CALLBACK* funcCallback, void* pCallbackContext, void* pReserved, uint32_t* pdwPrevNotifSource) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(dwNotifSource);
        ORBIT_TRACK_PARAM(bIgnoreDuplicate);
        ORBIT_TRACK_PARAM(funcCallback);
        ORBIT_TRACK_PARAM(pCallbackContext);
        ORBIT_TRACK_PARAM(pReserved);
        ORBIT_TRACK_PARAM(pdwPrevNotifSource);

        auto win32_impl_result = g_api_table.WlanRegisterNotification(hClientHandle, dwNotifSource, bIgnoreDuplicate, funcCallback, pCallbackContext, pReserved, pdwPrevNotifSource);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanGetProfile(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, win32::Windows::Win32::Foundation::PWSTR strProfileName, void* pReserved, win32::Windows::Win32::Foundation::PWSTR* pstrProfileXml, uint32_t* pdwFlags, uint32_t* pdwGrantedAccess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(strProfileName);
        ORBIT_TRACK_PARAM(pReserved);
        ORBIT_TRACK_PARAM(pstrProfileXml);
        ORBIT_TRACK_PARAM(pdwFlags);
        ORBIT_TRACK_PARAM(pdwGrantedAccess);

        auto win32_impl_result = g_api_table.WlanGetProfile(hClientHandle, pInterfaceGuid, strProfileName, pReserved, pstrProfileXml, pdwFlags, pdwGrantedAccess);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanSetProfileEapUserData(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, win32::Windows::Win32::Foundation::PWSTR strProfileName, win32::Windows::Win32::Security::ExtensibleAuthenticationProtocol::EAP_METHOD_TYPE eapType, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_SET_EAPHOST_FLAGS dwFlags, uint32_t dwEapUserDataSize, uint8_t* pbEapUserData, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(strProfileName);
        ORBIT_TRACK_PARAM(eapType);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(dwEapUserDataSize);
        ORBIT_TRACK_PARAM(pbEapUserData);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanSetProfileEapUserData(hClientHandle, pInterfaceGuid, strProfileName, eapType, dwFlags, dwEapUserDataSize, pbEapUserData, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanSetProfileEapXmlUserData(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, win32::Windows::Win32::Foundation::PWSTR strProfileName, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_SET_EAPHOST_FLAGS dwFlags, win32::Windows::Win32::Foundation::PWSTR strEapXmlUserData, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(strProfileName);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(strEapXmlUserData);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanSetProfileEapXmlUserData(hClientHandle, pInterfaceGuid, strProfileName, dwFlags, strEapXmlUserData, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanSetProfile(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, uint32_t dwFlags, win32::Windows::Win32::Foundation::PWSTR strProfileXml, win32::Windows::Win32::Foundation::PWSTR strAllUserProfileSecurity, win32::Windows::Win32::Foundation::BOOL bOverwrite, void* pReserved, uint32_t* pdwReasonCode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(strProfileXml);
        ORBIT_TRACK_PARAM(strAllUserProfileSecurity);
        ORBIT_TRACK_PARAM(bOverwrite);
        ORBIT_TRACK_PARAM(pReserved);
        ORBIT_TRACK_PARAM(pdwReasonCode);

        auto win32_impl_result = g_api_table.WlanSetProfile(hClientHandle, pInterfaceGuid, dwFlags, strProfileXml, strAllUserProfileSecurity, bOverwrite, pReserved, pdwReasonCode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanDeleteProfile(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, win32::Windows::Win32::Foundation::PWSTR strProfileName, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(strProfileName);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanDeleteProfile(hClientHandle, pInterfaceGuid, strProfileName, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanRenameProfile(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, win32::Windows::Win32::Foundation::PWSTR strOldProfileName, win32::Windows::Win32::Foundation::PWSTR strNewProfileName, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(strOldProfileName);
        ORBIT_TRACK_PARAM(strNewProfileName);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanRenameProfile(hClientHandle, pInterfaceGuid, strOldProfileName, strNewProfileName, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanGetProfileList(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, void* pReserved, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_PROFILE_INFO_LIST** ppProfileList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(pReserved);
        ORBIT_TRACK_PARAM(ppProfileList);

        auto win32_impl_result = g_api_table.WlanGetProfileList(hClientHandle, pInterfaceGuid, pReserved, ppProfileList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanSetProfileList(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, uint32_t dwItems, win32::Windows::Win32::Foundation::PWSTR* strProfileNames, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(dwItems);
        ORBIT_TRACK_PARAM(strProfileNames);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanSetProfileList(hClientHandle, pInterfaceGuid, dwItems, strProfileNames, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanSetProfilePosition(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, win32::Windows::Win32::Foundation::PWSTR strProfileName, uint32_t dwPosition, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(strProfileName);
        ORBIT_TRACK_PARAM(dwPosition);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanSetProfilePosition(hClientHandle, pInterfaceGuid, strProfileName, dwPosition, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanSetProfileCustomUserData(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, win32::Windows::Win32::Foundation::PWSTR strProfileName, uint32_t dwDataSize, uint8_t* pData, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(strProfileName);
        ORBIT_TRACK_PARAM(dwDataSize);
        ORBIT_TRACK_PARAM(pData);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanSetProfileCustomUserData(hClientHandle, pInterfaceGuid, strProfileName, dwDataSize, pData, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanGetProfileCustomUserData(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, win32::Windows::Win32::Foundation::PWSTR strProfileName, void* pReserved, uint32_t* pdwDataSize, uint8_t** ppData) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(strProfileName);
        ORBIT_TRACK_PARAM(pReserved);
        ORBIT_TRACK_PARAM(pdwDataSize);
        ORBIT_TRACK_PARAM(ppData);

        auto win32_impl_result = g_api_table.WlanGetProfileCustomUserData(hClientHandle, pInterfaceGuid, strProfileName, pReserved, pdwDataSize, ppData);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanSetFilterList(win32::Windows::Win32::Foundation::HANDLE hClientHandle, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_FILTER_LIST_TYPE wlanFilterListType, win32::Windows::Win32::NetworkManagement::WiFi::DOT11_NETWORK_LIST* pNetworkList, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(wlanFilterListType);
        ORBIT_TRACK_PARAM(pNetworkList);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanSetFilterList(hClientHandle, wlanFilterListType, pNetworkList, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanGetFilterList(win32::Windows::Win32::Foundation::HANDLE hClientHandle, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_FILTER_LIST_TYPE wlanFilterListType, void* pReserved, win32::Windows::Win32::NetworkManagement::WiFi::DOT11_NETWORK_LIST** ppNetworkList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(wlanFilterListType);
        ORBIT_TRACK_PARAM(pReserved);
        ORBIT_TRACK_PARAM(ppNetworkList);

        auto win32_impl_result = g_api_table.WlanGetFilterList(hClientHandle, wlanFilterListType, pReserved, ppNetworkList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanSetPsdIEDataList(win32::Windows::Win32::Foundation::HANDLE hClientHandle, win32::Windows::Win32::Foundation::PWSTR strFormat, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_RAW_DATA_LIST* pPsdIEDataList, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(strFormat);
        ORBIT_TRACK_PARAM(pPsdIEDataList);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanSetPsdIEDataList(hClientHandle, strFormat, pPsdIEDataList, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanSaveTemporaryProfile(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, win32::Windows::Win32::Foundation::PWSTR strProfileName, win32::Windows::Win32::Foundation::PWSTR strAllUserProfileSecurity, uint32_t dwFlags, win32::Windows::Win32::Foundation::BOOL bOverWrite, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(strProfileName);
        ORBIT_TRACK_PARAM(strAllUserProfileSecurity);
        ORBIT_TRACK_PARAM(dwFlags);
        ORBIT_TRACK_PARAM(bOverWrite);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanSaveTemporaryProfile(hClientHandle, pInterfaceGuid, strProfileName, strAllUserProfileSecurity, dwFlags, bOverWrite, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanDeviceServiceCommand(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, ::win32::guid* pDeviceServiceGuid, uint32_t dwOpCode, uint32_t dwInBufferSize, void* pInBuffer, uint32_t dwOutBufferSize, void* pOutBuffer, uint32_t* pdwBytesReturned) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(pDeviceServiceGuid);
        ORBIT_TRACK_PARAM(dwOpCode);
        ORBIT_TRACK_PARAM(dwInBufferSize);
        ORBIT_TRACK_PARAM(pInBuffer);
        ORBIT_TRACK_PARAM(dwOutBufferSize);
        ORBIT_TRACK_PARAM(pOutBuffer);
        ORBIT_TRACK_PARAM(pdwBytesReturned);

        auto win32_impl_result = g_api_table.WlanDeviceServiceCommand(hClientHandle, pInterfaceGuid, pDeviceServiceGuid, dwOpCode, dwInBufferSize, pInBuffer, dwOutBufferSize, pOutBuffer, pdwBytesReturned);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanGetSupportedDeviceServices(win32::Windows::Win32::Foundation::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_DEVICE_SERVICE_GUID_LIST** ppDevSvcGuidList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(ppDevSvcGuidList);

        auto win32_impl_result = g_api_table.WlanGetSupportedDeviceServices(hClientHandle, pInterfaceGuid, ppDevSvcGuidList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanRegisterDeviceServiceNotification(win32::Windows::Win32::Foundation::HANDLE hClientHandle, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_DEVICE_SERVICE_GUID_LIST* pDevSvcGuidList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pDevSvcGuidList);

        auto win32_impl_result = g_api_table.WlanRegisterDeviceServiceNotification(hClientHandle, pDevSvcGuidList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanExtractPsdIEDataList(win32::Windows::Win32::Foundation::HANDLE hClientHandle, uint32_t dwIeDataSize, uint8_t* pRawIeData, win32::Windows::Win32::Foundation::PWSTR strFormat, void* pReserved, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_RAW_DATA_LIST** ppPsdIEDataList) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(dwIeDataSize);
        ORBIT_TRACK_PARAM(pRawIeData);
        ORBIT_TRACK_PARAM(strFormat);
        ORBIT_TRACK_PARAM(pReserved);
        ORBIT_TRACK_PARAM(ppPsdIEDataList);

        auto win32_impl_result = g_api_table.WlanExtractPsdIEDataList(hClientHandle, dwIeDataSize, pRawIeData, strFormat, pReserved, ppPsdIEDataList);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanReasonCodeToString(uint32_t dwReasonCode, uint32_t dwBufferSize, win32::Windows::Win32::Foundation::PWSTR pStringBuffer, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwReasonCode);
        ORBIT_TRACK_PARAM(dwBufferSize);
        ORBIT_TRACK_PARAM(pStringBuffer);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanReasonCodeToString(dwReasonCode, dwBufferSize, pStringBuffer, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void* __stdcall ORBIT_IMPL_WlanAllocateMemory(uint32_t dwMemorySize) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwMemorySize);

        auto win32_impl_result = g_api_table.WlanAllocateMemory(dwMemorySize);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    void __stdcall ORBIT_IMPL_WlanFreeMemory(void* pMemory) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pMemory);

        g_api_table.WlanFreeMemory(pMemory);
        
    }

    uint32_t __stdcall ORBIT_IMPL_WlanSetSecuritySettings(win32::Windows::Win32::Foundation::HANDLE hClientHandle, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_SECURABLE_OBJECT SecurableObject, win32::Windows::Win32::Foundation::PWSTR strModifiedSDDL) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(SecurableObject);
        ORBIT_TRACK_PARAM(strModifiedSDDL);

        auto win32_impl_result = g_api_table.WlanSetSecuritySettings(hClientHandle, SecurableObject, strModifiedSDDL);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanGetSecuritySettings(win32::Windows::Win32::Foundation::HANDLE hClientHandle, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_SECURABLE_OBJECT SecurableObject, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_OPCODE_VALUE_TYPE* pValueType, win32::Windows::Win32::Foundation::PWSTR* pstrCurrentSDDL, uint32_t* pdwGrantedAccess) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(SecurableObject);
        ORBIT_TRACK_PARAM(pValueType);
        ORBIT_TRACK_PARAM(pstrCurrentSDDL);
        ORBIT_TRACK_PARAM(pdwGrantedAccess);

        auto win32_impl_result = g_api_table.WlanGetSecuritySettings(hClientHandle, SecurableObject, pValueType, pstrCurrentSDDL, pdwGrantedAccess);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanUIEditProfile(uint32_t dwClientVersion, win32::Windows::Win32::Foundation::PWSTR wstrProfileName, ::win32::guid* pInterfaceGuid, win32::Windows::Win32::Foundation::HWND hWnd, win32::Windows::Win32::NetworkManagement::WiFi::WL_DISPLAY_PAGES wlStartPage, void* pReserved, uint32_t* pWlanReasonCode) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwClientVersion);
        ORBIT_TRACK_PARAM(wstrProfileName);
        ORBIT_TRACK_PARAM(pInterfaceGuid);
        ORBIT_TRACK_PARAM(hWnd);
        ORBIT_TRACK_PARAM(wlStartPage);
        ORBIT_TRACK_PARAM(pReserved);
        ORBIT_TRACK_PARAM(pWlanReasonCode);

        auto win32_impl_result = g_api_table.WlanUIEditProfile(dwClientVersion, wstrProfileName, pInterfaceGuid, hWnd, wlStartPage, pReserved, pWlanReasonCode);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanHostedNetworkStartUsing(win32::Windows::Win32::Foundation::HANDLE hClientHandle, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_HOSTED_NETWORK_REASON* pFailReason, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pFailReason);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.WlanHostedNetworkStartUsing(hClientHandle, pFailReason, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanHostedNetworkStopUsing(win32::Windows::Win32::Foundation::HANDLE hClientHandle, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_HOSTED_NETWORK_REASON* pFailReason, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pFailReason);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.WlanHostedNetworkStopUsing(hClientHandle, pFailReason, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanHostedNetworkForceStart(win32::Windows::Win32::Foundation::HANDLE hClientHandle, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_HOSTED_NETWORK_REASON* pFailReason, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pFailReason);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.WlanHostedNetworkForceStart(hClientHandle, pFailReason, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanHostedNetworkForceStop(win32::Windows::Win32::Foundation::HANDLE hClientHandle, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_HOSTED_NETWORK_REASON* pFailReason, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pFailReason);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.WlanHostedNetworkForceStop(hClientHandle, pFailReason, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanHostedNetworkQueryProperty(win32::Windows::Win32::Foundation::HANDLE hClientHandle, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_HOSTED_NETWORK_OPCODE OpCode, uint32_t* pdwDataSize, void** ppvData, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_OPCODE_VALUE_TYPE* pWlanOpcodeValueType, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(OpCode);
        ORBIT_TRACK_PARAM(pdwDataSize);
        ORBIT_TRACK_PARAM(ppvData);
        ORBIT_TRACK_PARAM(pWlanOpcodeValueType);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.WlanHostedNetworkQueryProperty(hClientHandle, OpCode, pdwDataSize, ppvData, pWlanOpcodeValueType, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanHostedNetworkSetProperty(win32::Windows::Win32::Foundation::HANDLE hClientHandle, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_HOSTED_NETWORK_OPCODE OpCode, uint32_t dwDataSize, void* pvData, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_HOSTED_NETWORK_REASON* pFailReason, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(OpCode);
        ORBIT_TRACK_PARAM(dwDataSize);
        ORBIT_TRACK_PARAM(pvData);
        ORBIT_TRACK_PARAM(pFailReason);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.WlanHostedNetworkSetProperty(hClientHandle, OpCode, dwDataSize, pvData, pFailReason, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanHostedNetworkInitSettings(win32::Windows::Win32::Foundation::HANDLE hClientHandle, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_HOSTED_NETWORK_REASON* pFailReason, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pFailReason);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.WlanHostedNetworkInitSettings(hClientHandle, pFailReason, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanHostedNetworkRefreshSecuritySettings(win32::Windows::Win32::Foundation::HANDLE hClientHandle, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_HOSTED_NETWORK_REASON* pFailReason, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pFailReason);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.WlanHostedNetworkRefreshSecuritySettings(hClientHandle, pFailReason, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanHostedNetworkQueryStatus(win32::Windows::Win32::Foundation::HANDLE hClientHandle, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_HOSTED_NETWORK_STATUS** ppWlanHostedNetworkStatus, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(ppWlanHostedNetworkStatus);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.WlanHostedNetworkQueryStatus(hClientHandle, ppWlanHostedNetworkStatus, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanHostedNetworkSetSecondaryKey(win32::Windows::Win32::Foundation::HANDLE hClientHandle, uint32_t dwKeyLength, uint8_t* pucKeyData, win32::Windows::Win32::Foundation::BOOL bIsPassPhrase, win32::Windows::Win32::Foundation::BOOL bPersistent, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_HOSTED_NETWORK_REASON* pFailReason, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(dwKeyLength);
        ORBIT_TRACK_PARAM(pucKeyData);
        ORBIT_TRACK_PARAM(bIsPassPhrase);
        ORBIT_TRACK_PARAM(bPersistent);
        ORBIT_TRACK_PARAM(pFailReason);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.WlanHostedNetworkSetSecondaryKey(hClientHandle, dwKeyLength, pucKeyData, bIsPassPhrase, bPersistent, pFailReason, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanHostedNetworkQuerySecondaryKey(win32::Windows::Win32::Foundation::HANDLE hClientHandle, uint32_t* pdwKeyLength, uint8_t** ppucKeyData, win32::Windows::Win32::Foundation::BOOL* pbIsPassPhrase, win32::Windows::Win32::Foundation::BOOL* pbPersistent, win32::Windows::Win32::NetworkManagement::WiFi::WLAN_HOSTED_NETWORK_REASON* pFailReason, void* pvReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pdwKeyLength);
        ORBIT_TRACK_PARAM(ppucKeyData);
        ORBIT_TRACK_PARAM(pbIsPassPhrase);
        ORBIT_TRACK_PARAM(pbPersistent);
        ORBIT_TRACK_PARAM(pFailReason);
        ORBIT_TRACK_PARAM(pvReserved);

        auto win32_impl_result = g_api_table.WlanHostedNetworkQuerySecondaryKey(hClientHandle, pdwKeyLength, ppucKeyData, pbIsPassPhrase, pbPersistent, pFailReason, pvReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WlanRegisterVirtualStationNotification(win32::Windows::Win32::Foundation::HANDLE hClientHandle, win32::Windows::Win32::Foundation::BOOL bRegister, void* pReserved) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(bRegister);
        ORBIT_TRACK_PARAM(pReserved);

        auto win32_impl_result = g_api_table.WlanRegisterVirtualStationNotification(hClientHandle, bRegister, pReserved);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WFDOpenHandle(uint32_t dwClientVersion, uint32_t* pdwNegotiatedVersion, win32::Windows::Win32::Foundation::HANDLE* phClientHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(dwClientVersion);
        ORBIT_TRACK_PARAM(pdwNegotiatedVersion);
        ORBIT_TRACK_PARAM(phClientHandle);

        auto win32_impl_result = g_api_table.WFDOpenHandle(dwClientVersion, pdwNegotiatedVersion, phClientHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WFDCloseHandle(win32::Windows::Win32::Foundation::HANDLE hClientHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);

        auto win32_impl_result = g_api_table.WFDCloseHandle(hClientHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WFDStartOpenSession(win32::Windows::Win32::Foundation::HANDLE hClientHandle, uint8_t** pDeviceAddress, void* pvContext, win32::Windows::Win32::NetworkManagement::WiFi::WFD_OPEN_SESSION_COMPLETE_CALLBACK* pfnCallback, win32::Windows::Win32::Foundation::HANDLE* phSessionHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pDeviceAddress);
        ORBIT_TRACK_PARAM(pvContext);
        ORBIT_TRACK_PARAM(pfnCallback);
        ORBIT_TRACK_PARAM(phSessionHandle);

        auto win32_impl_result = g_api_table.WFDStartOpenSession(hClientHandle, pDeviceAddress, pvContext, pfnCallback, phSessionHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WFDCancelOpenSession(win32::Windows::Win32::Foundation::HANDLE hSessionHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSessionHandle);

        auto win32_impl_result = g_api_table.WFDCancelOpenSession(hSessionHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WFDOpenLegacySession(win32::Windows::Win32::Foundation::HANDLE hClientHandle, uint8_t** pLegacyMacAddress, win32::Windows::Win32::Foundation::HANDLE* phSessionHandle, ::win32::guid* pGuidSessionInterface) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hClientHandle);
        ORBIT_TRACK_PARAM(pLegacyMacAddress);
        ORBIT_TRACK_PARAM(phSessionHandle);
        ORBIT_TRACK_PARAM(pGuidSessionInterface);

        auto win32_impl_result = g_api_table.WFDOpenLegacySession(hClientHandle, pLegacyMacAddress, phSessionHandle, pGuidSessionInterface);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WFDCloseSession(win32::Windows::Win32::Foundation::HANDLE hSessionHandle) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(hSessionHandle);

        auto win32_impl_result = g_api_table.WFDCloseSession(hSessionHandle);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

    uint32_t __stdcall ORBIT_IMPL_WFDUpdateDeviceVisibility(uint8_t** pDeviceAddress) noexcept
    {
        ORBIT_SCOPE_FUNCTION();
        ORBIT_TRACK_PARAM(pDeviceAddress);

        auto win32_impl_result = g_api_table.WFDUpdateDeviceVisibility(pDeviceAddress);
        ORBIT_TRACK_RET(win32_impl_result);
        return win32_impl_result;
    }

}

#pragma endregion abi_methods

}
#endif
