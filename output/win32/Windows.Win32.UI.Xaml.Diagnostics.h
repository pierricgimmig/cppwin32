// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_UI_Xaml_Diagnostics_H
#define WIN32_Windows_Win32_UI_Xaml_Diagnostics_H
#include "win32/base.h"
#include "win32/impl/complex_structs.h"
#include "win32/impl/complex_interfaces.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.UI.Xaml.Diagnostics.0.h"
WIN32_EXPORT namespace win32::Windows::Win32::UI::Xaml::Diagnostics
{
#pragma region methods
extern "C"
{
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_InitializeXamlDiagnostic(win32::Windows::Win32::Foundation::PWSTR endPointName, uint32_t pid, win32::Windows::Win32::Foundation::PWSTR wszDllXamlDiagnostics, win32::Windows::Win32::Foundation::PWSTR wszTAPDllName, ::win32::guid tapClsid) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_InitializeXamlDiagnosticsEx(win32::Windows::Win32::Foundation::PWSTR endPointName, uint32_t pid, win32::Windows::Win32::Foundation::PWSTR wszDllXamlDiagnostics, win32::Windows::Win32::Foundation::PWSTR wszTAPDllName, ::win32::guid tapClsid, win32::Windows::Win32::Foundation::PWSTR wszInitializationData) noexcept;
}

struct ApiTable {
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *InitializeXamlDiagnostic)(win32::Windows::Win32::Foundation::PWSTR endPointName, uint32_t pid, win32::Windows::Win32::Foundation::PWSTR wszDllXamlDiagnostics, win32::Windows::Win32::Foundation::PWSTR wszTAPDllName, ::win32::guid tapClsid) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *InitializeXamlDiagnosticsEx)(win32::Windows::Win32::Foundation::PWSTR endPointName, uint32_t pid, win32::Windows::Win32::Foundation::PWSTR wszDllXamlDiagnostics, win32::Windows::Win32::Foundation::PWSTR wszTAPDllName, ::win32::guid tapClsid, win32::Windows::Win32::Foundation::PWSTR wszInitializationData) noexcept;
};
extern ApiTable g_api_table;

#pragma endregion methods

}
#endif
