// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_NetworkManagement_Multicast_H
#define WIN32_Windows_Win32_NetworkManagement_Multicast_H
#include "win32/base.h"
#include "win32/impl/complex_structs.h"
#include "win32/impl/complex_interfaces.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.NetworkManagement.Multicast.0.h"
WIN32_EXPORT namespace win32::Windows::Win32::NetworkManagement::Multicast
{
#pragma region methods
extern "C"
{
    uint32_t __stdcall ORBIT_IMPL_McastApiStartup(uint32_t* Version) noexcept;
    void __stdcall ORBIT_IMPL_McastApiCleanup() noexcept;
    uint32_t __stdcall ORBIT_IMPL_McastGenUID(win32::Windows::Win32::NetworkManagement::Multicast::MCAST_CLIENT_UID* pRequestID) noexcept;
    uint32_t __stdcall ORBIT_IMPL_McastEnumerateScopes(uint16_t AddrFamily, win32::Windows::Win32::Foundation::BOOL ReQuery, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_SCOPE_ENTRY* pScopeList, uint32_t* pScopeLen, uint32_t* pScopeCount) noexcept;
    uint32_t __stdcall ORBIT_IMPL_McastRequestAddress(uint16_t AddrFamily, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_CLIENT_UID* pRequestID, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_SCOPE_CTX* pScopeCtx, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_LEASE_REQUEST* pAddrRequest, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_LEASE_RESPONSE* pAddrResponse) noexcept;
    uint32_t __stdcall ORBIT_IMPL_McastRenewAddress(uint16_t AddrFamily, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_CLIENT_UID* pRequestID, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_LEASE_REQUEST* pRenewRequest, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_LEASE_RESPONSE* pRenewResponse) noexcept;
    uint32_t __stdcall ORBIT_IMPL_McastReleaseAddress(uint16_t AddrFamily, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_CLIENT_UID* pRequestID, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_LEASE_REQUEST* pReleaseRequest) noexcept;
}

struct ApiTable {
    uint32_t (__stdcall *McastApiStartup)(uint32_t* Version) noexcept;
    void (__stdcall *McastApiCleanup)() noexcept;
    uint32_t (__stdcall *McastGenUID)(win32::Windows::Win32::NetworkManagement::Multicast::MCAST_CLIENT_UID* pRequestID) noexcept;
    uint32_t (__stdcall *McastEnumerateScopes)(uint16_t AddrFamily, win32::Windows::Win32::Foundation::BOOL ReQuery, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_SCOPE_ENTRY* pScopeList, uint32_t* pScopeLen, uint32_t* pScopeCount) noexcept;
    uint32_t (__stdcall *McastRequestAddress)(uint16_t AddrFamily, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_CLIENT_UID* pRequestID, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_SCOPE_CTX* pScopeCtx, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_LEASE_REQUEST* pAddrRequest, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_LEASE_RESPONSE* pAddrResponse) noexcept;
    uint32_t (__stdcall *McastRenewAddress)(uint16_t AddrFamily, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_CLIENT_UID* pRequestID, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_LEASE_REQUEST* pRenewRequest, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_LEASE_RESPONSE* pRenewResponse) noexcept;
    uint32_t (__stdcall *McastReleaseAddress)(uint16_t AddrFamily, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_CLIENT_UID* pRequestID, win32::Windows::Win32::NetworkManagement::Multicast::MCAST_LEASE_REQUEST* pReleaseRequest) noexcept;
};
extern ApiTable g_api_table;

#pragma endregion methods

}
#endif
