// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Graphics_OpenGL_H
#define WIN32_Windows_Win32_Graphics_OpenGL_H
#include "win32/base.h"
#include "win32/impl/complex_structs.h"
#include "win32/impl/complex_interfaces.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.Graphics.OpenGL.0.h"
WIN32_EXPORT namespace win32::Windows::Win32::Graphics::OpenGL
{
#pragma region methods
extern "C"
{
    int32_t __stdcall ORBIT_IMPL_ChoosePixelFormat(win32::Windows::Win32::Graphics::Gdi::HDC hdc, win32::Windows::Win32::Graphics::OpenGL::PIXELFORMATDESCRIPTOR* ppfd) noexcept;
    int32_t __stdcall ORBIT_IMPL_DescribePixelFormat(win32::Windows::Win32::Graphics::Gdi::HDC hdc, int32_t iPixelFormat, uint32_t nBytes, win32::Windows::Win32::Graphics::OpenGL::PIXELFORMATDESCRIPTOR* ppfd) noexcept;
    int32_t __stdcall ORBIT_IMPL_GetPixelFormat(win32::Windows::Win32::Graphics::Gdi::HDC hdc) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetPixelFormat(win32::Windows::Win32::Graphics::Gdi::HDC hdc, int32_t format, win32::Windows::Win32::Graphics::OpenGL::PIXELFORMATDESCRIPTOR* ppfd) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetEnhMetaFilePixelFormat(win32::Windows::Win32::Graphics::Gdi::HENHMETAFILE hemf, uint32_t cbBuffer, win32::Windows::Win32::Graphics::OpenGL::PIXELFORMATDESCRIPTOR* ppfd) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_wglCopyContext(win32::Windows::Win32::Graphics::OpenGL::HGLRC param0, win32::Windows::Win32::Graphics::OpenGL::HGLRC param1, uint32_t param2) noexcept;
    win32::Windows::Win32::Graphics::OpenGL::HGLRC __stdcall ORBIT_IMPL_wglCreateContext(win32::Windows::Win32::Graphics::Gdi::HDC param0) noexcept;
    win32::Windows::Win32::Graphics::OpenGL::HGLRC __stdcall ORBIT_IMPL_wglCreateLayerContext(win32::Windows::Win32::Graphics::Gdi::HDC param0, int32_t param1) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_wglDeleteContext(win32::Windows::Win32::Graphics::OpenGL::HGLRC param0) noexcept;
    win32::Windows::Win32::Graphics::OpenGL::HGLRC __stdcall ORBIT_IMPL_wglGetCurrentContext() noexcept;
    win32::Windows::Win32::Graphics::Gdi::HDC __stdcall ORBIT_IMPL_wglGetCurrentDC() noexcept;
    win32::Windows::Win32::Foundation::PROC* __stdcall ORBIT_IMPL_wglGetProcAddress(win32::Windows::Win32::Foundation::PSTR param0) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_wglMakeCurrent(win32::Windows::Win32::Graphics::Gdi::HDC param0, win32::Windows::Win32::Graphics::OpenGL::HGLRC param1) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_wglShareLists(win32::Windows::Win32::Graphics::OpenGL::HGLRC param0, win32::Windows::Win32::Graphics::OpenGL::HGLRC param1) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_wglUseFontBitmapsA(win32::Windows::Win32::Graphics::Gdi::HDC param0, uint32_t param1, uint32_t param2, uint32_t param3) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_wglUseFontBitmapsW(win32::Windows::Win32::Graphics::Gdi::HDC param0, uint32_t param1, uint32_t param2, uint32_t param3) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SwapBuffers(win32::Windows::Win32::Graphics::Gdi::HDC param0) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_wglUseFontOutlinesA(win32::Windows::Win32::Graphics::Gdi::HDC param0, uint32_t param1, uint32_t param2, uint32_t param3, float param4, float param5, int32_t param6, win32::Windows::Win32::Graphics::OpenGL::GLYPHMETRICSFLOAT* param7) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_wglUseFontOutlinesW(win32::Windows::Win32::Graphics::Gdi::HDC param0, uint32_t param1, uint32_t param2, uint32_t param3, float param4, float param5, int32_t param6, win32::Windows::Win32::Graphics::OpenGL::GLYPHMETRICSFLOAT* param7) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_wglDescribeLayerPlane(win32::Windows::Win32::Graphics::Gdi::HDC param0, int32_t param1, int32_t param2, uint32_t param3, win32::Windows::Win32::Graphics::OpenGL::LAYERPLANEDESCRIPTOR* param4) noexcept;
    int32_t __stdcall ORBIT_IMPL_wglSetLayerPaletteEntries(win32::Windows::Win32::Graphics::Gdi::HDC param0, int32_t param1, int32_t param2, int32_t param3, uint32_t* param4) noexcept;
    int32_t __stdcall ORBIT_IMPL_wglGetLayerPaletteEntries(win32::Windows::Win32::Graphics::Gdi::HDC param0, int32_t param1, int32_t param2, int32_t param3, uint32_t* param4) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_wglRealizeLayerPalette(win32::Windows::Win32::Graphics::Gdi::HDC param0, int32_t param1, win32::Windows::Win32::Foundation::BOOL param2) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_wglSwapLayerBuffers(win32::Windows::Win32::Graphics::Gdi::HDC param0, uint32_t param1) noexcept;
    void __stdcall ORBIT_IMPL_glAccum(uint32_t op, float value) noexcept;
    void __stdcall ORBIT_IMPL_glAlphaFunc(uint32_t func, float ref) noexcept;
    uint8_t __stdcall ORBIT_IMPL_glAreTexturesResident(int32_t n, uint32_t* textures, uint8_t* residences) noexcept;
    void __stdcall ORBIT_IMPL_glArrayElement(int32_t i) noexcept;
    void __stdcall ORBIT_IMPL_glBegin(uint32_t mode) noexcept;
    void __stdcall ORBIT_IMPL_glBindTexture(uint32_t target, uint32_t texture) noexcept;
    void __stdcall ORBIT_IMPL_glBitmap(int32_t width, int32_t height, float xorig, float yorig, float xmove, float ymove, uint8_t* bitmap) noexcept;
    void __stdcall ORBIT_IMPL_glBlendFunc(uint32_t sfactor, uint32_t dfactor) noexcept;
    void __stdcall ORBIT_IMPL_glCallList(uint32_t list) noexcept;
    void __stdcall ORBIT_IMPL_glCallLists(int32_t n, uint32_t type, void* lists) noexcept;
    void __stdcall ORBIT_IMPL_glClear(uint32_t mask) noexcept;
    void __stdcall ORBIT_IMPL_glClearAccum(float red, float green, float blue, float alpha) noexcept;
    void __stdcall ORBIT_IMPL_glClearColor(float red, float green, float blue, float alpha) noexcept;
    void __stdcall ORBIT_IMPL_glClearDepth(double depth) noexcept;
    void __stdcall ORBIT_IMPL_glClearIndex(float c) noexcept;
    void __stdcall ORBIT_IMPL_glClearStencil(int32_t s) noexcept;
    void __stdcall ORBIT_IMPL_glClipPlane(uint32_t plane, double* equation) noexcept;
    void __stdcall ORBIT_IMPL_glColor3b(int8_t red, int8_t green, int8_t blue) noexcept;
    void __stdcall ORBIT_IMPL_glColor3bv(int8_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glColor3d(double red, double green, double blue) noexcept;
    void __stdcall ORBIT_IMPL_glColor3dv(double* v) noexcept;
    void __stdcall ORBIT_IMPL_glColor3f(float red, float green, float blue) noexcept;
    void __stdcall ORBIT_IMPL_glColor3fv(float* v) noexcept;
    void __stdcall ORBIT_IMPL_glColor3i(int32_t red, int32_t green, int32_t blue) noexcept;
    void __stdcall ORBIT_IMPL_glColor3iv(int32_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glColor3s(int16_t red, int16_t green, int16_t blue) noexcept;
    void __stdcall ORBIT_IMPL_glColor3sv(int16_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glColor3ub(uint8_t red, uint8_t green, uint8_t blue) noexcept;
    void __stdcall ORBIT_IMPL_glColor3ubv(uint8_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glColor3ui(uint32_t red, uint32_t green, uint32_t blue) noexcept;
    void __stdcall ORBIT_IMPL_glColor3uiv(uint32_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glColor3us(uint16_t red, uint16_t green, uint16_t blue) noexcept;
    void __stdcall ORBIT_IMPL_glColor3usv(uint16_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glColor4b(int8_t red, int8_t green, int8_t blue, int8_t alpha) noexcept;
    void __stdcall ORBIT_IMPL_glColor4bv(int8_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glColor4d(double red, double green, double blue, double alpha) noexcept;
    void __stdcall ORBIT_IMPL_glColor4dv(double* v) noexcept;
    void __stdcall ORBIT_IMPL_glColor4f(float red, float green, float blue, float alpha) noexcept;
    void __stdcall ORBIT_IMPL_glColor4fv(float* v) noexcept;
    void __stdcall ORBIT_IMPL_glColor4i(int32_t red, int32_t green, int32_t blue, int32_t alpha) noexcept;
    void __stdcall ORBIT_IMPL_glColor4iv(int32_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glColor4s(int16_t red, int16_t green, int16_t blue, int16_t alpha) noexcept;
    void __stdcall ORBIT_IMPL_glColor4sv(int16_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glColor4ub(uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha) noexcept;
    void __stdcall ORBIT_IMPL_glColor4ubv(uint8_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glColor4ui(uint32_t red, uint32_t green, uint32_t blue, uint32_t alpha) noexcept;
    void __stdcall ORBIT_IMPL_glColor4uiv(uint32_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glColor4us(uint16_t red, uint16_t green, uint16_t blue, uint16_t alpha) noexcept;
    void __stdcall ORBIT_IMPL_glColor4usv(uint16_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glColorMask(uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha) noexcept;
    void __stdcall ORBIT_IMPL_glColorMaterial(uint32_t face, uint32_t mode) noexcept;
    void __stdcall ORBIT_IMPL_glColorPointer(int32_t size, uint32_t type, int32_t stride, void* pointer) noexcept;
    void __stdcall ORBIT_IMPL_glCopyPixels(int32_t x, int32_t y, int32_t width, int32_t height, uint32_t type) noexcept;
    void __stdcall ORBIT_IMPL_glCopyTexImage1D(uint32_t target, int32_t level, uint32_t internalFormat, int32_t x, int32_t y, int32_t width, int32_t border) noexcept;
    void __stdcall ORBIT_IMPL_glCopyTexImage2D(uint32_t target, int32_t level, uint32_t internalFormat, int32_t x, int32_t y, int32_t width, int32_t height, int32_t border) noexcept;
    void __stdcall ORBIT_IMPL_glCopyTexSubImage1D(uint32_t target, int32_t level, int32_t xoffset, int32_t x, int32_t y, int32_t width) noexcept;
    void __stdcall ORBIT_IMPL_glCopyTexSubImage2D(uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t x, int32_t y, int32_t width, int32_t height) noexcept;
    void __stdcall ORBIT_IMPL_glCullFace(uint32_t mode) noexcept;
    void __stdcall ORBIT_IMPL_glDeleteLists(uint32_t list, int32_t range) noexcept;
    void __stdcall ORBIT_IMPL_glDeleteTextures(int32_t n, uint32_t* textures) noexcept;
    void __stdcall ORBIT_IMPL_glDepthFunc(uint32_t func) noexcept;
    void __stdcall ORBIT_IMPL_glDepthMask(uint8_t flag) noexcept;
    void __stdcall ORBIT_IMPL_glDepthRange(double zNear, double zFar) noexcept;
    void __stdcall ORBIT_IMPL_glDisable(uint32_t cap) noexcept;
    void __stdcall ORBIT_IMPL_glDisableClientState(uint32_t array) noexcept;
    void __stdcall ORBIT_IMPL_glDrawArrays(uint32_t mode, int32_t first, int32_t count) noexcept;
    void __stdcall ORBIT_IMPL_glDrawBuffer(uint32_t mode) noexcept;
    void __stdcall ORBIT_IMPL_glDrawElements(uint32_t mode, int32_t count, uint32_t type, void* indices) noexcept;
    void __stdcall ORBIT_IMPL_glDrawPixels(int32_t width, int32_t height, uint32_t format, uint32_t type, void* pixels) noexcept;
    void __stdcall ORBIT_IMPL_glEdgeFlag(uint8_t flag) noexcept;
    void __stdcall ORBIT_IMPL_glEdgeFlagPointer(int32_t stride, void* pointer) noexcept;
    void __stdcall ORBIT_IMPL_glEdgeFlagv(uint8_t* flag) noexcept;
    void __stdcall ORBIT_IMPL_glEnable(uint32_t cap) noexcept;
    void __stdcall ORBIT_IMPL_glEnableClientState(uint32_t array) noexcept;
    void __stdcall ORBIT_IMPL_glEnd() noexcept;
    void __stdcall ORBIT_IMPL_glEndList() noexcept;
    void __stdcall ORBIT_IMPL_glEvalCoord1d(double u) noexcept;
    void __stdcall ORBIT_IMPL_glEvalCoord1dv(double* u) noexcept;
    void __stdcall ORBIT_IMPL_glEvalCoord1f(float u) noexcept;
    void __stdcall ORBIT_IMPL_glEvalCoord1fv(float* u) noexcept;
    void __stdcall ORBIT_IMPL_glEvalCoord2d(double u, double v) noexcept;
    void __stdcall ORBIT_IMPL_glEvalCoord2dv(double* u) noexcept;
    void __stdcall ORBIT_IMPL_glEvalCoord2f(float u, float v) noexcept;
    void __stdcall ORBIT_IMPL_glEvalCoord2fv(float* u) noexcept;
    void __stdcall ORBIT_IMPL_glEvalMesh1(uint32_t mode, int32_t i1, int32_t i2) noexcept;
    void __stdcall ORBIT_IMPL_glEvalMesh2(uint32_t mode, int32_t i1, int32_t i2, int32_t j1, int32_t j2) noexcept;
    void __stdcall ORBIT_IMPL_glEvalPoint1(int32_t i) noexcept;
    void __stdcall ORBIT_IMPL_glEvalPoint2(int32_t i, int32_t j) noexcept;
    void __stdcall ORBIT_IMPL_glFeedbackBuffer(int32_t size, uint32_t type, float* buffer) noexcept;
    void __stdcall ORBIT_IMPL_glFinish() noexcept;
    void __stdcall ORBIT_IMPL_glFlush() noexcept;
    void __stdcall ORBIT_IMPL_glFogf(uint32_t pname, float param1) noexcept;
    void __stdcall ORBIT_IMPL_glFogfv(uint32_t pname, float* params) noexcept;
    void __stdcall ORBIT_IMPL_glFogi(uint32_t pname, int32_t param1) noexcept;
    void __stdcall ORBIT_IMPL_glFogiv(uint32_t pname, int32_t* params) noexcept;
    void __stdcall ORBIT_IMPL_glFrontFace(uint32_t mode) noexcept;
    void __stdcall ORBIT_IMPL_glFrustum(double left, double right, double bottom, double top, double zNear, double zFar) noexcept;
    uint32_t __stdcall ORBIT_IMPL_glGenLists(int32_t range) noexcept;
    void __stdcall ORBIT_IMPL_glGenTextures(int32_t n, uint32_t* textures) noexcept;
    void __stdcall ORBIT_IMPL_glGetBooleanv(uint32_t pname, uint8_t* params) noexcept;
    void __stdcall ORBIT_IMPL_glGetClipPlane(uint32_t plane, double* equation) noexcept;
    void __stdcall ORBIT_IMPL_glGetDoublev(uint32_t pname, double* params) noexcept;
    uint32_t __stdcall ORBIT_IMPL_glGetError() noexcept;
    void __stdcall ORBIT_IMPL_glGetFloatv(uint32_t pname, float* params) noexcept;
    void __stdcall ORBIT_IMPL_glGetIntegerv(uint32_t pname, int32_t* params) noexcept;
    void __stdcall ORBIT_IMPL_glGetLightfv(uint32_t light, uint32_t pname, float* params) noexcept;
    void __stdcall ORBIT_IMPL_glGetLightiv(uint32_t light, uint32_t pname, int32_t* params) noexcept;
    void __stdcall ORBIT_IMPL_glGetMapdv(uint32_t target, uint32_t query, double* v) noexcept;
    void __stdcall ORBIT_IMPL_glGetMapfv(uint32_t target, uint32_t query, float* v) noexcept;
    void __stdcall ORBIT_IMPL_glGetMapiv(uint32_t target, uint32_t query, int32_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glGetMaterialfv(uint32_t face, uint32_t pname, float* params) noexcept;
    void __stdcall ORBIT_IMPL_glGetMaterialiv(uint32_t face, uint32_t pname, int32_t* params) noexcept;
    void __stdcall ORBIT_IMPL_glGetPixelMapfv(uint32_t map, float* values) noexcept;
    void __stdcall ORBIT_IMPL_glGetPixelMapuiv(uint32_t map, uint32_t* values) noexcept;
    void __stdcall ORBIT_IMPL_glGetPixelMapusv(uint32_t map, uint16_t* values) noexcept;
    void __stdcall ORBIT_IMPL_glGetPointerv(uint32_t pname, void** params) noexcept;
    void __stdcall ORBIT_IMPL_glGetPolygonStipple(uint8_t* mask) noexcept;
    uint8_t* __stdcall ORBIT_IMPL_glGetString(uint32_t name) noexcept;
    void __stdcall ORBIT_IMPL_glGetTexEnvfv(uint32_t target, uint32_t pname, float* params) noexcept;
    void __stdcall ORBIT_IMPL_glGetTexEnviv(uint32_t target, uint32_t pname, int32_t* params) noexcept;
    void __stdcall ORBIT_IMPL_glGetTexGendv(uint32_t coord, uint32_t pname, double* params) noexcept;
    void __stdcall ORBIT_IMPL_glGetTexGenfv(uint32_t coord, uint32_t pname, float* params) noexcept;
    void __stdcall ORBIT_IMPL_glGetTexGeniv(uint32_t coord, uint32_t pname, int32_t* params) noexcept;
    void __stdcall ORBIT_IMPL_glGetTexImage(uint32_t target, int32_t level, uint32_t format, uint32_t type, void* pixels) noexcept;
    void __stdcall ORBIT_IMPL_glGetTexLevelParameterfv(uint32_t target, int32_t level, uint32_t pname, float* params) noexcept;
    void __stdcall ORBIT_IMPL_glGetTexLevelParameteriv(uint32_t target, int32_t level, uint32_t pname, int32_t* params) noexcept;
    void __stdcall ORBIT_IMPL_glGetTexParameterfv(uint32_t target, uint32_t pname, float* params) noexcept;
    void __stdcall ORBIT_IMPL_glGetTexParameteriv(uint32_t target, uint32_t pname, int32_t* params) noexcept;
    void __stdcall ORBIT_IMPL_glHint(uint32_t target, uint32_t mode) noexcept;
    void __stdcall ORBIT_IMPL_glIndexMask(uint32_t mask) noexcept;
    void __stdcall ORBIT_IMPL_glIndexPointer(uint32_t type, int32_t stride, void* pointer) noexcept;
    void __stdcall ORBIT_IMPL_glIndexd(double c) noexcept;
    void __stdcall ORBIT_IMPL_glIndexdv(double* c) noexcept;
    void __stdcall ORBIT_IMPL_glIndexf(float c) noexcept;
    void __stdcall ORBIT_IMPL_glIndexfv(float* c) noexcept;
    void __stdcall ORBIT_IMPL_glIndexi(int32_t c) noexcept;
    void __stdcall ORBIT_IMPL_glIndexiv(int32_t* c) noexcept;
    void __stdcall ORBIT_IMPL_glIndexs(int16_t c) noexcept;
    void __stdcall ORBIT_IMPL_glIndexsv(int16_t* c) noexcept;
    void __stdcall ORBIT_IMPL_glIndexub(uint8_t c) noexcept;
    void __stdcall ORBIT_IMPL_glIndexubv(uint8_t* c) noexcept;
    void __stdcall ORBIT_IMPL_glInitNames() noexcept;
    void __stdcall ORBIT_IMPL_glInterleavedArrays(uint32_t format, int32_t stride, void* pointer) noexcept;
    uint8_t __stdcall ORBIT_IMPL_glIsEnabled(uint32_t cap) noexcept;
    uint8_t __stdcall ORBIT_IMPL_glIsList(uint32_t list) noexcept;
    uint8_t __stdcall ORBIT_IMPL_glIsTexture(uint32_t texture) noexcept;
    void __stdcall ORBIT_IMPL_glLightModelf(uint32_t pname, float param1) noexcept;
    void __stdcall ORBIT_IMPL_glLightModelfv(uint32_t pname, float* params) noexcept;
    void __stdcall ORBIT_IMPL_glLightModeli(uint32_t pname, int32_t param1) noexcept;
    void __stdcall ORBIT_IMPL_glLightModeliv(uint32_t pname, int32_t* params) noexcept;
    void __stdcall ORBIT_IMPL_glLightf(uint32_t light, uint32_t pname, float param2) noexcept;
    void __stdcall ORBIT_IMPL_glLightfv(uint32_t light, uint32_t pname, float* params) noexcept;
    void __stdcall ORBIT_IMPL_glLighti(uint32_t light, uint32_t pname, int32_t param2) noexcept;
    void __stdcall ORBIT_IMPL_glLightiv(uint32_t light, uint32_t pname, int32_t* params) noexcept;
    void __stdcall ORBIT_IMPL_glLineStipple(int32_t factor, uint16_t pattern) noexcept;
    void __stdcall ORBIT_IMPL_glLineWidth(float width) noexcept;
    void __stdcall ORBIT_IMPL_glListBase(uint32_t base) noexcept;
    void __stdcall ORBIT_IMPL_glLoadIdentity() noexcept;
    void __stdcall ORBIT_IMPL_glLoadMatrixd(double* m) noexcept;
    void __stdcall ORBIT_IMPL_glLoadMatrixf(float* m) noexcept;
    void __stdcall ORBIT_IMPL_glLoadName(uint32_t name) noexcept;
    void __stdcall ORBIT_IMPL_glLogicOp(uint32_t opcode) noexcept;
    void __stdcall ORBIT_IMPL_glMap1d(uint32_t target, double u1, double u2, int32_t stride, int32_t order, double* points) noexcept;
    void __stdcall ORBIT_IMPL_glMap1f(uint32_t target, float u1, float u2, int32_t stride, int32_t order, float* points) noexcept;
    void __stdcall ORBIT_IMPL_glMap2d(uint32_t target, double u1, double u2, int32_t ustride, int32_t uorder, double v1, double v2, int32_t vstride, int32_t vorder, double* points) noexcept;
    void __stdcall ORBIT_IMPL_glMap2f(uint32_t target, float u1, float u2, int32_t ustride, int32_t uorder, float v1, float v2, int32_t vstride, int32_t vorder, float* points) noexcept;
    void __stdcall ORBIT_IMPL_glMapGrid1d(int32_t un, double u1, double u2) noexcept;
    void __stdcall ORBIT_IMPL_glMapGrid1f(int32_t un, float u1, float u2) noexcept;
    void __stdcall ORBIT_IMPL_glMapGrid2d(int32_t un, double u1, double u2, int32_t vn, double v1, double v2) noexcept;
    void __stdcall ORBIT_IMPL_glMapGrid2f(int32_t un, float u1, float u2, int32_t vn, float v1, float v2) noexcept;
    void __stdcall ORBIT_IMPL_glMaterialf(uint32_t face, uint32_t pname, float param2) noexcept;
    void __stdcall ORBIT_IMPL_glMaterialfv(uint32_t face, uint32_t pname, float* params) noexcept;
    void __stdcall ORBIT_IMPL_glMateriali(uint32_t face, uint32_t pname, int32_t param2) noexcept;
    void __stdcall ORBIT_IMPL_glMaterialiv(uint32_t face, uint32_t pname, int32_t* params) noexcept;
    void __stdcall ORBIT_IMPL_glMatrixMode(uint32_t mode) noexcept;
    void __stdcall ORBIT_IMPL_glMultMatrixd(double* m) noexcept;
    void __stdcall ORBIT_IMPL_glMultMatrixf(float* m) noexcept;
    void __stdcall ORBIT_IMPL_glNewList(uint32_t list, uint32_t mode) noexcept;
    void __stdcall ORBIT_IMPL_glNormal3b(int8_t nx, int8_t ny, int8_t nz) noexcept;
    void __stdcall ORBIT_IMPL_glNormal3bv(int8_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glNormal3d(double nx, double ny, double nz) noexcept;
    void __stdcall ORBIT_IMPL_glNormal3dv(double* v) noexcept;
    void __stdcall ORBIT_IMPL_glNormal3f(float nx, float ny, float nz) noexcept;
    void __stdcall ORBIT_IMPL_glNormal3fv(float* v) noexcept;
    void __stdcall ORBIT_IMPL_glNormal3i(int32_t nx, int32_t ny, int32_t nz) noexcept;
    void __stdcall ORBIT_IMPL_glNormal3iv(int32_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glNormal3s(int16_t nx, int16_t ny, int16_t nz) noexcept;
    void __stdcall ORBIT_IMPL_glNormal3sv(int16_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glNormalPointer(uint32_t type, int32_t stride, void* pointer) noexcept;
    void __stdcall ORBIT_IMPL_glOrtho(double left, double right, double bottom, double top, double zNear, double zFar) noexcept;
    void __stdcall ORBIT_IMPL_glPassThrough(float token) noexcept;
    void __stdcall ORBIT_IMPL_glPixelMapfv(uint32_t map, int32_t mapsize, float* values) noexcept;
    void __stdcall ORBIT_IMPL_glPixelMapuiv(uint32_t map, int32_t mapsize, uint32_t* values) noexcept;
    void __stdcall ORBIT_IMPL_glPixelMapusv(uint32_t map, int32_t mapsize, uint16_t* values) noexcept;
    void __stdcall ORBIT_IMPL_glPixelStoref(uint32_t pname, float param1) noexcept;
    void __stdcall ORBIT_IMPL_glPixelStorei(uint32_t pname, int32_t param1) noexcept;
    void __stdcall ORBIT_IMPL_glPixelTransferf(uint32_t pname, float param1) noexcept;
    void __stdcall ORBIT_IMPL_glPixelTransferi(uint32_t pname, int32_t param1) noexcept;
    void __stdcall ORBIT_IMPL_glPixelZoom(float xfactor, float yfactor) noexcept;
    void __stdcall ORBIT_IMPL_glPointSize(float size) noexcept;
    void __stdcall ORBIT_IMPL_glPolygonMode(uint32_t face, uint32_t mode) noexcept;
    void __stdcall ORBIT_IMPL_glPolygonOffset(float factor, float units) noexcept;
    void __stdcall ORBIT_IMPL_glPolygonStipple(uint8_t* mask) noexcept;
    void __stdcall ORBIT_IMPL_glPopAttrib() noexcept;
    void __stdcall ORBIT_IMPL_glPopClientAttrib() noexcept;
    void __stdcall ORBIT_IMPL_glPopMatrix() noexcept;
    void __stdcall ORBIT_IMPL_glPopName() noexcept;
    void __stdcall ORBIT_IMPL_glPrioritizeTextures(int32_t n, uint32_t* textures, float* priorities) noexcept;
    void __stdcall ORBIT_IMPL_glPushAttrib(uint32_t mask) noexcept;
    void __stdcall ORBIT_IMPL_glPushClientAttrib(uint32_t mask) noexcept;
    void __stdcall ORBIT_IMPL_glPushMatrix() noexcept;
    void __stdcall ORBIT_IMPL_glPushName(uint32_t name) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos2d(double x, double y) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos2dv(double* v) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos2f(float x, float y) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos2fv(float* v) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos2i(int32_t x, int32_t y) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos2iv(int32_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos2s(int16_t x, int16_t y) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos2sv(int16_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos3d(double x, double y, double z) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos3dv(double* v) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos3f(float x, float y, float z) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos3fv(float* v) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos3i(int32_t x, int32_t y, int32_t z) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos3iv(int32_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos3s(int16_t x, int16_t y, int16_t z) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos3sv(int16_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos4d(double x, double y, double z, double w) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos4dv(double* v) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos4f(float x, float y, float z, float w) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos4fv(float* v) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos4i(int32_t x, int32_t y, int32_t z, int32_t w) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos4iv(int32_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos4s(int16_t x, int16_t y, int16_t z, int16_t w) noexcept;
    void __stdcall ORBIT_IMPL_glRasterPos4sv(int16_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glReadBuffer(uint32_t mode) noexcept;
    void __stdcall ORBIT_IMPL_glReadPixels(int32_t x, int32_t y, int32_t width, int32_t height, uint32_t format, uint32_t type, void* pixels) noexcept;
    void __stdcall ORBIT_IMPL_glRectd(double x1, double y1, double x2, double y2) noexcept;
    void __stdcall ORBIT_IMPL_glRectdv(double* v1, double* v2) noexcept;
    void __stdcall ORBIT_IMPL_glRectf(float x1, float y1, float x2, float y2) noexcept;
    void __stdcall ORBIT_IMPL_glRectfv(float* v1, float* v2) noexcept;
    void __stdcall ORBIT_IMPL_glRecti(int32_t x1, int32_t y1, int32_t x2, int32_t y2) noexcept;
    void __stdcall ORBIT_IMPL_glRectiv(int32_t* v1, int32_t* v2) noexcept;
    void __stdcall ORBIT_IMPL_glRects(int16_t x1, int16_t y1, int16_t x2, int16_t y2) noexcept;
    void __stdcall ORBIT_IMPL_glRectsv(int16_t* v1, int16_t* v2) noexcept;
    int32_t __stdcall ORBIT_IMPL_glRenderMode(uint32_t mode) noexcept;
    void __stdcall ORBIT_IMPL_glRotated(double angle, double x, double y, double z) noexcept;
    void __stdcall ORBIT_IMPL_glRotatef(float angle, float x, float y, float z) noexcept;
    void __stdcall ORBIT_IMPL_glScaled(double x, double y, double z) noexcept;
    void __stdcall ORBIT_IMPL_glScalef(float x, float y, float z) noexcept;
    void __stdcall ORBIT_IMPL_glScissor(int32_t x, int32_t y, int32_t width, int32_t height) noexcept;
    void __stdcall ORBIT_IMPL_glSelectBuffer(int32_t size, uint32_t* buffer) noexcept;
    void __stdcall ORBIT_IMPL_glShadeModel(uint32_t mode) noexcept;
    void __stdcall ORBIT_IMPL_glStencilFunc(uint32_t func, int32_t ref, uint32_t mask) noexcept;
    void __stdcall ORBIT_IMPL_glStencilMask(uint32_t mask) noexcept;
    void __stdcall ORBIT_IMPL_glStencilOp(uint32_t fail, uint32_t zfail, uint32_t zpass) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord1d(double s) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord1dv(double* v) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord1f(float s) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord1fv(float* v) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord1i(int32_t s) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord1iv(int32_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord1s(int16_t s) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord1sv(int16_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord2d(double s, double t) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord2dv(double* v) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord2f(float s, float t) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord2fv(float* v) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord2i(int32_t s, int32_t t) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord2iv(int32_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord2s(int16_t s, int16_t t) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord2sv(int16_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord3d(double s, double t, double r) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord3dv(double* v) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord3f(float s, float t, float r) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord3fv(float* v) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord3i(int32_t s, int32_t t, int32_t r) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord3iv(int32_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord3s(int16_t s, int16_t t, int16_t r) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord3sv(int16_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord4d(double s, double t, double r, double q) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord4dv(double* v) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord4f(float s, float t, float r, float q) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord4fv(float* v) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord4i(int32_t s, int32_t t, int32_t r, int32_t q) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord4iv(int32_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord4s(int16_t s, int16_t t, int16_t r, int16_t q) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoord4sv(int16_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glTexCoordPointer(int32_t size, uint32_t type, int32_t stride, void* pointer) noexcept;
    void __stdcall ORBIT_IMPL_glTexEnvf(uint32_t target, uint32_t pname, float param2) noexcept;
    void __stdcall ORBIT_IMPL_glTexEnvfv(uint32_t target, uint32_t pname, float* params) noexcept;
    void __stdcall ORBIT_IMPL_glTexEnvi(uint32_t target, uint32_t pname, int32_t param2) noexcept;
    void __stdcall ORBIT_IMPL_glTexEnviv(uint32_t target, uint32_t pname, int32_t* params) noexcept;
    void __stdcall ORBIT_IMPL_glTexGend(uint32_t coord, uint32_t pname, double param2) noexcept;
    void __stdcall ORBIT_IMPL_glTexGendv(uint32_t coord, uint32_t pname, double* params) noexcept;
    void __stdcall ORBIT_IMPL_glTexGenf(uint32_t coord, uint32_t pname, float param2) noexcept;
    void __stdcall ORBIT_IMPL_glTexGenfv(uint32_t coord, uint32_t pname, float* params) noexcept;
    void __stdcall ORBIT_IMPL_glTexGeni(uint32_t coord, uint32_t pname, int32_t param2) noexcept;
    void __stdcall ORBIT_IMPL_glTexGeniv(uint32_t coord, uint32_t pname, int32_t* params) noexcept;
    void __stdcall ORBIT_IMPL_glTexImage1D(uint32_t target, int32_t level, int32_t internalformat, int32_t width, int32_t border, uint32_t format, uint32_t type, void* pixels) noexcept;
    void __stdcall ORBIT_IMPL_glTexImage2D(uint32_t target, int32_t level, int32_t internalformat, int32_t width, int32_t height, int32_t border, uint32_t format, uint32_t type, void* pixels) noexcept;
    void __stdcall ORBIT_IMPL_glTexParameterf(uint32_t target, uint32_t pname, float param2) noexcept;
    void __stdcall ORBIT_IMPL_glTexParameterfv(uint32_t target, uint32_t pname, float* params) noexcept;
    void __stdcall ORBIT_IMPL_glTexParameteri(uint32_t target, uint32_t pname, int32_t param2) noexcept;
    void __stdcall ORBIT_IMPL_glTexParameteriv(uint32_t target, uint32_t pname, int32_t* params) noexcept;
    void __stdcall ORBIT_IMPL_glTexSubImage1D(uint32_t target, int32_t level, int32_t xoffset, int32_t width, uint32_t format, uint32_t type, void* pixels) noexcept;
    void __stdcall ORBIT_IMPL_glTexSubImage2D(uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t width, int32_t height, uint32_t format, uint32_t type, void* pixels) noexcept;
    void __stdcall ORBIT_IMPL_glTranslated(double x, double y, double z) noexcept;
    void __stdcall ORBIT_IMPL_glTranslatef(float x, float y, float z) noexcept;
    void __stdcall ORBIT_IMPL_glVertex2d(double x, double y) noexcept;
    void __stdcall ORBIT_IMPL_glVertex2dv(double* v) noexcept;
    void __stdcall ORBIT_IMPL_glVertex2f(float x, float y) noexcept;
    void __stdcall ORBIT_IMPL_glVertex2fv(float* v) noexcept;
    void __stdcall ORBIT_IMPL_glVertex2i(int32_t x, int32_t y) noexcept;
    void __stdcall ORBIT_IMPL_glVertex2iv(int32_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glVertex2s(int16_t x, int16_t y) noexcept;
    void __stdcall ORBIT_IMPL_glVertex2sv(int16_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glVertex3d(double x, double y, double z) noexcept;
    void __stdcall ORBIT_IMPL_glVertex3dv(double* v) noexcept;
    void __stdcall ORBIT_IMPL_glVertex3f(float x, float y, float z) noexcept;
    void __stdcall ORBIT_IMPL_glVertex3fv(float* v) noexcept;
    void __stdcall ORBIT_IMPL_glVertex3i(int32_t x, int32_t y, int32_t z) noexcept;
    void __stdcall ORBIT_IMPL_glVertex3iv(int32_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glVertex3s(int16_t x, int16_t y, int16_t z) noexcept;
    void __stdcall ORBIT_IMPL_glVertex3sv(int16_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glVertex4d(double x, double y, double z, double w) noexcept;
    void __stdcall ORBIT_IMPL_glVertex4dv(double* v) noexcept;
    void __stdcall ORBIT_IMPL_glVertex4f(float x, float y, float z, float w) noexcept;
    void __stdcall ORBIT_IMPL_glVertex4fv(float* v) noexcept;
    void __stdcall ORBIT_IMPL_glVertex4i(int32_t x, int32_t y, int32_t z, int32_t w) noexcept;
    void __stdcall ORBIT_IMPL_glVertex4iv(int32_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glVertex4s(int16_t x, int16_t y, int16_t z, int16_t w) noexcept;
    void __stdcall ORBIT_IMPL_glVertex4sv(int16_t* v) noexcept;
    void __stdcall ORBIT_IMPL_glVertexPointer(int32_t size, uint32_t type, int32_t stride, void* pointer) noexcept;
    void __stdcall ORBIT_IMPL_glViewport(int32_t x, int32_t y, int32_t width, int32_t height) noexcept;
    uint8_t* __stdcall ORBIT_IMPL_gluErrorString(uint32_t errCode) noexcept;
    win32::Windows::Win32::Foundation::PWSTR __stdcall ORBIT_IMPL_gluErrorUnicodeStringEXT(uint32_t errCode) noexcept;
    uint8_t* __stdcall ORBIT_IMPL_gluGetString(uint32_t name) noexcept;
    void __stdcall ORBIT_IMPL_gluOrtho2D(double left, double right, double bottom, double top) noexcept;
    void __stdcall ORBIT_IMPL_gluPerspective(double fovy, double aspect, double zNear, double zFar) noexcept;
    void __stdcall ORBIT_IMPL_gluPickMatrix(double x, double y, double width, double height, int32_t* viewport) noexcept;
    void __stdcall ORBIT_IMPL_gluLookAt(double eyex, double eyey, double eyez, double centerx, double centery, double centerz, double upx, double upy, double upz) noexcept;
    int32_t __stdcall ORBIT_IMPL_gluProject(double objx, double objy, double objz, double* modelMatrix, double* projMatrix, int32_t* viewport, double* winx, double* winy, double* winz) noexcept;
    int32_t __stdcall ORBIT_IMPL_gluUnProject(double winx, double winy, double winz, double* modelMatrix, double* projMatrix, int32_t* viewport, double* objx, double* objy, double* objz) noexcept;
    int32_t __stdcall ORBIT_IMPL_gluScaleImage(uint32_t format, int32_t widthin, int32_t heightin, uint32_t typein, void* datain, int32_t widthout, int32_t heightout, uint32_t typeout, void* dataout) noexcept;
    int32_t __stdcall ORBIT_IMPL_gluBuild1DMipmaps(uint32_t target, int32_t components, int32_t width, uint32_t format, uint32_t type, void* data) noexcept;
    int32_t __stdcall ORBIT_IMPL_gluBuild2DMipmaps(uint32_t target, int32_t components, int32_t width, int32_t height, uint32_t format, uint32_t type, void* data) noexcept;
    win32::Windows::Win32::Graphics::OpenGL::GLUquadric* __stdcall ORBIT_IMPL_gluNewQuadric() noexcept;
    void __stdcall ORBIT_IMPL_gluDeleteQuadric(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* state) noexcept;
    void __stdcall ORBIT_IMPL_gluQuadricNormals(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* quadObject, uint32_t normals) noexcept;
    void __stdcall ORBIT_IMPL_gluQuadricTexture(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* quadObject, uint8_t textureCoords) noexcept;
    void __stdcall ORBIT_IMPL_gluQuadricOrientation(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* quadObject, uint32_t orientation) noexcept;
    void __stdcall ORBIT_IMPL_gluQuadricDrawStyle(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* quadObject, uint32_t drawStyle) noexcept;
    void __stdcall ORBIT_IMPL_gluCylinder(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* qobj, double baseRadius, double topRadius, double height, int32_t slices, int32_t stacks) noexcept;
    void __stdcall ORBIT_IMPL_gluDisk(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* qobj, double innerRadius, double outerRadius, int32_t slices, int32_t loops) noexcept;
    void __stdcall ORBIT_IMPL_gluPartialDisk(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* qobj, double innerRadius, double outerRadius, int32_t slices, int32_t loops, double startAngle, double sweepAngle) noexcept;
    void __stdcall ORBIT_IMPL_gluSphere(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* qobj, double radius, int32_t slices, int32_t stacks) noexcept;
    void __stdcall ORBIT_IMPL_gluQuadricCallback(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* qobj, uint32_t which, intptr_t fn) noexcept;
    win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* __stdcall ORBIT_IMPL_gluNewTess() noexcept;
    void __stdcall ORBIT_IMPL_gluDeleteTess(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess) noexcept;
    void __stdcall ORBIT_IMPL_gluTessBeginPolygon(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess, void* polygon_data) noexcept;
    void __stdcall ORBIT_IMPL_gluTessBeginContour(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess) noexcept;
    void __stdcall ORBIT_IMPL_gluTessVertex(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess, double* coords, void* data) noexcept;
    void __stdcall ORBIT_IMPL_gluTessEndContour(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess) noexcept;
    void __stdcall ORBIT_IMPL_gluTessEndPolygon(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess) noexcept;
    void __stdcall ORBIT_IMPL_gluTessProperty(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess, uint32_t which, double value) noexcept;
    void __stdcall ORBIT_IMPL_gluTessNormal(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess, double x, double y, double z) noexcept;
    void __stdcall ORBIT_IMPL_gluTessCallback(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess, uint32_t which, intptr_t fn) noexcept;
    void __stdcall ORBIT_IMPL_gluGetTessProperty(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess, uint32_t which, double* value) noexcept;
    win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* __stdcall ORBIT_IMPL_gluNewNurbsRenderer() noexcept;
    void __stdcall ORBIT_IMPL_gluDeleteNurbsRenderer(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj) noexcept;
    void __stdcall ORBIT_IMPL_gluBeginSurface(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj) noexcept;
    void __stdcall ORBIT_IMPL_gluBeginCurve(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj) noexcept;
    void __stdcall ORBIT_IMPL_gluEndCurve(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj) noexcept;
    void __stdcall ORBIT_IMPL_gluEndSurface(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj) noexcept;
    void __stdcall ORBIT_IMPL_gluBeginTrim(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj) noexcept;
    void __stdcall ORBIT_IMPL_gluEndTrim(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj) noexcept;
    void __stdcall ORBIT_IMPL_gluPwlCurve(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj, int32_t count, float* array, int32_t stride, uint32_t type) noexcept;
    void __stdcall ORBIT_IMPL_gluNurbsCurve(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj, int32_t nknots, float* knot, int32_t stride, float* ctlarray, int32_t order, uint32_t type) noexcept;
    void __stdcall ORBIT_IMPL_gluNurbsSurface(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj, int32_t sknot_count, float* sknot, int32_t tknot_count, float* tknot, int32_t s_stride, int32_t t_stride, float* ctlarray, int32_t sorder, int32_t torder, uint32_t type) noexcept;
    void __stdcall ORBIT_IMPL_gluLoadSamplingMatrices(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj, float* modelMatrix, float* projMatrix, int32_t* viewport) noexcept;
    void __stdcall ORBIT_IMPL_gluNurbsProperty(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj, uint32_t property, float value) noexcept;
    void __stdcall ORBIT_IMPL_gluGetNurbsProperty(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj, uint32_t property, float* value) noexcept;
    void __stdcall ORBIT_IMPL_gluNurbsCallback(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj, uint32_t which, intptr_t fn) noexcept;
    void __stdcall ORBIT_IMPL_gluBeginPolygon(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess) noexcept;
    void __stdcall ORBIT_IMPL_gluNextContour(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess, uint32_t type) noexcept;
    void __stdcall ORBIT_IMPL_gluEndPolygon(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess) noexcept;
}

struct ApiTable {
    int32_t (__stdcall *ChoosePixelFormat)(win32::Windows::Win32::Graphics::Gdi::HDC hdc, win32::Windows::Win32::Graphics::OpenGL::PIXELFORMATDESCRIPTOR* ppfd) noexcept;
    int32_t (__stdcall *DescribePixelFormat)(win32::Windows::Win32::Graphics::Gdi::HDC hdc, int32_t iPixelFormat, uint32_t nBytes, win32::Windows::Win32::Graphics::OpenGL::PIXELFORMATDESCRIPTOR* ppfd) noexcept;
    int32_t (__stdcall *GetPixelFormat)(win32::Windows::Win32::Graphics::Gdi::HDC hdc) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *SetPixelFormat)(win32::Windows::Win32::Graphics::Gdi::HDC hdc, int32_t format, win32::Windows::Win32::Graphics::OpenGL::PIXELFORMATDESCRIPTOR* ppfd) noexcept;
    uint32_t (__stdcall *GetEnhMetaFilePixelFormat)(win32::Windows::Win32::Graphics::Gdi::HENHMETAFILE hemf, uint32_t cbBuffer, win32::Windows::Win32::Graphics::OpenGL::PIXELFORMATDESCRIPTOR* ppfd) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *wglCopyContext)(win32::Windows::Win32::Graphics::OpenGL::HGLRC param0, win32::Windows::Win32::Graphics::OpenGL::HGLRC param1, uint32_t param2) noexcept;
    win32::Windows::Win32::Graphics::OpenGL::HGLRC (__stdcall *wglCreateContext)(win32::Windows::Win32::Graphics::Gdi::HDC param0) noexcept;
    win32::Windows::Win32::Graphics::OpenGL::HGLRC (__stdcall *wglCreateLayerContext)(win32::Windows::Win32::Graphics::Gdi::HDC param0, int32_t param1) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *wglDeleteContext)(win32::Windows::Win32::Graphics::OpenGL::HGLRC param0) noexcept;
    win32::Windows::Win32::Graphics::OpenGL::HGLRC (__stdcall *wglGetCurrentContext)() noexcept;
    win32::Windows::Win32::Graphics::Gdi::HDC (__stdcall *wglGetCurrentDC)() noexcept;
    win32::Windows::Win32::Foundation::PROC* (__stdcall *wglGetProcAddress)(win32::Windows::Win32::Foundation::PSTR param0) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *wglMakeCurrent)(win32::Windows::Win32::Graphics::Gdi::HDC param0, win32::Windows::Win32::Graphics::OpenGL::HGLRC param1) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *wglShareLists)(win32::Windows::Win32::Graphics::OpenGL::HGLRC param0, win32::Windows::Win32::Graphics::OpenGL::HGLRC param1) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *wglUseFontBitmapsA)(win32::Windows::Win32::Graphics::Gdi::HDC param0, uint32_t param1, uint32_t param2, uint32_t param3) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *wglUseFontBitmapsW)(win32::Windows::Win32::Graphics::Gdi::HDC param0, uint32_t param1, uint32_t param2, uint32_t param3) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *SwapBuffers)(win32::Windows::Win32::Graphics::Gdi::HDC param0) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *wglUseFontOutlinesA)(win32::Windows::Win32::Graphics::Gdi::HDC param0, uint32_t param1, uint32_t param2, uint32_t param3, float param4, float param5, int32_t param6, win32::Windows::Win32::Graphics::OpenGL::GLYPHMETRICSFLOAT* param7) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *wglUseFontOutlinesW)(win32::Windows::Win32::Graphics::Gdi::HDC param0, uint32_t param1, uint32_t param2, uint32_t param3, float param4, float param5, int32_t param6, win32::Windows::Win32::Graphics::OpenGL::GLYPHMETRICSFLOAT* param7) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *wglDescribeLayerPlane)(win32::Windows::Win32::Graphics::Gdi::HDC param0, int32_t param1, int32_t param2, uint32_t param3, win32::Windows::Win32::Graphics::OpenGL::LAYERPLANEDESCRIPTOR* param4) noexcept;
    int32_t (__stdcall *wglSetLayerPaletteEntries)(win32::Windows::Win32::Graphics::Gdi::HDC param0, int32_t param1, int32_t param2, int32_t param3, uint32_t* param4) noexcept;
    int32_t (__stdcall *wglGetLayerPaletteEntries)(win32::Windows::Win32::Graphics::Gdi::HDC param0, int32_t param1, int32_t param2, int32_t param3, uint32_t* param4) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *wglRealizeLayerPalette)(win32::Windows::Win32::Graphics::Gdi::HDC param0, int32_t param1, win32::Windows::Win32::Foundation::BOOL param2) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *wglSwapLayerBuffers)(win32::Windows::Win32::Graphics::Gdi::HDC param0, uint32_t param1) noexcept;
    void (__stdcall *glAccum)(uint32_t op, float value) noexcept;
    void (__stdcall *glAlphaFunc)(uint32_t func, float ref) noexcept;
    uint8_t (__stdcall *glAreTexturesResident)(int32_t n, uint32_t* textures, uint8_t* residences) noexcept;
    void (__stdcall *glArrayElement)(int32_t i) noexcept;
    void (__stdcall *glBegin)(uint32_t mode) noexcept;
    void (__stdcall *glBindTexture)(uint32_t target, uint32_t texture) noexcept;
    void (__stdcall *glBitmap)(int32_t width, int32_t height, float xorig, float yorig, float xmove, float ymove, uint8_t* bitmap) noexcept;
    void (__stdcall *glBlendFunc)(uint32_t sfactor, uint32_t dfactor) noexcept;
    void (__stdcall *glCallList)(uint32_t list) noexcept;
    void (__stdcall *glCallLists)(int32_t n, uint32_t type, void* lists) noexcept;
    void (__stdcall *glClear)(uint32_t mask) noexcept;
    void (__stdcall *glClearAccum)(float red, float green, float blue, float alpha) noexcept;
    void (__stdcall *glClearColor)(float red, float green, float blue, float alpha) noexcept;
    void (__stdcall *glClearDepth)(double depth) noexcept;
    void (__stdcall *glClearIndex)(float c) noexcept;
    void (__stdcall *glClearStencil)(int32_t s) noexcept;
    void (__stdcall *glClipPlane)(uint32_t plane, double* equation) noexcept;
    void (__stdcall *glColor3b)(int8_t red, int8_t green, int8_t blue) noexcept;
    void (__stdcall *glColor3bv)(int8_t* v) noexcept;
    void (__stdcall *glColor3d)(double red, double green, double blue) noexcept;
    void (__stdcall *glColor3dv)(double* v) noexcept;
    void (__stdcall *glColor3f)(float red, float green, float blue) noexcept;
    void (__stdcall *glColor3fv)(float* v) noexcept;
    void (__stdcall *glColor3i)(int32_t red, int32_t green, int32_t blue) noexcept;
    void (__stdcall *glColor3iv)(int32_t* v) noexcept;
    void (__stdcall *glColor3s)(int16_t red, int16_t green, int16_t blue) noexcept;
    void (__stdcall *glColor3sv)(int16_t* v) noexcept;
    void (__stdcall *glColor3ub)(uint8_t red, uint8_t green, uint8_t blue) noexcept;
    void (__stdcall *glColor3ubv)(uint8_t* v) noexcept;
    void (__stdcall *glColor3ui)(uint32_t red, uint32_t green, uint32_t blue) noexcept;
    void (__stdcall *glColor3uiv)(uint32_t* v) noexcept;
    void (__stdcall *glColor3us)(uint16_t red, uint16_t green, uint16_t blue) noexcept;
    void (__stdcall *glColor3usv)(uint16_t* v) noexcept;
    void (__stdcall *glColor4b)(int8_t red, int8_t green, int8_t blue, int8_t alpha) noexcept;
    void (__stdcall *glColor4bv)(int8_t* v) noexcept;
    void (__stdcall *glColor4d)(double red, double green, double blue, double alpha) noexcept;
    void (__stdcall *glColor4dv)(double* v) noexcept;
    void (__stdcall *glColor4f)(float red, float green, float blue, float alpha) noexcept;
    void (__stdcall *glColor4fv)(float* v) noexcept;
    void (__stdcall *glColor4i)(int32_t red, int32_t green, int32_t blue, int32_t alpha) noexcept;
    void (__stdcall *glColor4iv)(int32_t* v) noexcept;
    void (__stdcall *glColor4s)(int16_t red, int16_t green, int16_t blue, int16_t alpha) noexcept;
    void (__stdcall *glColor4sv)(int16_t* v) noexcept;
    void (__stdcall *glColor4ub)(uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha) noexcept;
    void (__stdcall *glColor4ubv)(uint8_t* v) noexcept;
    void (__stdcall *glColor4ui)(uint32_t red, uint32_t green, uint32_t blue, uint32_t alpha) noexcept;
    void (__stdcall *glColor4uiv)(uint32_t* v) noexcept;
    void (__stdcall *glColor4us)(uint16_t red, uint16_t green, uint16_t blue, uint16_t alpha) noexcept;
    void (__stdcall *glColor4usv)(uint16_t* v) noexcept;
    void (__stdcall *glColorMask)(uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha) noexcept;
    void (__stdcall *glColorMaterial)(uint32_t face, uint32_t mode) noexcept;
    void (__stdcall *glColorPointer)(int32_t size, uint32_t type, int32_t stride, void* pointer) noexcept;
    void (__stdcall *glCopyPixels)(int32_t x, int32_t y, int32_t width, int32_t height, uint32_t type) noexcept;
    void (__stdcall *glCopyTexImage1D)(uint32_t target, int32_t level, uint32_t internalFormat, int32_t x, int32_t y, int32_t width, int32_t border) noexcept;
    void (__stdcall *glCopyTexImage2D)(uint32_t target, int32_t level, uint32_t internalFormat, int32_t x, int32_t y, int32_t width, int32_t height, int32_t border) noexcept;
    void (__stdcall *glCopyTexSubImage1D)(uint32_t target, int32_t level, int32_t xoffset, int32_t x, int32_t y, int32_t width) noexcept;
    void (__stdcall *glCopyTexSubImage2D)(uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t x, int32_t y, int32_t width, int32_t height) noexcept;
    void (__stdcall *glCullFace)(uint32_t mode) noexcept;
    void (__stdcall *glDeleteLists)(uint32_t list, int32_t range) noexcept;
    void (__stdcall *glDeleteTextures)(int32_t n, uint32_t* textures) noexcept;
    void (__stdcall *glDepthFunc)(uint32_t func) noexcept;
    void (__stdcall *glDepthMask)(uint8_t flag) noexcept;
    void (__stdcall *glDepthRange)(double zNear, double zFar) noexcept;
    void (__stdcall *glDisable)(uint32_t cap) noexcept;
    void (__stdcall *glDisableClientState)(uint32_t array) noexcept;
    void (__stdcall *glDrawArrays)(uint32_t mode, int32_t first, int32_t count) noexcept;
    void (__stdcall *glDrawBuffer)(uint32_t mode) noexcept;
    void (__stdcall *glDrawElements)(uint32_t mode, int32_t count, uint32_t type, void* indices) noexcept;
    void (__stdcall *glDrawPixels)(int32_t width, int32_t height, uint32_t format, uint32_t type, void* pixels) noexcept;
    void (__stdcall *glEdgeFlag)(uint8_t flag) noexcept;
    void (__stdcall *glEdgeFlagPointer)(int32_t stride, void* pointer) noexcept;
    void (__stdcall *glEdgeFlagv)(uint8_t* flag) noexcept;
    void (__stdcall *glEnable)(uint32_t cap) noexcept;
    void (__stdcall *glEnableClientState)(uint32_t array) noexcept;
    void (__stdcall *glEnd)() noexcept;
    void (__stdcall *glEndList)() noexcept;
    void (__stdcall *glEvalCoord1d)(double u) noexcept;
    void (__stdcall *glEvalCoord1dv)(double* u) noexcept;
    void (__stdcall *glEvalCoord1f)(float u) noexcept;
    void (__stdcall *glEvalCoord1fv)(float* u) noexcept;
    void (__stdcall *glEvalCoord2d)(double u, double v) noexcept;
    void (__stdcall *glEvalCoord2dv)(double* u) noexcept;
    void (__stdcall *glEvalCoord2f)(float u, float v) noexcept;
    void (__stdcall *glEvalCoord2fv)(float* u) noexcept;
    void (__stdcall *glEvalMesh1)(uint32_t mode, int32_t i1, int32_t i2) noexcept;
    void (__stdcall *glEvalMesh2)(uint32_t mode, int32_t i1, int32_t i2, int32_t j1, int32_t j2) noexcept;
    void (__stdcall *glEvalPoint1)(int32_t i) noexcept;
    void (__stdcall *glEvalPoint2)(int32_t i, int32_t j) noexcept;
    void (__stdcall *glFeedbackBuffer)(int32_t size, uint32_t type, float* buffer) noexcept;
    void (__stdcall *glFinish)() noexcept;
    void (__stdcall *glFlush)() noexcept;
    void (__stdcall *glFogf)(uint32_t pname, float param1) noexcept;
    void (__stdcall *glFogfv)(uint32_t pname, float* params) noexcept;
    void (__stdcall *glFogi)(uint32_t pname, int32_t param1) noexcept;
    void (__stdcall *glFogiv)(uint32_t pname, int32_t* params) noexcept;
    void (__stdcall *glFrontFace)(uint32_t mode) noexcept;
    void (__stdcall *glFrustum)(double left, double right, double bottom, double top, double zNear, double zFar) noexcept;
    uint32_t (__stdcall *glGenLists)(int32_t range) noexcept;
    void (__stdcall *glGenTextures)(int32_t n, uint32_t* textures) noexcept;
    void (__stdcall *glGetBooleanv)(uint32_t pname, uint8_t* params) noexcept;
    void (__stdcall *glGetClipPlane)(uint32_t plane, double* equation) noexcept;
    void (__stdcall *glGetDoublev)(uint32_t pname, double* params) noexcept;
    uint32_t (__stdcall *glGetError)() noexcept;
    void (__stdcall *glGetFloatv)(uint32_t pname, float* params) noexcept;
    void (__stdcall *glGetIntegerv)(uint32_t pname, int32_t* params) noexcept;
    void (__stdcall *glGetLightfv)(uint32_t light, uint32_t pname, float* params) noexcept;
    void (__stdcall *glGetLightiv)(uint32_t light, uint32_t pname, int32_t* params) noexcept;
    void (__stdcall *glGetMapdv)(uint32_t target, uint32_t query, double* v) noexcept;
    void (__stdcall *glGetMapfv)(uint32_t target, uint32_t query, float* v) noexcept;
    void (__stdcall *glGetMapiv)(uint32_t target, uint32_t query, int32_t* v) noexcept;
    void (__stdcall *glGetMaterialfv)(uint32_t face, uint32_t pname, float* params) noexcept;
    void (__stdcall *glGetMaterialiv)(uint32_t face, uint32_t pname, int32_t* params) noexcept;
    void (__stdcall *glGetPixelMapfv)(uint32_t map, float* values) noexcept;
    void (__stdcall *glGetPixelMapuiv)(uint32_t map, uint32_t* values) noexcept;
    void (__stdcall *glGetPixelMapusv)(uint32_t map, uint16_t* values) noexcept;
    void (__stdcall *glGetPointerv)(uint32_t pname, void** params) noexcept;
    void (__stdcall *glGetPolygonStipple)(uint8_t* mask) noexcept;
    uint8_t* (__stdcall *glGetString)(uint32_t name) noexcept;
    void (__stdcall *glGetTexEnvfv)(uint32_t target, uint32_t pname, float* params) noexcept;
    void (__stdcall *glGetTexEnviv)(uint32_t target, uint32_t pname, int32_t* params) noexcept;
    void (__stdcall *glGetTexGendv)(uint32_t coord, uint32_t pname, double* params) noexcept;
    void (__stdcall *glGetTexGenfv)(uint32_t coord, uint32_t pname, float* params) noexcept;
    void (__stdcall *glGetTexGeniv)(uint32_t coord, uint32_t pname, int32_t* params) noexcept;
    void (__stdcall *glGetTexImage)(uint32_t target, int32_t level, uint32_t format, uint32_t type, void* pixels) noexcept;
    void (__stdcall *glGetTexLevelParameterfv)(uint32_t target, int32_t level, uint32_t pname, float* params) noexcept;
    void (__stdcall *glGetTexLevelParameteriv)(uint32_t target, int32_t level, uint32_t pname, int32_t* params) noexcept;
    void (__stdcall *glGetTexParameterfv)(uint32_t target, uint32_t pname, float* params) noexcept;
    void (__stdcall *glGetTexParameteriv)(uint32_t target, uint32_t pname, int32_t* params) noexcept;
    void (__stdcall *glHint)(uint32_t target, uint32_t mode) noexcept;
    void (__stdcall *glIndexMask)(uint32_t mask) noexcept;
    void (__stdcall *glIndexPointer)(uint32_t type, int32_t stride, void* pointer) noexcept;
    void (__stdcall *glIndexd)(double c) noexcept;
    void (__stdcall *glIndexdv)(double* c) noexcept;
    void (__stdcall *glIndexf)(float c) noexcept;
    void (__stdcall *glIndexfv)(float* c) noexcept;
    void (__stdcall *glIndexi)(int32_t c) noexcept;
    void (__stdcall *glIndexiv)(int32_t* c) noexcept;
    void (__stdcall *glIndexs)(int16_t c) noexcept;
    void (__stdcall *glIndexsv)(int16_t* c) noexcept;
    void (__stdcall *glIndexub)(uint8_t c) noexcept;
    void (__stdcall *glIndexubv)(uint8_t* c) noexcept;
    void (__stdcall *glInitNames)() noexcept;
    void (__stdcall *glInterleavedArrays)(uint32_t format, int32_t stride, void* pointer) noexcept;
    uint8_t (__stdcall *glIsEnabled)(uint32_t cap) noexcept;
    uint8_t (__stdcall *glIsList)(uint32_t list) noexcept;
    uint8_t (__stdcall *glIsTexture)(uint32_t texture) noexcept;
    void (__stdcall *glLightModelf)(uint32_t pname, float param1) noexcept;
    void (__stdcall *glLightModelfv)(uint32_t pname, float* params) noexcept;
    void (__stdcall *glLightModeli)(uint32_t pname, int32_t param1) noexcept;
    void (__stdcall *glLightModeliv)(uint32_t pname, int32_t* params) noexcept;
    void (__stdcall *glLightf)(uint32_t light, uint32_t pname, float param2) noexcept;
    void (__stdcall *glLightfv)(uint32_t light, uint32_t pname, float* params) noexcept;
    void (__stdcall *glLighti)(uint32_t light, uint32_t pname, int32_t param2) noexcept;
    void (__stdcall *glLightiv)(uint32_t light, uint32_t pname, int32_t* params) noexcept;
    void (__stdcall *glLineStipple)(int32_t factor, uint16_t pattern) noexcept;
    void (__stdcall *glLineWidth)(float width) noexcept;
    void (__stdcall *glListBase)(uint32_t base) noexcept;
    void (__stdcall *glLoadIdentity)() noexcept;
    void (__stdcall *glLoadMatrixd)(double* m) noexcept;
    void (__stdcall *glLoadMatrixf)(float* m) noexcept;
    void (__stdcall *glLoadName)(uint32_t name) noexcept;
    void (__stdcall *glLogicOp)(uint32_t opcode) noexcept;
    void (__stdcall *glMap1d)(uint32_t target, double u1, double u2, int32_t stride, int32_t order, double* points) noexcept;
    void (__stdcall *glMap1f)(uint32_t target, float u1, float u2, int32_t stride, int32_t order, float* points) noexcept;
    void (__stdcall *glMap2d)(uint32_t target, double u1, double u2, int32_t ustride, int32_t uorder, double v1, double v2, int32_t vstride, int32_t vorder, double* points) noexcept;
    void (__stdcall *glMap2f)(uint32_t target, float u1, float u2, int32_t ustride, int32_t uorder, float v1, float v2, int32_t vstride, int32_t vorder, float* points) noexcept;
    void (__stdcall *glMapGrid1d)(int32_t un, double u1, double u2) noexcept;
    void (__stdcall *glMapGrid1f)(int32_t un, float u1, float u2) noexcept;
    void (__stdcall *glMapGrid2d)(int32_t un, double u1, double u2, int32_t vn, double v1, double v2) noexcept;
    void (__stdcall *glMapGrid2f)(int32_t un, float u1, float u2, int32_t vn, float v1, float v2) noexcept;
    void (__stdcall *glMaterialf)(uint32_t face, uint32_t pname, float param2) noexcept;
    void (__stdcall *glMaterialfv)(uint32_t face, uint32_t pname, float* params) noexcept;
    void (__stdcall *glMateriali)(uint32_t face, uint32_t pname, int32_t param2) noexcept;
    void (__stdcall *glMaterialiv)(uint32_t face, uint32_t pname, int32_t* params) noexcept;
    void (__stdcall *glMatrixMode)(uint32_t mode) noexcept;
    void (__stdcall *glMultMatrixd)(double* m) noexcept;
    void (__stdcall *glMultMatrixf)(float* m) noexcept;
    void (__stdcall *glNewList)(uint32_t list, uint32_t mode) noexcept;
    void (__stdcall *glNormal3b)(int8_t nx, int8_t ny, int8_t nz) noexcept;
    void (__stdcall *glNormal3bv)(int8_t* v) noexcept;
    void (__stdcall *glNormal3d)(double nx, double ny, double nz) noexcept;
    void (__stdcall *glNormal3dv)(double* v) noexcept;
    void (__stdcall *glNormal3f)(float nx, float ny, float nz) noexcept;
    void (__stdcall *glNormal3fv)(float* v) noexcept;
    void (__stdcall *glNormal3i)(int32_t nx, int32_t ny, int32_t nz) noexcept;
    void (__stdcall *glNormal3iv)(int32_t* v) noexcept;
    void (__stdcall *glNormal3s)(int16_t nx, int16_t ny, int16_t nz) noexcept;
    void (__stdcall *glNormal3sv)(int16_t* v) noexcept;
    void (__stdcall *glNormalPointer)(uint32_t type, int32_t stride, void* pointer) noexcept;
    void (__stdcall *glOrtho)(double left, double right, double bottom, double top, double zNear, double zFar) noexcept;
    void (__stdcall *glPassThrough)(float token) noexcept;
    void (__stdcall *glPixelMapfv)(uint32_t map, int32_t mapsize, float* values) noexcept;
    void (__stdcall *glPixelMapuiv)(uint32_t map, int32_t mapsize, uint32_t* values) noexcept;
    void (__stdcall *glPixelMapusv)(uint32_t map, int32_t mapsize, uint16_t* values) noexcept;
    void (__stdcall *glPixelStoref)(uint32_t pname, float param1) noexcept;
    void (__stdcall *glPixelStorei)(uint32_t pname, int32_t param1) noexcept;
    void (__stdcall *glPixelTransferf)(uint32_t pname, float param1) noexcept;
    void (__stdcall *glPixelTransferi)(uint32_t pname, int32_t param1) noexcept;
    void (__stdcall *glPixelZoom)(float xfactor, float yfactor) noexcept;
    void (__stdcall *glPointSize)(float size) noexcept;
    void (__stdcall *glPolygonMode)(uint32_t face, uint32_t mode) noexcept;
    void (__stdcall *glPolygonOffset)(float factor, float units) noexcept;
    void (__stdcall *glPolygonStipple)(uint8_t* mask) noexcept;
    void (__stdcall *glPopAttrib)() noexcept;
    void (__stdcall *glPopClientAttrib)() noexcept;
    void (__stdcall *glPopMatrix)() noexcept;
    void (__stdcall *glPopName)() noexcept;
    void (__stdcall *glPrioritizeTextures)(int32_t n, uint32_t* textures, float* priorities) noexcept;
    void (__stdcall *glPushAttrib)(uint32_t mask) noexcept;
    void (__stdcall *glPushClientAttrib)(uint32_t mask) noexcept;
    void (__stdcall *glPushMatrix)() noexcept;
    void (__stdcall *glPushName)(uint32_t name) noexcept;
    void (__stdcall *glRasterPos2d)(double x, double y) noexcept;
    void (__stdcall *glRasterPos2dv)(double* v) noexcept;
    void (__stdcall *glRasterPos2f)(float x, float y) noexcept;
    void (__stdcall *glRasterPos2fv)(float* v) noexcept;
    void (__stdcall *glRasterPos2i)(int32_t x, int32_t y) noexcept;
    void (__stdcall *glRasterPos2iv)(int32_t* v) noexcept;
    void (__stdcall *glRasterPos2s)(int16_t x, int16_t y) noexcept;
    void (__stdcall *glRasterPos2sv)(int16_t* v) noexcept;
    void (__stdcall *glRasterPos3d)(double x, double y, double z) noexcept;
    void (__stdcall *glRasterPos3dv)(double* v) noexcept;
    void (__stdcall *glRasterPos3f)(float x, float y, float z) noexcept;
    void (__stdcall *glRasterPos3fv)(float* v) noexcept;
    void (__stdcall *glRasterPos3i)(int32_t x, int32_t y, int32_t z) noexcept;
    void (__stdcall *glRasterPos3iv)(int32_t* v) noexcept;
    void (__stdcall *glRasterPos3s)(int16_t x, int16_t y, int16_t z) noexcept;
    void (__stdcall *glRasterPos3sv)(int16_t* v) noexcept;
    void (__stdcall *glRasterPos4d)(double x, double y, double z, double w) noexcept;
    void (__stdcall *glRasterPos4dv)(double* v) noexcept;
    void (__stdcall *glRasterPos4f)(float x, float y, float z, float w) noexcept;
    void (__stdcall *glRasterPos4fv)(float* v) noexcept;
    void (__stdcall *glRasterPos4i)(int32_t x, int32_t y, int32_t z, int32_t w) noexcept;
    void (__stdcall *glRasterPos4iv)(int32_t* v) noexcept;
    void (__stdcall *glRasterPos4s)(int16_t x, int16_t y, int16_t z, int16_t w) noexcept;
    void (__stdcall *glRasterPos4sv)(int16_t* v) noexcept;
    void (__stdcall *glReadBuffer)(uint32_t mode) noexcept;
    void (__stdcall *glReadPixels)(int32_t x, int32_t y, int32_t width, int32_t height, uint32_t format, uint32_t type, void* pixels) noexcept;
    void (__stdcall *glRectd)(double x1, double y1, double x2, double y2) noexcept;
    void (__stdcall *glRectdv)(double* v1, double* v2) noexcept;
    void (__stdcall *glRectf)(float x1, float y1, float x2, float y2) noexcept;
    void (__stdcall *glRectfv)(float* v1, float* v2) noexcept;
    void (__stdcall *glRecti)(int32_t x1, int32_t y1, int32_t x2, int32_t y2) noexcept;
    void (__stdcall *glRectiv)(int32_t* v1, int32_t* v2) noexcept;
    void (__stdcall *glRects)(int16_t x1, int16_t y1, int16_t x2, int16_t y2) noexcept;
    void (__stdcall *glRectsv)(int16_t* v1, int16_t* v2) noexcept;
    int32_t (__stdcall *glRenderMode)(uint32_t mode) noexcept;
    void (__stdcall *glRotated)(double angle, double x, double y, double z) noexcept;
    void (__stdcall *glRotatef)(float angle, float x, float y, float z) noexcept;
    void (__stdcall *glScaled)(double x, double y, double z) noexcept;
    void (__stdcall *glScalef)(float x, float y, float z) noexcept;
    void (__stdcall *glScissor)(int32_t x, int32_t y, int32_t width, int32_t height) noexcept;
    void (__stdcall *glSelectBuffer)(int32_t size, uint32_t* buffer) noexcept;
    void (__stdcall *glShadeModel)(uint32_t mode) noexcept;
    void (__stdcall *glStencilFunc)(uint32_t func, int32_t ref, uint32_t mask) noexcept;
    void (__stdcall *glStencilMask)(uint32_t mask) noexcept;
    void (__stdcall *glStencilOp)(uint32_t fail, uint32_t zfail, uint32_t zpass) noexcept;
    void (__stdcall *glTexCoord1d)(double s) noexcept;
    void (__stdcall *glTexCoord1dv)(double* v) noexcept;
    void (__stdcall *glTexCoord1f)(float s) noexcept;
    void (__stdcall *glTexCoord1fv)(float* v) noexcept;
    void (__stdcall *glTexCoord1i)(int32_t s) noexcept;
    void (__stdcall *glTexCoord1iv)(int32_t* v) noexcept;
    void (__stdcall *glTexCoord1s)(int16_t s) noexcept;
    void (__stdcall *glTexCoord1sv)(int16_t* v) noexcept;
    void (__stdcall *glTexCoord2d)(double s, double t) noexcept;
    void (__stdcall *glTexCoord2dv)(double* v) noexcept;
    void (__stdcall *glTexCoord2f)(float s, float t) noexcept;
    void (__stdcall *glTexCoord2fv)(float* v) noexcept;
    void (__stdcall *glTexCoord2i)(int32_t s, int32_t t) noexcept;
    void (__stdcall *glTexCoord2iv)(int32_t* v) noexcept;
    void (__stdcall *glTexCoord2s)(int16_t s, int16_t t) noexcept;
    void (__stdcall *glTexCoord2sv)(int16_t* v) noexcept;
    void (__stdcall *glTexCoord3d)(double s, double t, double r) noexcept;
    void (__stdcall *glTexCoord3dv)(double* v) noexcept;
    void (__stdcall *glTexCoord3f)(float s, float t, float r) noexcept;
    void (__stdcall *glTexCoord3fv)(float* v) noexcept;
    void (__stdcall *glTexCoord3i)(int32_t s, int32_t t, int32_t r) noexcept;
    void (__stdcall *glTexCoord3iv)(int32_t* v) noexcept;
    void (__stdcall *glTexCoord3s)(int16_t s, int16_t t, int16_t r) noexcept;
    void (__stdcall *glTexCoord3sv)(int16_t* v) noexcept;
    void (__stdcall *glTexCoord4d)(double s, double t, double r, double q) noexcept;
    void (__stdcall *glTexCoord4dv)(double* v) noexcept;
    void (__stdcall *glTexCoord4f)(float s, float t, float r, float q) noexcept;
    void (__stdcall *glTexCoord4fv)(float* v) noexcept;
    void (__stdcall *glTexCoord4i)(int32_t s, int32_t t, int32_t r, int32_t q) noexcept;
    void (__stdcall *glTexCoord4iv)(int32_t* v) noexcept;
    void (__stdcall *glTexCoord4s)(int16_t s, int16_t t, int16_t r, int16_t q) noexcept;
    void (__stdcall *glTexCoord4sv)(int16_t* v) noexcept;
    void (__stdcall *glTexCoordPointer)(int32_t size, uint32_t type, int32_t stride, void* pointer) noexcept;
    void (__stdcall *glTexEnvf)(uint32_t target, uint32_t pname, float param2) noexcept;
    void (__stdcall *glTexEnvfv)(uint32_t target, uint32_t pname, float* params) noexcept;
    void (__stdcall *glTexEnvi)(uint32_t target, uint32_t pname, int32_t param2) noexcept;
    void (__stdcall *glTexEnviv)(uint32_t target, uint32_t pname, int32_t* params) noexcept;
    void (__stdcall *glTexGend)(uint32_t coord, uint32_t pname, double param2) noexcept;
    void (__stdcall *glTexGendv)(uint32_t coord, uint32_t pname, double* params) noexcept;
    void (__stdcall *glTexGenf)(uint32_t coord, uint32_t pname, float param2) noexcept;
    void (__stdcall *glTexGenfv)(uint32_t coord, uint32_t pname, float* params) noexcept;
    void (__stdcall *glTexGeni)(uint32_t coord, uint32_t pname, int32_t param2) noexcept;
    void (__stdcall *glTexGeniv)(uint32_t coord, uint32_t pname, int32_t* params) noexcept;
    void (__stdcall *glTexImage1D)(uint32_t target, int32_t level, int32_t internalformat, int32_t width, int32_t border, uint32_t format, uint32_t type, void* pixels) noexcept;
    void (__stdcall *glTexImage2D)(uint32_t target, int32_t level, int32_t internalformat, int32_t width, int32_t height, int32_t border, uint32_t format, uint32_t type, void* pixels) noexcept;
    void (__stdcall *glTexParameterf)(uint32_t target, uint32_t pname, float param2) noexcept;
    void (__stdcall *glTexParameterfv)(uint32_t target, uint32_t pname, float* params) noexcept;
    void (__stdcall *glTexParameteri)(uint32_t target, uint32_t pname, int32_t param2) noexcept;
    void (__stdcall *glTexParameteriv)(uint32_t target, uint32_t pname, int32_t* params) noexcept;
    void (__stdcall *glTexSubImage1D)(uint32_t target, int32_t level, int32_t xoffset, int32_t width, uint32_t format, uint32_t type, void* pixels) noexcept;
    void (__stdcall *glTexSubImage2D)(uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t width, int32_t height, uint32_t format, uint32_t type, void* pixels) noexcept;
    void (__stdcall *glTranslated)(double x, double y, double z) noexcept;
    void (__stdcall *glTranslatef)(float x, float y, float z) noexcept;
    void (__stdcall *glVertex2d)(double x, double y) noexcept;
    void (__stdcall *glVertex2dv)(double* v) noexcept;
    void (__stdcall *glVertex2f)(float x, float y) noexcept;
    void (__stdcall *glVertex2fv)(float* v) noexcept;
    void (__stdcall *glVertex2i)(int32_t x, int32_t y) noexcept;
    void (__stdcall *glVertex2iv)(int32_t* v) noexcept;
    void (__stdcall *glVertex2s)(int16_t x, int16_t y) noexcept;
    void (__stdcall *glVertex2sv)(int16_t* v) noexcept;
    void (__stdcall *glVertex3d)(double x, double y, double z) noexcept;
    void (__stdcall *glVertex3dv)(double* v) noexcept;
    void (__stdcall *glVertex3f)(float x, float y, float z) noexcept;
    void (__stdcall *glVertex3fv)(float* v) noexcept;
    void (__stdcall *glVertex3i)(int32_t x, int32_t y, int32_t z) noexcept;
    void (__stdcall *glVertex3iv)(int32_t* v) noexcept;
    void (__stdcall *glVertex3s)(int16_t x, int16_t y, int16_t z) noexcept;
    void (__stdcall *glVertex3sv)(int16_t* v) noexcept;
    void (__stdcall *glVertex4d)(double x, double y, double z, double w) noexcept;
    void (__stdcall *glVertex4dv)(double* v) noexcept;
    void (__stdcall *glVertex4f)(float x, float y, float z, float w) noexcept;
    void (__stdcall *glVertex4fv)(float* v) noexcept;
    void (__stdcall *glVertex4i)(int32_t x, int32_t y, int32_t z, int32_t w) noexcept;
    void (__stdcall *glVertex4iv)(int32_t* v) noexcept;
    void (__stdcall *glVertex4s)(int16_t x, int16_t y, int16_t z, int16_t w) noexcept;
    void (__stdcall *glVertex4sv)(int16_t* v) noexcept;
    void (__stdcall *glVertexPointer)(int32_t size, uint32_t type, int32_t stride, void* pointer) noexcept;
    void (__stdcall *glViewport)(int32_t x, int32_t y, int32_t width, int32_t height) noexcept;
    uint8_t* (__stdcall *gluErrorString)(uint32_t errCode) noexcept;
    win32::Windows::Win32::Foundation::PWSTR (__stdcall *gluErrorUnicodeStringEXT)(uint32_t errCode) noexcept;
    uint8_t* (__stdcall *gluGetString)(uint32_t name) noexcept;
    void (__stdcall *gluOrtho2D)(double left, double right, double bottom, double top) noexcept;
    void (__stdcall *gluPerspective)(double fovy, double aspect, double zNear, double zFar) noexcept;
    void (__stdcall *gluPickMatrix)(double x, double y, double width, double height, int32_t* viewport) noexcept;
    void (__stdcall *gluLookAt)(double eyex, double eyey, double eyez, double centerx, double centery, double centerz, double upx, double upy, double upz) noexcept;
    int32_t (__stdcall *gluProject)(double objx, double objy, double objz, double* modelMatrix, double* projMatrix, int32_t* viewport, double* winx, double* winy, double* winz) noexcept;
    int32_t (__stdcall *gluUnProject)(double winx, double winy, double winz, double* modelMatrix, double* projMatrix, int32_t* viewport, double* objx, double* objy, double* objz) noexcept;
    int32_t (__stdcall *gluScaleImage)(uint32_t format, int32_t widthin, int32_t heightin, uint32_t typein, void* datain, int32_t widthout, int32_t heightout, uint32_t typeout, void* dataout) noexcept;
    int32_t (__stdcall *gluBuild1DMipmaps)(uint32_t target, int32_t components, int32_t width, uint32_t format, uint32_t type, void* data) noexcept;
    int32_t (__stdcall *gluBuild2DMipmaps)(uint32_t target, int32_t components, int32_t width, int32_t height, uint32_t format, uint32_t type, void* data) noexcept;
    win32::Windows::Win32::Graphics::OpenGL::GLUquadric* (__stdcall *gluNewQuadric)() noexcept;
    void (__stdcall *gluDeleteQuadric)(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* state) noexcept;
    void (__stdcall *gluQuadricNormals)(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* quadObject, uint32_t normals) noexcept;
    void (__stdcall *gluQuadricTexture)(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* quadObject, uint8_t textureCoords) noexcept;
    void (__stdcall *gluQuadricOrientation)(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* quadObject, uint32_t orientation) noexcept;
    void (__stdcall *gluQuadricDrawStyle)(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* quadObject, uint32_t drawStyle) noexcept;
    void (__stdcall *gluCylinder)(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* qobj, double baseRadius, double topRadius, double height, int32_t slices, int32_t stacks) noexcept;
    void (__stdcall *gluDisk)(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* qobj, double innerRadius, double outerRadius, int32_t slices, int32_t loops) noexcept;
    void (__stdcall *gluPartialDisk)(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* qobj, double innerRadius, double outerRadius, int32_t slices, int32_t loops, double startAngle, double sweepAngle) noexcept;
    void (__stdcall *gluSphere)(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* qobj, double radius, int32_t slices, int32_t stacks) noexcept;
    void (__stdcall *gluQuadricCallback)(win32::Windows::Win32::Graphics::OpenGL::GLUquadric* qobj, uint32_t which, intptr_t fn) noexcept;
    win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* (__stdcall *gluNewTess)() noexcept;
    void (__stdcall *gluDeleteTess)(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess) noexcept;
    void (__stdcall *gluTessBeginPolygon)(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess, void* polygon_data) noexcept;
    void (__stdcall *gluTessBeginContour)(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess) noexcept;
    void (__stdcall *gluTessVertex)(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess, double* coords, void* data) noexcept;
    void (__stdcall *gluTessEndContour)(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess) noexcept;
    void (__stdcall *gluTessEndPolygon)(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess) noexcept;
    void (__stdcall *gluTessProperty)(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess, uint32_t which, double value) noexcept;
    void (__stdcall *gluTessNormal)(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess, double x, double y, double z) noexcept;
    void (__stdcall *gluTessCallback)(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess, uint32_t which, intptr_t fn) noexcept;
    void (__stdcall *gluGetTessProperty)(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess, uint32_t which, double* value) noexcept;
    win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* (__stdcall *gluNewNurbsRenderer)() noexcept;
    void (__stdcall *gluDeleteNurbsRenderer)(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj) noexcept;
    void (__stdcall *gluBeginSurface)(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj) noexcept;
    void (__stdcall *gluBeginCurve)(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj) noexcept;
    void (__stdcall *gluEndCurve)(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj) noexcept;
    void (__stdcall *gluEndSurface)(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj) noexcept;
    void (__stdcall *gluBeginTrim)(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj) noexcept;
    void (__stdcall *gluEndTrim)(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj) noexcept;
    void (__stdcall *gluPwlCurve)(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj, int32_t count, float* array, int32_t stride, uint32_t type) noexcept;
    void (__stdcall *gluNurbsCurve)(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj, int32_t nknots, float* knot, int32_t stride, float* ctlarray, int32_t order, uint32_t type) noexcept;
    void (__stdcall *gluNurbsSurface)(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj, int32_t sknot_count, float* sknot, int32_t tknot_count, float* tknot, int32_t s_stride, int32_t t_stride, float* ctlarray, int32_t sorder, int32_t torder, uint32_t type) noexcept;
    void (__stdcall *gluLoadSamplingMatrices)(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj, float* modelMatrix, float* projMatrix, int32_t* viewport) noexcept;
    void (__stdcall *gluNurbsProperty)(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj, uint32_t property, float value) noexcept;
    void (__stdcall *gluGetNurbsProperty)(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj, uint32_t property, float* value) noexcept;
    void (__stdcall *gluNurbsCallback)(win32::Windows::Win32::Graphics::OpenGL::GLUnurbs* nobj, uint32_t which, intptr_t fn) noexcept;
    void (__stdcall *gluBeginPolygon)(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess) noexcept;
    void (__stdcall *gluNextContour)(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess, uint32_t type) noexcept;
    void (__stdcall *gluEndPolygon)(win32::Windows::Win32::Graphics::OpenGL::GLUtesselator* tess) noexcept;
};
extern ApiTable g_api_table;

#pragma endregion methods

}
#endif
