// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_NetworkManagement_NetworkDiagnosticsFramework_H
#define WIN32_Windows_Win32_NetworkManagement_NetworkDiagnosticsFramework_H
#include "win32/base.h"
#include "win32/impl/complex_structs.h"
#include "win32/impl/complex_interfaces.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.NetworkManagement.NetworkDiagnosticsFramework.0.h"
WIN32_EXPORT namespace win32::Windows::Win32::NetworkManagement::NetworkDiagnosticsFramework
{
#pragma region methods
extern "C"
{
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_NdfCreateIncident(win32::Windows::Win32::Foundation::PWSTR helperClassName, uint32_t celt, win32::Windows::Win32::NetworkManagement::NetworkDiagnosticsFramework::HELPER_ATTRIBUTE* attributes, void** handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_NdfCreateWinSockIncident(win32::Windows::Win32::Networking::WinSock::SOCKET sock, win32::Windows::Win32::Foundation::PWSTR host, uint16_t port, win32::Windows::Win32::Foundation::PWSTR appId, win32::Windows::Win32::Security::SID* userId, void** handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_NdfCreateWebIncident(win32::Windows::Win32::Foundation::PWSTR url, void** handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_NdfCreateWebIncidentEx(win32::Windows::Win32::Foundation::PWSTR url, win32::Windows::Win32::Foundation::BOOL useWinHTTP, win32::Windows::Win32::Foundation::PWSTR moduleName, void** handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_NdfCreateSharingIncident(win32::Windows::Win32::Foundation::PWSTR UNCPath, void** handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_NdfCreateDNSIncident(win32::Windows::Win32::Foundation::PWSTR hostname, uint16_t queryType, void** handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_NdfCreateConnectivityIncident(void** handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_NdfCreateNetConnectionIncident(void** handle, ::win32::guid id) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_NdfCreatePnrpIncident(win32::Windows::Win32::Foundation::PWSTR cloudname, win32::Windows::Win32::Foundation::PWSTR peername, win32::Windows::Win32::Foundation::BOOL diagnosePublish, win32::Windows::Win32::Foundation::PWSTR appId, void** handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_NdfCreateGroupingIncident(win32::Windows::Win32::Foundation::PWSTR CloudName, win32::Windows::Win32::Foundation::PWSTR GroupName, win32::Windows::Win32::Foundation::PWSTR Identity, win32::Windows::Win32::Foundation::PWSTR Invitation, win32::Windows::Win32::Networking::WinSock::SOCKET_ADDRESS_LIST* Addresses, win32::Windows::Win32::Foundation::PWSTR appId, void** handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_NdfExecuteDiagnosis(void* handle, win32::Windows::Win32::Foundation::HWND hwnd) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_NdfCloseIncident(void* handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_NdfDiagnoseIncident(void* Handle, uint32_t* RootCauseCount, win32::Windows::Win32::NetworkManagement::NetworkDiagnosticsFramework::RootCauseInfo** RootCauses, uint32_t dwWait, uint32_t dwFlags) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_NdfRepairIncident(void* Handle, win32::Windows::Win32::NetworkManagement::NetworkDiagnosticsFramework::RepairInfoEx* RepairEx, uint32_t dwWait) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_NdfCancelIncident(void* Handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT __stdcall ORBIT_IMPL_NdfGetTraceFile(void* Handle, win32::Windows::Win32::Foundation::PWSTR* TraceFileLocation) noexcept;
}

struct ApiTable {
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *NdfCreateIncident)(win32::Windows::Win32::Foundation::PWSTR helperClassName, uint32_t celt, win32::Windows::Win32::NetworkManagement::NetworkDiagnosticsFramework::HELPER_ATTRIBUTE* attributes, void** handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *NdfCreateWinSockIncident)(win32::Windows::Win32::Networking::WinSock::SOCKET sock, win32::Windows::Win32::Foundation::PWSTR host, uint16_t port, win32::Windows::Win32::Foundation::PWSTR appId, win32::Windows::Win32::Security::SID* userId, void** handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *NdfCreateWebIncident)(win32::Windows::Win32::Foundation::PWSTR url, void** handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *NdfCreateWebIncidentEx)(win32::Windows::Win32::Foundation::PWSTR url, win32::Windows::Win32::Foundation::BOOL useWinHTTP, win32::Windows::Win32::Foundation::PWSTR moduleName, void** handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *NdfCreateSharingIncident)(win32::Windows::Win32::Foundation::PWSTR UNCPath, void** handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *NdfCreateDNSIncident)(win32::Windows::Win32::Foundation::PWSTR hostname, uint16_t queryType, void** handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *NdfCreateConnectivityIncident)(void** handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *NdfCreateNetConnectionIncident)(void** handle, ::win32::guid id) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *NdfCreatePnrpIncident)(win32::Windows::Win32::Foundation::PWSTR cloudname, win32::Windows::Win32::Foundation::PWSTR peername, win32::Windows::Win32::Foundation::BOOL diagnosePublish, win32::Windows::Win32::Foundation::PWSTR appId, void** handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *NdfCreateGroupingIncident)(win32::Windows::Win32::Foundation::PWSTR CloudName, win32::Windows::Win32::Foundation::PWSTR GroupName, win32::Windows::Win32::Foundation::PWSTR Identity, win32::Windows::Win32::Foundation::PWSTR Invitation, win32::Windows::Win32::Networking::WinSock::SOCKET_ADDRESS_LIST* Addresses, win32::Windows::Win32::Foundation::PWSTR appId, void** handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *NdfExecuteDiagnosis)(void* handle, win32::Windows::Win32::Foundation::HWND hwnd) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *NdfCloseIncident)(void* handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *NdfDiagnoseIncident)(void* Handle, uint32_t* RootCauseCount, win32::Windows::Win32::NetworkManagement::NetworkDiagnosticsFramework::RootCauseInfo** RootCauses, uint32_t dwWait, uint32_t dwFlags) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *NdfRepairIncident)(void* Handle, win32::Windows::Win32::NetworkManagement::NetworkDiagnosticsFramework::RepairInfoEx* RepairEx, uint32_t dwWait) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *NdfCancelIncident)(void* Handle) noexcept;
    win32::Windows::Win32::Foundation::HRESULT (__stdcall *NdfGetTraceFile)(void* Handle, win32::Windows::Win32::Foundation::PWSTR* TraceFileLocation) noexcept;
};
extern ApiTable g_api_table;

#pragma endregion methods

}
#endif
