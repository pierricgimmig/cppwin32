// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_NetworkManagement_Dns_H
#define WIN32_Windows_Win32_NetworkManagement_Dns_H
#include "win32/base.h"
#include "win32/impl/complex_structs.h"
#include "win32/impl/complex_interfaces.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.NetworkManagement.Dns.0.h"
WIN32_EXPORT namespace win32::Windows::Win32::NetworkManagement::Dns
{
#pragma region methods
extern "C"
{
    int32_t __stdcall ORBIT_IMPL_DnsQueryConfig(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONFIG_TYPE Config, uint32_t Flag, win32::Windows::Win32::Foundation::PWSTR pwsAdapterName, void* pReserved, void* pBuffer, uint32_t* pBufLen) noexcept;
    win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* __stdcall ORBIT_IMPL_DnsRecordCopyEx(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRecord, win32::Windows::Win32::NetworkManagement::Dns::DNS_CHARSET CharSetIn, win32::Windows::Win32::NetworkManagement::Dns::DNS_CHARSET CharSetOut) noexcept;
    win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* __stdcall ORBIT_IMPL_DnsRecordSetCopyEx(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRecordSet, win32::Windows::Win32::NetworkManagement::Dns::DNS_CHARSET CharSetIn, win32::Windows::Win32::NetworkManagement::Dns::DNS_CHARSET CharSetOut) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DnsRecordCompare(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRecord1, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRecord2) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DnsRecordSetCompare(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRR1, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRR2, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppDiff1, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppDiff2) noexcept;
    win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* __stdcall ORBIT_IMPL_DnsRecordSetDetach(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRecordList) noexcept;
    void __stdcall ORBIT_IMPL_DnsFree(void* pData, win32::Windows::Win32::NetworkManagement::Dns::DNS_FREE_TYPE FreeType) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsQuery_A(win32::Windows::Win32::Foundation::PSTR pszName, uint16_t wType, uint32_t Options, void* pExtra, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppQueryResults, void** pReserved) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsQuery_UTF8(win32::Windows::Win32::Foundation::PSTR pszName, uint16_t wType, uint32_t Options, void* pExtra, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppQueryResults, void** pReserved) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsQuery_W(win32::Windows::Win32::Foundation::PWSTR pszName, uint16_t wType, uint32_t Options, void* pExtra, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppQueryResults, void** pReserved) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsQueryEx(win32::Windows::Win32::NetworkManagement::Dns::DNS_QUERY_REQUEST* pQueryRequest, win32::Windows::Win32::NetworkManagement::Dns::DNS_QUERY_RESULT* pQueryResults, win32::Windows::Win32::NetworkManagement::Dns::DNS_QUERY_CANCEL* pCancelHandle) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsCancelQuery(win32::Windows::Win32::NetworkManagement::Dns::DNS_QUERY_CANCEL* pCancelHandle) noexcept;
    void __stdcall ORBIT_IMPL_DnsFreeCustomServers(uint32_t* pcServers, win32::Windows::Win32::NetworkManagement::Dns::DNS_CUSTOM_SERVER** ppServers) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DnsGetApplicationSettings(uint32_t* pcServers, win32::Windows::Win32::NetworkManagement::Dns::DNS_CUSTOM_SERVER** ppDefaultServers, win32::Windows::Win32::NetworkManagement::Dns::DNS_APPLICATION_SETTINGS* pSettings) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DnsSetApplicationSettings(uint32_t cServers, win32::Windows::Win32::NetworkManagement::Dns::DNS_CUSTOM_SERVER* pServers, win32::Windows::Win32::NetworkManagement::Dns::DNS_APPLICATION_SETTINGS* pSettings) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsAcquireContextHandle_W(uint32_t CredentialFlags, void* Credentials, win32::Windows::Win32::NetworkManagement::Dns::DnsContextHandle* pContext) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsAcquireContextHandle_A(uint32_t CredentialFlags, void* Credentials, win32::Windows::Win32::NetworkManagement::Dns::DnsContextHandle* pContext) noexcept;
    void __stdcall ORBIT_IMPL_DnsReleaseContextHandle(win32::Windows::Win32::Foundation::HANDLE hContext) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsModifyRecordsInSet_W(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pAddRecords, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pDeleteRecords, uint32_t Options, win32::Windows::Win32::Foundation::HANDLE hCredentials, void* pExtraList, void* pReserved) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsModifyRecordsInSet_A(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pAddRecords, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pDeleteRecords, uint32_t Options, win32::Windows::Win32::Foundation::HANDLE hCredentials, void* pExtraList, void* pReserved) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsModifyRecordsInSet_UTF8(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pAddRecords, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pDeleteRecords, uint32_t Options, win32::Windows::Win32::Foundation::HANDLE hCredentials, void* pExtraList, void* pReserved) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsReplaceRecordSetW(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pReplaceSet, uint32_t Options, win32::Windows::Win32::Foundation::HANDLE hContext, void* pExtraInfo, void* pReserved) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsReplaceRecordSetA(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pReplaceSet, uint32_t Options, win32::Windows::Win32::Foundation::HANDLE hContext, void* pExtraInfo, void* pReserved) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsReplaceRecordSetUTF8(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pReplaceSet, uint32_t Options, win32::Windows::Win32::Foundation::HANDLE hContext, void* pExtraInfo, void* pReserved) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsValidateName_W(win32::Windows::Win32::Foundation::PWSTR pszName, win32::Windows::Win32::NetworkManagement::Dns::DNS_NAME_FORMAT Format) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsValidateName_A(win32::Windows::Win32::Foundation::PSTR pszName, win32::Windows::Win32::NetworkManagement::Dns::DNS_NAME_FORMAT Format) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsValidateName_UTF8(win32::Windows::Win32::Foundation::PSTR pszName, win32::Windows::Win32::NetworkManagement::Dns::DNS_NAME_FORMAT Format) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DnsNameCompare_A(win32::Windows::Win32::Foundation::PSTR pName1, win32::Windows::Win32::Foundation::PSTR pName2) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DnsNameCompare_W(win32::Windows::Win32::Foundation::PWSTR pName1, win32::Windows::Win32::Foundation::PWSTR pName2) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DnsWriteQuestionToBuffer_W(win32::Windows::Win32::NetworkManagement::Dns::DNS_MESSAGE_BUFFER* pDnsBuffer, uint32_t* pdwBufferSize, win32::Windows::Win32::Foundation::PWSTR pszName, uint16_t wType, uint16_t Xid, win32::Windows::Win32::Foundation::BOOL fRecursionDesired) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DnsWriteQuestionToBuffer_UTF8(win32::Windows::Win32::NetworkManagement::Dns::DNS_MESSAGE_BUFFER* pDnsBuffer, uint32_t* pdwBufferSize, win32::Windows::Win32::Foundation::PSTR pszName, uint16_t wType, uint16_t Xid, win32::Windows::Win32::Foundation::BOOL fRecursionDesired) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsExtractRecordsFromMessage_W(win32::Windows::Win32::NetworkManagement::Dns::DNS_MESSAGE_BUFFER* pDnsBuffer, uint16_t wMessageLength, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppRecord) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsExtractRecordsFromMessage_UTF8(win32::Windows::Win32::NetworkManagement::Dns::DNS_MESSAGE_BUFFER* pDnsBuffer, uint16_t wMessageLength, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppRecord) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DnsGetProxyInformation(win32::Windows::Win32::Foundation::PWSTR hostName, win32::Windows::Win32::NetworkManagement::Dns::DNS_PROXY_INFORMATION* proxyInformation, win32::Windows::Win32::NetworkManagement::Dns::DNS_PROXY_INFORMATION* defaultProxyInformation, win32::Windows::Win32::NetworkManagement::Dns::DNS_PROXY_COMPLETION_ROUTINE* completionRoutine, void* completionContext) noexcept;
    void __stdcall ORBIT_IMPL_DnsFreeProxyName(win32::Windows::Win32::Foundation::PWSTR proxyName) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DnsConnectionGetProxyInfoForHostUrl(win32::Windows::Win32::Foundation::PWSTR pwszHostUrl, uint8_t* pSelectionContext, uint32_t dwSelectionContextLength, uint32_t dwExplicitInterfaceIndex, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_INFO_EX* pProxyInfoEx) noexcept;
    void __stdcall ORBIT_IMPL_DnsConnectionFreeProxyInfoEx(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_INFO_EX* pProxyInfoEx) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DnsConnectionGetProxyInfo(win32::Windows::Win32::Foundation::PWSTR pwszConnectionName, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_TYPE Type, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_INFO* pProxyInfo) noexcept;
    void __stdcall ORBIT_IMPL_DnsConnectionFreeProxyInfo(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_INFO* pProxyInfo) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DnsConnectionSetProxyInfo(win32::Windows::Win32::Foundation::PWSTR pwszConnectionName, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_TYPE Type, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_INFO* pProxyInfo) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DnsConnectionDeleteProxyInfo(win32::Windows::Win32::Foundation::PWSTR pwszConnectionName, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_TYPE Type) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DnsConnectionGetProxyList(win32::Windows::Win32::Foundation::PWSTR pwszConnectionName, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_LIST* pProxyList) noexcept;
    void __stdcall ORBIT_IMPL_DnsConnectionFreeProxyList(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_LIST* pProxyList) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DnsConnectionGetNameList(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_NAME_LIST* pNameList) noexcept;
    void __stdcall ORBIT_IMPL_DnsConnectionFreeNameList(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_NAME_LIST* pNameList) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DnsConnectionUpdateIfIndexTable(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_IFINDEX_LIST* pConnectionIfIndexEntries) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DnsConnectionSetPolicyEntries(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_POLICY_TAG PolicyEntryTag, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_POLICY_ENTRY_LIST* pPolicyEntryList) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DnsConnectionDeletePolicyEntries(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_POLICY_TAG PolicyEntryTag) noexcept;
    win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_INSTANCE* __stdcall ORBIT_IMPL_DnsServiceConstructInstance(win32::Windows::Win32::Foundation::PWSTR pServiceName, win32::Windows::Win32::Foundation::PWSTR pHostName, uint32_t* pIp4, win32::Windows::Win32::NetworkManagement::Dns::IP6_ADDRESS* pIp6, uint16_t wPort, uint16_t wPriority, uint16_t wWeight, uint32_t dwPropertiesCount, win32::Windows::Win32::Foundation::PWSTR* keys, win32::Windows::Win32::Foundation::PWSTR* values) noexcept;
    win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_INSTANCE* __stdcall ORBIT_IMPL_DnsServiceCopyInstance(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_INSTANCE* pOrig) noexcept;
    void __stdcall ORBIT_IMPL_DnsServiceFreeInstance(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_INSTANCE* pInstance) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsServiceBrowse(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_BROWSE_REQUEST* pRequest, win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancel) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsServiceBrowseCancel(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancelHandle) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsServiceResolve(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_RESOLVE_REQUEST* pRequest, win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancel) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsServiceResolveCancel(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancelHandle) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DnsServiceRegister(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_REGISTER_REQUEST* pRequest, win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancel) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DnsServiceDeRegister(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_REGISTER_REQUEST* pRequest, win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancel) noexcept;
    uint32_t __stdcall ORBIT_IMPL_DnsServiceRegisterCancel(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancelHandle) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsStartMulticastQuery(win32::Windows::Win32::NetworkManagement::Dns::MDNS_QUERY_REQUEST* pQueryRequest, win32::Windows::Win32::NetworkManagement::Dns::MDNS_QUERY_HANDLE* pHandle) noexcept;
    int32_t __stdcall ORBIT_IMPL_DnsStopMulticastQuery(win32::Windows::Win32::NetworkManagement::Dns::MDNS_QUERY_HANDLE* pHandle) noexcept;
}

struct ApiTable {
    int32_t (__stdcall *DnsQueryConfig)(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONFIG_TYPE Config, uint32_t Flag, win32::Windows::Win32::Foundation::PWSTR pwsAdapterName, void* pReserved, void* pBuffer, uint32_t* pBufLen) noexcept;
    win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* (__stdcall *DnsRecordCopyEx)(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRecord, win32::Windows::Win32::NetworkManagement::Dns::DNS_CHARSET CharSetIn, win32::Windows::Win32::NetworkManagement::Dns::DNS_CHARSET CharSetOut) noexcept;
    win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* (__stdcall *DnsRecordSetCopyEx)(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRecordSet, win32::Windows::Win32::NetworkManagement::Dns::DNS_CHARSET CharSetIn, win32::Windows::Win32::NetworkManagement::Dns::DNS_CHARSET CharSetOut) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *DnsRecordCompare)(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRecord1, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRecord2) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *DnsRecordSetCompare)(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRR1, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRR2, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppDiff1, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppDiff2) noexcept;
    win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* (__stdcall *DnsRecordSetDetach)(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pRecordList) noexcept;
    void (__stdcall *DnsFree)(void* pData, win32::Windows::Win32::NetworkManagement::Dns::DNS_FREE_TYPE FreeType) noexcept;
    int32_t (__stdcall *DnsQuery_A)(win32::Windows::Win32::Foundation::PSTR pszName, uint16_t wType, uint32_t Options, void* pExtra, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppQueryResults, void** pReserved) noexcept;
    int32_t (__stdcall *DnsQuery_UTF8)(win32::Windows::Win32::Foundation::PSTR pszName, uint16_t wType, uint32_t Options, void* pExtra, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppQueryResults, void** pReserved) noexcept;
    int32_t (__stdcall *DnsQuery_W)(win32::Windows::Win32::Foundation::PWSTR pszName, uint16_t wType, uint32_t Options, void* pExtra, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppQueryResults, void** pReserved) noexcept;
    int32_t (__stdcall *DnsQueryEx)(win32::Windows::Win32::NetworkManagement::Dns::DNS_QUERY_REQUEST* pQueryRequest, win32::Windows::Win32::NetworkManagement::Dns::DNS_QUERY_RESULT* pQueryResults, win32::Windows::Win32::NetworkManagement::Dns::DNS_QUERY_CANCEL* pCancelHandle) noexcept;
    int32_t (__stdcall *DnsCancelQuery)(win32::Windows::Win32::NetworkManagement::Dns::DNS_QUERY_CANCEL* pCancelHandle) noexcept;
    void (__stdcall *DnsFreeCustomServers)(uint32_t* pcServers, win32::Windows::Win32::NetworkManagement::Dns::DNS_CUSTOM_SERVER** ppServers) noexcept;
    uint32_t (__stdcall *DnsGetApplicationSettings)(uint32_t* pcServers, win32::Windows::Win32::NetworkManagement::Dns::DNS_CUSTOM_SERVER** ppDefaultServers, win32::Windows::Win32::NetworkManagement::Dns::DNS_APPLICATION_SETTINGS* pSettings) noexcept;
    uint32_t (__stdcall *DnsSetApplicationSettings)(uint32_t cServers, win32::Windows::Win32::NetworkManagement::Dns::DNS_CUSTOM_SERVER* pServers, win32::Windows::Win32::NetworkManagement::Dns::DNS_APPLICATION_SETTINGS* pSettings) noexcept;
    int32_t (__stdcall *DnsAcquireContextHandle_W)(uint32_t CredentialFlags, void* Credentials, win32::Windows::Win32::NetworkManagement::Dns::DnsContextHandle* pContext) noexcept;
    int32_t (__stdcall *DnsAcquireContextHandle_A)(uint32_t CredentialFlags, void* Credentials, win32::Windows::Win32::NetworkManagement::Dns::DnsContextHandle* pContext) noexcept;
    void (__stdcall *DnsReleaseContextHandle)(win32::Windows::Win32::Foundation::HANDLE hContext) noexcept;
    int32_t (__stdcall *DnsModifyRecordsInSet_W)(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pAddRecords, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pDeleteRecords, uint32_t Options, win32::Windows::Win32::Foundation::HANDLE hCredentials, void* pExtraList, void* pReserved) noexcept;
    int32_t (__stdcall *DnsModifyRecordsInSet_A)(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pAddRecords, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pDeleteRecords, uint32_t Options, win32::Windows::Win32::Foundation::HANDLE hCredentials, void* pExtraList, void* pReserved) noexcept;
    int32_t (__stdcall *DnsModifyRecordsInSet_UTF8)(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pAddRecords, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pDeleteRecords, uint32_t Options, win32::Windows::Win32::Foundation::HANDLE hCredentials, void* pExtraList, void* pReserved) noexcept;
    int32_t (__stdcall *DnsReplaceRecordSetW)(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pReplaceSet, uint32_t Options, win32::Windows::Win32::Foundation::HANDLE hContext, void* pExtraInfo, void* pReserved) noexcept;
    int32_t (__stdcall *DnsReplaceRecordSetA)(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pReplaceSet, uint32_t Options, win32::Windows::Win32::Foundation::HANDLE hContext, void* pExtraInfo, void* pReserved) noexcept;
    int32_t (__stdcall *DnsReplaceRecordSetUTF8)(win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA* pReplaceSet, uint32_t Options, win32::Windows::Win32::Foundation::HANDLE hContext, void* pExtraInfo, void* pReserved) noexcept;
    int32_t (__stdcall *DnsValidateName_W)(win32::Windows::Win32::Foundation::PWSTR pszName, win32::Windows::Win32::NetworkManagement::Dns::DNS_NAME_FORMAT Format) noexcept;
    int32_t (__stdcall *DnsValidateName_A)(win32::Windows::Win32::Foundation::PSTR pszName, win32::Windows::Win32::NetworkManagement::Dns::DNS_NAME_FORMAT Format) noexcept;
    int32_t (__stdcall *DnsValidateName_UTF8)(win32::Windows::Win32::Foundation::PSTR pszName, win32::Windows::Win32::NetworkManagement::Dns::DNS_NAME_FORMAT Format) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *DnsNameCompare_A)(win32::Windows::Win32::Foundation::PSTR pName1, win32::Windows::Win32::Foundation::PSTR pName2) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *DnsNameCompare_W)(win32::Windows::Win32::Foundation::PWSTR pName1, win32::Windows::Win32::Foundation::PWSTR pName2) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *DnsWriteQuestionToBuffer_W)(win32::Windows::Win32::NetworkManagement::Dns::DNS_MESSAGE_BUFFER* pDnsBuffer, uint32_t* pdwBufferSize, win32::Windows::Win32::Foundation::PWSTR pszName, uint16_t wType, uint16_t Xid, win32::Windows::Win32::Foundation::BOOL fRecursionDesired) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *DnsWriteQuestionToBuffer_UTF8)(win32::Windows::Win32::NetworkManagement::Dns::DNS_MESSAGE_BUFFER* pDnsBuffer, uint32_t* pdwBufferSize, win32::Windows::Win32::Foundation::PSTR pszName, uint16_t wType, uint16_t Xid, win32::Windows::Win32::Foundation::BOOL fRecursionDesired) noexcept;
    int32_t (__stdcall *DnsExtractRecordsFromMessage_W)(win32::Windows::Win32::NetworkManagement::Dns::DNS_MESSAGE_BUFFER* pDnsBuffer, uint16_t wMessageLength, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppRecord) noexcept;
    int32_t (__stdcall *DnsExtractRecordsFromMessage_UTF8)(win32::Windows::Win32::NetworkManagement::Dns::DNS_MESSAGE_BUFFER* pDnsBuffer, uint16_t wMessageLength, win32::Windows::Win32::NetworkManagement::Dns::DNS_RECORDA** ppRecord) noexcept;
    uint32_t (__stdcall *DnsGetProxyInformation)(win32::Windows::Win32::Foundation::PWSTR hostName, win32::Windows::Win32::NetworkManagement::Dns::DNS_PROXY_INFORMATION* proxyInformation, win32::Windows::Win32::NetworkManagement::Dns::DNS_PROXY_INFORMATION* defaultProxyInformation, win32::Windows::Win32::NetworkManagement::Dns::DNS_PROXY_COMPLETION_ROUTINE* completionRoutine, void* completionContext) noexcept;
    void (__stdcall *DnsFreeProxyName)(win32::Windows::Win32::Foundation::PWSTR proxyName) noexcept;
    uint32_t (__stdcall *DnsConnectionGetProxyInfoForHostUrl)(win32::Windows::Win32::Foundation::PWSTR pwszHostUrl, uint8_t* pSelectionContext, uint32_t dwSelectionContextLength, uint32_t dwExplicitInterfaceIndex, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_INFO_EX* pProxyInfoEx) noexcept;
    void (__stdcall *DnsConnectionFreeProxyInfoEx)(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_INFO_EX* pProxyInfoEx) noexcept;
    uint32_t (__stdcall *DnsConnectionGetProxyInfo)(win32::Windows::Win32::Foundation::PWSTR pwszConnectionName, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_TYPE Type, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_INFO* pProxyInfo) noexcept;
    void (__stdcall *DnsConnectionFreeProxyInfo)(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_INFO* pProxyInfo) noexcept;
    uint32_t (__stdcall *DnsConnectionSetProxyInfo)(win32::Windows::Win32::Foundation::PWSTR pwszConnectionName, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_TYPE Type, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_INFO* pProxyInfo) noexcept;
    uint32_t (__stdcall *DnsConnectionDeleteProxyInfo)(win32::Windows::Win32::Foundation::PWSTR pwszConnectionName, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_TYPE Type) noexcept;
    uint32_t (__stdcall *DnsConnectionGetProxyList)(win32::Windows::Win32::Foundation::PWSTR pwszConnectionName, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_LIST* pProxyList) noexcept;
    void (__stdcall *DnsConnectionFreeProxyList)(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_PROXY_LIST* pProxyList) noexcept;
    uint32_t (__stdcall *DnsConnectionGetNameList)(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_NAME_LIST* pNameList) noexcept;
    void (__stdcall *DnsConnectionFreeNameList)(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_NAME_LIST* pNameList) noexcept;
    uint32_t (__stdcall *DnsConnectionUpdateIfIndexTable)(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_IFINDEX_LIST* pConnectionIfIndexEntries) noexcept;
    uint32_t (__stdcall *DnsConnectionSetPolicyEntries)(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_POLICY_TAG PolicyEntryTag, win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_POLICY_ENTRY_LIST* pPolicyEntryList) noexcept;
    uint32_t (__stdcall *DnsConnectionDeletePolicyEntries)(win32::Windows::Win32::NetworkManagement::Dns::DNS_CONNECTION_POLICY_TAG PolicyEntryTag) noexcept;
    win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_INSTANCE* (__stdcall *DnsServiceConstructInstance)(win32::Windows::Win32::Foundation::PWSTR pServiceName, win32::Windows::Win32::Foundation::PWSTR pHostName, uint32_t* pIp4, win32::Windows::Win32::NetworkManagement::Dns::IP6_ADDRESS* pIp6, uint16_t wPort, uint16_t wPriority, uint16_t wWeight, uint32_t dwPropertiesCount, win32::Windows::Win32::Foundation::PWSTR* keys, win32::Windows::Win32::Foundation::PWSTR* values) noexcept;
    win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_INSTANCE* (__stdcall *DnsServiceCopyInstance)(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_INSTANCE* pOrig) noexcept;
    void (__stdcall *DnsServiceFreeInstance)(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_INSTANCE* pInstance) noexcept;
    int32_t (__stdcall *DnsServiceBrowse)(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_BROWSE_REQUEST* pRequest, win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancel) noexcept;
    int32_t (__stdcall *DnsServiceBrowseCancel)(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancelHandle) noexcept;
    int32_t (__stdcall *DnsServiceResolve)(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_RESOLVE_REQUEST* pRequest, win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancel) noexcept;
    int32_t (__stdcall *DnsServiceResolveCancel)(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancelHandle) noexcept;
    uint32_t (__stdcall *DnsServiceRegister)(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_REGISTER_REQUEST* pRequest, win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancel) noexcept;
    uint32_t (__stdcall *DnsServiceDeRegister)(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_REGISTER_REQUEST* pRequest, win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancel) noexcept;
    uint32_t (__stdcall *DnsServiceRegisterCancel)(win32::Windows::Win32::NetworkManagement::Dns::DNS_SERVICE_CANCEL* pCancelHandle) noexcept;
    int32_t (__stdcall *DnsStartMulticastQuery)(win32::Windows::Win32::NetworkManagement::Dns::MDNS_QUERY_REQUEST* pQueryRequest, win32::Windows::Win32::NetworkManagement::Dns::MDNS_QUERY_HANDLE* pHandle) noexcept;
    int32_t (__stdcall *DnsStopMulticastQuery)(win32::Windows::Win32::NetworkManagement::Dns::MDNS_QUERY_HANDLE* pHandle) noexcept;
};
extern ApiTable g_api_table;

#pragma endregion methods

}
#endif
