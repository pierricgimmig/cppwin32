// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_UI_Input_KeyboardAndMouse_H
#define WIN32_Windows_Win32_UI_Input_KeyboardAndMouse_H
#include "win32/base.h"
#include "win32/impl/complex_structs.h"
#include "win32/impl/complex_interfaces.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.UI.Input.KeyboardAndMouse.0.h"
WIN32_EXPORT namespace win32::Windows::Win32::UI::Input::KeyboardAndMouse
{
#pragma region methods
extern "C"
{
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL__TrackMouseEvent(win32::Windows::Win32::UI::Input::KeyboardAndMouse::TRACKMOUSEEVENT* lpEventTrack) noexcept;
    win32::Windows::Win32::UI::TextServices::HKL __stdcall ORBIT_IMPL_LoadKeyboardLayoutA(win32::Windows::Win32::Foundation::PSTR pwszKLID, win32::Windows::Win32::UI::Input::KeyboardAndMouse::ACTIVATE_KEYBOARD_LAYOUT_FLAGS Flags) noexcept;
    win32::Windows::Win32::UI::TextServices::HKL __stdcall ORBIT_IMPL_LoadKeyboardLayoutW(win32::Windows::Win32::Foundation::PWSTR pwszKLID, win32::Windows::Win32::UI::Input::KeyboardAndMouse::ACTIVATE_KEYBOARD_LAYOUT_FLAGS Flags) noexcept;
    win32::Windows::Win32::UI::TextServices::HKL __stdcall ORBIT_IMPL_ActivateKeyboardLayout(win32::Windows::Win32::UI::TextServices::HKL hkl, win32::Windows::Win32::UI::Input::KeyboardAndMouse::ACTIVATE_KEYBOARD_LAYOUT_FLAGS Flags) noexcept;
    int32_t __stdcall ORBIT_IMPL_ToUnicodeEx(uint32_t wVirtKey, uint32_t wScanCode, uint8_t* lpKeyState, win32::Windows::Win32::Foundation::PWSTR pwszBuff, int32_t cchBuff, uint32_t wFlags, win32::Windows::Win32::UI::TextServices::HKL dwhkl) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UnloadKeyboardLayout(win32::Windows::Win32::UI::TextServices::HKL hkl) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetKeyboardLayoutNameA(win32::Windows::Win32::Foundation::PSTR pwszKLID) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetKeyboardLayoutNameW(win32::Windows::Win32::Foundation::PWSTR pwszKLID) noexcept;
    int32_t __stdcall ORBIT_IMPL_GetKeyboardLayoutList(int32_t nBuff, win32::Windows::Win32::UI::TextServices::HKL* lpList) noexcept;
    win32::Windows::Win32::UI::TextServices::HKL __stdcall ORBIT_IMPL_GetKeyboardLayout(uint32_t idThread) noexcept;
    int32_t __stdcall ORBIT_IMPL_GetMouseMovePointsEx(uint32_t cbSize, win32::Windows::Win32::UI::Input::KeyboardAndMouse::MOUSEMOVEPOINT* lppt, win32::Windows::Win32::UI::Input::KeyboardAndMouse::MOUSEMOVEPOINT* lpptBuf, int32_t nBufPoints, win32::Windows::Win32::UI::Input::KeyboardAndMouse::GET_MOUSE_MOVE_POINTS_EX_RESOLUTION resolution) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_TrackMouseEvent(win32::Windows::Win32::UI::Input::KeyboardAndMouse::TRACKMOUSEEVENT* lpEventTrack) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_RegisterHotKey(win32::Windows::Win32::Foundation::HWND hWnd, int32_t id, win32::Windows::Win32::UI::Input::KeyboardAndMouse::HOT_KEY_MODIFIERS fsModifiers, uint32_t vk) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_UnregisterHotKey(win32::Windows::Win32::Foundation::HWND hWnd, int32_t id) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SwapMouseButton(win32::Windows::Win32::Foundation::BOOL fSwap) noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetDoubleClickTime() noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetDoubleClickTime(uint32_t param0) noexcept;
    win32::Windows::Win32::Foundation::HWND __stdcall ORBIT_IMPL_SetFocus(win32::Windows::Win32::Foundation::HWND hWnd) noexcept;
    win32::Windows::Win32::Foundation::HWND __stdcall ORBIT_IMPL_GetActiveWindow() noexcept;
    win32::Windows::Win32::Foundation::HWND __stdcall ORBIT_IMPL_GetFocus() noexcept;
    uint32_t __stdcall ORBIT_IMPL_GetKBCodePage() noexcept;
    int16_t __stdcall ORBIT_IMPL_GetKeyState(int32_t nVirtKey) noexcept;
    int16_t __stdcall ORBIT_IMPL_GetAsyncKeyState(int32_t vKey) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetKeyboardState(uint8_t* lpKeyState) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_SetKeyboardState(uint8_t* lpKeyState) noexcept;
    int32_t __stdcall ORBIT_IMPL_GetKeyNameTextA(int32_t lParam, win32::Windows::Win32::Foundation::PSTR lpString, int32_t cchSize) noexcept;
    int32_t __stdcall ORBIT_IMPL_GetKeyNameTextW(int32_t lParam, win32::Windows::Win32::Foundation::PWSTR lpString, int32_t cchSize) noexcept;
    int32_t __stdcall ORBIT_IMPL_GetKeyboardType(int32_t nTypeFlag) noexcept;
    int32_t __stdcall ORBIT_IMPL_ToAscii(uint32_t uVirtKey, uint32_t uScanCode, uint8_t* lpKeyState, uint16_t* lpChar, uint32_t uFlags) noexcept;
    int32_t __stdcall ORBIT_IMPL_ToAsciiEx(uint32_t uVirtKey, uint32_t uScanCode, uint8_t* lpKeyState, uint16_t* lpChar, uint32_t uFlags, win32::Windows::Win32::UI::TextServices::HKL dwhkl) noexcept;
    int32_t __stdcall ORBIT_IMPL_ToUnicode(uint32_t wVirtKey, uint32_t wScanCode, uint8_t* lpKeyState, win32::Windows::Win32::Foundation::PWSTR pwszBuff, int32_t cchBuff, uint32_t wFlags) noexcept;
    uint32_t __stdcall ORBIT_IMPL_OemKeyScan(uint16_t wOemChar) noexcept;
    int16_t __stdcall ORBIT_IMPL_VkKeyScanA(win32::Windows::Win32::Foundation::CHAR ch) noexcept;
    int16_t __stdcall ORBIT_IMPL_VkKeyScanW(char ch) noexcept;
    int16_t __stdcall ORBIT_IMPL_VkKeyScanExA(win32::Windows::Win32::Foundation::CHAR ch, win32::Windows::Win32::UI::TextServices::HKL dwhkl) noexcept;
    int16_t __stdcall ORBIT_IMPL_VkKeyScanExW(char ch, win32::Windows::Win32::UI::TextServices::HKL dwhkl) noexcept;
    void __stdcall ORBIT_IMPL_keybd_event(uint8_t bVk, uint8_t bScan, win32::Windows::Win32::UI::Input::KeyboardAndMouse::KEYBD_EVENT_FLAGS dwFlags, size_t dwExtraInfo) noexcept;
    void __stdcall ORBIT_IMPL_mouse_event(win32::Windows::Win32::UI::Input::KeyboardAndMouse::MOUSE_EVENT_FLAGS dwFlags, int32_t dx, int32_t dy, uint32_t dwData, size_t dwExtraInfo) noexcept;
    uint32_t __stdcall ORBIT_IMPL_SendInput(uint32_t cInputs, win32::Windows::Win32::UI::Input::KeyboardAndMouse::INPUT* pInputs, int32_t cbSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_GetLastInputInfo(win32::Windows::Win32::UI::Input::KeyboardAndMouse::LASTINPUTINFO* plii) noexcept;
    uint32_t __stdcall ORBIT_IMPL_MapVirtualKeyA(uint32_t uCode, uint32_t uMapType) noexcept;
    uint32_t __stdcall ORBIT_IMPL_MapVirtualKeyW(uint32_t uCode, uint32_t uMapType) noexcept;
    uint32_t __stdcall ORBIT_IMPL_MapVirtualKeyExA(uint32_t uCode, uint32_t uMapType, win32::Windows::Win32::UI::TextServices::HKL dwhkl) noexcept;
    uint32_t __stdcall ORBIT_IMPL_MapVirtualKeyExW(uint32_t uCode, uint32_t uMapType, win32::Windows::Win32::UI::TextServices::HKL dwhkl) noexcept;
    win32::Windows::Win32::Foundation::HWND __stdcall ORBIT_IMPL_GetCapture() noexcept;
    win32::Windows::Win32::Foundation::HWND __stdcall ORBIT_IMPL_SetCapture(win32::Windows::Win32::Foundation::HWND hWnd) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_ReleaseCapture() noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_EnableWindow(win32::Windows::Win32::Foundation::HWND hWnd, win32::Windows::Win32::Foundation::BOOL bEnable) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_IsWindowEnabled(win32::Windows::Win32::Foundation::HWND hWnd) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_DragDetect(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::POINT pt) noexcept;
    win32::Windows::Win32::Foundation::HWND __stdcall ORBIT_IMPL_SetActiveWindow(win32::Windows::Win32::Foundation::HWND hWnd) noexcept;
    win32::Windows::Win32::Foundation::BOOL __stdcall ORBIT_IMPL_BlockInput(win32::Windows::Win32::Foundation::BOOL fBlockIt) noexcept;
}

struct ApiTable {
    win32::Windows::Win32::Foundation::BOOL (__stdcall *_TrackMouseEvent)(win32::Windows::Win32::UI::Input::KeyboardAndMouse::TRACKMOUSEEVENT* lpEventTrack) noexcept;
    win32::Windows::Win32::UI::TextServices::HKL (__stdcall *LoadKeyboardLayoutA)(win32::Windows::Win32::Foundation::PSTR pwszKLID, win32::Windows::Win32::UI::Input::KeyboardAndMouse::ACTIVATE_KEYBOARD_LAYOUT_FLAGS Flags) noexcept;
    win32::Windows::Win32::UI::TextServices::HKL (__stdcall *LoadKeyboardLayoutW)(win32::Windows::Win32::Foundation::PWSTR pwszKLID, win32::Windows::Win32::UI::Input::KeyboardAndMouse::ACTIVATE_KEYBOARD_LAYOUT_FLAGS Flags) noexcept;
    win32::Windows::Win32::UI::TextServices::HKL (__stdcall *ActivateKeyboardLayout)(win32::Windows::Win32::UI::TextServices::HKL hkl, win32::Windows::Win32::UI::Input::KeyboardAndMouse::ACTIVATE_KEYBOARD_LAYOUT_FLAGS Flags) noexcept;
    int32_t (__stdcall *ToUnicodeEx)(uint32_t wVirtKey, uint32_t wScanCode, uint8_t* lpKeyState, win32::Windows::Win32::Foundation::PWSTR pwszBuff, int32_t cchBuff, uint32_t wFlags, win32::Windows::Win32::UI::TextServices::HKL dwhkl) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *UnloadKeyboardLayout)(win32::Windows::Win32::UI::TextServices::HKL hkl) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *GetKeyboardLayoutNameA)(win32::Windows::Win32::Foundation::PSTR pwszKLID) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *GetKeyboardLayoutNameW)(win32::Windows::Win32::Foundation::PWSTR pwszKLID) noexcept;
    int32_t (__stdcall *GetKeyboardLayoutList)(int32_t nBuff, win32::Windows::Win32::UI::TextServices::HKL* lpList) noexcept;
    win32::Windows::Win32::UI::TextServices::HKL (__stdcall *GetKeyboardLayout)(uint32_t idThread) noexcept;
    int32_t (__stdcall *GetMouseMovePointsEx)(uint32_t cbSize, win32::Windows::Win32::UI::Input::KeyboardAndMouse::MOUSEMOVEPOINT* lppt, win32::Windows::Win32::UI::Input::KeyboardAndMouse::MOUSEMOVEPOINT* lpptBuf, int32_t nBufPoints, win32::Windows::Win32::UI::Input::KeyboardAndMouse::GET_MOUSE_MOVE_POINTS_EX_RESOLUTION resolution) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *TrackMouseEvent)(win32::Windows::Win32::UI::Input::KeyboardAndMouse::TRACKMOUSEEVENT* lpEventTrack) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *RegisterHotKey)(win32::Windows::Win32::Foundation::HWND hWnd, int32_t id, win32::Windows::Win32::UI::Input::KeyboardAndMouse::HOT_KEY_MODIFIERS fsModifiers, uint32_t vk) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *UnregisterHotKey)(win32::Windows::Win32::Foundation::HWND hWnd, int32_t id) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *SwapMouseButton)(win32::Windows::Win32::Foundation::BOOL fSwap) noexcept;
    uint32_t (__stdcall *GetDoubleClickTime)() noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *SetDoubleClickTime)(uint32_t param0) noexcept;
    win32::Windows::Win32::Foundation::HWND (__stdcall *SetFocus)(win32::Windows::Win32::Foundation::HWND hWnd) noexcept;
    win32::Windows::Win32::Foundation::HWND (__stdcall *GetActiveWindow)() noexcept;
    win32::Windows::Win32::Foundation::HWND (__stdcall *GetFocus)() noexcept;
    uint32_t (__stdcall *GetKBCodePage)() noexcept;
    int16_t (__stdcall *GetKeyState)(int32_t nVirtKey) noexcept;
    int16_t (__stdcall *GetAsyncKeyState)(int32_t vKey) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *GetKeyboardState)(uint8_t* lpKeyState) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *SetKeyboardState)(uint8_t* lpKeyState) noexcept;
    int32_t (__stdcall *GetKeyNameTextA)(int32_t lParam, win32::Windows::Win32::Foundation::PSTR lpString, int32_t cchSize) noexcept;
    int32_t (__stdcall *GetKeyNameTextW)(int32_t lParam, win32::Windows::Win32::Foundation::PWSTR lpString, int32_t cchSize) noexcept;
    int32_t (__stdcall *GetKeyboardType)(int32_t nTypeFlag) noexcept;
    int32_t (__stdcall *ToAscii)(uint32_t uVirtKey, uint32_t uScanCode, uint8_t* lpKeyState, uint16_t* lpChar, uint32_t uFlags) noexcept;
    int32_t (__stdcall *ToAsciiEx)(uint32_t uVirtKey, uint32_t uScanCode, uint8_t* lpKeyState, uint16_t* lpChar, uint32_t uFlags, win32::Windows::Win32::UI::TextServices::HKL dwhkl) noexcept;
    int32_t (__stdcall *ToUnicode)(uint32_t wVirtKey, uint32_t wScanCode, uint8_t* lpKeyState, win32::Windows::Win32::Foundation::PWSTR pwszBuff, int32_t cchBuff, uint32_t wFlags) noexcept;
    uint32_t (__stdcall *OemKeyScan)(uint16_t wOemChar) noexcept;
    int16_t (__stdcall *VkKeyScanA)(win32::Windows::Win32::Foundation::CHAR ch) noexcept;
    int16_t (__stdcall *VkKeyScanW)(char ch) noexcept;
    int16_t (__stdcall *VkKeyScanExA)(win32::Windows::Win32::Foundation::CHAR ch, win32::Windows::Win32::UI::TextServices::HKL dwhkl) noexcept;
    int16_t (__stdcall *VkKeyScanExW)(char ch, win32::Windows::Win32::UI::TextServices::HKL dwhkl) noexcept;
    void (__stdcall *keybd_event)(uint8_t bVk, uint8_t bScan, win32::Windows::Win32::UI::Input::KeyboardAndMouse::KEYBD_EVENT_FLAGS dwFlags, size_t dwExtraInfo) noexcept;
    void (__stdcall *mouse_event)(win32::Windows::Win32::UI::Input::KeyboardAndMouse::MOUSE_EVENT_FLAGS dwFlags, int32_t dx, int32_t dy, uint32_t dwData, size_t dwExtraInfo) noexcept;
    uint32_t (__stdcall *SendInput)(uint32_t cInputs, win32::Windows::Win32::UI::Input::KeyboardAndMouse::INPUT* pInputs, int32_t cbSize) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *GetLastInputInfo)(win32::Windows::Win32::UI::Input::KeyboardAndMouse::LASTINPUTINFO* plii) noexcept;
    uint32_t (__stdcall *MapVirtualKeyA)(uint32_t uCode, uint32_t uMapType) noexcept;
    uint32_t (__stdcall *MapVirtualKeyW)(uint32_t uCode, uint32_t uMapType) noexcept;
    uint32_t (__stdcall *MapVirtualKeyExA)(uint32_t uCode, uint32_t uMapType, win32::Windows::Win32::UI::TextServices::HKL dwhkl) noexcept;
    uint32_t (__stdcall *MapVirtualKeyExW)(uint32_t uCode, uint32_t uMapType, win32::Windows::Win32::UI::TextServices::HKL dwhkl) noexcept;
    win32::Windows::Win32::Foundation::HWND (__stdcall *GetCapture)() noexcept;
    win32::Windows::Win32::Foundation::HWND (__stdcall *SetCapture)(win32::Windows::Win32::Foundation::HWND hWnd) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *ReleaseCapture)() noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *EnableWindow)(win32::Windows::Win32::Foundation::HWND hWnd, win32::Windows::Win32::Foundation::BOOL bEnable) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *IsWindowEnabled)(win32::Windows::Win32::Foundation::HWND hWnd) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *DragDetect)(win32::Windows::Win32::Foundation::HWND hwnd, win32::Windows::Win32::Foundation::POINT pt) noexcept;
    win32::Windows::Win32::Foundation::HWND (__stdcall *SetActiveWindow)(win32::Windows::Win32::Foundation::HWND hWnd) noexcept;
    win32::Windows::Win32::Foundation::BOOL (__stdcall *BlockInput)(win32::Windows::Win32::Foundation::BOOL fBlockIt) noexcept;
};
extern ApiTable g_api_table;

#pragma endregion methods

}
#endif
